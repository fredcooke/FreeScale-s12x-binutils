--- binutils-2.18/ld/scripttempl/elfm68hc11.sc	2007-08-07 19:50:33.000000000 +0000
+++ binutils-2.18/ld/scripttempl/elfm68hc11.sc	2007-08-07 19:55:30.000000000 +0000
@@ -321,7 +321,8 @@
     ${RELOCATING+_etext = .;}
     ${RELOCATING+PROVIDE (etext = .);}
 
-  } ${RELOCATING+ > ${TEXT_MEMORY}}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xa7a7a7a7}
 
   .eh_frame ${RELOCATING-0} :
   {
@@ -338,12 +339,16 @@
     *(.rodata)
     ${RELOCATING+*(.rodata.*)}
     ${RELOCATING+*(.gnu.linkonce.r*)}
-  } ${RELOCATING+ > ${TEXT_MEMORY}}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
 
   .rodata1 ${RELOCATING-0} :
   {
     *(.rodata1)
-  } ${RELOCATING+ > ${TEXT_MEMORY}}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
 
   /* Constructor and destructor tables are in ROM.  */
   ${RELOCATING+${CTOR}}
@@ -377,7 +382,8 @@
 
     ${RELOCATING+_edata  =  .;}
     ${RELOCATING+PROVIDE (edata = .);}
-  } ${RELOCATING+ > ${DATA_MEMORY}}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
 
   ${RELOCATING+__data_section_size = SIZEOF(.data);}
   ${RELOCATING+PROVIDE (__data_section_size = SIZEOF(.data));}
--- binutils-2.18/binutils/testsuite/binutils-all/objcopy.exp	2007-08-07 19:39:14.000000000 +0000
+++ binutils-2.18/binutils/testsuite/binutils-all/objcopy.exp	2007-08-07 19:41:41.000000000 +0000
@@ -535,6 +535,9 @@
 	setup_xfail "thumb*-*-coff"
 	setup_xfail "thumb*-*-pe"
     
+    # The copy test fails because the .page0 section is filed after the copy
+    setup_xfail "m6811-*-*"
+    setup_xfail "m6812-*-*"
 	fail $test1
     }
 
--- binutils-2.18/ld/testsuite/ld-undefined/undefined.exp	2007-08-07 19:57:52.000000000 +0000
+++ binutils-2.18/ld/testsuite/ld-undefined/undefined.exp	2007-08-07 19:59:12.000000000 +0000
@@ -77,6 +77,8 @@
     # the jump is at line 9, the function address, and the reloc, is
     # stored at the end of the function.
     setup_xfail "sh-*-*"
+    setup_xfail "m6811-*-*"
+    setup_xfail "m6812-*-*"
 
     # ARM PE defaults to using stabs debugging, which we can't handle for
     # a COFF file.
@@ -128,5 +130,7 @@
 # of 9. On 64 bit s/390 this works because of the new brasl instruction that
 # doesn't need a literal pool entry.
 setup_xfail s390-*-*
+setup_xfail "m6811-*-*"
+setup_xfail "m6812-*-*"
 
 checkund $ml $testline
