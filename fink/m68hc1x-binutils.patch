diff -rupN binutils-2.20/README binutils-2.20-sean/README
--- binutils-2.20/README	1999-05-03 01:28:39.000000000 -0600
+++ binutils-2.20-sean/README	1969-12-31 17:00:00.000000000 -0700
@@ -1,47 +0,0 @@
-		   README for GNU development tools
-
-This directory contains various GNU compilers, assemblers, linkers, 
-debuggers, etc., plus their support routines, definitions, and documentation.
-
-If you are receiving this as part of a GDB release, see the file gdb/README.
-If with a binutils release, see binutils/README;  if with a libg++ release,
-see libg++/README, etc.  That'll give you info about this
-package -- supported targets, how to use it, how to report bugs, etc.
-
-It is now possible to automatically configure and build a variety of
-tools with one command.  To build all of the tools contained herein,
-run the ``configure'' script here, e.g.:
-
-	./configure 
-	make
-
-To install them (by default in /usr/local/bin, /usr/local/lib, etc),
-then do:
-	make install
-
-(If the configure script can't determine your type of computer, give it
-the name as an argument, for instance ``./configure sun4''.  You can
-use the script ``config.sub'' to test whether a name is recognized; if
-it is, config.sub translates it to a triplet specifying CPU, vendor,
-and OS.)
-
-If you have more than one compiler on your system, it is often best to
-explicitly set CC in the environment before running configure, and to
-also set CC when running make.  For example (assuming sh/bash/ksh):
-
-	CC=gcc ./configure
-	make
-
-A similar example using csh:
-
-	setenv CC gcc
-	./configure
-	make
-
-Much of the code and documentation enclosed is copyright by
-the Free Software Foundation, Inc.  See the file COPYING or
-COPYING.LIB in the various directories, for a description of the
-GNU General Public License terms under which you can copy the files.
-
-REPORTING BUGS: Again, see gdb/README, binutils/README, etc., for info
-on where and how to report problems.
diff -rupN binutils-2.20/autom4te.cache/output.0 binutils-2.20-sean/autom4te.cache/output.0
--- binutils-2.20/autom4te.cache/output.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/autom4te.cache/output.0	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,14485 @@
+@%:@! /bin/sh
+@%:@ Guess values for system-dependent variables and create Makefiles.
+@%:@ Generated by GNU Autoconf 2.64.
+@%:@ 
+@%:@ Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+@%:@ 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
+@%:@ Foundation, Inc.
+@%:@ 
+@%:@ This configure script is free software; the Free Software Foundation
+@%:@ gives unlimited permission to copy, distribute and modify it.
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test "x$CONFIG_SHELL" = x; then
+  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '\${1+\"\$@\"}'='\"\$@\"'
+  setopt NO_GLOB_SUBST
+else
+  case \`(set -o) 2>/dev/null\` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+"
+  as_required="as_fn_return () { (exit \$1); }
+as_fn_success () { as_fn_return 0; }
+as_fn_failure () { as_fn_return 1; }
+as_fn_ret_success () { return 0; }
+as_fn_ret_failure () { return 1; }
+
+exitcode=0
+as_fn_success || { exitcode=1; echo as_fn_success failed.; }
+as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
+as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
+as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
+if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :
+  
+else
+  exitcode=1; echo positional parameters were not saved.
+fi
+test x\$exitcode = x0 || exit 1"
+  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
+  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
+  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
+  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
+test \$(( 1 + 1 )) = 2 || exit 1"
+  if (eval "$as_required") 2>/dev/null; then :
+  as_have_required=yes
+else
+  as_have_required=no
+fi
+  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :
+  
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_found=false
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  as_found=:
+  case $as_dir in @%:@(
+	 /*)
+	   for as_base in sh bash ksh sh5; do
+	     # Try only shells that exist, to save several forks.
+	     as_shell=$as_dir/$as_base
+	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  CONFIG_SHELL=$as_shell as_have_required=yes
+		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  break 2
+fi
+fi
+	   done;;
+       esac
+  as_found=false
+done
+$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
+	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
+  CONFIG_SHELL=$SHELL as_have_required=yes
+fi; }
+IFS=$as_save_IFS
+
+
+      if test "x$CONFIG_SHELL" != x; then :
+  # We cannot yet assume a decent shell, so we have to provide a
+	# neutralization value for shells without unset; and this also
+	# works around shells that cannot unset nonexistent variables.
+	BASH_ENV=/dev/null
+	ENV=/dev/null
+	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
+	export CONFIG_SHELL
+	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+    if test x$as_have_required = xno; then :
+  $as_echo "$0: This script requires a shell more modern than all"
+  $as_echo "$0: the shells that I found on your system."
+  if test x${ZSH_VERSION+set} = xset ; then
+    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
+    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
+  else
+    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
+$0: including any error possibly output before this
+$0: message. Then install a modern shell, or manually run
+$0: the script under such a shell if you do have one."
+  fi
+  exit 1
+fi
+fi
+fi
+SHELL=${CONFIG_SHELL-/bin/sh}
+export SHELL
+# Unset more variables known to interfere with behavior of common tools.
+CLICOLOR_FORCE= GREP_OPTIONS=
+unset CLICOLOR_FORCE GREP_OPTIONS
+
+## --------------------- ##
+## M4sh Shell Functions. ##
+## --------------------- ##
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+
+  as_lineno_1=$LINENO as_lineno_1a=$LINENO
+  as_lineno_2=$LINENO as_lineno_2a=$LINENO
+  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
+  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
+  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 7<&0 </dev/null 6>&1
+
+# Name of the host.
+# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_clean_files=
+ac_config_libobj_dir=.
+LIB@&t@OBJS=
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+
+# Identity of this package.
+PACKAGE_NAME=
+PACKAGE_TARNAME=
+PACKAGE_VERSION=
+PACKAGE_STRING=
+PACKAGE_BUGREPORT=
+PACKAGE_URL=
+
+ac_unique_file="move-if-change"
+enable_option_checking=no
+ac_subst_vars='LTLIBOBJS
+LIB@&t@OBJS
+compare_exclusions
+stage2_werror_flag
+stage1_checking
+stage1_cflags
+MAINT
+MAINTAINER_MODE_FALSE
+MAINTAINER_MODE_TRUE
+COMPILER_NM_FOR_TARGET
+COMPILER_LD_FOR_TARGET
+COMPILER_AS_FOR_TARGET
+FLAGS_FOR_TARGET
+RAW_CXX_FOR_TARGET
+WINDMC_FOR_TARGET
+WINDRES_FOR_TARGET
+STRIP_FOR_TARGET
+RANLIB_FOR_TARGET
+OBJDUMP_FOR_TARGET
+NM_FOR_TARGET
+LIPO_FOR_TARGET
+LD_FOR_TARGET
+DLLTOOL_FOR_TARGET
+AS_FOR_TARGET
+AR_FOR_TARGET
+GFORTRAN_FOR_TARGET
+GCJ_FOR_TARGET
+GCC_FOR_TARGET
+CXX_FOR_TARGET
+CC_FOR_TARGET
+OBJDUMP
+OBJCOPY
+WINDMC
+WINDRES
+STRIP
+RANLIB
+NM
+LIPO
+LD
+DLLTOOL
+AS
+AR
+RUNTEST
+EXPECT
+MAKEINFO
+FLEX
+LEX
+M4
+BISON
+YACC
+config_shell
+WINDRES_FOR_BUILD
+WINDMC_FOR_BUILD
+RANLIB_FOR_BUILD
+NM_FOR_BUILD
+LD_FOR_BUILD
+LDFLAGS_FOR_BUILD
+GFORTRAN_FOR_BUILD
+GCJ_FOR_BUILD
+DLLTOOL_FOR_BUILD
+CXX_FOR_BUILD
+CXXFLAGS_FOR_BUILD
+CFLAGS_FOR_BUILD
+CC_FOR_BUILD
+AS_FOR_BUILD
+AR_FOR_BUILD
+target_configargs
+configdirs
+host_configargs
+build_configdirs
+build_configargs
+INSTALL_GDB_TK
+GDB_TK
+CONFIGURE_GDB_TK
+build_tooldir
+tooldir
+GCC_SHLIB_SUBDIR
+RPATH_ENVVAR
+CXXFLAGS_FOR_TARGET
+CFLAGS_FOR_TARGET
+DEBUG_PREFIX_CFLAGS_FOR_TARGET
+SYSROOT_CFLAGS_FOR_TARGET
+stage1_languages
+clooginc
+clooglibs
+pplinc
+ppllibs
+poststage1_libs
+poststage1_ldflags
+stage1_libs
+stage1_ldflags
+extra_mpc_mpfr_configure_flags
+extra_mpc_gmp_configure_flags
+extra_mpfr_configure_flags
+gmpinc
+gmplibs
+do_compare
+GNATMAKE
+GNATBIND
+ac_ct_CXX
+CXXFLAGS
+CXX
+OBJEXT
+EXEEXT
+ac_ct_CC
+CPPFLAGS
+LDFLAGS
+CFLAGS
+CC
+target_subdir
+host_subdir
+build_subdir
+build_libsubdir
+AWK
+SED
+LN_S
+LN
+INSTALL_DATA
+INSTALL_SCRIPT
+INSTALL_PROGRAM
+target_os
+target_vendor
+target_cpu
+target
+host_os
+host_vendor
+host_cpu
+host
+target_noncanonical
+host_noncanonical
+build_noncanonical
+build_os
+build_vendor
+build_cpu
+build
+TOPLEVEL_CONFIGURE_ARGUMENTS
+target_alias
+host_alias
+build_alias
+LIBS
+ECHO_T
+ECHO_N
+ECHO_C
+DEFS
+mandir
+localedir
+libdir
+psdir
+pdfdir
+dvidir
+htmldir
+infodir
+docdir
+oldincludedir
+includedir
+localstatedir
+sharedstatedir
+sysconfdir
+datadir
+datarootdir
+libexecdir
+sbindir
+bindir
+program_transform_name
+prefix
+exec_prefix
+PACKAGE_URL
+PACKAGE_BUGREPORT
+PACKAGE_STRING
+PACKAGE_VERSION
+PACKAGE_TARNAME
+PACKAGE_NAME
+PATH_SEPARATOR
+SHELL'
+ac_subst_files='serialization_dependencies
+host_makefile_frag
+target_makefile_frag
+alphaieee_frag
+ospace_frag'
+ac_user_opts='
+enable_option_checking
+with_build_libsubdir
+enable_gold
+enable_libada
+enable_libssp
+enable_build_with_cxx
+with_mpc
+with_mpc_include
+with_mpc_lib
+with_mpfr_dir
+with_mpfr
+with_mpfr_include
+with_mpfr_lib
+with_gmp_dir
+with_gmp
+with_gmp_include
+with_gmp_lib
+with_host_libstdcxx
+with_stage1_ldflags
+with_stage1_libs
+with_boot_ldflags
+with_boot_libs
+with_ppl
+with_ppl_include
+with_ppl_lib
+enable_ppl_version_check
+with_cloog
+with_cloog_include
+with_cloog_lib
+enable_cloog_version_check
+enable_stage1_languages
+enable_objc_gc
+with_build_sysroot
+with_debug_prefix_map
+enable_bootstrap
+enable_serial_configure
+with_build_time_tools
+enable_maintainer_mode
+enable_stage1_checking
+enable_werror
+'
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CXX
+CXXFLAGS
+CCC
+AR
+AS
+DLLTOOL
+LD
+LIPO
+NM
+RANLIB
+STRIP
+WINDRES
+WINDMC
+OBJCOPY
+OBJDUMP
+CC_FOR_TARGET
+CXX_FOR_TARGET
+GCC_FOR_TARGET
+GCJ_FOR_TARGET
+GFORTRAN_FOR_TARGET
+AR_FOR_TARGET
+AS_FOR_TARGET
+DLLTOOL_FOR_TARGET
+LD_FOR_TARGET
+LIPO_FOR_TARGET
+NM_FOR_TARGET
+OBJDUMP_FOR_TARGET
+RANLIB_FOR_TARGET
+STRIP_FOR_TARGET
+WINDRES_FOR_TARGET
+WINDMC_FOR_TARGET'
+
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+ac_unrecognized_opts=
+ac_unrecognized_sep=
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+docdir='${datarootdir}/doc/${PACKAGE}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
+
+ac_prev=
+ac_dashdash=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval $ac_prev=\$ac_option
+    ac_prev=
+    continue
+  fi
+
+  case $ac_option in
+  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *)	ac_optarg=yes ;;
+  esac
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
+    datadir=$ac_optarg ;;
+
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
+
+  -enable-* | --enable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=\$ac_optarg ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst | --locals)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=\$ac_optarg ;;
+
+  -without-* | --without-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=no ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) as_fn_error "unrecognized option: \`$ac_option'
+Try \`$0 --help' for more information."
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    case $ac_envvar in #(
+      '' | [0-9]* | *[!_$as_cr_alnum]* )
+      as_fn_error "invalid variable name: \`$ac_envvar'" ;;
+    esac
+    eval $ac_envvar=\$ac_optarg
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  as_fn_error "missing argument to $ac_option"
+fi
+
+if test -n "$ac_unrecognized_opts"; then
+  case $enable_option_checking in
+    no) ;;
+    fatal) as_fn_error "unrecognized options: $ac_unrecognized_opts" ;;
+    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
+  esac
+fi
+
+# Check all directory arguments for consistency.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
+do
+  eval ac_val=\$$ac_var
+  # Remove trailing slashes.
+  case $ac_val in
+    */ )
+      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
+      eval $ac_var=\$ac_val;;
+  esac
+  # Be sure to have absolute directory names.
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
+  esac
+  as_fn_error "expected an absolute directory name for --$ac_var: $ac_val"
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    $as_echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used." >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  as_fn_error "working directory cannot be determined"
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  as_fn_error "pwd does not report name of working directory"
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$as_myself" ||
+$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_myself" : 'X\(//\)[^/]' \| \
+	 X"$as_myself" : 'X\(//\)$' \| \
+	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_myself" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r "$srcdir/$ac_unique_file"; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
+  as_fn_error "cannot find sources ($ac_unique_file) in $srcdir"
+fi
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error "$ac_msg"
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+ac_subdirs_all=`cd $srcdir && echo */configure | sed 's,/configure,,g'`
+
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures this package to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+                          [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+                          [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR            user executables [EPREFIX/bin]
+  --sbindir=DIR           system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR        program executables [EPREFIX/libexec]
+  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+  --libdir=DIR            object code libraries [EPREFIX/lib]
+  --includedir=DIR        C header files [PREFIX/include]
+  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR           info documentation [DATAROOTDIR/info]
+  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR            man documentation [DATAROOTDIR/man]
+  --docdir=DIR            documentation root @<:@DATAROOTDIR/doc/PACKAGE@:>@
+  --htmldir=DIR           html documentation [DOCDIR]
+  --dvidir=DIR            dvi documentation [DOCDIR]
+  --pdfdir=DIR            pdf documentation [DOCDIR]
+  --psdir=DIR             ps documentation [DOCDIR]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+  --target=TARGET   configure for building compilers for TARGET [HOST]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-option-checking  ignore unrecognized --enable/--with options
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --enable-gold           use gold instead of ld
+  --enable-libada         build libada directory
+  --enable-libssp         build libssp directory
+  --enable-build-with-cxx build with C++ compiler instead of C compiler
+  --disable-ppl-version-check    disable check for PPL version
+  --disable-cloog-version-check  disable check for CLooG version
+  --enable-stage1-languages@<:@=all@:>@   choose additional languages to build during
+                          stage1.  Mostly useful for compiler development.
+  --enable-objc-gc        enable use of Boehm's garbage collector with the
+                          GNU Objective-C runtime
+  --enable-bootstrap      enable bootstrapping @<:@yes if native build@:>@
+  --enable-serial-@<:@{host,target,build}-@:>@configure
+                          force sequential configuration of
+                          sub-packages for the host, target or build
+                          machine, or all sub-packages
+  --enable-maintainer-mode enable make rules and dependencies not useful
+                          (and sometimes confusing) to the casual installer
+  --enable-stage1-checking@<:@=all@:>@   choose additional checking for stage1
+                          of the compiler
+  --enable-werror         enable -Werror in bootstrap stage2 and later
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-build-libsubdir=DIR  Directory where to find libraries for build system
+  --with-mpc=PATH        specify prefix directory for installed MPC package.
+                          Equivalent to --with-mpc-include=PATH/include
+                          plus --with-mpc-lib=PATH/lib
+  --with-mpc-include=PATH
+                          specify directory for installed MPC include files
+  --with-mpc-lib=PATH    specify directory for the installed MPC library
+  --with-mpfr-dir=PATH    this option has been REMOVED
+  --with-mpfr=PATH        specify prefix directory for installed MPFR package.
+                          Equivalent to --with-mpfr-include=PATH/include
+                          plus --with-mpfr-lib=PATH/lib
+  --with-mpfr-include=PATH
+                          specify directory for installed MPFR include files
+  --with-mpfr-lib=PATH    specify directory for the installed MPFR library
+  --with-gmp-dir=PATH     this option has been REMOVED
+  --with-gmp=PATH         specify prefix directory for the installed GMP package.
+                          Equivalent to --with-gmp-include=PATH/include
+                          plus --with-gmp-lib=PATH/lib
+  --with-gmp-include=PATH specify directory for installed GMP include files
+  --with-gmp-lib=PATH     specify directory for the installed GMP library
+  --with-host-libstdcxx=L Use linker arguments L to link with libstdc++
+                          when linking with PPL
+  --with-stage1-ldflags=FLAGS Linker flags for stage1
+  -with-stage1-libs=LIBS      Libraries for stage1
+  --with-boot-ldflags=FLAGS Linker flags for stage2 and later
+  --with-boot-libs=LIBS     Libraries for stage2 and later
+  --with-ppl=PATH         Specify prefix directory for the installed PPL package
+                          Equivalent to --with-ppl-include=PATH/include
+                          plus --with-ppl-lib=PATH/lib
+  --with-ppl-include=PATH Specify directory for installed PPL include files
+  --with-ppl-lib=PATH     Specify the directory for the installed PPL library
+  --with-cloog=PATH       Specify prefix directory for the installed CLooG-PPL package
+                          Equivalent to --with-cloog-include=PATH/include
+                          plus --with-cloog-lib=PATH/lib
+  --with-cloog-include=PATH Specify directory for installed CLooG include files
+  --with-cloog-lib=PATH   Specify the directory for the installed CLooG library
+  --with-build-sysroot=SYSROOT
+                          use sysroot as the system root during the build
+  --with-debug-prefix-map='A=B C=D ...'
+                             map A to B, C to D ... in debug information
+  --with-build-time-tools=PATH
+                          use given path to find target tools during the build
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CXX         C++ compiler command
+  CXXFLAGS    C++ compiler flags
+  AR          AR for the host
+  AS          AS for the host
+  DLLTOOL     DLLTOOL for the host
+  LD          LD for the host
+  LIPO        LIPO for the host
+  NM          NM for the host
+  RANLIB      RANLIB for the host
+  STRIP       STRIP for the host
+  WINDRES     WINDRES for the host
+  WINDMC      WINDMC for the host
+  OBJCOPY     OBJCOPY for the host
+  OBJDUMP     OBJDUMP for the host
+  CC_FOR_TARGET 
+              CC for the target
+  CXX_FOR_TARGET 
+              CXX for the target
+  GCC_FOR_TARGET 
+              GCC for the target
+  GCJ_FOR_TARGET 
+              GCJ for the target
+  GFORTRAN_FOR_TARGET 
+              GFORTRAN for the target
+  AR_FOR_TARGET 
+              AR for the target
+  AS_FOR_TARGET 
+              AS for the target
+  DLLTOOL_FOR_TARGET 
+              DLLTOOL for the target
+  LD_FOR_TARGET 
+              LD for the target
+  LIPO_FOR_TARGET 
+              LIPO for the target
+  NM_FOR_TARGET 
+              NM for the target
+  OBJDUMP_FOR_TARGET 
+              OBJDUMP for the target
+  RANLIB_FOR_TARGET 
+              RANLIB for the target
+  STRIP_FOR_TARGET 
+              STRIP for the target
+  WINDRES_FOR_TARGET 
+              WINDRES for the target
+  WINDMC_FOR_TARGET 
+              WINDMC for the target
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+Report bugs to the package provider.
+_ACEOF
+ac_status=$?
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d "$ac_dir" ||
+      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
+      continue
+    ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
+    else
+      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
+  done
+fi
+
+test -n "$ac_init_help" && exit $ac_status
+if $ac_init_version; then
+  cat <<\_ACEOF
+configure
+generated by GNU Autoconf 2.64
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit
+fi
+
+## ------------------------ ##
+## Autoconf initialization. ##
+## ------------------------ ##
+
+@%:@ ac_fn_c_try_compile LINENO
+@%:@ --------------------------
+@%:@ Try to compile conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext
+  if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_compile
+
+@%:@ ac_fn_cxx_try_compile LINENO
+@%:@ ----------------------------
+@%:@ Try to compile conftest.$ac_ext, and return whether this succeeded.
+ac_fn_cxx_try_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext
+  if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_cxx_try_compile
+
+@%:@ ac_fn_c_try_link LINENO
+@%:@ -----------------------
+@%:@ Try to link conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_link ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext conftest$ac_exeext
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext && {
+	 test "$cross_compiling" = yes ||
+	 $as_test_x conftest$ac_exeext
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
+  # interfere with the next link command; also delete a directory that is
+  # left behind by Apple's compiler.  We do this before executing the actions.
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_link
+cat >config.log <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+exec 5>>config.log
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    $as_echo "PATH: $as_dir"
+  done
+IFS=$as_save_IFS
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *\'*)
+      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
+    2)
+      as_fn_append ac_configure_args1 " '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      as_fn_append ac_configure_args " '$ac_arg'"
+      ;;
+    esac
+  done
+done
+{ ac_configure_args0=; unset ac_configure_args0;}
+{ ac_configure_args1=; unset ac_configure_args1;}
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    cat <<\_ASBOX
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+_ASBOX
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+  (set) 2>&1 |
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      sed -n \
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
+    echo
+
+    cat <<\_ASBOX
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+_ASBOX
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      $as_echo "$ac_var='\''$ac_val'\''"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      cat <<\_ASBOX
+## ------------------- ##
+## File substitutions. ##
+## ------------------- ##
+_ASBOX
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	$as_echo "$ac_var='\''$ac_val'\''"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      cat <<\_ASBOX
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+_ASBOX
+      echo
+      cat confdefs.h
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      $as_echo "$as_me: caught signal $ac_signal"
+    $as_echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -f -r conftest* confdefs.h
+
+$as_echo "/* confdefs.h */" > confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_URL "$PACKAGE_URL"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer an explicitly selected file to automatically selected ones.
+ac_site_file1=NONE
+ac_site_file2=NONE
+if test -n "$CONFIG_SITE"; then
+  ac_site_file1=$CONFIG_SITE
+elif test "x$prefix" != xNONE; then
+  ac_site_file1=$prefix/share/config.site
+  ac_site_file2=$prefix/etc/config.site
+else
+  ac_site_file1=$ac_default_prefix/share/config.site
+  ac_site_file2=$ac_default_prefix/etc/config.site
+fi
+for ac_site_file in "$ac_site_file1" "$ac_site_file2"
+do
+  test "x$ac_site_file" = xNONE && continue
+  if test -r "$ac_site_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
+$as_echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file"
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special
+  # files actually), so we avoid doing that.
+  if test -f "$cache_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
+$as_echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
+    esac
+  fi
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
+$as_echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in $ac_precious_vars; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	# differences in whitespace do not lead to failure.
+	ac_old_val_w=`echo x $ac_old_val`
+	ac_new_val_w=`echo x $ac_new_val`
+	if test "$ac_old_val_w" != "$ac_new_val_w"; then
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
+$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	  ac_cache_corrupted=:
+	else
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
+$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
+	  eval $ac_var=\$ac_old_val
+	fi
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
+$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
+$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
+$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  as_fn_error "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
+fi
+## -------------------- ##
+## Main body of script. ##
+## -------------------- ##
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+
+
+
+
+
+
+progname=$0
+# if PWD already has a value, it is probably wrong.
+if test -n "$PWD" ; then PWD=`${PWDCMD-pwd}`; fi
+
+# Export original configure arguments for use by sub-configures.
+# Quote arguments with shell meta charatcers.
+TOPLEVEL_CONFIGURE_ARGUMENTS=
+set -- "$progname" "$@"
+for ac_arg
+do
+  case "$ac_arg" in
+  *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\']*)
+    ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"`
+    # if the argument is of the form -foo=baz, quote the baz part only
+    ac_arg=`echo "'$ac_arg'" | sed "s/^'\([-a-zA-Z0-9]*=\)/\\1'/"` ;;
+  *) ;;
+  esac
+  # Add the quoted argument to the list.
+  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS $ac_arg"
+done
+if test "$silent" = yes; then
+  TOPLEVEL_CONFIGURE_ARGUMENTS="$TOPLEVEL_CONFIGURE_ARGUMENTS --silent"
+fi
+# Remove the initial space we just introduced and, as these will be
+# expanded by make, quote '$'.
+TOPLEVEL_CONFIGURE_ARGUMENTS=`echo "x$TOPLEVEL_CONFIGURE_ARGUMENTS" | sed -e 's/^x *//' -e 's,\\$,$$,g'`
+
+
+# Find the build, host, and target systems.
+ac_aux_dir=
+for ac_dir in "$srcdir" "$srcdir/.." "$srcdir/../.."; do
+  for ac_t in install-sh install.sh shtool; do
+    if test -f "$ac_dir/$ac_t"; then
+      ac_aux_dir=$ac_dir
+      ac_install_sh="$ac_aux_dir/$ac_t -c"
+      break 2
+    fi
+  done
+done
+if test -z "$ac_aux_dir"; then
+  as_fn_error "cannot find install-sh, install.sh, or shtool in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"" "$LINENO" 5
+fi
+
+# These three variables are undocumented and unsupported,
+# and are intended to be withdrawn in a future Autoconf release.
+# They can cause serious problems if a builder's source tree is in a directory
+# whose full name contains unusual characters.
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
+ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.
+
+
+# Make sure we can run config.sub.
+$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
+  as_fn_error "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
+$as_echo_n "checking build system type... " >&6; }
+if test "${ac_cv_build+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_build_alias=$build_alias
+test "x$ac_build_alias" = x &&
+  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
+test "x$ac_build_alias" = x &&
+  as_fn_error "cannot guess build type; you must specify one" "$LINENO" 5
+ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
+  as_fn_error "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
+$as_echo "$ac_cv_build" >&6; }
+case $ac_cv_build in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical build" "$LINENO" 5;;
+esac
+build=$ac_cv_build
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_build
+shift
+build_cpu=$1
+build_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+build_os=$*
+IFS=$ac_save_IFS
+case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac
+
+
+ case ${build_alias} in
+  "") build_noncanonical=${build} ;;
+  *) build_noncanonical=${build_alias} ;;
+esac
+
+ 
+
+ case ${host_alias} in
+  "") host_noncanonical=${build_noncanonical} ;;
+  *) host_noncanonical=${host_alias} ;;
+esac
+
+ 
+
+ case ${target_alias} in
+  "") target_noncanonical=${host_noncanonical} ;;
+  *) target_noncanonical=${target_alias} ;;
+esac
+
+ 
+
+
+test "$host_noncanonical" = "$target_noncanonical" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_transform_name=s,y,y,
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
+$as_echo_n "checking host system type... " >&6; }
+if test "${ac_cv_host+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$host_alias" = x; then
+  ac_cv_host=$ac_cv_build
+else
+  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $host_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
+$as_echo "$ac_cv_host" >&6; }
+case $ac_cv_host in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical host" "$LINENO" 5;;
+esac
+host=$ac_cv_host
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_host
+shift
+host_cpu=$1
+host_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+host_os=$*
+IFS=$ac_save_IFS
+case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking target system type" >&5
+$as_echo_n "checking target system type... " >&6; }
+if test "${ac_cv_target+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$target_alias" = x; then
+  ac_cv_target=$ac_cv_host
+else
+  ac_cv_target=`$SHELL "$ac_aux_dir/config.sub" $target_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $target_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_target" >&5
+$as_echo "$ac_cv_target" >&6; }
+case $ac_cv_target in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical target" "$LINENO" 5;;
+esac
+target=$ac_cv_target
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_target
+shift
+target_cpu=$1
+target_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+target_os=$*
+IFS=$ac_save_IFS
+case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac
+
+
+# The aliases save the names the user supplied, while $host etc.
+# will get canonicalized.
+test -n "$target_alias" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_prefix=${target_alias}-
+
+test "$program_prefix" != NONE &&
+  program_transform_name="s&^&$program_prefix&;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
+# Double any \ or $.
+# By default was `s,x,x', remove it if useless.
+ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
+program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`
+
+
+
+# Get 'install' or 'install-sh' and its variants.
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+# Reject install programs that cannot install multiple files.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
+$as_echo_n "checking for a BSD-compatible install... " >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in @%:@((
+  ./ | .// | /[cC]/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    rm -rf conftest.one conftest.two conftest.dir
+	    echo one > conftest.one
+	    echo two > conftest.two
+	    mkdir conftest.dir
+	    if "$as_dir/$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir" &&
+	      test -s conftest.one && test -s conftest.two &&
+	      test -s conftest.dir/conftest.one &&
+	      test -s conftest.dir/conftest.two
+	    then
+	      ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	      break 3
+	    fi
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+
+  done
+IFS=$as_save_IFS
+
+rm -rf conftest.one conftest.two conftest.dir
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
+$as_echo "$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln works" >&5
+$as_echo_n "checking whether ln works... " >&6; }
+if test "${acx_cv_prog_LN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f conftestdata_t
+echo >conftestdata_f
+if ln conftestdata_f conftestdata_t 2>/dev/null
+then
+  acx_cv_prog_LN=ln
+else
+  acx_cv_prog_LN=no
+fi
+rm -f conftestdata_f conftestdata_t
+
+fi
+if test $acx_cv_prog_LN = no; then
+  LN="cp"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN" >&5
+$as_echo "no, using $LN" >&6; }
+else
+  LN="$acx_cv_prog_LN"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
+$as_echo_n "checking whether ln -s works... " >&6; }
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
+$as_echo "no, using $LN_S" >&6; }
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if test "${ac_cv_path_SED+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
+$as_echo "$AWK" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+
+### we might need to use some other shell than /bin/sh for running subshells
+### If we are on Windows, search for the shell.  This will permit people
+### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure
+### without also having to set CONFIG_SHELL.  This code will work when
+### using bash, which sets OSTYPE.
+case "${OSTYPE}" in
+*win32*)
+  if test x${CONFIG_SHELL} = x ; then
+    if test ! -f /bin/sh ; then
+      if test x${SHELL} != x && test -f ${SHELL} ; then
+	CONFIG_SHELL=${SHELL}
+	export CONFIG_SHELL
+      else
+	for prog in sh sh.exe bash bash.exe; do
+	  IFS="${IFS=	}"; save_ifs="$IFS"; IFS="${IFS}:"
+	  for dir in $PATH; do
+	    test -z "$dir" && dir=.
+	    if test -f $dir/$prog; then
+	      CONFIG_SHELL=$dir/$prog
+	      export CONFIG_SHELL
+	      break
+	    fi
+	  done
+	  IFS="$save_ifs"
+	  test -n "${CONFIG_SHELL}" && break
+	done
+      fi
+    fi
+  fi
+  ;;
+esac
+
+config_shell=${CONFIG_SHELL-/bin/sh}
+
+moveifchange=${srcdir}/move-if-change
+
+srcpwd=`cd ${srcdir} ; ${PWDCMD-pwd}`
+
+# We pass INSTALL explicitly to sub-makes.  Make sure that it is not
+# a relative path.
+if test "$INSTALL" = "${srcdir}/install-sh -c"; then
+  INSTALL="${srcpwd}/install-sh -c"
+fi
+
+# Set srcdir to "." if that's what it is.
+# This is important for multilib support.
+pwd=`${PWDCMD-pwd}`
+if test "${pwd}" = "${srcpwd}" ; then
+  srcdir=.
+fi
+
+topsrcdir=$srcpwd
+
+extra_host_args=
+
+### To add a new directory to the tree, first choose whether it is a target
+### or a host dependent tool.  Then put it into the appropriate list
+### (library or tools, host or target), doing a dependency sort.
+
+# Subdirs will be configured in the order listed in build_configdirs, 
+# configdirs, or target_configdirs; see the serialization section below.
+
+# Dependency sorting is only needed when *configuration* must be done in 
+# a particular order.  In all cases a dependency should be specified in 
+# the Makefile, whether or not it's implicitly specified here.
+
+# Double entries in build_configdirs, configdirs, or target_configdirs may
+# cause circular dependencies and break everything horribly.
+
+# these library is used by various programs built for the build
+# environment
+#
+build_libs="build-libiberty"
+
+# these tools are built for the build environment
+build_tools="build-texinfo build-byacc build-flex build-bison build-m4 build-fixincludes"
+
+# these libraries are used by various programs built for the host environment
+#
+host_libs="intl mmalloc libiberty opcodes bfd readline tcl tk itcl libgui zlib libcpp libdecnumber gmp mpfr mpc ppl cloog libiconv"
+
+# these tools are built for the host environment
+# Note, the powerpc-eabi build depends on sim occurring before gdb in order to
+# know that we are building the simulator.
+# binutils, gas and ld appear in that order because it makes sense to run
+# "make check" in that particular order.
+# If --enable-gold is used, "gold" will replace "ld".
+host_tools="byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
+
+# libgcj represents the runtime libraries only used by gcj.
+libgcj="target-libffi \
+	target-zlib \
+	target-qthreads \
+	target-libjava"
+
+# these libraries are built for the target environment, and are built after
+# the host libraries and the host tools (which may be a cross compiler)
+#
+target_libraries="target-libgcc \
+		target-libiberty \
+		target-libgloss \
+		target-newlib \
+		target-libgomp \
+		target-libstdc++-v3 \
+		target-libmudflap \
+		target-libssp \
+		target-libgfortran \
+		target-boehm-gc \
+		${libgcj} \
+		target-libobjc \
+		target-libada"
+
+# these tools are built using the target libraries, and are intended to
+# run only in the target environment
+#
+# note: any program that *uses* libraries that are in the "target_libraries"
+# list belongs in this list.  those programs are also very likely
+# candidates for the "native_only" list which follows
+#
+target_tools="target-examples target-groff target-gperf target-rda"
+
+################################################################################
+
+## All tools belong in one of the four categories, and are assigned above
+## We assign ${configdirs} this way to remove all embedded newlines.  This
+## is important because configure will choke if they ever get through.
+## ${configdirs} is directories we build using the host tools.
+## ${target_configdirs} is directories we build using the target tools.
+configdirs=`echo ${host_libs} ${host_tools}`
+target_configdirs=`echo ${target_libraries} ${target_tools}`
+build_configdirs=`echo ${build_libs} ${build_tools}`
+
+
+
+################################################################################
+
+srcname="gnu development package"
+
+# This gets set non-empty for some net releases of packages.
+appdirs=""
+
+# Define is_cross_compiler to save on calls to 'test'.
+is_cross_compiler=
+if test x"${host}" = x"${target}" ; then
+  is_cross_compiler=no
+else
+  is_cross_compiler=yes
+fi	
+
+# Find the build and target subdir names.
+  
+# post-stage1 host modules use a different CC_FOR_BUILD so, in order to
+# have matching libraries, they should use host libraries: Makefile.tpl
+# arranges to pass --with-build-libsubdir=$(HOST_SUBDIR).
+# However, they still use the build modules, because the corresponding
+# host modules (e.g. bison) are only built for the host when bootstrap
+# finishes. So:
+# - build_subdir is where we find build modules, and never changes.
+# - build_libsubdir is where we find build libraries, and can be overridden.
+
+# Prefix 'build-' so this never conflicts with target_subdir.
+build_subdir="build-${build_noncanonical}"
+
+@%:@ Check whether --with-build-libsubdir was given.
+if test "${with_build_libsubdir+set}" = set; then :
+  withval=$with_build_libsubdir; build_libsubdir="$withval"
+else
+  build_libsubdir="$build_subdir"
+fi
+
+# --srcdir=. covers the toplevel, while "test -d" covers the subdirectories
+if ( test $srcdir = . && test -d gcc ) \
+   || test -d $srcdir/../host-${host_noncanonical}; then
+  host_subdir="host-${host_noncanonical}"
+else
+  host_subdir=.
+fi
+# No prefix.
+target_subdir=${target_noncanonical}
+    
+
+# Skipdirs are removed silently.
+skipdirs=
+# Noconfigdirs are removed loudly.
+noconfigdirs=""
+
+use_gnu_ld=
+# Make sure we don't let GNU ld be added if we didn't want it.
+if test x$with_gnu_ld = xno ; then
+  use_gnu_ld=no
+  noconfigdirs="$noconfigdirs ld gold"
+fi
+
+use_gnu_as=
+# Make sure we don't let GNU as be added if we didn't want it.
+if test x$with_gnu_as = xno ; then
+  use_gnu_as=no
+  noconfigdirs="$noconfigdirs gas"
+fi
+
+# some tools are so dependent upon X11 that if we're not building with X, 
+# it's not even worth trying to configure, much less build, that tool.
+
+case ${with_x} in
+  yes | "") ;; # the default value for this tree is that X11 is available
+  no)
+    skipdirs="${skipdirs} tk itcl libgui"
+    # We won't be able to build gdbtk without X.
+    enable_gdbtk=no 
+    ;;
+  *)  echo "*** bad value \"${with_x}\" for -with-x flag; ignored" 1>&2 ;;
+esac
+
+# Some tools are only suitable for building in a "native" situation.
+# Remove these if host!=target.  
+native_only="autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff target-groff guile perl time ash bash bzip2 prms gnuserv target-gperf"
+
+# Similarly, some are only suitable for cross toolchains.
+# Remove these if host=target.
+cross_only="target-libgloss target-newlib target-opcodes"
+
+case $is_cross_compiler in
+  no) skipdirs="${skipdirs} ${cross_only}" ;;
+  yes) skipdirs="${skipdirs} ${native_only}" ;;
+esac
+
+# If both --with-headers and --with-libs are specified, default to
+# --without-newlib.
+if test x"${with_headers}" != x && test x"${with_headers}" != xno \
+   && test x"${with_libs}" != x && test x"${with_libs}" != xno ; then
+  if test x"${with_newlib}" = x ; then
+    with_newlib=no
+  fi
+fi
+
+# Recognize --with-newlib/--without-newlib.
+case ${with_newlib} in
+  no) skipdirs="${skipdirs} target-newlib" ;;
+  yes) skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'` ;;
+esac
+
+# Handle --enable-gold.
+
+@%:@ Check whether --enable-gold was given.
+if test "${enable_gold+set}" = set; then :
+  enableval=$enable_gold; ENABLE_GOLD=$enableval
+else
+  ENABLE_GOLD=no
+fi
+
+if test "${ENABLE_GOLD}" = "yes"; then
+  # Check for ELF target.
+  is_elf=no
+  case "${target}" in
+    *-*-elf* | *-*-sysv4* | *-*-unixware* | *-*-eabi* | hppa*64*-*-hpux* \
+    | *-*-linux* | frv-*-uclinux* | *-*-irix5* | *-*-irix6* \
+    | *-*-netbsd* | *-*-openbsd* | *-*-freebsd* | *-*-solaris2* | *-*-nto*)
+      case "${target}" in
+        *-*-linux*aout* | *-*-linux*oldld*)
+          ;;
+        *)
+          is_elf=yes
+          ;;
+      esac
+  esac
+
+  if test "$is_elf" = "yes"; then
+    # Check for target supported by gold.
+    case "${target}" in
+      i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)
+        configdirs="`echo " ${configdirs} " | sed -e 's/ ld / gold /'`"
+        ;;
+    esac
+  fi
+fi
+
+# Configure extra directories which are host specific
+
+case "${host}" in
+  *-cygwin*)
+    configdirs="$configdirs libtermcap" ;;
+esac
+
+# A target can indicate whether a language isn't supported for some reason.
+# Only spaces may be used in this macro; not newlines or tabs.
+unsupported_languages=
+
+# Remove more programs from consideration, based on the host or 
+# target this usually means that a port of the program doesn't
+# exist yet.
+
+case "${host}" in
+  hppa*64*-*-*)
+    noconfigdirs="$noconfigdirs byacc"
+    ;;
+  i[3456789]86-*-vsta)
+    noconfigdirs="$noconfigdirs tcl expect dejagnu make texinfo bison patch flex byacc send-pr gprof uudecode dejagnu diff guile perl itcl gnuserv gettext"
+    ;;
+  i[3456789]86-*-go32* | i[3456789]86-*-msdosdjgpp*)
+    noconfigdirs="$noconfigdirs tcl tk expect dejagnu send-pr uudecode guile itcl gnuserv libffi"
+    ;;
+  x86_64-*-mingw*)
+    noconfigdirs="$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib"
+    ;;
+  i[3456789]86-*-mingw32*)
+    # noconfigdirs="tcl tk expect dejagnu make texinfo bison patch flex byacc send-pr uudecode dejagnu diff guile perl itcl gnuserv"
+    noconfigdirs="$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib"
+    ;;
+  i[3456789]86-*-beos*)
+    noconfigdirs="$noconfigdirs tk itcl libgui gdb"
+    ;;
+  *-*-cygwin*)
+    noconfigdirs="$noconfigdirs autoconf automake send-pr rcs guile perl"
+    ;;
+  *-*-netbsd*)
+    noconfigdirs="$noconfigdirs rcs"
+    ;;
+  ppc*-*-pe)
+    noconfigdirs="$noconfigdirs patch diff make tk tcl expect dejagnu autoconf automake texinfo bison send-pr gprof rcs guile perl itcl gnuserv"
+    ;;
+  powerpc-*-beos*)
+    noconfigdirs="$noconfigdirs tk itcl libgui gdb dejagnu readline"
+    ;;
+esac
+
+
+@%:@ Check whether --enable-libada was given.
+if test "${enable_libada+set}" = set; then :
+  enableval=$enable_libada; ENABLE_LIBADA=$enableval
+else
+  ENABLE_LIBADA=yes
+fi
+
+if test "${ENABLE_LIBADA}" != "yes" ; then
+  noconfigdirs="$noconfigdirs gnattools"
+fi
+
+@%:@ Check whether --enable-libssp was given.
+if test "${enable_libssp+set}" = set; then :
+  enableval=$enable_libssp; ENABLE_LIBSSP=$enableval
+else
+  ENABLE_LIBSSP=yes
+fi
+
+
+# Save it here so that, even in case of --enable-libgcj, if the Java
+# front-end isn't enabled, we still get libgcj disabled.
+libgcj_saved=$libgcj
+case $enable_libgcj in
+yes)
+  # If we reset it here, it won't get added to noconfigdirs in the
+  # target-specific build rules, so it will be forcibly enabled
+  # (unless the Java language itself isn't enabled).
+  libgcj=
+  ;;
+no)
+  # Make sure we get it printed in the list of not supported target libs.
+  noconfigdirs="$noconfigdirs ${libgcj}"
+  ;;
+esac
+
+
+# Disable libmudflap on some systems.
+if test x$enable_libmudflap = x ; then
+    case "${target}" in
+    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | bfin*-*-uclinux* | *-*-kopensolaris*-gnu)
+        # Enable libmudflap by default in GNU and friends.
+	;;
+    *-*-freebsd*)
+        # Enable libmudflap by default in FreeBSD.
+	;;
+    *)
+        # Disable it by default everywhere else.
+	noconfigdirs="$noconfigdirs target-libmudflap"
+	;;
+    esac
+fi
+
+# Disable libgomp on non POSIX hosted systems.
+if test x$enable_libgomp = x ; then
+    # Enable libgomp by default on hosted POSIX systems.
+    case "${target}" in
+    *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
+	;;
+    *-*-netbsd* | *-*-freebsd* | *-*-openbsd*)
+	;;
+    *-*-solaris2* | *-*-sysv4* | *-*-irix6* | *-*-osf* | *-*-hpux11*)
+	;;
+    *-*-darwin* | *-*-aix*)
+	;;
+    *)
+	noconfigdirs="$noconfigdirs target-libgomp"
+	;;
+    esac
+fi
+
+# Default libgloss CPU subdirectory.
+libgloss_dir="$target_cpu"
+
+case "${target}" in
+  *-*-chorusos)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
+    ;;
+  powerpc-*-darwin*)
+    noconfigdirs="$noconfigdirs ld gas gdb gprof"
+    noconfigdirs="$noconfigdirs sim target-rda"
+    ;;
+  i[3456789]86-*-darwin*)
+    noconfigdirs="$noconfigdirs ld gprof"
+    noconfigdirs="$noconfigdirs sim target-rda"
+    ;;
+  x86_64-*-darwin[912]*)
+    noconfigdirs="$noconfigdirs ld gas gprof"
+    noconfigdirs="$noconfigdirs sim target-rda"
+    ;;
+  *-*-darwin*)
+    noconfigdirs="$noconfigdirs ld gas gdb gprof"
+    noconfigdirs="$noconfigdirs sim target-rda"
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  *-*-freebsd[12] | *-*-freebsd[12].* | *-*-freebsd*aout*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
+    ;;
+  *-*-freebsd*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
+    if test "x$with_gmp" = x && test "x$with_gmp_dir" = x \
+	&& test -f /usr/local/include/gmp.h; then
+      with_gmp=/usr/local
+    fi
+
+    # Skip some stuff that's unsupported on some FreeBSD configurations.
+    case "${target}" in
+      i*86-*-*) ;;
+      alpha*-*-*) ;;
+      *)
+	noconfigdirs="$noconfigdirs ${libgcj}"
+	;;
+    esac
+    ;;
+  *-*-kaos*)
+    # Remove unsupported stuff on all kaOS configurations.
+    skipdirs="target-libiberty ${libgcj} target-libstdc++-v3 target-librx"
+    skipdirs="$skipdirs target-libobjc target-examples target-groff target-gperf"
+    skipdirs="$skipdirs zlib fastjar target-libjava target-boehm-gc target-zlib"
+    noconfigdirs="$noconfigdirs target-libgloss"
+    ;;
+  *-*-netbsd*)
+    # Skip some stuff on all NetBSD configurations.
+    noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss"
+
+    # Skip some stuff that's unsupported on some NetBSD configurations.
+    case "${target}" in
+      i*86-*-netbsdelf*) ;;
+      arm*-*-netbsdelf*) ;;
+      *)
+	noconfigdirs="$noconfigdirs ${libgcj}"
+	;;
+    esac
+    ;;
+  *-*-netware*)
+    noconfigdirs="$noconfigdirs target-newlib target-libiberty target-libgloss ${libgcj} target-libmudflap"
+    ;;
+  *-*-rtems*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+    # The tpf target doesn't support gdb yet.
+  *-*-tpf*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-libiberty ${libgcj} target-libmudflap gdb tcl tk libgui itcl"
+    ;;
+  *-*-uclinux*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-rda ${libgcj}"
+    ;;
+  *-*-vxworks*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss target-libiberty target-libstdc++-v3 ${libgcj}"
+    ;;
+  alpha*-dec-osf*)
+    # ld works, but does not support shared libraries.
+    # newlib is not 64 bit ready.  I'm not sure about fileutils.
+    # gas doesn't generate exception information.
+    noconfigdirs="$noconfigdirs gas ld fileutils target-newlib target-libgloss"
+    ;;
+  alpha*-*-*vms*)
+    noconfigdirs="$noconfigdirs gdb ld target-newlib target-libgloss ${libgcj}"
+    ;;
+  alpha*-*-linux*)
+    # newlib is not 64 bit ready
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
+    ;;
+  alpha*-*-*)
+    # newlib is not 64 bit ready
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
+    ;;
+  am33_2.0-*-linux*)
+    noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss"
+    ;;
+  sh-*-linux*)
+    noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss"
+    ;;    
+  sh*-*-pe|mips*-*-pe|*arm-wince-pe)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    noconfigdirs="$noconfigdirs target-examples"
+    noconfigdirs="$noconfigdirs target-libiberty texinfo send-pr"
+    noconfigdirs="$noconfigdirs tcl tk itcl libgui sim"
+    noconfigdirs="$noconfigdirs expect dejagnu"
+    # the C++ libraries don't build on top of CE's C libraries
+    noconfigdirs="$noconfigdirs target-libstdc++-v3"
+    noconfigdirs="$noconfigdirs target-newlib"
+    case "${host}" in
+      *-*-cygwin*) ;; # keep gdb and readline
+      *) noconfigdirs="$noconfigdirs gdb readline"
+	 ;;
+    esac
+    libgloss_dir=wince
+    ;;
+  arc-*-*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  arm-semi-aof )
+    ;;
+  arm-*-coff | strongarm-*-coff | xscale-*-coff)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    libgloss_dir=arm
+    ;;
+  arm-*-elf* | strongarm-*-elf* | xscale-*-elf* | arm*-*-eabi* )
+    noconfigdirs="$noconfigdirs target-libffi target-qthreads"
+    libgloss_dir=arm
+    ;;
+  arm*-*-linux-gnueabi)
+    noconfigdirs="$noconfigdirs target-qthreads"
+    case ${with_newlib} in
+      no) noconfigdirs="$noconfigdirs target-newlib target-libgloss"
+    esac
+    libgloss_dir=arm
+    ;;
+  arm*-*-symbianelf*)
+    noconfigdirs="$noconfigdirs ${libgcj} target-libiberty"
+    libgloss_dir=arm
+    ;;
+  arm-*-pe*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  thumb-*-coff)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  thumb-*-elf)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  thumb-*-pe)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  arm-*-riscix*)
+    noconfigdirs="$noconfigdirs ld target-libgloss ${libgcj}"
+    ;;
+  avr-*-*)
+    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj} target-libssp"
+    ;;
+  bfin-*-*)
+    noconfigdirs="$noconfigdirs gdb"
+    if test x${is_cross_compiler} != xno ; then
+      target_configdirs="${target_configdirs} target-bsp target-cygmon"
+    fi
+    ;;
+  c4x-*-* | tic4x-*-*)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
+    ;;
+  c54x*-*-* | tic54x-*-*)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj} gcc gdb newlib"
+    ;;
+  cr16-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj} gdb"
+    ;;
+  cris-*-* | crisv32-*-*)
+    unsupported_languages="$unsupported_languages java"
+    case "${target}" in
+      *-*-aout)
+	unsupported_languages="$unsupported_languages fortran"
+	noconfigdirs="$noconfigdirs target-libffi target-boehm-gc";;
+      *-*-elf)
+	noconfigdirs="$noconfigdirs target-boehm-gc";;
+      *-*-linux*)
+	noconfigdirs="$noconfigdirs target-newlib target-libgloss";;
+      *)
+	unsupported_languages="$unsupported_languages fortran"
+	noconfigdirs="$noconfigdirs ${libgcj} target-newlib target-libgloss";;
+    esac
+    libgloss_dir=cris
+    ;;
+  crx-*-*)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-mudflap ${libgcj}"
+    ;;
+  d10v-*-*)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
+    ;;
+  d30v-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj} gdb"
+    ;;
+  ep9312-*-elf | ep9312-*-coff)
+    libgloss_dir=arm
+    ;;
+  fr30-*-elf*)
+    noconfigdirs="$noconfigdirs ${libgcj} gdb"
+    ;;
+  frv-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  moxie-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    noconfigdirs="$noconfigdirs gprof"
+    ;;
+  h8300*-*-*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  h8500-*-*)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
+    ;;
+  hppa1.1-*-osf* | hppa1.1-*-bsd* )
+    ;;
+  hppa*64*-*-linux* | parisc*64*-*-linux*)
+    # In this case, it's because the hppa64-linux target is for
+    # the kernel only at this point and has no libc, and thus no
+    # headers, crt*.o, etc., all of which are needed by these.
+    noconfigdirs="$noconfigdirs target-zlib"
+    ;;
+  parisc*-*-linux* | hppa*-*-linux*)
+    ;;
+  hppa*-*-*elf* | \
+  hppa*-*-lites* | \
+  hppa*-*-openbsd* | \
+  hppa*64*-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  hppa*-hp-hpux11*)
+    noconfigdirs="$noconfigdirs ld shellutils"
+    ;;
+  hppa*-*-pro*)
+    libgloss_dir=pa
+    ;;
+  hppa*-*-*)
+    # According to Alexandre Oliva <aoliva@redhat.com>, libjava won't
+    # build on HP-UX 10.20.
+    noconfigdirs="$noconfigdirs ld shellutils ${libgcj}"
+    ;;
+  i960-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj} gdb"
+    ;;
+  ia64*-*-elf*)
+    # No gdb support yet.
+    noconfigdirs="$noconfigdirs readline mmalloc libgui itcl gdb"
+    ;;
+  ia64*-**-hpux*)
+    # No gdb or ld support yet.
+    noconfigdirs="$noconfigdirs ${libgcj} readline mmalloc libgui itcl gdb ld"
+    ;;
+  ia64*-*-*vms*)
+    # No gdb or ld support yet.
+    noconfigdirs="$noconfigdirs ${libgcj} tix readline mmalloc libgui itcl gdb ld"
+    ;;
+  i370-*-opened*)
+    ;;
+  i[3456789]86-*-coff | i[3456789]86-*-elf)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    libgloss_dir=i386
+    ;;
+  i[3456789]86-*-linux*)
+    # The GCC port for glibc1 has no MD_FALLBACK_FRAME_STATE_FOR, so let's
+    # not build java stuff by default.
+    case "${target}" in
+      *-*-*libc1*)
+	noconfigdirs="$noconfigdirs ${libgcj}";;
+    esac
+
+    # This section makes it possible to build newlib natively on linux.
+    # If we are using a cross compiler then don't configure newlib.
+    if test x${is_cross_compiler} != xno ; then
+      noconfigdirs="$noconfigdirs target-newlib"
+    fi
+    noconfigdirs="$noconfigdirs target-libgloss"
+    # If we are not using a cross compiler, do configure newlib.
+    # Note however, that newlib will only be configured in this situation
+    # if the --with-newlib option has been given, because otherwise
+    # 'target-newlib' will appear in skipdirs.
+    ;;
+  i[3456789]86-*-mingw32*)
+    target_configdirs="$target_configdirs target-winsup"
+    noconfigdirs="$noconfigdirs expect target-libgloss target-newlib ${libgcj}"
+    ;;    
+  x86_64-*-mingw*)
+    target_configdirs="$target_configdirs target-winsup"
+    noconfigdirs="$noconfigdirs expect target-libgloss target-newlib ${libgcj}"
+    ;;    
+  *-*-cygwin*)
+    target_configdirs="$target_configdirs target-libtermcap target-winsup"
+    noconfigdirs="$noconfigdirs target-gperf target-libgloss"
+    # always build newlib if winsup directory is present.
+    if test -d "$srcdir/winsup/cygwin"; then
+      skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'`
+    elif test -d "$srcdir/newlib"; then
+      echo "Warning: winsup/cygwin is missing so newlib can't be built."
+    fi
+    ;;    
+  i[3456789]86-moss-msdos | i[3456789]86-*-moss* | \
+  i[3456789]86-*-uwin* | i[3456789]86-*-interix* )
+    ;;
+  i[3456789]86-*-pe)
+    noconfigdirs="$noconfigdirs target-libstdc++-v3 target-libgloss ${libgcj}"
+    ;;
+  i[3456789]86-*-sco3.2v5*)
+    # The linker does not yet know about weak symbols in COFF,
+    # and is not configured to handle mixed ELF and COFF.
+    noconfigdirs="$noconfigdirs ld target-libgloss ${libgcj}"
+    ;;
+  i[3456789]86-*-sco*)
+    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
+    ;;
+  i[3456789]86-*-solaris2*)
+    noconfigdirs="$noconfigdirs target-libgloss"
+    ;;
+  i[3456789]86-*-sysv4*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  i[3456789]86-*-beos*)
+    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss ${libgcj}"
+    ;;
+  i[3456789]86-*-rdos*)
+    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
+    ;;
+  m32r-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
+    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}"
+    libgloss_dir=m68hc11
+    ;;
+  m68k-*-elf*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  m68k-*-coff*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  m68*-*-* | fido-*-*)
+    libgloss_dir=m68k
+    ;;
+  mcore-*-pe*)
+  # The EPOC C++ environment does not support exceptions or rtti,
+  # and so building libstdc++-v3 tends not to always work.
+    noconfigdirs="$noconfigdirs target-libstdc++-v3"
+    ;;
+  mmix-*-*)
+    noconfigdirs="$noconfigdirs target-libffi target-boehm-gc gdb libgloss"
+    unsupported_languages="$unsupported_languages fortran java"
+    ;;
+  mn10200-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  mn10300-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  mt-*-*)
+    noconfigdirs="$noconfigdirs sim"
+    ;;
+  powerpc-*-aix*)
+    # copied from rs6000-*-* entry
+    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp target-newlib ${libgcj}"
+    ;;
+  powerpc*-*-winnt* | powerpc*-*-pe* | ppc*-*-pe)
+    target_configdirs="$target_configdirs target-winsup"
+    noconfigdirs="$noconfigdirs gdb tcl tk make expect target-libgloss itcl gnuserv ${libgcj}"
+    # always build newlib.
+    skipdirs=`echo " ${skipdirs} " | sed -e 's/ target-newlib / /'`
+    ;;
+    # This is temporary until we can link against shared libraries
+  powerpcle-*-solaris*)
+    noconfigdirs="$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}"
+    libgloss_dir=rs6000
+    ;;
+  powerpc-*-beos*)
+    noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss ${libgcj}"
+    ;;
+  powerpc-*-eabi)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    libgloss_dir=rs6000
+    ;;
+  powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems* )
+    libgloss_dir=rs6000
+    ;;
+  rs6000-*-lynxos*)
+    noconfigdirs="$noconfigdirs target-newlib gprof ${libgcj}"
+    ;;
+  rs6000-*-aix*)
+    noconfigdirs="$noconfigdirs gprof target-libgloss target-libssp target-newlib ${libgcj}"
+    ;;
+  rs6000-*-*)
+    noconfigdirs="$noconfigdirs gprof ${libgcj}"
+    ;;
+  m68k-apollo-*)
+    noconfigdirs="$noconfigdirs ld binutils gprof target-libgloss ${libgcj}"
+    ;;
+  microblaze*)
+    noconfigdirs="$noconfigdirs gprof ${libgcj}"
+    ;;
+  mips*-sde-elf*)
+    skipdirs="$skipdirs target-libiberty"
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    if test x$with_newlib = xyes; then
+      noconfigdirs="$noconfigdirs gprof"
+    fi
+    libgloss_dir=mips
+    ;;
+  mips*-*-irix5*)
+    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
+    ;;
+  mips*-*-irix6*)
+    # Linking libjava exceeds command-line length limits on at least
+    # IRIX 6.2, but not on IRIX 6.5.
+    # Also, boehm-gc won't build on IRIX 6.5, according to Jeffrey Oldham
+    # <oldham@codesourcery.com>
+    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
+    ;;
+  mips*-*-bsd*)
+    noconfigdirs="$noconfigdirs gprof target-libgloss ${libgcj}"
+    ;;
+  mips*-*-linux*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
+    ;;
+  mips*-*-*)
+    noconfigdirs="$noconfigdirs gprof ${libgcj}"
+    libgloss_dir=mips
+    ;;
+  romp-*-*)
+    noconfigdirs="$noconfigdirs bfd binutils ld gas opcodes target-libgloss ${libgcj}"
+    ;;
+  sh-*-* | sh64-*-*)
+    case "${host}" in
+      i[3456789]86-*-vsta) ;; # don't add gprof back in
+      i[3456789]86-*-go32*) ;; # don't add gprof back in
+      i[3456789]86-*-msdosdjgpp*) ;; # don't add gprof back in
+      *) skipdirs=`echo " ${skipdirs} " | sed -e 's/ gprof / /'` ;;
+    esac
+    case "${target}" in
+      sh*-*-elf)
+         noconfigdirs="$noconfigdirs ${libgcj}" ;;
+      *)
+         noconfigdirs="$noconfigdirs target-libgloss ${libgcj}" ;;
+    esac
+    ;;
+  sparclet-*-aout* | sparc86x-*-*)
+    libgloss_dir=sparc
+    ;;
+  sparc-*-elf*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  sparc64-*-elf*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    libgloss_dir=sparc
+    ;;
+  sparclite-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    libgloss_dir=sparc
+    ;;
+  sparc-*-sunos4*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    if test x${is_cross_compiler} != xno ; then
+           noconfigdirs="$noconfigdirs gdb target-newlib target-libgloss"
+    else
+           use_gnu_ld=no
+    fi
+    ;;
+  sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  sparc-*-solaris* | sparc64-*-solaris* | sparcv9-*-solaris*)
+    ;;
+  v810-*-*)
+    noconfigdirs="$noconfigdirs bfd binutils gas gcc gdb ld target-libstdc++-v3 opcodes target-libgloss ${libgcj}"
+    ;;
+  v850-*-*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  v850e-*-*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  v850ea-*-*)
+    noconfigdirs="$noconfigdirs target-libgloss ${libgcj}"
+    ;;
+  vax-*-vms)
+    noconfigdirs="$noconfigdirs bfd binutils gdb ld target-newlib opcodes target-libgloss ${libgcj}"
+    ;;
+  vax-*-*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
+    ;;
+  xtensa*-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+  ip2k-*-*)
+    noconfigdirs="$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}"
+    ;;
+  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss"
+    ;;
+  *-*-lynxos*)
+    noconfigdirs="$noconfigdirs target-newlib target-libgloss ${libgcj}"
+    ;; 
+  *-*-*)
+    noconfigdirs="$noconfigdirs ${libgcj}"
+    ;;
+esac
+
+# If we aren't building newlib, then don't build libgloss, since libgloss
+# depends upon some newlib header files.
+case "${noconfigdirs}" in
+  *target-libgloss*) ;;
+  *target-newlib*) noconfigdirs="$noconfigdirs target-libgloss" ;;
+esac
+
+# Work in distributions that contain no compiler tools, like Autoconf.
+tentative_cc=""
+host_makefile_frag=/dev/null
+if test -d ${srcdir}/config ; then
+case "${host}" in
+  m68k-hp-hpux*)
+    # Avoid "too much defining" errors from HPUX compiler.
+    tentative_cc="cc -Wp,-H256000"
+    # If "ar" in $PATH is GNU ar, the symbol table may need rebuilding.
+    # If it's HP/UX ar, this should be harmless.
+    RANLIB="ar ts"
+    ;;
+  m68k-apollo-sysv*)
+    tentative_cc="cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG"
+    ;;
+  m68k-apollo-bsd*)
+    #None of the Apollo compilers can compile gas or binutils.  The preprocessor
+    # chokes on bfd, the compiler won't let you assign integers to enums, and
+    # other problems.  Defining CC to gcc is a questionable way to say "don't use
+    # the apollo compiler" (the preferred version of GCC could be called cc,
+    # or whatever), but I'm not sure leaving CC as cc is any better...
+    #CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG
+    # Used to have BISON=yacc.
+    tentative_cc=gcc
+    ;;
+  m88k-dg-dgux*)
+    tentative_cc="gcc -Wall -ansi -D__using_DGUX"
+    ;;
+  m88k-harris-cxux*)
+    # Under CX/UX, we want to tell the compiler to use ANSI mode.
+    tentative_cc="cc -Xa"
+    host_makefile_frag="config/mh-cxux"
+    ;;
+  m88k-motorola-sysv*)
+    ;;
+  mips*-dec-ultrix*)
+    tentative_cc="cc -Wf,-XNg1000"
+    host_makefile_frag="config/mh-decstation"
+    ;;
+  mips*-nec-sysv4*)
+    # The C compiler on NEC MIPS SVR4 needs bigger tables.
+    tentative_cc="cc -ZXNd=5000 -ZXNg=1000"
+    host_makefile_frag="config/mh-necv4"
+    ;;
+  mips*-sgi-irix4*)
+    # Tell compiler to use K&R C.  We can't compile under the SGI Ansi
+    # environment.  Also bump switch table size so that cp-parse will
+    # compile.  Bump string length limit so linker builds.
+    tentative_cc="cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192"
+    ;;
+  mips*-*-sysv4*)
+    host_makefile_frag="config/mh-sysv4"
+    ;;
+  mips*-*-sysv*)
+    # This is for a MIPS running RISC/os 4.52C.
+
+    # This is needed for GDB, but needs to be in the top-level make because
+    # if a library is compiled with the bsd headers and gets linked with the
+    # sysv system libraries all hell can break loose (e.g. a jmp_buf might be
+    # a different size).
+    # ptrace(2) apparently has problems in the BSD environment.  No workaround is
+    # known except to select the sysv environment.  Could we use /proc instead?
+    # These "sysv environments" and "bsd environments" often end up being a pain.
+    #
+    # This is not part of CFLAGS because perhaps not all C compilers have this
+    # option.
+    tentative_cc="cc -systype sysv"
+    ;;
+  i370-ibm-opened*)
+    tentative_cc="c89"
+    ;;
+  i[3456789]86-*-sysv5*)
+    host_makefile_frag="config/mh-sysv5"
+    ;;
+  i[3456789]86-*-dgux*)
+    tentative_cc="gcc -Wall -ansi -D__using_DGUX"
+    host_makefile_frag="config/mh-dgux386"
+    ;;
+  i[3456789]86-ncr-sysv4.3*)
+    # The MetaWare compiler will generate a copyright message unless you
+    # turn it off by adding the -Hnocopyr flag.
+    tentative_cc="cc -Hnocopyr"
+    ;;
+  i[3456789]86-ncr-sysv4*)
+    # for an NCR 3000 (i486/SVR4) system.
+    # The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.
+    # This compiler not only emits obnoxious copyright messages every time
+    # you run it, but it chokes and dies on a whole bunch of GNU source
+    # files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.
+    tentative_cc="/usr/ccs/ATT/cc"
+    host_makefile_frag="config/mh-ncr3000"
+    ;;
+  i[3456789]86-*-sco3.2v5*)
+    ;;
+  i[3456789]86-*-sco*)
+    # The native C compiler botches some simple uses of const.  Unfortunately,
+    # it doesn't defined anything like "__sco__" for us to test for in ansidecl.h.
+    tentative_cc="cc -Dconst="
+    host_makefile_frag="config/mh-sco"
+    ;;
+  i[3456789]86-*-udk*)
+    host_makefile_frag="config/mh-sysv5"
+    ;;
+  i[3456789]86-*-solaris2*)
+    host_makefile_frag="config/mh-sysv4"
+    ;;
+  i[3456789]86-*-msdosdjgpp*)
+    host_makefile_frag="config/mh-djgpp"
+    ;;
+  *-cygwin*)
+    
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking to see if cat works as expected" >&5
+$as_echo_n "checking to see if cat works as expected... " >&6; }
+echo a >cygwin-cat-check
+if test `cat cygwin-cat-check` == a ; then
+  rm cygwin-cat-check
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  rm cygwin-cat-check
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+  as_fn_error "The cat command does not ignore carriage return characters.
+  Please either mount the build directory in binary mode or run the following
+  commands before running any configure script:
+set -o igncr
+export SHELLOPTS 
+  " "$LINENO" 5
+fi
+
+    host_makefile_frag="config/mh-cygwin"
+    ;;
+  *-mingw*)
+    host_makefile_frag="config/mh-mingw"
+    ;;
+  *-interix*)
+    host_makefile_frag="config/mh-interix"
+    ;;
+  vax-*-ultrix2*)
+    # The old BSD pcc isn't up to compiling parts of gdb so use gcc
+    tentative_cc=gcc
+    ;;
+  *-*-solaris2*)
+    host_makefile_frag="config/mh-solaris"
+    ;;
+  m68k-sun-sunos*)
+    # Sun's C compiler needs the -J flag to be able to compile cp-parse.c
+    # without overflowing the jump tables (-J says to use a 32 bit table)
+    tentative_cc="cc -J"
+    ;;
+  hppa*-hp-hpux10*)
+    tentative_cc="cc -Wp,-H256000"
+    host_makefile_frag="config/mh-pa-hpux10"
+    ;;
+  hppa*-hp-hpux* | hppa*-*-hiux*)
+    tentative_cc="cc -Wp,-H256000"
+    host_makefile_frag="config/mh-pa"
+    ;;
+  hppa*-*)	
+    host_makefile_frag="config/mh-pa"
+    ;;
+  *-hp-hpux* | *-*-hiux*)
+    tentative_cc="cc -Wp,-H256000"
+    ;;
+  rs6000-*-lynxos*)
+    # /bin/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/usr/cygnus/progressive/bin/gcc"
+    host_makefile_frag="config/mh-lynxrs6k"
+    ;;
+  powerpc-*-darwin*)
+    host_makefile_frag="config/mh-ppc-darwin"
+    ;;
+  powerpc-*-aix*)
+    host_makefile_frag="config/mh-ppc-aix"
+    ;;
+  rs6000-*-aix*)
+    host_makefile_frag="config/mh-ppc-aix"
+    ;;
+  *-*-lynxos*)
+    # /bin/cc is less than useful for our purposes.  Always use GCC
+    tentative_cc="/bin/gcc"
+    ;;
+  *-*-sysv4*)
+    host_makefile_frag="config/mh-sysv4"
+    ;;
+  # This is placed last to prevent interfering with the cases above.
+  i[3456789]86-*-*)
+    # Build the stage2 and stage3 compilers with -fomit-frame-pointer.
+    host_makefile_frag="config/mh-x86omitfp"
+    ;;
+esac
+fi
+
+# If we aren't going to be using gcc, see if we can extract a definition
+# of CC from the fragment.
+# Actually, use the 'pre-extracted' version above.
+if test -z "${CC}" && test "${build}" = "${host}" ; then
+  IFS="${IFS= 	}"; save_ifs="$IFS"; IFS="${IFS}:"
+  found=
+  for dir in $PATH; do
+    test -z "$dir" && dir=.
+    if test -f $dir/gcc; then
+      found=yes
+      break
+    fi
+  done
+  IFS="$save_ifs"
+  if test -z "${found}" && test -n "${tentative_cc}" ; then
+    CC=$tentative_cc
+  fi
+fi
+
+if test "${build}" != "${host}" ; then
+  AR_FOR_BUILD=${AR_FOR_BUILD-ar}
+  AS_FOR_BUILD=${AS_FOR_BUILD-as}
+  CC_FOR_BUILD=${CC_FOR_BUILD-gcc}
+  CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}
+  GCJ_FOR_BUILD=${GCJ_FOR_BUILD-gcj}
+  GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}
+  DLLTOOL_FOR_BUILD=${DLLTOOL_FOR_BUILD-dlltool}
+  LD_FOR_BUILD=${LD_FOR_BUILD-ld}
+  NM_FOR_BUILD=${NM_FOR_BUILD-nm}
+  RANLIB_FOR_BUILD=${RANLIB_FOR_BUILD-ranlib}
+  WINDRES_FOR_BUILD=${WINDRES_FOR_BUILD-windres}
+  WINDMC_FOR_BUILD=${WINDMC_FOR_BUILD-windmc}
+else
+  AR_FOR_BUILD="\$(AR)"
+  AS_FOR_BUILD="\$(AS)"
+  CC_FOR_BUILD="\$(CC)"
+  CXX_FOR_BUILD="\$(CXX)"
+  GCJ_FOR_BUILD="\$(GCJ)"
+  GFORTRAN_FOR_BUILD="\$(GFORTRAN)"
+  DLLTOOL_FOR_BUILD="\$(DLLTOOL)"
+  LD_FOR_BUILD="\$(LD)"
+  NM_FOR_BUILD="\$(NM)"
+  RANLIB_FOR_BUILD="\$(RANLIB)"
+  WINDRES_FOR_BUILD="\$(WINDRES)"
+  WINDMC_FOR_BUILD="\$(WINDMC)"
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $@%:@ != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "no acceptable C compiler found in \$PATH
+See \`config.log' for more details." "$LINENO" 5; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out conftest.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
+$as_echo_n "checking for C compiler default output file name... " >&6; }
+ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+
+# The possible output files:
+ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"
+
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { { ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link_default") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
+	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
+	break;;
+    * )
+	break;;
+  esac
+done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
+else
+  ac_file=''
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
+$as_echo "$ac_file" >&6; }
+if test -z "$ac_file"; then :
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "C compiler cannot create executables
+See \`config.log' for more details." "$LINENO" 5; }; }
+fi
+ac_exeext=$ac_cv_exeext
+
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
+$as_echo_n "checking whether the C compiler works... " >&6; }
+# If not cross compiling, check that we can run a simple program.
+if test "$cross_compiling" != yes; then
+  if { ac_try='./$ac_file'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." "$LINENO" 5; }
+    fi
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out conftest.out
+ac_clean_files=$ac_clean_files_save
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
+$as_echo_n "checking whether we are cross compiling... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
+$as_echo "$cross_compiling" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
+$as_echo_n "checking for suffix of executables... " >&6; }
+if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest$ac_cv_exeext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
+$as_echo "$ac_cv_exeext" >&6; }
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
+$as_echo_n "checking for suffix of object files... " >&6; }
+if test "${ac_cv_objext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
+$as_echo "$ac_cv_objext" >&6; }
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+  
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+ac_ext=cpp
+ac_cpp='$CXXCPP $CPPFLAGS'
+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
+if test -z "$CXX"; then
+  if test -n "$CCC"; then
+    CXX=$CCC
+  else
+    if test -n "$ac_tool_prefix"; then
+  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CXX+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CXX"; then
+  ac_cv_prog_CXX="$CXX" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CXX="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CXX=$ac_cv_prog_CXX
+if test -n "$CXX"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXX" >&5
+$as_echo "$CXX" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CXX" && break
+  done
+fi
+if test -z "$CXX"; then
+  ac_ct_CXX=$CXX
+  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CXX+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CXX"; then
+  ac_cv_prog_ac_ct_CXX="$ac_ct_CXX" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CXX="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CXX=$ac_cv_prog_ac_ct_CXX
+if test -n "$ac_ct_CXX"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX" >&5
+$as_echo "$ac_ct_CXX" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CXX" && break
+done
+
+  if test "x$ac_ct_CXX" = x; then
+    CXX="g++"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CXX=$ac_ct_CXX
+  fi
+fi
+
+  fi
+fi
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C++ compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C++ compiler" >&5
+$as_echo_n "checking whether we are using the GNU C++ compiler... " >&6; }
+if test "${ac_cv_cxx_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_cxx_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_cxx_compiler_gnu" >&5
+$as_echo "$ac_cv_cxx_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GXX=yes
+else
+  GXX=
+fi
+ac_test_CXXFLAGS=${CXXFLAGS+set}
+ac_save_CXXFLAGS=$CXXFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CXX accepts -g" >&5
+$as_echo_n "checking whether $CXX accepts -g... " >&6; }
+if test "${ac_cv_prog_cxx_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_cxx_werror_flag=$ac_cxx_werror_flag
+   ac_cxx_werror_flag=yes
+   ac_cv_prog_cxx_g=no
+   CXXFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+  ac_cv_prog_cxx_g=yes
+else
+  CXXFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+  
+else
+  ac_cxx_werror_flag=$ac_save_cxx_werror_flag
+	 CXXFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+  ac_cv_prog_cxx_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_cxx_werror_flag=$ac_save_cxx_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_g" >&5
+$as_echo "$ac_cv_prog_cxx_g" >&6; }
+if test "$ac_test_CXXFLAGS" = set; then
+  CXXFLAGS=$ac_save_CXXFLAGS
+elif test $ac_cv_prog_cxx_g = yes; then
+  if test "$GXX" = yes; then
+    CXXFLAGS="-g -O2"
+  else
+    CXXFLAGS="-g"
+  fi
+else
+  if test "$GXX" = yes; then
+    CXXFLAGS="-O2"
+  else
+    CXXFLAGS=
+  fi
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+# We must set the default linker to the linker used by gcc for the correct
+# operation of libtool.  If LD is not defined and we are using gcc, try to
+# set the LD default to the ld used by gcc.
+if test -z "$LD"; then
+  if test "$GCC" = yes; then
+    case $build in
+    *-*-mingw*)
+      gcc_prog_ld=`$CC -print-prog-name=ld 2>&1 | tr -d '\015'` ;;
+    *)
+      gcc_prog_ld=`$CC -print-prog-name=ld 2>&1` ;;
+    esac
+    case $gcc_prog_ld in
+    # Accept absolute paths.
+    [\\/]* | [A-Za-z]:[\\/]*)
+      LD="$gcc_prog_ld" ;;
+    esac
+  fi
+fi
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gnatbind", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gnatbind; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GNATBIND+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GNATBIND"; then
+  ac_cv_prog_GNATBIND="$GNATBIND" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GNATBIND="${ac_tool_prefix}gnatbind"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GNATBIND=$ac_cv_prog_GNATBIND
+if test -n "$GNATBIND"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GNATBIND" >&5
+$as_echo "$GNATBIND" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_GNATBIND"; then
+  ac_ct_GNATBIND=$GNATBIND
+  # Extract the first word of "gnatbind", so it can be a program name with args.
+set dummy gnatbind; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_GNATBIND+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_GNATBIND"; then
+  ac_cv_prog_ac_ct_GNATBIND="$ac_ct_GNATBIND" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_GNATBIND="gnatbind"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_GNATBIND=$ac_cv_prog_ac_ct_GNATBIND
+if test -n "$ac_ct_GNATBIND"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_GNATBIND" >&5
+$as_echo "$ac_ct_GNATBIND" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_GNATBIND" = x; then
+    GNATBIND="no"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    GNATBIND=$ac_ct_GNATBIND
+  fi
+else
+  GNATBIND="$ac_cv_prog_GNATBIND"
+fi
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gnatmake", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gnatmake; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GNATMAKE+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GNATMAKE"; then
+  ac_cv_prog_GNATMAKE="$GNATMAKE" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GNATMAKE="${ac_tool_prefix}gnatmake"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GNATMAKE=$ac_cv_prog_GNATMAKE
+if test -n "$GNATMAKE"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GNATMAKE" >&5
+$as_echo "$GNATMAKE" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_GNATMAKE"; then
+  ac_ct_GNATMAKE=$GNATMAKE
+  # Extract the first word of "gnatmake", so it can be a program name with args.
+set dummy gnatmake; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_GNATMAKE+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_GNATMAKE"; then
+  ac_cv_prog_ac_ct_GNATMAKE="$ac_ct_GNATMAKE" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_GNATMAKE="gnatmake"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_GNATMAKE=$ac_cv_prog_ac_ct_GNATMAKE
+if test -n "$ac_ct_GNATMAKE"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_GNATMAKE" >&5
+$as_echo "$ac_ct_GNATMAKE" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_GNATMAKE" = x; then
+    GNATMAKE="no"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    GNATMAKE=$ac_ct_GNATMAKE
+  fi
+else
+  GNATMAKE="$ac_cv_prog_GNATMAKE"
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether compiler driver understands Ada" >&5
+$as_echo_n "checking whether compiler driver understands Ada... " >&6; }
+if test "${acx_cv_cc_gcc_supports_ada+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat >conftest.adb <<EOF
+procedure conftest is begin null; end conftest;
+EOF
+acx_cv_cc_gcc_supports_ada=no
+# There is a bug in old released versions of GCC which causes the
+# driver to exit successfully when the appropriate language module
+# has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.
+# Therefore we must check for the error message as well as an
+# unsuccessful exit.
+# Other compilers, like HP Tru64 UNIX cc, exit successfully when
+# given a .adb file, but produce no object file.  So we must check
+# if an object file was really produced to guard against this.
+errors=`(${CC} -c conftest.adb) 2>&1 || echo failure`
+if test x"$errors" = x && test -f conftest.$ac_objext; then
+  acx_cv_cc_gcc_supports_ada=yes
+fi
+rm -f conftest.*
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_cc_gcc_supports_ada" >&5
+$as_echo "$acx_cv_cc_gcc_supports_ada" >&6; }
+
+if test x$GNATBIND != xno && test x$GNATMAKE != xno && test x$acx_cv_cc_gcc_supports_ada != xno; then
+  have_gnat=yes
+else
+  have_gnat=no
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to compare bootstrapped objects" >&5
+$as_echo_n "checking how to compare bootstrapped objects... " >&6; }
+if test "${gcc_cv_prog_cmp_skip+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+   echo abfoo >t1
+  echo cdfoo >t2
+  gcc_cv_prog_cmp_skip='tail +16c $$f1 > tmp-foo1; tail +16c $$f2 > tmp-foo2; cmp tmp-foo1 tmp-foo2'
+  if cmp t1 t2 2 2 > /dev/null 2>&1; then
+    if cmp t1 t2 1 1 > /dev/null 2>&1; then
+      :
+    else
+      gcc_cv_prog_cmp_skip='cmp $$f1 $$f2 16 16'
+    fi
+  fi
+  if cmp --ignore-initial=2 t1 t2 > /dev/null 2>&1; then
+    if cmp --ignore-initial=1 t1 t2 > /dev/null 2>&1; then
+      :
+    else
+      gcc_cv_prog_cmp_skip='cmp --ignore-initial=16 $$f1 $$f2'
+    fi
+  fi
+  rm t1 t2
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gcc_cv_prog_cmp_skip" >&5
+$as_echo "$gcc_cv_prog_cmp_skip" >&6; }
+do_compare="$gcc_cv_prog_cmp_skip"
+
+
+
+# See if we are building gcc with C++.
+@%:@ Check whether --enable-build-with-cxx was given.
+if test "${enable_build_with_cxx+set}" = set; then :
+  enableval=$enable_build_with_cxx; ENABLE_BUILD_WITH_CXX=$enableval
+else
+  ENABLE_BUILD_WITH_CXX=no
+fi
+
+
+# Check for GMP, MPFR and MPC
+gmplibs="-lmpfr -lgmp"
+gmpinc=
+have_gmp=no
+mpclibs=-lmpc
+mpcinc=
+have_mpc=no
+
+# Specify a location for mpc
+# check for this first so it ends up on the link line before mpfr.
+
+@%:@ Check whether --with-mpc was given.
+if test "${with_mpc+set}" = set; then :
+  withval=$with_mpc; 
+fi
+
+
+@%:@ Check whether --with-mpc_include was given.
+if test "${with_mpc_include+set}" = set; then :
+  withval=$with_mpc_include; 
+fi
+
+
+@%:@ Check whether --with-mpc_lib was given.
+if test "${with_mpc_lib+set}" = set; then :
+  withval=$with_mpc_lib; 
+fi
+
+
+if test "x$with_mpc" != x; then
+  mpclibs="-L$with_mpc/lib -lmpc"
+  mpcinc="-I$with_mpc/include $mpcinc"
+fi
+if test "x$with_mpc_include" != x; then
+  mpcinc="-I$with_mpc_include $mpcinc"
+fi
+if test "x$with_mpc_lib" != x; then
+  mpclibs="-L$with_mpc_lib -lmpc"
+fi
+if test "x$with_mpc$with_mpc_include$with_mpc_lib" = x && test -d ${srcdir}/mpc; then
+  mpclibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs -lmpc'
+  mpcinc='-I$$s/mpc/src '"$mpcinc"
+  # Do not test the mpc version.  Assume that it is sufficient, since
+  # it is in the source tree, and the library has not been built yet
+  # but it would be included on the link line in the version check below
+  # hence making the test fail.
+  have_mpc=yes
+fi
+
+# Specify a location for mpfr
+# check for this first so it ends up on the link line before gmp.
+
+@%:@ Check whether --with-mpfr-dir was given.
+if test "${with_mpfr_dir+set}" = set; then :
+  withval=$with_mpfr_dir; as_fn_error "The --with-mpfr-dir=PATH option has been removed.
+Use --with-mpfr=PATH or --with-mpfr-include=PATH plus --with-mpfr-lib=PATH" "$LINENO" 5
+fi
+
+
+
+@%:@ Check whether --with-mpfr was given.
+if test "${with_mpfr+set}" = set; then :
+  withval=$with_mpfr; 
+fi
+
+
+@%:@ Check whether --with-mpfr_include was given.
+if test "${with_mpfr_include+set}" = set; then :
+  withval=$with_mpfr_include; 
+fi
+
+
+@%:@ Check whether --with-mpfr_lib was given.
+if test "${with_mpfr_lib+set}" = set; then :
+  withval=$with_mpfr_lib; 
+fi
+
+
+if test "x$with_mpfr" != x; then
+  gmplibs="-L$with_mpfr/lib $gmplibs"
+  gmpinc="-I$with_mpfr/include"
+fi
+if test "x$with_mpfr_include" != x; then
+  gmpinc="-I$with_mpfr_include"
+fi
+if test "x$with_mpfr_lib" != x; then
+  gmplibs="-L$with_mpfr_lib $gmplibs"
+fi
+if test "x$with_mpfr$with_mpfr_include$with_mpfr_lib" = x && test -d ${srcdir}/mpfr; then
+  gmplibs='-L$$r/$(HOST_SUBDIR)/mpfr/.libs -L$$r/$(HOST_SUBDIR)/mpfr/_libs '"$gmplibs"
+  gmpinc='-I$$r/$(HOST_SUBDIR)/mpfr -I$$s/mpfr '"$gmpinc"
+  extra_mpc_mpfr_configure_flags='--with-mpfr-include=$$s/mpfr'
+  # Do not test the mpfr version.  Assume that it is sufficient, since
+  # it is in the source tree, and the library has not been built yet
+  # but it would be included on the link line in the version check below
+  # hence making the test fail.
+  have_gmp=yes
+fi
+
+# Specify a location for gmp
+
+@%:@ Check whether --with-gmp-dir was given.
+if test "${with_gmp_dir+set}" = set; then :
+  withval=$with_gmp_dir; as_fn_error "The --with-gmp-dir=PATH option has been removed.
+Use --with-gmp=PATH or --with-gmp-include=PATH plus --with-gmp-lib=PATH" "$LINENO" 5
+fi
+
+
+
+@%:@ Check whether --with-gmp was given.
+if test "${with_gmp+set}" = set; then :
+  withval=$with_gmp; 
+fi
+
+
+@%:@ Check whether --with-gmp_include was given.
+if test "${with_gmp_include+set}" = set; then :
+  withval=$with_gmp_include; 
+fi
+
+
+@%:@ Check whether --with-gmp_lib was given.
+if test "${with_gmp_lib+set}" = set; then :
+  withval=$with_gmp_lib; 
+fi
+
+
+
+if test "x$with_gmp" != x; then
+  gmplibs="-L$with_gmp/lib $gmplibs"
+  gmpinc="-I$with_gmp/include $gmpinc"
+fi
+if test "x$with_gmp_include" != x; then
+  gmpinc="-I$with_gmp_include $gmpinc"
+fi
+if test "x$with_gmp_lib" != x; then
+  gmplibs="-L$with_gmp_lib $gmplibs"
+fi
+if test "x$with_gmp$with_gmp_include$with_gmp_lib" = x && test -d ${srcdir}/gmp; then
+  gmplibs='-L$$r/$(HOST_SUBDIR)/gmp/.libs -L$$r/$(HOST_SUBDIR)/gmp/_libs '"$gmplibs"
+  gmpinc='-I$$r/$(HOST_SUBDIR)/gmp -I$$s/gmp '"$gmpinc"
+  extra_mpfr_configure_flags='--with-gmp-build=$$r/$(HOST_SUBDIR)/gmp'
+  extra_mpc_gmp_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp'
+  # Do not test the gmp version.  Assume that it is sufficient, since
+  # it is in the source tree, and the library has not been built yet
+  # but it would be included on the link line in the version check below
+  # hence making the test fail.
+  have_gmp=yes
+fi
+
+if test -d ${srcdir}/gcc && test "x$have_gmp" = xno; then
+  have_gmp=yes
+  saved_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS $gmpinc"
+  # Check GMP actually works
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for correct version of gmp.h" >&5
+$as_echo_n "checking for correct version of gmp.h... " >&6; }
+  
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include "gmp.h"
+int
+main ()
+{
+
+  #if __GNU_MP_VERSION < 4 || (__GNU_MP_VERSION == 4 && __GNU_MP_VERSION_MINOR < 2)
+  choke me
+  #endif
+  
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; have_gmp=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+  # If we have GMP, check the MPFR version.
+  if test x"$have_gmp" = xyes; then
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for correct version of mpfr.h" >&5
+$as_echo_n "checking for correct version of mpfr.h... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <gmp.h>
+    #include <mpfr.h>
+int
+main ()
+{
+
+    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,1)
+    choke me
+    #endif
+    
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <gmp.h>
+    #include <mpfr.h>
+int
+main ()
+{
+
+    #if MPFR_VERSION < MPFR_VERSION_NUM(2,3,2)
+    choke me
+    #endif
+    
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: buggy but acceptable" >&5
+$as_echo "buggy but acceptable" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; have_gmp=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  fi
+
+  # Check for the MPC header version.
+  if test x"$have_mpc" != xyes ; then
+    CFLAGS="$CFLAGS $mpcinc"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h" >&5
+$as_echo_n "checking for the correct version of mpc.h... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <mpc.h>
+int
+main ()
+{
+
+    #if MPC_VERSION < MPC_VERSION_NUM (0,6,0)
+    choke me
+    #endif
+    
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }; have_mpc=maybe
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; have_mpc=no; mpclibs= ; mpcinc= 
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  fi
+
+  # Now check the MPFR library.
+  if test x"$have_gmp" = xyes; then
+    saved_LIBS="$LIBS"
+    LIBS="$LIBS $gmplibs"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr libraries" >&5
+$as_echo_n "checking for the correct version of the gmp/mpfr libraries... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <gmp.h>
+    #include <mpfr.h>
+int
+main ()
+{
+
+    mpfr_t n;
+    mpfr_t x;
+    int t;
+    mpfr_init (n);
+    mpfr_init (x);
+    mpfr_atan2 (n, n, x, GMP_RNDN);
+    mpfr_erfc (n, x, GMP_RNDN);
+    mpfr_subnormalize (x, t, GMP_RNDN);
+    
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; have_gmp=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    LIBS="$saved_LIBS"
+  fi
+
+  if test x"$have_mpc" = xmaybe; then
+    saved_LIBS="$LIBS"
+    LIBS="$LIBS $mpclibs $gmplibs"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for the correct version of the mpc library" >&5
+$as_echo_n "checking for the correct version of the mpc library... " >&6; }
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <mpc.h>
+int
+main ()
+{
+
+    mpc_t n;
+    mpc_init2 (n, 53);
+    mpc_set_ui_ui (n, 1, 1, MPC_RNDNN);
+    mpc_sin (n, n, MPC_RNDNN);
+    mpc_cos (n, n, MPC_RNDNN);
+    mpc_tan (n, n, MPC_RNDNN);
+    mpc_sinh (n, n, MPC_RNDNN);
+    mpc_cosh (n, n, MPC_RNDNN);
+    mpc_tanh (n, n, MPC_RNDNN);
+    mpc_exp (n, n, MPC_RNDNN);
+    mpc_log (n, n, MPC_RNDNN);
+    mpc_sqrt (n, n, MPC_RNDNN);
+    mpc_proj (n, n, MPC_RNDNN);
+    mpc_neg (n, n, MPC_RNDNN);
+    mpc_sqr (n, n, MPC_RNDNN);
+    mpc_clear (n);
+    
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }; have_mpc=yes
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; have_mpc=no; mpclibs= ; mpcinc= 
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    LIBS="$saved_LIBS"
+  fi
+
+  CFLAGS="$saved_CFLAGS"
+
+  if test x$have_gmp != xyes; then
+    as_fn_error "Building GCC requires GMP 4.2+ and MPFR 2.3.2+.
+Try the --with-gmp and/or --with-mpfr options to specify their locations.
+Copies of these libraries' source code can be found at their respective
+hosting sites as well as at ftp://gcc.gnu.org/pub/gcc/infrastructure/.
+See also http://gcc.gnu.org/install/prerequisites.html for additional info.
+If you obtained GMP and/or MPFR from a vendor distribution package, make
+sure that you have installed both the libraries and the header files.
+They may be located in separate packages." "$LINENO" 5
+  fi
+fi
+
+if test x$have_mpc != xyes ; then
+  mpcinc=
+  mpclibs=
+fi
+
+gmpinc="$mpcinc $gmpinc"
+gmplibs="$mpclibs $gmplibs"
+
+# Flags needed for both GMP, MPFR and/or MPC.
+
+
+
+
+
+
+# Allow host libstdc++ to be specified for static linking with PPL.
+
+@%:@ Check whether --with-host-libstdcxx was given.
+if test "${with_host_libstdcxx+set}" = set; then :
+  withval=$with_host_libstdcxx; 
+fi
+
+
+case $with_host_libstdcxx in
+  no|yes)
+    as_fn_error "-with-host-libstdcxx needs an argument" "$LINENO" 5
+    ;;
+esac
+
+# Linker flags to use for stage1 or when not boostrapping.
+
+@%:@ Check whether --with-stage1-ldflags was given.
+if test "${with_stage1_ldflags+set}" = set; then :
+  withval=$with_stage1_ldflags; if test "$withval" = "no" -o "$withval" = "yes"; then
+   stage1_ldflags=
+ else
+   stage1_ldflags=$withval
+ fi
+else
+  stage1_ldflags=
+fi
+
+
+
+# Libraries to use for stage1 or when not bootstrapping.
+
+@%:@ Check whether --with-stage1-libs was given.
+if test "${with_stage1_libs+set}" = set; then :
+  withval=$with_stage1_libs; if test "$withval" = "no" -o "$withval" = "yes"; then
+   stage1_libs=
+ else
+   stage1_libs=$withval
+ fi
+else
+  stage1_libs=$with_host_libstdcxx
+fi
+
+
+
+# Linker flags to use for stage2 and later builds.
+
+@%:@ Check whether --with-boot-ldflags was given.
+if test "${with_boot_ldflags+set}" = set; then :
+  withval=$with_boot_ldflags; if test "$withval" = "no" -o "$withval" = "yes"; then
+   poststage1_ldflags=
+ else
+   poststage1_ldflags=$withval
+ fi
+else
+  if test "$ENABLE_BUILD_WITH_CXX" = "yes"; then
+   poststage1_ldflags=-static-libstdc++
+ else
+   poststage1_ldflags=
+ fi
+fi
+
+
+
+# Libraries to use for stage2 and later builds.  This defaults to the
+# argument passed to --with-host-libstdcxx.
+
+@%:@ Check whether --with-boot-libs was given.
+if test "${with_boot_libs+set}" = set; then :
+  withval=$with_boot_libs; if test "$withval" = "no" -o "$withval" = "yes"; then
+   poststage1_libs=
+ else
+   poststage1_libs=$withval
+ fi
+else
+  poststage1_libs=$with_host_libstdcxx
+fi
+
+
+
+# Check for PPL
+ppl_major_version=0
+ppl_minor_version=10
+ppllibs=" -lppl_c -lppl -lgmpxx"
+pplinc=
+
+
+@%:@ Check whether --with-ppl was given.
+if test "${with_ppl+set}" = set; then :
+  withval=$with_ppl; 
+else
+  with_ppl=no
+fi
+
+
+@%:@ Check whether --with-ppl_include was given.
+if test "${with_ppl_include+set}" = set; then :
+  withval=$with_ppl_include; 
+fi
+
+
+@%:@ Check whether --with-ppl_lib was given.
+if test "${with_ppl_lib+set}" = set; then :
+  withval=$with_ppl_lib; 
+fi
+
+
+case $with_ppl in 
+  no)
+    ppllibs=
+    ;;
+  *)
+    ppllibs="-L$with_ppl/lib -lppl_c -lppl -lgmpxx"
+    pplinc="-I$with_ppl/include $pplinc"
+    LIBS="$ppllibs $LIBS"
+    ;;
+esac
+if test "x$with_ppl_include" != x; then
+  pplinc="-I$with_ppl_include $pplinc"
+fi
+if test "x$with_ppl_lib" != x; then
+  ppllibs="-L$with_ppl_lib -lppl_c -lppl -lgmpxx"
+  LIBS="$ppllibs $LIBS"
+fi
+if test "x$with_ppl$with_ppl_include$with_ppl_lib" = x && test -d ${srcdir}/ppl; then
+  ppllibs='-L$$r/$(HOST_SUBDIR)/ppl/.libs -L$$r/$(HOST_SUBDIR)/ppl/_libs -lppl_c -lppl -lgmpxx '
+  pplinc='-I$$r/$(HOST_SUBDIR)/ppl/include -I$$s/ppl/include '
+  LIBS="$ppllibs $LIBS"
+fi
+
+@%:@ Check whether --enable-ppl-version-check was given.
+if test "${enable_ppl_version_check+set}" = set; then :
+  enableval=$enable_ppl_version_check; ENABLE_PPL_CHECK=$enableval
+else
+  ENABLE_PPL_CHECK=yes
+fi
+
+
+if test "${ENABLE_PPL_CHECK}" = "yes"; then
+  saved_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS $pplinc $gmpinc"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for version $ppl_major_version.$ppl_minor_version of PPL" >&5
+$as_echo_n "checking for version $ppl_major_version.$ppl_minor_version of PPL... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include "ppl_c.h"
+int
+main ()
+{
+
+  #if PPL_VERSION_MAJOR != $ppl_major_version || PPL_VERSION_MINOR != $ppl_minor_version
+  choke me
+  #endif
+  
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; ppllibs= ; pplinc= 
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$saved_CFLAGS"
+fi
+
+# Flags needed for PPL
+
+
+
+
+# Check for CLOOG
+clooglibs=" -lcloog "
+clooginc=" -DCLOOG_PPL_BACKEND "
+
+
+@%:@ Check whether --with-cloog was given.
+if test "${with_cloog+set}" = set; then :
+  withval=$with_cloog; 
+else
+  with_cloog=no
+fi
+
+
+@%:@ Check whether --with-cloog_include was given.
+if test "${with_cloog_include+set}" = set; then :
+  withval=$with_cloog_include; 
+fi
+
+
+@%:@ Check whether --with-cloog_lib was given.
+if test "${with_cloog_lib+set}" = set; then :
+  withval=$with_cloog_lib; 
+fi
+
+
+case $with_cloog in 
+  no)
+    clooglibs=
+    clooginc=
+    ;;
+  *)
+    clooglibs="-L$with_cloog/lib -lcloog"
+    clooginc="-I$with_cloog/include -DCLOOG_PPL_BACKEND "
+    LIBS="$clooglibs $LIBS"
+    ;;
+esac
+if test "x$with_cloog_include" != x; then
+  clooginc="-I$with_cloog_include -DCLOOG_PPL_BACKEND "
+fi
+if test "x$with_cloog_lib" != x; then
+  clooglibs="-L$with_cloog_lib -lcloog"
+  LIBS="$clooglibs $LIBS"
+fi
+if test "x$with_cloog$with_cloog_include$with_cloog_lib" = x && test -d ${srcdir}/cloog; then
+  clooglibs='-L$$r/$(HOST_SUBDIR)/cloog/.libs -L$$r/$(HOST_SUBDIR)/cloog/_libs -lcloog '
+  clooginc='-I$$r/$(HOST_SUBDIR)/cloog/include -I$$s/cloog/include -DCLOOG_PPL_BACKEND '
+  LIBS="$clooglibs $LIBS"
+fi
+
+@%:@ Check whether --enable-cloog-version-check was given.
+if test "${enable_cloog_version_check+set}" = set; then :
+  enableval=$enable_cloog_version_check; ENABLE_CLOOG_CHECK=$enableval
+else
+  ENABLE_CLOOG_CHECK=yes
+fi
+
+
+if test "${ENABLE_CLOOG_CHECK}" = "yes"; then
+  saved_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS $clooginc $gmpinc $pplinc"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for correct version of CLooG" >&5
+$as_echo_n "checking for correct version of CLooG... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include "cloog/cloog.h"
+int
+main ()
+{
+
+  #if CLOOG_VERSION_MAJOR != 0 || CLOOG_VERSION_MINOR != 15
+  choke me
+  #endif
+  
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; clooglibs= ; clooginc= 
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$saved_CFLAGS"
+fi
+
+# Flags needed for CLOOG
+
+
+
+
+# By default, C is the only stage 1 language.
+stage1_languages=,c,
+
+# Target libraries that we bootstrap.
+bootstrap_target_libs=,target-libgcc,
+
+# Figure out what language subdirectories are present.
+# Look if the user specified --enable-languages="..."; if not, use
+# the environment variable $LANGUAGES if defined. $LANGUAGES might
+# go away some day.
+# NB:  embedded tabs in this IF block -- do not untabify
+if test -d ${srcdir}/gcc; then
+  if test x"${enable_languages+set}" != xset; then
+    if test x"${LANGUAGES+set}" = xset; then
+      enable_languages="${LANGUAGES}"
+        echo configure.in: warning: setting LANGUAGES is deprecated, use --enable-languages instead 1>&2
+    else
+      enable_languages=all
+    fi
+  else
+    if test x"${enable_languages}" = x ||
+       test x"${enable_languages}" = xyes;
+       then
+      echo configure.in: --enable-languages needs at least one language argument 1>&2
+      exit 1
+    fi
+  fi
+  enable_languages=`echo "${enable_languages}" | sed -e 's/[ 	,][ 	,]*/,/g' -e 's/,$//'`
+
+  # 'f95' is the old name for the 'fortran' language. We issue a warning
+  # and make the substitution.
+  case ,${enable_languages}, in
+    *,f95,*)
+      echo configure.in: warning: 'f95' as language name is deprecated, use 'fortran' instead 1>&2
+      enable_languages=`echo "${enable_languages}" | sed -e 's/f95/fortran/g'`
+      ;;
+  esac
+
+  # First scan to see if an enabled language requires some other language.
+  # We assume that a given config-lang.in will list all the language
+  # front ends it requires, even if some are required indirectly.
+  for lang_frag in ${srcdir}/gcc/*/config-lang.in .. ; do
+    case ${lang_frag} in
+      ..) ;;
+      # The odd quoting in the next line works around
+      # an apparent bug in bash 1.12 on linux.
+      ${srcdir}/gcc/[*]/config-lang.in) ;;
+      *)
+        # From the config-lang.in, get $language, $lang_requires
+        language=
+        lang_requires=
+        . ${lang_frag}
+        for other in ${lang_requires} ; do
+          case ,${enable_languages}, in
+	    *,$other,*) ;;
+	    *,all,*) ;;
+	    *,$language,*)
+	      echo " \`$other' language required by \`$language'; enabling" 1>&2
+	      enable_languages="${enable_languages},${other}"
+	      ;;
+	  esac
+        done
+        ;;
+    esac
+  done
+
+  new_enable_languages=,c,
+  missing_languages=`echo ",$enable_languages," | sed -e s/,all,/,/ -e s/,c,/,/ `
+  potential_languages=,c,
+
+  for lang_frag in ${srcdir}/gcc/*/config-lang.in .. ; do
+    case ${lang_frag} in
+      ..) ;;
+      # The odd quoting in the next line works around
+      # an apparent bug in bash 1.12 on linux.
+      ${srcdir}/gcc/[*]/config-lang.in) ;;
+      *)
+        # From the config-lang.in, get $language, $target_libs, 
+        # $lang_dirs, $boot_language, and $build_by_default
+        language=
+        target_libs=
+        lang_dirs=
+        subdir_requires=
+        boot_language=no
+        build_by_default=yes
+        . ${lang_frag}
+        if test x${language} = x; then
+          echo "${lang_frag} doesn't set \$language." 1>&2
+          exit 1
+        fi
+
+	if test "$language" = "c++" -a "$ENABLE_BUILD_WITH_CXX" = "yes"; then
+	  boot_language=yes
+	fi
+
+        case ,${enable_languages}, in
+          *,${language},*)
+            # Language was explicitly selected; include it.
+            add_this_lang=yes
+            ;;
+          *,all,*)
+            # 'all' was selected, select it if it is a default language
+            add_this_lang=${build_by_default}
+            ;;
+          *)
+            add_this_lang=no
+            ;;
+        esac
+
+        # Disable languages that need other directories if these aren't available.
+	for i in $subdir_requires; do
+	  test -f "$srcdir/gcc/$i/config-lang.in" && continue
+	  case ,${enable_languages}, in
+            *,${language},*)
+              # Specifically requested language; tell them.
+              as_fn_error "The gcc/$i directory contains parts of $language but is missing" "$LINENO" 5
+              ;;
+            *)
+              # Silently disable.
+              add_this_lang=unsupported
+              ;;
+          esac
+	done
+
+        # Disable Ada if no preexisting GNAT is available.
+        case ,${enable_languages},:${language}:${have_gnat} in
+          *,${language},*:ada:no)
+            # Specifically requested language; tell them.
+            as_fn_error "GNAT is required to build $language" "$LINENO" 5
+            ;;
+          *:ada:no)
+            # Silently disable.
+            add_this_lang=unsupported
+            ;;
+        esac
+
+	# Disable a language that is unsupported by the target.
+	case " $unsupported_languages " in
+	  *" $language "*)
+	    add_this_lang=unsupported
+	    ;;
+	esac
+
+	case $add_this_lang in
+	  unsupported)
+            # Remove language-dependent dirs.
+            eval noconfigdirs='"$noconfigdirs "'\"$target_libs $lang_dirs\"
+	    ;;
+	  no)
+            # Remove language-dependent dirs; still show language as supported.
+            eval noconfigdirs='"$noconfigdirs "'\"$target_libs $lang_dirs\"
+            potential_languages="${potential_languages}${language},"
+	    ;;
+          yes)
+	    new_enable_languages="${new_enable_languages}${language},"
+            potential_languages="${potential_languages}${language},"
+	    missing_languages=`echo "$missing_languages" | sed "s/,$language,/,/"`
+	    case ${boot_language} in
+	      yes)
+		# Add to (comma-separated) list of stage 1 languages.
+		stage1_languages="${stage1_languages}${language},"
+		# We need to bootstrap any supporting libraries.
+		bootstrap_target_libs="${bootstrap_target_libs}${target_libs},"
+		;;
+	    esac
+	    ;;
+        esac
+        ;;
+    esac
+  done
+
+  @%:@ Check whether --enable-stage1-languages was given.
+if test "${enable_stage1_languages+set}" = set; then :
+  enableval=$enable_stage1_languages; case ,${enable_stage1_languages}, in
+    ,no,|,,)
+      # Set it to something that will have no effect in the loop below
+      enable_stage1_languages=c ;;
+    ,yes,)
+      enable_stage1_languages=`echo $new_enable_languages | \
+	sed -e "s/^,//" -e "s/,$//" ` ;;
+    *,all,*)
+      enable_stage1_languages=`echo ,$enable_stage1_languages, | \
+	sed -e "s/,all,/$new_enable_languages/" -e "s/^,//" -e "s/,$//" ` ;;
+  esac
+
+  # Add "good" languages from enable_stage1_languages to stage1_languages,
+  # while "bad" languages go in missing_languages.  Leave no duplicates.
+  for i in `echo $enable_stage1_languages | sed 's/,/ /g' `; do
+    case $potential_languages in
+      *,$i,*)
+        case $stage1_languages in
+          *,$i,*) ;;
+          *) stage1_languages="$stage1_languages$i," ;;
+        esac ;;
+      *)
+        case $missing_languages in
+          *,$i,*) ;;
+          *) missing_languages="$missing_languages$i," ;;
+        esac ;;
+     esac
+  done
+fi
+
+
+  # Remove leading/trailing commas that were added for simplicity
+  potential_languages=`echo "$potential_languages" | sed -e "s/^,//" -e "s/,$//"`
+  missing_languages=`echo "$missing_languages" | sed -e "s/^,//" -e "s/,$//"`
+  stage1_languages=`echo "$stage1_languages" | sed -e "s/^,//" -e "s/,$//"`
+  new_enable_languages=`echo "$new_enable_languages" | sed -e "s/^,//" -e "s/,$//"`
+
+  if test "x$missing_languages" != x; then
+    as_fn_error "
+The following requested languages could not be built: ${missing_languages}
+Supported languages are: ${potential_languages}" "$LINENO" 5
+  fi
+  if test "x$new_enable_languages" != "x$enable_languages"; then
+    echo The following languages will be built: ${new_enable_languages}
+    enable_languages="$new_enable_languages"
+  fi
+
+  
+  ac_configure_args=`echo " $ac_configure_args" | sed -e "s/ '--enable-languages=[^ ]*'//g" -e "s/$/ '--enable-languages="$enable_languages"'/" `
+fi
+
+# Handle --disable-<component> generically.
+for dir in $configdirs $build_configdirs $target_configdirs ; do
+  dirname=`echo $dir | sed -e s/target-//g -e s/build-//g -e s/-/_/g`
+  varname=`echo $dirname | sed -e s/+/_/g`
+  if eval test x\${enable_${varname}} "=" xno ; then
+    noconfigdirs="$noconfigdirs $dir"
+  fi
+done
+
+# Check for Boehm's garbage collector
+@%:@ Check whether --enable-objc-gc was given.
+if test "${enable_objc_gc+set}" = set; then :
+  enableval=$enable_objc_gc; case ,${enable_languages},:${enable_objc_gc}:${noconfigdirs} in
+  *,objc,*:*:yes:*target-boehm-gc*)
+    as_fn_error "Boehm's garbage collector was requested yet not supported in this configuration" "$LINENO" 5
+    ;;
+esac
+fi
+
+
+# Make sure we only build Boehm's garbage collector if required.
+case ,${enable_languages},:${enable_objc_gc} in
+  *,objc,*:yes)
+    # Keep target-boehm-gc if requested for Objective-C.
+    ;;
+  *)
+    # Otherwise remove target-boehm-gc depending on target-libjava.
+    if echo " ${noconfigdirs} " | grep "target-libjava" >/dev/null 2>&1; then
+      noconfigdirs="$noconfigdirs target-boehm-gc"
+    fi
+    ;;
+esac
+
+# Remove the entries in $skipdirs and $noconfigdirs from $configdirs,
+# $build_configdirs and $target_configdirs.
+# If we have the source for $noconfigdirs entries, add them to $notsupp.
+
+notsupp=""
+for dir in . $skipdirs $noconfigdirs ; do
+  dirname=`echo $dir | sed -e s/target-//g -e s/build-//g`
+  if test $dir != .  && echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+    configdirs=`echo " ${configdirs} " | sed -e "s/ ${dir} / /"`
+    if test -r $srcdir/$dirname/configure ; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	true
+      else
+	notsupp="$notsupp $dir"
+      fi
+    fi
+  fi
+  if test $dir != .  && echo " ${build_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+    build_configdirs=`echo " ${build_configdirs} " | sed -e "s/ ${dir} / /"`
+    if test -r $srcdir/$dirname/configure ; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	true
+      else
+	notsupp="$notsupp $dir"
+      fi
+    fi
+  fi
+  if test $dir != . && echo " ${target_configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+    target_configdirs=`echo " ${target_configdirs} " | sed -e "s/ ${dir} / /"`
+    if test -r $srcdir/$dirname/configure ; then
+      if echo " ${skipdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	true
+      else
+	notsupp="$notsupp $dir"
+      fi
+    fi
+  fi
+done
+
+# Sometimes the tools are distributed with libiberty but with no other
+# libraries.  In that case, we don't want to build target-libiberty.
+# Don't let libgcc imply libiberty either.
+if test -n "${target_configdirs}" ; then
+  libgcc=
+  others=
+  for i in `echo ${target_configdirs} | sed -e s/target-//g` ; do
+    if test "$i" = "libgcc"; then
+      libgcc=target-libgcc
+    elif test "$i" != "libiberty" ; then
+      if test -r $srcdir/$i/configure ; then
+	others=yes;
+	break;
+      fi
+    fi
+  done
+  if test -z "${others}" ; then
+    target_configdirs=$libgcc
+  fi
+fi
+
+# Quietly strip out all directories which aren't configurable in this tree.
+# This relies on all configurable subdirectories being autoconfiscated, which
+# is now the case.
+build_configdirs_all="$build_configdirs"
+build_configdirs=
+for i in ${build_configdirs_all} ; do
+  j=`echo $i | sed -e s/build-//g` 
+  if test -f ${srcdir}/$j/configure ; then
+    build_configdirs="${build_configdirs} $i"
+  fi
+done
+
+configdirs_all="$configdirs"
+configdirs=
+for i in ${configdirs_all} ; do
+  if test -f ${srcdir}/$i/configure ; then
+    configdirs="${configdirs} $i"
+  fi
+done
+
+target_configdirs_all="$target_configdirs"
+target_configdirs=
+for i in ${target_configdirs_all} ; do
+  j=`echo $i | sed -e s/target-//g` 
+  if test -f ${srcdir}/$j/configure ; then
+    target_configdirs="${target_configdirs} $i"
+  fi
+done
+
+# Produce a warning message for the subdirs we can't configure.
+# This isn't especially interesting in the Cygnus tree, but in the individual
+# FSF releases, it's important to let people know when their machine isn't
+# supported by the one or two programs in a package.
+
+if test -n "${notsupp}" && test -z "${norecursion}" ; then
+  # If $appdirs is non-empty, at least one of those directories must still
+  # be configured, or we error out.  (E.g., if the gas release supports a
+  # specified target in some subdirs but not the gas subdir, we shouldn't
+  # pretend that all is well.)
+  if test -n "$appdirs" ; then
+    for dir in $appdirs ; do
+      if test -r $dir/Makefile.in ; then
+	if echo " ${configdirs} " | grep " ${dir} " >/dev/null 2>&1; then
+	  appdirs=""
+	  break
+	fi
+	if echo " ${target_configdirs} " | grep " target-${dir} " >/dev/null 2>&1; then
+	  appdirs=""
+	  break
+	fi
+      fi
+    done
+    if test -n "$appdirs" ; then
+      echo "*** This configuration is not supported by this package." 1>&2
+      exit 1
+    fi
+  fi
+  # Okay, some application will build, or we don't care to check.  Still
+  # notify of subdirs not getting built.
+  echo "*** This configuration is not supported in the following subdirectories:" 1>&2
+  echo "    ${notsupp}" 1>&2
+  echo "    (Any other directories should still work fine.)" 1>&2
+fi
+
+case "$host" in
+  *msdosdjgpp*)
+    enable_gdbtk=no ;;
+esac
+
+# To find our prefix, in gcc_cv_tool_prefix.
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=: 
+  fi
+  rm -f conf$$.sh
+fi
+
+
+
+if test "x$exec_prefix" = xNONE; then
+        if test "x$prefix" = xNONE; then
+                gcc_cv_tool_prefix=$ac_default_prefix
+        else
+                gcc_cv_tool_prefix=$prefix
+        fi
+else
+        gcc_cv_tool_prefix=$exec_prefix
+fi
+
+# If there is no compiler in the tree, use the PATH only.  In any
+# case, if there is no compiler in the tree nobody should use
+# AS_FOR_TARGET and LD_FOR_TARGET.
+if test x$host = x$build && test -f $srcdir/gcc/BASE-VER; then
+    gcc_version=`cat $srcdir/gcc/BASE-VER`
+    gcc_cv_tool_dirs="$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
+    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical$PATH_SEPARATOR"
+    gcc_cv_tool_dirs="$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
+    gcc_cv_tool_dirs="$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical$PATH_SEPARATOR"
+    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/$target_noncanonical/bin/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
+    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/$target_noncanonical/bin$PATH_SEPARATOR"
+else
+    gcc_cv_tool_dirs=
+fi
+
+if test x$build = x$target && test -n "$md_exec_prefix"; then
+        gcc_cv_tool_dirs="$gcc_cv_tool_dirs$md_exec_prefix$PATH_SEPARATOR"
+fi
+
+
+
+copy_dirs=
+
+
+@%:@ Check whether --with-build-sysroot was given.
+if test "${with_build_sysroot+set}" = set; then :
+  withval=$with_build_sysroot; if test x"$withval" != x ; then
+     SYSROOT_CFLAGS_FOR_TARGET="--sysroot=$withval"
+   fi
+else
+  SYSROOT_CFLAGS_FOR_TARGET=
+fi
+
+
+
+
+@%:@ Check whether --with-debug-prefix-map was given.
+if test "${with_debug_prefix_map+set}" = set; then :
+  withval=$with_debug_prefix_map; if test x"$withval" != x; then
+     DEBUG_PREFIX_CFLAGS_FOR_TARGET=
+     for debug_map in $withval; do
+       DEBUG_PREFIX_CFLAGS_FOR_TARGET="$DEBUG_PREFIX_CFLAGS_FOR_TARGET -fdebug-prefix-map=$debug_map"
+     done
+   fi
+else
+  DEBUG_PREFIX_CFLAGS_FOR_TARGET=
+fi
+
+
+
+# During gcc bootstrap, if we use some random cc for stage1 then CFLAGS
+# might be empty or "-g".  We don't require a C++ compiler, so CXXFLAGS
+# might also be empty (or "-g", if a non-GCC C++ compiler is in the path).
+# We want to ensure that TARGET libraries (which we know are built with
+# gcc) are built with "-O2 -g", so include those options when setting
+# CFLAGS_FOR_TARGET and CXXFLAGS_FOR_TARGET.
+if test "x$CFLAGS_FOR_TARGET" = x; then
+  CFLAGS_FOR_TARGET=$CFLAGS
+  case " $CFLAGS " in
+    *" -O2 "*) ;;
+    *) CFLAGS_FOR_TARGET="-O2 $CFLAGS" ;;
+  esac
+  case " $CFLAGS " in
+    *" -g "* | *" -g3 "*) ;;
+    *) CFLAGS_FOR_TARGET="-g $CFLAGS" ;;
+  esac
+fi
+
+
+if test "x$CXXFLAGS_FOR_TARGET" = x; then
+  CXXFLAGS_FOR_TARGET=$CXXFLAGS
+  case " $CXXFLAGS " in
+    *" -O2 "*) ;;
+    *) CXXFLAGS_FOR_TARGET="-O2 $CXXFLAGS" ;;
+  esac
+  case " $CXXFLAGS " in
+    *" -g "* | *" -g3 "*) ;;
+    *) CXXFLAGS_FOR_TARGET="-g $CXXFLAGS" ;;
+  esac
+fi
+
+
+# Handle --with-headers=XXX.  If the value is not "yes", the contents of
+# the named directory are copied to $(tooldir)/sys-include.
+if test x"${with_headers}" != x && test x"${with_headers}" != xno ; then
+  if test x${is_cross_compiler} = xno ; then
+    echo 1>&2 '***' --with-headers is only supported when cross compiling
+    exit 1
+  fi
+  if test x"${with_headers}" != xyes ; then
+    x=${gcc_cv_tool_prefix}
+    copy_dirs="${copy_dirs} ${with_headers} $x/${target_noncanonical}/sys-include"
+  fi
+fi
+
+# Handle --with-libs=XXX.  If the value is not "yes", the contents of
+# the name directories are copied to $(tooldir)/lib.  Multiple directories
+# are permitted.
+if test x"${with_libs}" != x && test x"${with_libs}" != xno ; then
+  if test x${is_cross_compiler} = xno ; then
+    echo 1>&2 '***' --with-libs is only supported when cross compiling
+    exit 1
+  fi
+  if test x"${with_libs}" != xyes ; then
+    # Copy the libraries in reverse order, so that files in the first named
+    # library override files in subsequent libraries.
+    x=${gcc_cv_tool_prefix}
+    for l in ${with_libs}; do
+      copy_dirs="$l $x/${target_noncanonical}/lib ${copy_dirs}"
+    done
+  fi
+fi
+
+# Set with_gnu_as and with_gnu_ld as appropriate.
+#
+# This is done by determining whether or not the appropriate directory
+# is available, and by checking whether or not specific configurations
+# have requested that this magic not happen.
+# 
+# The command line options always override the explicit settings in 
+# configure.in, and the settings in configure.in override this magic.
+#
+# If the default for a toolchain is to use GNU as and ld, and you don't 
+# want to do that, then you should use the --without-gnu-as and
+# --without-gnu-ld options for the configure script.
+
+if test x${use_gnu_as} = x &&
+   echo " ${configdirs} " | grep " gas " > /dev/null 2>&1 ; then
+  with_gnu_as=yes
+  extra_host_args="$extra_host_args --with-gnu-as"
+fi
+
+if test x${use_gnu_ld} = x &&
+   echo " ${configdirs} " | egrep " (go)?ld " > /dev/null 2>&1 ; then
+  with_gnu_ld=yes
+  extra_host_args="$extra_host_args --with-gnu-ld"
+fi
+
+# If using newlib, add --with-newlib to the extra_host_args so that gcc/configure
+# can detect this case.
+
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " target-newlib " > /dev/null 2>&1 ; then
+  with_newlib=yes
+  extra_host_args="$extra_host_args --with-newlib"
+fi
+
+# Handle ${copy_dirs}
+set fnord ${copy_dirs}
+shift
+while test $# != 0 ; do
+  if test -f $2/COPIED && test x"`cat $2/COPIED`" = x"$1" ; then
+    :
+  else
+    echo Copying $1 to $2
+
+    # Use the install script to create the directory and all required
+    # parent directories.
+    if test -d $2 ; then
+      :
+    else
+      echo >config.temp
+      ${srcdir}/install-sh -c -m 644 config.temp $2/COPIED
+    fi
+
+    # Copy the directory, assuming we have tar.
+    # FIXME: Should we use B in the second tar?  Not all systems support it.
+    (cd $1; tar -cf - .) | (cd $2; tar -xpf -)
+
+    # It is the responsibility of the user to correctly adjust all
+    # symlinks.  If somebody can figure out how to handle them correctly
+    # here, feel free to add the code.
+
+    echo $1 > $2/COPIED
+  fi
+  shift; shift
+done
+
+# Determine a target-dependent exec_prefix that the installed
+# gcc will search in.  Keep this list sorted by triplet, with
+# the *-*-osname triplets last.
+md_exec_prefix=
+case "${target}" in
+  alpha*-*-*vms*)
+    md_exec_prefix=/gnu/lib/gcc-lib
+    ;;
+  i[34567]86-pc-msdosdjgpp*)
+    md_exec_prefix=/dev/env/DJDIR/bin
+    ;;
+  i[34567]86-*-sco3.2v5*)
+    if test $with_gnu_as = yes; then
+      md_exec_prefix=/usr/gnu/bin
+    else
+      md_exec_prefix=/usr/ccs/bin/elf
+    fi
+    ;;
+
+  mn10300-*-* | \
+  powerpc-*-chorusos* | \
+  powerpc*-*-eabi* | \
+  powerpc*-*-sysv* | \
+  powerpc*-*-kaos* | \
+  s390x-ibm-tpf*)
+    md_exec_prefix=/usr/ccs/bin
+    ;;
+  sparc64-*-elf*)
+    ;;
+  v850*-*-*)
+    md_exec_prefix=/usr/ccs/bin
+    ;;
+  xtensa*-*-elf*)
+    ;;
+
+  *-*-beos* | \
+  *-*-elf* | \
+  *-*-hpux* | \
+  *-*-netware* | \
+  *-*-nto-qnx* | \
+  *-*-rtems* | \
+  *-*-solaris2* | \
+  *-*-sysv[45]* | \
+  *-*-vxworks* | \
+  *-wrs-windiss)
+    md_exec_prefix=/usr/ccs/bin
+    ;;
+esac
+
+extra_arflags_for_target=
+extra_nmflags_for_target=
+extra_ranlibflags_for_target=
+target_makefile_frag=/dev/null
+case "${target}" in
+  mep*-*-*)
+    target_makefile_frag="config/mt-mep"
+    ;;
+  spu-*-*)
+    target_makefile_frag="config/mt-spu"
+    ;;
+  mips*-sde-elf*)
+    target_makefile_frag="config/mt-sde"
+    ;;
+  mipsisa*-*-elfoabi*)
+    target_makefile_frag="config/mt-mips-elfoabi"
+    ;;
+  mips*-*-*linux* | mips*-*-gnu*)
+    target_makefile_frag="config/mt-mips-gnu"
+    ;;
+  *-*-netware*)
+    target_makefile_frag="config/mt-netware"
+    ;;
+  *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu | *-*-kopensolaris*-gnu)
+    target_makefile_frag="config/mt-gnu"
+    ;;
+  *-*-aix4.[3456789]* | *-*-aix[56789].*)
+    # nm and ar from AIX 4.3 and above require -X32_64 flag to all ar and nm 
+    # commands to handle both 32-bit and 64-bit objects.  These flags are
+    # harmless if we're using GNU nm or ar.
+    extra_arflags_for_target=" -X32_64"
+    extra_nmflags_for_target=" -B -X32_64"
+    ;;
+  *-*-darwin*)
+    # ranlib from Darwin requires the -c flag to look at common symbols.
+    extra_ranlibflags_for_target=" -c"
+    ;;
+  mips*-*-pe | sh*-*-pe | *arm-wince-pe)
+    target_makefile_frag="config/mt-wince"
+    ;;
+esac
+
+alphaieee_frag=/dev/null
+case $target in
+  alpha*-*-*)
+    # This just makes sure to use the -mieee option to build target libs.
+    # This should probably be set individually by each library.
+    alphaieee_frag="config/mt-alphaieee"
+    ;;
+esac
+
+# If --enable-target-optspace always use -Os instead of -O2 to build
+# the target libraries, similarly if it is not specified, use -Os
+# on selected platforms.
+ospace_frag=/dev/null
+case "${enable_target_optspace}:${target}" in
+  yes:*)
+    ospace_frag="config/mt-ospace"
+    ;;
+  :d30v-*)
+    ospace_frag="config/mt-d30v"
+    ;;
+  :m32r-* | :d10v-* | :fr30-*)
+    ospace_frag="config/mt-ospace"
+    ;;
+  no:* | :*)
+    ;;
+  *)
+    echo "*** bad value \"${enable_target_optspace}\" for --enable-target-optspace flag; ignored" 1>&2
+    ;;
+esac
+
+# Default to using --with-stabs for certain targets.
+if test x${with_stabs} = x ; then
+  case "${target}" in
+  mips*-*-irix[56]*)
+    ;;
+  mips*-*-* | alpha*-*-osf*)
+    with_stabs=yes;
+    extra_host_args="${extra_host_args} --with-stabs"
+    ;;
+  esac
+fi
+
+# hpux11 in 64bit mode has libraries in a weird place.  Arrange to find
+# them automatically.
+case "${host}" in
+  hppa*64*-*-hpux11*)	
+    extra_host_args="$extra_host_args -x-libraries=/usr/lib/pa20_64 -x-includes=/usr/X11R6/include"
+    ;;
+esac
+
+# Some systems (e.g., one of the i386-aix systems the gas testers are
+# using) don't handle "\$" correctly, so don't use it here.
+tooldir='${exec_prefix}'/${target_noncanonical}
+build_tooldir=${tooldir}
+
+# Create a .gdbinit file which runs the one in srcdir
+# and tells GDB to look there for source files.
+
+if test -r ${srcdir}/.gdbinit ; then
+  case ${srcdir} in
+    .) ;;
+    *) cat > ./.gdbinit <<EOF
+# ${NO_EDIT}
+dir ${srcdir}
+dir .
+source ${srcdir}/.gdbinit
+EOF
+    ;;
+  esac
+fi
+
+# Make sure that the compiler is able to generate an executable.  If it
+# can't, we are probably in trouble.  We don't care whether we can run the
+# executable--we might be using a cross compiler--we only care whether it
+# can be created.  At this point the main configure script has set CC.
+we_are_ok=no
+echo "int main () { return 0; }" > conftest.c
+${CC} -o conftest ${CFLAGS} ${CPPFLAGS} ${LDFLAGS} conftest.c
+if test $? = 0 ; then
+  if test -s conftest || test -s conftest.exe ; then
+    we_are_ok=yes
+  fi
+fi 
+case $we_are_ok in
+  no)
+    echo 1>&2 "*** The command '${CC} -o conftest ${CFLAGS} ${CPPFLAGS} ${LDFLAGS} conftest.c' failed."
+    echo 1>&2 "*** You must set the environment variable CC to a working compiler."
+    rm -f conftest*
+    exit 1
+    ;;
+esac
+rm -f conftest*
+
+# The Solaris /usr/ucb/cc compiler does not appear to work.
+case "${host}" in
+  sparc-sun-solaris2*)
+      CCBASE="`echo ${CC-cc} | sed 's/ .*$//'`"
+      if test "`type $CCBASE | sed 's/^[^/]*//'`" = "/usr/ucb/cc" ; then
+          could_use=
+          test -d /opt/SUNWspro/bin && could_use="/opt/SUNWspro/bin"
+          if test -d /opt/cygnus/bin ; then
+              if test "$could_use" = "" ; then
+                  could_use="/opt/cygnus/bin"
+              else
+                  could_use="$could_use or /opt/cygnus/bin"
+              fi
+          fi
+        if test "$could_use" = "" ; then
+            echo "Warning: compilation may fail because you're using"
+            echo "/usr/ucb/cc.  You should change your PATH or CC "
+            echo "variable and rerun configure."
+        else
+            echo "Warning: compilation may fail because you're using"
+            echo "/usr/ucb/cc, when you should use the C compiler from"
+            echo "$could_use.  You should change your"
+            echo "PATH or CC variable and rerun configure."
+        fi
+      fi
+  ;;
+esac
+
+# Decide which environment variable is used to find dynamic libraries.
+case "${host}" in
+  *-*-hpux*) RPATH_ENVVAR=SHLIB_PATH ;;
+  *-*-darwin* | *-*-rhapsody* ) RPATH_ENVVAR=DYLD_LIBRARY_PATH ;;
+  *-*-mingw* | *-*-cygwin ) RPATH_ENVVAR=PATH ;;
+  *) RPATH_ENVVAR=LD_LIBRARY_PATH ;;
+esac
+
+# On systems where the dynamic library environment variable is PATH,
+# gcc/ will put dynamic libraries into a subdirectory to avoid adding
+# built executables to PATH.
+if test "$RPATH_ENVVAR" = PATH; then
+  GCC_SHLIB_SUBDIR=/shlib
+else
+  GCC_SHLIB_SUBDIR=
+fi
+
+# Record target_configdirs and the configure arguments for target and
+# build configuration in Makefile.
+target_configdirs=`echo "${target_configdirs}" | sed -e 's/target-//g'`
+build_configdirs=`echo "${build_configdirs}" | sed -e 's/build-//g'`
+
+# Determine whether gdb needs tk/tcl or not.
+# Use 'maybe' since enable_gdbtk might be true even if tk isn't available
+# and in that case we want gdb to be built without tk.  Ugh!
+# In fact I believe gdb is the *only* package directly dependent on tk,
+# so we should be able to put the 'maybe's in unconditionally and
+# leave out the maybe dependencies when enable_gdbtk is false.  I'm not
+# 100% sure that that's safe though.
+
+gdb_tk="maybe-all-tcl maybe-all-tk maybe-all-itcl maybe-all-libgui"
+case "$enable_gdbtk" in
+  no)
+    GDB_TK="" ;;
+  yes)
+    GDB_TK="${gdb_tk}" ;;
+  *)
+    # Only add the dependency on gdbtk when GDBtk is part of the gdb
+    # distro.  Eventually someone will fix this and move Insight, nee
+    # gdbtk to a separate directory.
+    if test -d ${srcdir}/gdb/gdbtk ; then
+      GDB_TK="${gdb_tk}"
+    else
+      GDB_TK=""
+    fi
+    ;;
+esac
+CONFIGURE_GDB_TK=`echo ${GDB_TK} | sed s/-all-/-configure-/g`
+INSTALL_GDB_TK=`echo ${GDB_TK} | sed s/-all-/-install-/g`
+
+# Strip out unwanted targets.
+
+# While at that, we remove Makefiles if we were started for recursive
+# configuration, so that the top-level Makefile reconfigures them,
+# like we used to do when configure itself was recursive.
+
+# Loop over modules.  $extrasub must be used with care, limiting as
+# much as possible the usage of range addresses.  That's because autoconf
+# splits the sed script to overcome limits in the number of commands,
+# and relying on carefully-timed sed passes may turn out to be very hard
+# to maintain later.  In this particular case, you just have to be careful
+# not to nest @if/@endif pairs, because configure will not warn you at all.
+
+@%:@ Check whether --enable-bootstrap was given.
+if test "${enable_bootstrap+set}" = set; then :
+  enableval=$enable_bootstrap; 
+else
+  enable_bootstrap=default
+fi
+
+
+# Issue errors and warnings for invalid/strange bootstrap combinations.
+case "$configdirs" in
+  *gcc*) have_compiler=yes ;;
+  *) have_compiler=no ;;
+esac
+
+case "$have_compiler:$host:$target:$enable_bootstrap" in
+  *:*:*:no) ;;
+
+  # Default behavior.  Enable bootstrap if we have a compiler
+  # and we are in a native configuration.
+  yes:$build:$build:default)
+    enable_bootstrap=yes ;;
+
+  *:*:*:default)
+    enable_bootstrap=no ;;
+
+  # We have a compiler and we are in a native configuration, bootstrap is ok
+  yes:$build:$build:yes)
+    ;;
+
+  # Other configurations, but we have a compiler.  Assume the user knows
+  # what he's doing.
+  yes:*:*:yes)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: trying to bootstrap a cross compiler" >&5
+$as_echo "$as_me: WARNING: trying to bootstrap a cross compiler" >&2;}
+    ;;
+
+  # No compiler: if they passed --enable-bootstrap explicitly, fail
+  no:*:*:yes)
+    as_fn_error "cannot bootstrap without a compiler" "$LINENO" 5 ;;
+
+  # Fail if wrong command line
+  *)
+    as_fn_error "invalid option for --enable-bootstrap" "$LINENO" 5
+    ;;
+esac
+
+# Adjust the toplevel makefile according to whether bootstrap was selected.
+case "$enable_bootstrap" in
+  yes)
+    bootstrap_suffix=bootstrap ;;
+  no)
+    bootstrap_suffix=no-bootstrap ;;
+esac
+
+for module in ${build_configdirs} ; do
+  if test -z "${no_recursion}" \
+     && test -f ${build_subdir}/${module}/Makefile; then
+    echo 1>&2 "*** removing ${build_subdir}/${module}/Makefile to force reconfigure"
+    rm -f ${build_subdir}/${module}/Makefile
+  fi
+  extrasub="$extrasub
+/^@if build-$module\$/d
+/^@endif build-$module\$/d
+/^@if build-$module-$bootstrap_suffix\$/d
+/^@endif build-$module-$bootstrap_suffix\$/d"
+done
+for module in ${configdirs} ; do
+  if test -z "${no_recursion}"; then
+    for file in stage*-${module}/Makefile prev-${module}/Makefile ${module}/Makefile; do
+      if test -f ${file}; then
+	echo 1>&2 "*** removing ${file} to force reconfigure"
+	rm -f ${file}
+      fi
+    done
+  fi
+  extrasub="$extrasub
+/^@if $module\$/d
+/^@endif $module\$/d
+/^@if $module-$bootstrap_suffix\$/d
+/^@endif $module-$bootstrap_suffix\$/d"
+done
+for module in ${target_configdirs} ; do
+  if test -z "${no_recursion}" \
+     && test -f ${target_subdir}/${module}/Makefile; then
+    echo 1>&2 "*** removing ${target_subdir}/${module}/Makefile to force reconfigure"
+    rm -f ${target_subdir}/${module}/Makefile
+  fi
+
+  # We only bootstrap target libraries listed in bootstrap_target_libs.
+  case $bootstrap_target_libs in
+    *,target-$module,*) target_bootstrap_suffix=$bootstrap_suffix ;;
+    *) target_bootstrap_suffix=no-bootstrap ;;
+  esac
+
+  extrasub="$extrasub
+/^@if target-$module\$/d
+/^@endif target-$module\$/d
+/^@if target-$module-$target_bootstrap_suffix\$/d
+/^@endif target-$module-$target_bootstrap_suffix\$/d"
+done
+
+extrasub="$extrasub
+/^@if /,/^@endif /d"
+
+# Create the serialization dependencies.  This uses a temporary file.
+
+@%:@ Check whether --enable-serial-configure was given.
+if test "${enable_serial_configure+set}" = set; then :
+  enableval=$enable_serial_configure; 
+fi
+
+
+case ${enable_serial_configure} in
+  yes)
+    enable_serial_build_configure=yes
+    enable_serial_host_configure=yes
+    enable_serial_target_configure=yes
+    ;;
+esac
+
+# These force 'configure's to be done one at a time, to avoid problems
+# with contention over a shared config.cache.
+rm -f serdep.tmp
+echo '# serdep.tmp' > serdep.tmp
+olditem=
+test "x${enable_serial_build_configure}" = xyes &&
+for item in ${build_configdirs} ; do
+  case ${olditem} in
+    "") ;;
+    *) echo "configure-build-${item}: configure-build-${olditem}" >> serdep.tmp ;;
+  esac
+  olditem=${item}
+done
+olditem=
+test "x${enable_serial_host_configure}" = xyes &&
+for item in ${configdirs} ; do
+  case ${olditem} in
+    "") ;;
+    *) echo "configure-${item}: configure-${olditem}" >> serdep.tmp ;;
+  esac
+  olditem=${item}
+done
+olditem=
+test "x${enable_serial_target_configure}" = xyes &&
+for item in ${target_configdirs} ; do
+  case ${olditem} in
+    "") ;;
+    *) echo "configure-target-${item}: configure-target-${olditem}" >> serdep.tmp ;;
+  esac
+  olditem=${item}
+done
+serialization_dependencies=serdep.tmp
+
+
+# Base args.  Strip norecursion, cache-file, srcdir, host, build,
+# target, nonopt, and variable assignments.  These are the ones we
+# might not want to pass down to subconfigures.  Also strip
+# program-prefix, program-suffix, and program-transform-name, so that
+# we can pass down a consistent program-transform-name.
+baseargs=
+keep_next=no
+skip_next=no
+eval "set -- $ac_configure_args"
+for ac_arg
+do
+  if test X"$skip_next" = X"yes"; then
+    skip_next=no
+    continue
+  fi
+  if test X"$keep_next" = X"yes"; then
+    case $ac_arg in
+      *\'*)
+	ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    baseargs="$baseargs '$ac_arg'"
+    keep_next=no
+    continue
+  fi
+
+  # Handle separated arguments.  Based on the logic generated by
+  # autoconf 2.59.
+  case $ac_arg in
+    *=* | --config-cache | -C | -disable-* | --disable-* \
+      | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+      | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+      | -with-* | --with-* | -without-* | --without-* | --x)
+      separate_arg=no
+      ;;
+    -*)
+      separate_arg=yes
+      ;;
+    *)
+      separate_arg=no
+      ;;
+  esac
+
+  case "$ac_arg" in
+    --no*)
+      continue
+      ;;
+    --c* | \
+    --sr* | \
+    --ho* | \
+    --bu* | \
+    --t* | \
+    --program-* | \
+    -cache_file* | \
+    -srcdir* | \
+    -host* | \
+    -build* | \
+    -target* | \
+    -program-prefix* | \
+    -program-suffix* | \
+    -program-transform-name* )
+      skip_next=$separate_arg
+      continue
+      ;;
+    -*)
+      # An option.  Add it.
+      case $ac_arg in
+	*\'*)
+	  ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+      esac
+      baseargs="$baseargs '$ac_arg'"
+      keep_next=$separate_arg
+      ;;
+    *)
+      # Either a variable assignment, or a nonopt (triplet).  Don't
+      # pass it down; let the Makefile handle this.
+      continue
+      ;;
+  esac
+done
+# Remove the initial space we just introduced and, as these will be
+# expanded by make, quote '$'.
+baseargs=`echo "x$baseargs" | sed -e 's/^x *//' -e 's,\\$,$$,g'`
+
+# Add in --program-transform-name, after --program-prefix and
+# --program-suffix have been applied to it.  Autoconf has already
+# doubled dollar signs and backslashes in program_transform_name; we want
+# the backslashes un-doubled, and then the entire thing wrapped in single
+# quotes, because this will be expanded first by make and then by the shell. 
+# Also, because we want to override the logic in subdir configure scripts to
+# choose program_transform_name, replace any s,x,x, with s,y,y,.
+sed -e "s,\\\\\\\\,\\\\,g; s,','\\\\'',g; s/s,x,x,/s,y,y,/" <<EOF_SED > conftestsed.out
+${program_transform_name}
+EOF_SED
+gcc_transform_name=`cat conftestsed.out`
+rm -f conftestsed.out
+baseargs="$baseargs --program-transform-name='${gcc_transform_name}'"
+if test "$silent" = yes; then
+  baseargs="$baseargs --silent"
+fi
+baseargs="$baseargs --disable-option-checking"
+
+# For the build-side libraries, we just need to pretend we're native,
+# and not use the same cache file.  Multilibs are neither needed nor
+# desired.
+build_configargs="--cache-file=../config.cache ${baseargs}"
+
+# For host modules, accept cache file option, or specification as blank.
+case "${cache_file}" in
+"") # empty
+  cache_file_option="" ;;
+/* | [A-Za-z]:[\\/]* ) # absolute path
+  cache_file_option="--cache-file=${cache_file}" ;;
+*) # relative path
+  cache_file_option="--cache-file=../${cache_file}" ;;
+esac
+
+# Host dirs don't like to share a cache file either, horribly enough.
+# This seems to be due to autoconf 2.5x stupidity.
+host_configargs="--cache-file=./config.cache ${extra_host_args} ${baseargs}"
+
+target_configargs=${baseargs}
+
+# Passing a --with-cross-host argument lets the target libraries know
+# whether they are being built with a cross-compiler or being built
+# native.  However, it would be better to use other mechanisms to make the
+# sorts of decisions they want to make on this basis.  Please consider
+# this option to be deprecated.  FIXME.
+if test x${is_cross_compiler} = xyes ; then
+  target_configargs="--with-cross-host=${host_noncanonical} ${target_configargs}"
+fi
+
+# Default to --enable-multilib.
+if test x${enable_multilib} = x ; then
+  target_configargs="--enable-multilib ${target_configargs}"
+fi
+
+# Pass --with-newlib if appropriate.  Note that target_configdirs has
+# changed from the earlier setting of with_newlib.
+if test x${with_newlib} != xno && echo " ${target_configdirs} " | grep " newlib " > /dev/null 2>&1 && test -d ${srcdir}/newlib ; then
+  target_configargs="--with-newlib ${target_configargs}"
+fi
+
+# Different target subdirs use different values of certain variables
+# (notably CXX).  Worse, multilibs use *lots* of different values.
+# Worse yet, autoconf 2.5x makes some of these 'precious', meaning that
+# it doesn't automatically accept command-line overrides of them.
+# This means it's not safe for target subdirs to share a cache file,
+# which is disgusting, but there you have it.  Hopefully this can be
+# fixed in future.  It's still worthwhile to use a cache file for each
+# directory.  I think.
+
+# Pass the appropriate --build, --host, --target and --cache-file arguments.
+# We need to pass --target, as newer autoconf's requires consistency
+# for target_alias and gcc doesn't manage it consistently.
+target_configargs="--cache-file=./config.cache ${target_configargs}"
+
+FLAGS_FOR_TARGET=
+case " $target_configdirs " in
+ *" newlib "*)
+  case " $target_configargs " in
+  *" --with-newlib "*)
+   case "$target" in
+   *-cygwin*)
+     FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/include -isystem $$s/winsup/cygwin/include -isystem $$s/winsup/w32api/include' ;;
+   esac
+
+   # If we're not building GCC, don't discard standard headers.
+   if test -d ${srcdir}/gcc; then
+     FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -nostdinc'
+
+     if test "${build}" != "${host}"; then
+       # On Canadian crosses, CC_FOR_TARGET will have already been set
+       # by `configure', so we won't have an opportunity to add -Bgcc/
+       # to it.  This is right: we don't want to search that directory
+       # for binaries, but we want the header files in there, so add
+       # them explicitly.
+       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -isystem $$r/$(HOST_SUBDIR)/gcc/include'
+
+       # Someone might think of using the pre-installed headers on
+       # Canadian crosses, in case the installed compiler is not fully
+       # compatible with the compiler being built.  In this case, it
+       # would be better to flag an error than risking having
+       # incompatible object files being constructed.  We can't
+       # guarantee that an error will be flagged, but let's hope the
+       # compiler will do it, when presented with incompatible header
+       # files.
+     fi
+   fi
+
+   case "${target}-${is_cross_compiler}" in
+   i[3456789]86-*-linux*-no)
+      # Here host == target, so we don't need to build gcc,
+      # so we don't want to discard standard headers.
+      FLAGS_FOR_TARGET=`echo " $FLAGS_FOR_TARGET " | sed -e 's/ -nostdinc / /'`
+      ;;
+   *)
+      # If we're building newlib, use its generic headers last, but search
+      # for any libc-related directories first (so make it the last -B
+      # switch).
+      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/newlib/ -isystem $$r/$(TARGET_SUBDIR)/newlib/targ-include -isystem $$s/newlib/libc/include'
+
+      # If we're building libgloss, find the startup file, simulator library
+      # and linker script.
+      case " $target_configdirs " in
+	*" libgloss "*)
+	# Look for startup file, simulator library and maybe linker script.
+	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/'"$libgloss_dir"
+	# Look for libnosys.a in case the target needs it.
+	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'
+	# Most targets have the linker script in the source directory.
+	FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$s/libgloss/'"$libgloss_dir"
+	;;
+      esac
+      ;;
+   esac
+   ;;
+  esac
+  ;;
+esac
+case "$target" in
+*-mingw*)
+  # Can't be handled as Cygwin above since Mingw does not use newlib.
+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup/mingw -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/mingw/include -isystem $$s/winsup/w32api/include' ;;
+esac
+
+# Allow the user to override the flags for
+# our build compiler if desired.
+if test x"${build}" = x"${host}" ; then
+  CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}
+  CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}
+  LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}
+fi
+
+# On Canadian crosses, we'll be searching the right directories for
+# the previously-installed cross compiler, so don't bother to add
+# flags for directories within the install tree of the compiler
+# being built; programs in there won't even run.
+if test "${build}" = "${host}" && test -d ${srcdir}/gcc; then
+  # Search for pre-installed headers if nothing else fits.
+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include'
+fi
+
+if test "x${use_gnu_ld}" = x &&
+   echo " ${configdirs} " | grep " ld " > /dev/null ; then
+  # Arrange for us to find uninstalled linker scripts.
+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(HOST_SUBDIR)/ld'
+fi
+
+# Search for other target-specific linker scripts and such.
+case "${target}" in
+  mep*)
+    FLAGS_FOR_TARGET="$FLAGS_FOR_TARGET -mlibrary"
+    ;;
+esac
+
+# Makefile fragments.
+for frag in host_makefile_frag target_makefile_frag alphaieee_frag ospace_frag;
+do
+  eval fragval=\$$frag
+  if test $fragval != /dev/null; then
+    eval $frag=${srcdir}/$fragval
+  fi
+done
+
+
+
+
+
+# Miscellanea: directories, flags, etc.
+
+
+
+
+
+
+
+
+# Build module lists & subconfigure args.
+
+
+
+# Host module lists & subconfigure args.
+
+
+
+# Target module lists & subconfigure args.
+
+
+
+# Build tools.
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+# Generate default definitions for YACC, M4, LEX and other programs that run
+# on the build machine.  These are used if the Makefile can't locate these
+# programs in objdir.
+MISSING=`cd $ac_aux_dir && ${PWDCMD-pwd}`/missing
+
+for ac_prog in 'bison -y' byacc yacc
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_YACC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$YACC"; then
+  ac_cv_prog_YACC="$YACC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_YACC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+YACC=$ac_cv_prog_YACC
+if test -n "$YACC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $YACC" >&5
+$as_echo "$YACC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$YACC" && break
+done
+test -n "$YACC" || YACC="$MISSING bison -y"
+
+case " $build_configdirs " in
+  *" bison "*) YACC='$$r/$(BUILD_SUBDIR)/bison/tests/bison -y' ;;
+  *" byacc "*) YACC='$$r/$(BUILD_SUBDIR)/byacc/byacc' ;;
+esac
+
+for ac_prog in bison
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_BISON+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$BISON"; then
+  ac_cv_prog_BISON="$BISON" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_BISON="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+BISON=$ac_cv_prog_BISON
+if test -n "$BISON"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $BISON" >&5
+$as_echo "$BISON" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$BISON" && break
+done
+test -n "$BISON" || BISON="$MISSING bison"
+
+case " $build_configdirs " in
+  *" bison "*) BISON='$$r/$(BUILD_SUBDIR)/bison/tests/bison' ;;
+esac
+
+for ac_prog in gm4 gnum4 m4
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_M4+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$M4"; then
+  ac_cv_prog_M4="$M4" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_M4="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+M4=$ac_cv_prog_M4
+if test -n "$M4"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $M4" >&5
+$as_echo "$M4" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$M4" && break
+done
+test -n "$M4" || M4="$MISSING m4"
+
+case " $build_configdirs " in
+  *" m4 "*) M4='$$r/$(BUILD_SUBDIR)/m4/m4' ;;
+esac
+
+for ac_prog in flex lex
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LEX+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LEX"; then
+  ac_cv_prog_LEX="$LEX" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LEX="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LEX=$ac_cv_prog_LEX
+if test -n "$LEX"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LEX" >&5
+$as_echo "$LEX" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$LEX" && break
+done
+test -n "$LEX" || LEX="$MISSING flex"
+
+case " $build_configdirs " in
+  *" flex "*) LEX='$$r/$(BUILD_SUBDIR)/flex/flex' ;;
+  *" lex "*) LEX='$$r/$(BUILD_SUBDIR)/lex/lex' ;;
+esac
+
+for ac_prog in flex
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_FLEX+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$FLEX"; then
+  ac_cv_prog_FLEX="$FLEX" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_FLEX="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+FLEX=$ac_cv_prog_FLEX
+if test -n "$FLEX"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $FLEX" >&5
+$as_echo "$FLEX" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$FLEX" && break
+done
+test -n "$FLEX" || FLEX="$MISSING flex"
+
+case " $build_configdirs " in
+  *" flex "*) FLEX='$$r/$(BUILD_SUBDIR)/flex/flex' ;;
+esac
+
+for ac_prog in makeinfo
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_MAKEINFO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$MAKEINFO"; then
+  ac_cv_prog_MAKEINFO="$MAKEINFO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_MAKEINFO="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+MAKEINFO=$ac_cv_prog_MAKEINFO
+if test -n "$MAKEINFO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAKEINFO" >&5
+$as_echo "$MAKEINFO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$MAKEINFO" && break
+done
+test -n "$MAKEINFO" || MAKEINFO="$MISSING makeinfo"
+
+case " $build_configdirs " in
+  *" texinfo "*) MAKEINFO='$$r/$(BUILD_SUBDIR)/texinfo/makeinfo/makeinfo' ;;
+  *)
+
+    # For an installed makeinfo, we require it to be from texinfo 4.7 or
+    # higher, else we use the "missing" dummy.
+    if ${MAKEINFO} --version \
+       | egrep 'texinfo[^0-9]*(4\.([7-9]|[1-9][0-9])|[5-9]|[1-9][0-9])' >/dev/null 2>&1; then
+      :
+    else
+      MAKEINFO="$MISSING makeinfo"
+    fi
+    ;;
+
+esac
+
+# FIXME: expect and dejagnu may become build tools?
+
+for ac_prog in expect
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_EXPECT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$EXPECT"; then
+  ac_cv_prog_EXPECT="$EXPECT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_EXPECT="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+EXPECT=$ac_cv_prog_EXPECT
+if test -n "$EXPECT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $EXPECT" >&5
+$as_echo "$EXPECT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$EXPECT" && break
+done
+test -n "$EXPECT" || EXPECT="expect"
+
+case " $configdirs " in
+  *" expect "*)
+    test $host = $build && EXPECT='$$r/$(HOST_SUBDIR)/expect/expect'
+    ;;
+esac
+
+for ac_prog in runtest
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RUNTEST+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RUNTEST"; then
+  ac_cv_prog_RUNTEST="$RUNTEST" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RUNTEST="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RUNTEST=$ac_cv_prog_RUNTEST
+if test -n "$RUNTEST"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RUNTEST" >&5
+$as_echo "$RUNTEST" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$RUNTEST" && break
+done
+test -n "$RUNTEST" || RUNTEST="runtest"
+
+case " $configdirs " in
+  *" dejagnu "*)
+    test $host = $build && RUNTEST='$$s/$(HOST_SUBDIR)/dejagnu/runtest'
+    ;;
+esac
+
+
+# Host tools.
+ncn_tool_prefix=
+test -n "$host_alias" && ncn_tool_prefix=$host_alias-
+ncn_target_tool_prefix=
+test -n "$target_alias" && ncn_target_tool_prefix=$target_alias-
+
+ 
+
+if test -n "$AR"; then
+  ac_cv_prog_AR=$AR
+elif test -n "$ac_cv_prog_AR"; then
+  AR=$ac_cv_prog_AR
+fi
+
+if test -n "$ac_cv_prog_AR"; then
+  for ncn_progname in ar; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in ar; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_AR" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_AR" && break
+done
+
+if test -z "$ac_cv_prog_AR" ; then
+  set dummy ar
+  if test $build = $host ; then
+    AR="$2"
+  else
+    AR="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$AS"; then
+  ac_cv_prog_AS=$AS
+elif test -n "$ac_cv_prog_AS"; then
+  AS=$ac_cv_prog_AS
+fi
+
+if test -n "$ac_cv_prog_AS"; then
+  for ncn_progname in as; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS"; then
+  ac_cv_prog_AS="$AS" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS=$ac_cv_prog_AS
+if test -n "$AS"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
+$as_echo "$AS" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in as; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS"; then
+  ac_cv_prog_AS="$AS" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS=$ac_cv_prog_AS
+if test -n "$AS"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
+$as_echo "$AS" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_AS" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS"; then
+  ac_cv_prog_AS="$AS" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS=$ac_cv_prog_AS
+if test -n "$AS"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
+$as_echo "$AS" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_AS" && break
+done
+
+if test -z "$ac_cv_prog_AS" ; then
+  set dummy as
+  if test $build = $host ; then
+    AS="$2"
+  else
+    AS="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$DLLTOOL"; then
+  ac_cv_prog_DLLTOOL=$DLLTOOL
+elif test -n "$ac_cv_prog_DLLTOOL"; then
+  DLLTOOL=$ac_cv_prog_DLLTOOL
+fi
+
+if test -n "$ac_cv_prog_DLLTOOL"; then
+  for ncn_progname in dlltool; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL"; then
+  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL=$ac_cv_prog_DLLTOOL
+if test -n "$DLLTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
+$as_echo "$DLLTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in dlltool; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL"; then
+  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL=$ac_cv_prog_DLLTOOL
+if test -n "$DLLTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
+$as_echo "$DLLTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_DLLTOOL" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL"; then
+  ac_cv_prog_DLLTOOL="$DLLTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL=$ac_cv_prog_DLLTOOL
+if test -n "$DLLTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL" >&5
+$as_echo "$DLLTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_DLLTOOL" && break
+done
+
+if test -z "$ac_cv_prog_DLLTOOL" ; then
+  set dummy dlltool
+  if test $build = $host ; then
+    DLLTOOL="$2"
+  else
+    DLLTOOL="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$LD"; then
+  ac_cv_prog_LD=$LD
+elif test -n "$ac_cv_prog_LD"; then
+  LD=$ac_cv_prog_LD
+fi
+
+if test -n "$ac_cv_prog_LD"; then
+  for ncn_progname in ld; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD"; then
+  ac_cv_prog_LD="$LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD=$ac_cv_prog_LD
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in ld; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD"; then
+  ac_cv_prog_LD="$LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD=$ac_cv_prog_LD
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_LD" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD"; then
+  ac_cv_prog_LD="$LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD=$ac_cv_prog_LD
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_LD" && break
+done
+
+if test -z "$ac_cv_prog_LD" ; then
+  set dummy ld
+  if test $build = $host ; then
+    LD="$2"
+  else
+    LD="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$LIPO"; then
+  ac_cv_prog_LIPO=$LIPO
+elif test -n "$ac_cv_prog_LIPO"; then
+  LIPO=$ac_cv_prog_LIPO
+fi
+
+if test -n "$ac_cv_prog_LIPO"; then
+  for ncn_progname in lipo; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in lipo; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_LIPO" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_LIPO" && break
+done
+
+if test -z "$ac_cv_prog_LIPO" ; then
+  set dummy lipo
+  if test $build = $host ; then
+    LIPO="$2"
+  else
+    LIPO="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$NM"; then
+  ac_cv_prog_NM=$NM
+elif test -n "$ac_cv_prog_NM"; then
+  NM=$ac_cv_prog_NM
+fi
+
+if test -n "$ac_cv_prog_NM"; then
+  for ncn_progname in nm; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  ac_cv_prog_NM="$NM" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM=$ac_cv_prog_NM
+if test -n "$NM"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM" >&5
+$as_echo "$NM" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in nm; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  ac_cv_prog_NM="$NM" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM=$ac_cv_prog_NM
+if test -n "$NM"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM" >&5
+$as_echo "$NM" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_NM" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  ac_cv_prog_NM="$NM" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM=$ac_cv_prog_NM
+if test -n "$NM"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM" >&5
+$as_echo "$NM" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_NM" && break
+done
+
+if test -z "$ac_cv_prog_NM" ; then
+  set dummy nm
+  if test $build = $host ; then
+    NM="$2"
+  else
+    NM="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB=$RANLIB
+elif test -n "$ac_cv_prog_RANLIB"; then
+  RANLIB=$ac_cv_prog_RANLIB
+fi
+
+if test -n "$ac_cv_prog_RANLIB"; then
+  for ncn_progname in ranlib; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in ranlib; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_RANLIB" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_RANLIB" && break
+done
+
+if test -z "$ac_cv_prog_RANLIB" ; then
+  RANLIB=":"
+fi
+
+ 
+
+if test -n "$STRIP"; then
+  ac_cv_prog_STRIP=$STRIP
+elif test -n "$ac_cv_prog_STRIP"; then
+  STRIP=$ac_cv_prog_STRIP
+fi
+
+if test -n "$ac_cv_prog_STRIP"; then
+  for ncn_progname in strip; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in strip; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_STRIP" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_STRIP" && break
+done
+
+if test -z "$ac_cv_prog_STRIP" ; then
+  STRIP=":"
+fi
+
+ 
+
+if test -n "$WINDRES"; then
+  ac_cv_prog_WINDRES=$WINDRES
+elif test -n "$ac_cv_prog_WINDRES"; then
+  WINDRES=$ac_cv_prog_WINDRES
+fi
+
+if test -n "$ac_cv_prog_WINDRES"; then
+  for ncn_progname in windres; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES"; then
+  ac_cv_prog_WINDRES="$WINDRES" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES=$ac_cv_prog_WINDRES
+if test -n "$WINDRES"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES" >&5
+$as_echo "$WINDRES" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in windres; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES"; then
+  ac_cv_prog_WINDRES="$WINDRES" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES=$ac_cv_prog_WINDRES
+if test -n "$WINDRES"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES" >&5
+$as_echo "$WINDRES" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_WINDRES" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES"; then
+  ac_cv_prog_WINDRES="$WINDRES" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES=$ac_cv_prog_WINDRES
+if test -n "$WINDRES"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES" >&5
+$as_echo "$WINDRES" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_WINDRES" && break
+done
+
+if test -z "$ac_cv_prog_WINDRES" ; then
+  set dummy windres
+  if test $build = $host ; then
+    WINDRES="$2"
+  else
+    WINDRES="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$WINDMC"; then
+  ac_cv_prog_WINDMC=$WINDMC
+elif test -n "$ac_cv_prog_WINDMC"; then
+  WINDMC=$ac_cv_prog_WINDMC
+fi
+
+if test -n "$ac_cv_prog_WINDMC"; then
+  for ncn_progname in windmc; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC"; then
+  ac_cv_prog_WINDMC="$WINDMC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC=$ac_cv_prog_WINDMC
+if test -n "$WINDMC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC" >&5
+$as_echo "$WINDMC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in windmc; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC"; then
+  ac_cv_prog_WINDMC="$WINDMC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC=$ac_cv_prog_WINDMC
+if test -n "$WINDMC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC" >&5
+$as_echo "$WINDMC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_WINDMC" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC"; then
+  ac_cv_prog_WINDMC="$WINDMC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC=$ac_cv_prog_WINDMC
+if test -n "$WINDMC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC" >&5
+$as_echo "$WINDMC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_WINDMC" && break
+done
+
+if test -z "$ac_cv_prog_WINDMC" ; then
+  set dummy windmc
+  if test $build = $host ; then
+    WINDMC="$2"
+  else
+    WINDMC="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$OBJCOPY"; then
+  ac_cv_prog_OBJCOPY=$OBJCOPY
+elif test -n "$ac_cv_prog_OBJCOPY"; then
+  OBJCOPY=$ac_cv_prog_OBJCOPY
+fi
+
+if test -n "$ac_cv_prog_OBJCOPY"; then
+  for ncn_progname in objcopy; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJCOPY+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJCOPY"; then
+  ac_cv_prog_OBJCOPY="$OBJCOPY" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJCOPY="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJCOPY=$ac_cv_prog_OBJCOPY
+if test -n "$OBJCOPY"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJCOPY" >&5
+$as_echo "$OBJCOPY" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in objcopy; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJCOPY+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJCOPY"; then
+  ac_cv_prog_OBJCOPY="$OBJCOPY" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJCOPY="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJCOPY=$ac_cv_prog_OBJCOPY
+if test -n "$OBJCOPY"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJCOPY" >&5
+$as_echo "$OBJCOPY" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_OBJCOPY" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJCOPY+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJCOPY"; then
+  ac_cv_prog_OBJCOPY="$OBJCOPY" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJCOPY="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJCOPY=$ac_cv_prog_OBJCOPY
+if test -n "$OBJCOPY"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJCOPY" >&5
+$as_echo "$OBJCOPY" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_OBJCOPY" && break
+done
+
+if test -z "$ac_cv_prog_OBJCOPY" ; then
+  set dummy objcopy
+  if test $build = $host ; then
+    OBJCOPY="$2"
+  else
+    OBJCOPY="${ncn_tool_prefix}$2"
+  fi
+fi
+
+ 
+
+if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP=$OBJDUMP
+elif test -n "$ac_cv_prog_OBJDUMP"; then
+  OBJDUMP=$ac_cv_prog_OBJDUMP
+fi
+
+if test -n "$ac_cv_prog_OBJDUMP"; then
+  for ncn_progname in objdump; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+for ncn_progname in objdump; do
+  if test -n "$ncn_tool_prefix"; then
+    # Extract the first word of "${ncn_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ncn_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+  if test -z "$ac_cv_prog_OBJDUMP" && test $build = $host ; then
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+  fi
+  test -n "$ac_cv_prog_OBJDUMP" && break
+done
+
+if test -z "$ac_cv_prog_OBJDUMP" ; then
+  set dummy objdump
+  if test $build = $host ; then
+    OBJDUMP="$2"
+  else
+    OBJDUMP="${ncn_tool_prefix}$2"
+  fi
+fi
+
+
+
+
+
+
+# Target tools.
+
+@%:@ Check whether --with-build-time-tools was given.
+if test "${with_build_time_tools+set}" = set; then :
+  withval=$with_build_time_tools; case x"$withval" in
+     x/*) ;;
+     *)
+       with_build_time_tools=
+       { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: argument to --with-build-time-tools must be an absolute path" >&5
+$as_echo "$as_me: WARNING: argument to --with-build-time-tools must be an absolute path" >&2;}
+       ;;
+   esac
+else
+  with_build_time_tools=
+fi
+
+
+ 
+
+if test -n "$CC_FOR_TARGET"; then
+  ac_cv_prog_CC_FOR_TARGET=$CC_FOR_TARGET
+elif test -n "$ac_cv_prog_CC_FOR_TARGET"; then
+  CC_FOR_TARGET=$ac_cv_prog_CC_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_CC_FOR_TARGET"; then
+  for ncn_progname in cc gcc; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC_FOR_TARGET"; then
+  ac_cv_prog_CC_FOR_TARGET="$CC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC_FOR_TARGET=$ac_cv_prog_CC_FOR_TARGET
+if test -n "$CC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC_FOR_TARGET" >&5
+$as_echo "$CC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_CC_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in cc gcc; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_CC_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_CC_FOR_TARGET"; then
+  for ncn_progname in cc gcc; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC_FOR_TARGET"; then
+  ac_cv_prog_CC_FOR_TARGET="$CC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC_FOR_TARGET=$ac_cv_prog_CC_FOR_TARGET
+if test -n "$CC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC_FOR_TARGET" >&5
+$as_echo "$CC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_CC_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC_FOR_TARGET"; then
+  ac_cv_prog_CC_FOR_TARGET="$CC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC_FOR_TARGET=$ac_cv_prog_CC_FOR_TARGET
+if test -n "$CC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC_FOR_TARGET" >&5
+$as_echo "$CC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_CC_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_CC_FOR_TARGET" ; then
+  set dummy cc gcc
+  if test $build = $target ; then
+    CC_FOR_TARGET="$2"
+  else
+    CC_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  CC_FOR_TARGET="$ac_cv_prog_CC_FOR_TARGET"
+fi
+
+ 
+
+if test -n "$CXX_FOR_TARGET"; then
+  ac_cv_prog_CXX_FOR_TARGET=$CXX_FOR_TARGET
+elif test -n "$ac_cv_prog_CXX_FOR_TARGET"; then
+  CXX_FOR_TARGET=$ac_cv_prog_CXX_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_CXX_FOR_TARGET"; then
+  for ncn_progname in c++ g++ cxx gxx; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CXX_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CXX_FOR_TARGET"; then
+  ac_cv_prog_CXX_FOR_TARGET="$CXX_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CXX_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CXX_FOR_TARGET=$ac_cv_prog_CXX_FOR_TARGET
+if test -n "$CXX_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXX_FOR_TARGET" >&5
+$as_echo "$CXX_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_CXX_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in c++ g++ cxx gxx; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_CXX_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_CXX_FOR_TARGET"; then
+  for ncn_progname in c++ g++ cxx gxx; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CXX_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CXX_FOR_TARGET"; then
+  ac_cv_prog_CXX_FOR_TARGET="$CXX_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CXX_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CXX_FOR_TARGET=$ac_cv_prog_CXX_FOR_TARGET
+if test -n "$CXX_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXX_FOR_TARGET" >&5
+$as_echo "$CXX_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_CXX_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CXX_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CXX_FOR_TARGET"; then
+  ac_cv_prog_CXX_FOR_TARGET="$CXX_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CXX_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CXX_FOR_TARGET=$ac_cv_prog_CXX_FOR_TARGET
+if test -n "$CXX_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXX_FOR_TARGET" >&5
+$as_echo "$CXX_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_CXX_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_CXX_FOR_TARGET" ; then
+  set dummy c++ g++ cxx gxx
+  if test $build = $target ; then
+    CXX_FOR_TARGET="$2"
+  else
+    CXX_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  CXX_FOR_TARGET="$ac_cv_prog_CXX_FOR_TARGET"
+fi
+
+ 
+
+if test -n "$GCC_FOR_TARGET"; then
+  ac_cv_prog_GCC_FOR_TARGET=$GCC_FOR_TARGET
+elif test -n "$ac_cv_prog_GCC_FOR_TARGET"; then
+  GCC_FOR_TARGET=$ac_cv_prog_GCC_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_GCC_FOR_TARGET"; then
+  for ncn_progname in gcc; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCC_FOR_TARGET"; then
+  ac_cv_prog_GCC_FOR_TARGET="$GCC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCC_FOR_TARGET=$ac_cv_prog_GCC_FOR_TARGET
+if test -n "$GCC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCC_FOR_TARGET" >&5
+$as_echo "$GCC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_GCC_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in gcc; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_GCC_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_GCC_FOR_TARGET"; then
+  for ncn_progname in gcc; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCC_FOR_TARGET"; then
+  ac_cv_prog_GCC_FOR_TARGET="$GCC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCC_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCC_FOR_TARGET=$ac_cv_prog_GCC_FOR_TARGET
+if test -n "$GCC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCC_FOR_TARGET" >&5
+$as_echo "$GCC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_GCC_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCC_FOR_TARGET"; then
+  ac_cv_prog_GCC_FOR_TARGET="$GCC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCC_FOR_TARGET=$ac_cv_prog_GCC_FOR_TARGET
+if test -n "$GCC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCC_FOR_TARGET" >&5
+$as_echo "$GCC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_GCC_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_GCC_FOR_TARGET" ; then
+  GCC_FOR_TARGET="${CC_FOR_TARGET}"
+else
+  GCC_FOR_TARGET="$ac_cv_prog_GCC_FOR_TARGET"
+fi
+
+ 
+
+if test -n "$GCJ_FOR_TARGET"; then
+  ac_cv_prog_GCJ_FOR_TARGET=$GCJ_FOR_TARGET
+elif test -n "$ac_cv_prog_GCJ_FOR_TARGET"; then
+  GCJ_FOR_TARGET=$ac_cv_prog_GCJ_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_GCJ_FOR_TARGET"; then
+  for ncn_progname in gcj; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCJ_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCJ_FOR_TARGET"; then
+  ac_cv_prog_GCJ_FOR_TARGET="$GCJ_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCJ_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCJ_FOR_TARGET=$ac_cv_prog_GCJ_FOR_TARGET
+if test -n "$GCJ_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCJ_FOR_TARGET" >&5
+$as_echo "$GCJ_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_GCJ_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in gcj; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_GCJ_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_GCJ_FOR_TARGET"; then
+  for ncn_progname in gcj; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCJ_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCJ_FOR_TARGET"; then
+  ac_cv_prog_GCJ_FOR_TARGET="$GCJ_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCJ_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCJ_FOR_TARGET=$ac_cv_prog_GCJ_FOR_TARGET
+if test -n "$GCJ_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCJ_FOR_TARGET" >&5
+$as_echo "$GCJ_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_GCJ_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GCJ_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GCJ_FOR_TARGET"; then
+  ac_cv_prog_GCJ_FOR_TARGET="$GCJ_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GCJ_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GCJ_FOR_TARGET=$ac_cv_prog_GCJ_FOR_TARGET
+if test -n "$GCJ_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GCJ_FOR_TARGET" >&5
+$as_echo "$GCJ_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_GCJ_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_GCJ_FOR_TARGET" ; then
+  set dummy gcj
+  if test $build = $target ; then
+    GCJ_FOR_TARGET="$2"
+  else
+    GCJ_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  GCJ_FOR_TARGET="$ac_cv_prog_GCJ_FOR_TARGET"
+fi
+
+ 
+
+if test -n "$GFORTRAN_FOR_TARGET"; then
+  ac_cv_prog_GFORTRAN_FOR_TARGET=$GFORTRAN_FOR_TARGET
+elif test -n "$ac_cv_prog_GFORTRAN_FOR_TARGET"; then
+  GFORTRAN_FOR_TARGET=$ac_cv_prog_GFORTRAN_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_GFORTRAN_FOR_TARGET"; then
+  for ncn_progname in gfortran; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GFORTRAN_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GFORTRAN_FOR_TARGET"; then
+  ac_cv_prog_GFORTRAN_FOR_TARGET="$GFORTRAN_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GFORTRAN_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GFORTRAN_FOR_TARGET=$ac_cv_prog_GFORTRAN_FOR_TARGET
+if test -n "$GFORTRAN_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GFORTRAN_FOR_TARGET" >&5
+$as_echo "$GFORTRAN_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_GFORTRAN_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in gfortran; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_GFORTRAN_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_GFORTRAN_FOR_TARGET"; then
+  for ncn_progname in gfortran; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GFORTRAN_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GFORTRAN_FOR_TARGET"; then
+  ac_cv_prog_GFORTRAN_FOR_TARGET="$GFORTRAN_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GFORTRAN_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GFORTRAN_FOR_TARGET=$ac_cv_prog_GFORTRAN_FOR_TARGET
+if test -n "$GFORTRAN_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GFORTRAN_FOR_TARGET" >&5
+$as_echo "$GFORTRAN_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_GFORTRAN_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_GFORTRAN_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$GFORTRAN_FOR_TARGET"; then
+  ac_cv_prog_GFORTRAN_FOR_TARGET="$GFORTRAN_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_GFORTRAN_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+GFORTRAN_FOR_TARGET=$ac_cv_prog_GFORTRAN_FOR_TARGET
+if test -n "$GFORTRAN_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GFORTRAN_FOR_TARGET" >&5
+$as_echo "$GFORTRAN_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_GFORTRAN_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_GFORTRAN_FOR_TARGET" ; then
+  set dummy gfortran
+  if test $build = $target ; then
+    GFORTRAN_FOR_TARGET="$2"
+  else
+    GFORTRAN_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  GFORTRAN_FOR_TARGET="$ac_cv_prog_GFORTRAN_FOR_TARGET"
+fi
+
+
+
+cat > conftest.c << \EOF
+#ifdef __GNUC__
+  gcc_yay;
+#endif
+EOF
+if ($GCC_FOR_TARGET -E conftest.c | grep gcc_yay) > /dev/null 2>&1; then
+  have_gcc_for_target=yes
+else
+  GCC_FOR_TARGET=${ncn_target_tool_prefix}gcc
+  have_gcc_for_target=no
+fi
+rm conftest.c
+
+
+
+
+if test -z "$ac_cv_path_AR_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ar in $with_build_time_tools" >&5
+$as_echo_n "checking for ar in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/ar; then
+      AR_FOR_TARGET=`cd $with_build_time_tools && pwd`/ar
+      ac_cv_path_AR_FOR_TARGET=$AR_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_AR_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_AR_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    AR_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=ar`
+    test $AR_FOR_TARGET = ar && AR_FOR_TARGET=
+    test -n "$AR_FOR_TARGET" && ac_cv_path_AR_FOR_TARGET=$AR_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_AR_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_AR_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $AR_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_AR_FOR_TARGET="$AR_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_AR_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+AR_FOR_TARGET=$ac_cv_path_AR_FOR_TARGET
+if test -n "$AR_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR_FOR_TARGET" >&5
+$as_echo "$AR_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_AR_FOR_TARGET" ; then
+   
+
+if test -n "$AR_FOR_TARGET"; then
+  ac_cv_prog_AR_FOR_TARGET=$AR_FOR_TARGET
+elif test -n "$ac_cv_prog_AR_FOR_TARGET"; then
+  AR_FOR_TARGET=$ac_cv_prog_AR_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_AR_FOR_TARGET"; then
+  for ncn_progname in ar; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR_FOR_TARGET"; then
+  ac_cv_prog_AR_FOR_TARGET="$AR_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR_FOR_TARGET=$ac_cv_prog_AR_FOR_TARGET
+if test -n "$AR_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR_FOR_TARGET" >&5
+$as_echo "$AR_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_AR_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in ar; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_AR_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_AR_FOR_TARGET"; then
+  for ncn_progname in ar; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR_FOR_TARGET"; then
+  ac_cv_prog_AR_FOR_TARGET="$AR_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR_FOR_TARGET=$ac_cv_prog_AR_FOR_TARGET
+if test -n "$AR_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR_FOR_TARGET" >&5
+$as_echo "$AR_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_AR_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR_FOR_TARGET"; then
+  ac_cv_prog_AR_FOR_TARGET="$AR_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR_FOR_TARGET=$ac_cv_prog_AR_FOR_TARGET
+if test -n "$AR_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR_FOR_TARGET" >&5
+$as_echo "$AR_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_AR_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_AR_FOR_TARGET" ; then
+  set dummy ar
+  if test $build = $target ; then
+    AR_FOR_TARGET="$2"
+  else
+    AR_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  AR_FOR_TARGET="$ac_cv_prog_AR_FOR_TARGET"
+fi
+
+else
+  AR_FOR_TARGET=$ac_cv_path_AR_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_AS_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for as in $with_build_time_tools" >&5
+$as_echo_n "checking for as in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/as; then
+      AS_FOR_TARGET=`cd $with_build_time_tools && pwd`/as
+      ac_cv_path_AS_FOR_TARGET=$AS_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_AS_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_AS_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    AS_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=as`
+    test $AS_FOR_TARGET = as && AS_FOR_TARGET=
+    test -n "$AS_FOR_TARGET" && ac_cv_path_AS_FOR_TARGET=$AS_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_AS_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "as", so it can be a program name with args.
+set dummy as; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_AS_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $AS_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_AS_FOR_TARGET="$AS_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_AS_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+AS_FOR_TARGET=$ac_cv_path_AS_FOR_TARGET
+if test -n "$AS_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS_FOR_TARGET" >&5
+$as_echo "$AS_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_AS_FOR_TARGET" ; then
+   
+
+if test -n "$AS_FOR_TARGET"; then
+  ac_cv_prog_AS_FOR_TARGET=$AS_FOR_TARGET
+elif test -n "$ac_cv_prog_AS_FOR_TARGET"; then
+  AS_FOR_TARGET=$ac_cv_prog_AS_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_AS_FOR_TARGET"; then
+  for ncn_progname in as; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS_FOR_TARGET"; then
+  ac_cv_prog_AS_FOR_TARGET="$AS_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS_FOR_TARGET=$ac_cv_prog_AS_FOR_TARGET
+if test -n "$AS_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS_FOR_TARGET" >&5
+$as_echo "$AS_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_AS_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in as; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_AS_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_AS_FOR_TARGET"; then
+  for ncn_progname in as; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS_FOR_TARGET"; then
+  ac_cv_prog_AS_FOR_TARGET="$AS_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS_FOR_TARGET=$ac_cv_prog_AS_FOR_TARGET
+if test -n "$AS_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS_FOR_TARGET" >&5
+$as_echo "$AS_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_AS_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AS_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AS_FOR_TARGET"; then
+  ac_cv_prog_AS_FOR_TARGET="$AS_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AS_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AS_FOR_TARGET=$ac_cv_prog_AS_FOR_TARGET
+if test -n "$AS_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS_FOR_TARGET" >&5
+$as_echo "$AS_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_AS_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_AS_FOR_TARGET" ; then
+  set dummy as
+  if test $build = $target ; then
+    AS_FOR_TARGET="$2"
+  else
+    AS_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  AS_FOR_TARGET="$ac_cv_prog_AS_FOR_TARGET"
+fi
+
+else
+  AS_FOR_TARGET=$ac_cv_path_AS_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_DLLTOOL_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlltool in $with_build_time_tools" >&5
+$as_echo_n "checking for dlltool in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/dlltool; then
+      DLLTOOL_FOR_TARGET=`cd $with_build_time_tools && pwd`/dlltool
+      ac_cv_path_DLLTOOL_FOR_TARGET=$DLLTOOL_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_DLLTOOL_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_DLLTOOL_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    DLLTOOL_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=dlltool`
+    test $DLLTOOL_FOR_TARGET = dlltool && DLLTOOL_FOR_TARGET=
+    test -n "$DLLTOOL_FOR_TARGET" && ac_cv_path_DLLTOOL_FOR_TARGET=$DLLTOOL_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_DLLTOOL_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "dlltool", so it can be a program name with args.
+set dummy dlltool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_DLLTOOL_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $DLLTOOL_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_DLLTOOL_FOR_TARGET="$DLLTOOL_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_DLLTOOL_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+DLLTOOL_FOR_TARGET=$ac_cv_path_DLLTOOL_FOR_TARGET
+if test -n "$DLLTOOL_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL_FOR_TARGET" >&5
+$as_echo "$DLLTOOL_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_DLLTOOL_FOR_TARGET" ; then
+   
+
+if test -n "$DLLTOOL_FOR_TARGET"; then
+  ac_cv_prog_DLLTOOL_FOR_TARGET=$DLLTOOL_FOR_TARGET
+elif test -n "$ac_cv_prog_DLLTOOL_FOR_TARGET"; then
+  DLLTOOL_FOR_TARGET=$ac_cv_prog_DLLTOOL_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_DLLTOOL_FOR_TARGET"; then
+  for ncn_progname in dlltool; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL_FOR_TARGET"; then
+  ac_cv_prog_DLLTOOL_FOR_TARGET="$DLLTOOL_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL_FOR_TARGET=$ac_cv_prog_DLLTOOL_FOR_TARGET
+if test -n "$DLLTOOL_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL_FOR_TARGET" >&5
+$as_echo "$DLLTOOL_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_DLLTOOL_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in dlltool; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_DLLTOOL_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_DLLTOOL_FOR_TARGET"; then
+  for ncn_progname in dlltool; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL_FOR_TARGET"; then
+  ac_cv_prog_DLLTOOL_FOR_TARGET="$DLLTOOL_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL_FOR_TARGET=$ac_cv_prog_DLLTOOL_FOR_TARGET
+if test -n "$DLLTOOL_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL_FOR_TARGET" >&5
+$as_echo "$DLLTOOL_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_DLLTOOL_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DLLTOOL_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DLLTOOL_FOR_TARGET"; then
+  ac_cv_prog_DLLTOOL_FOR_TARGET="$DLLTOOL_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DLLTOOL_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DLLTOOL_FOR_TARGET=$ac_cv_prog_DLLTOOL_FOR_TARGET
+if test -n "$DLLTOOL_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DLLTOOL_FOR_TARGET" >&5
+$as_echo "$DLLTOOL_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_DLLTOOL_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_DLLTOOL_FOR_TARGET" ; then
+  set dummy dlltool
+  if test $build = $target ; then
+    DLLTOOL_FOR_TARGET="$2"
+  else
+    DLLTOOL_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  DLLTOOL_FOR_TARGET="$ac_cv_prog_DLLTOOL_FOR_TARGET"
+fi
+
+else
+  DLLTOOL_FOR_TARGET=$ac_cv_path_DLLTOOL_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_LD_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld in $with_build_time_tools" >&5
+$as_echo_n "checking for ld in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/ld; then
+      LD_FOR_TARGET=`cd $with_build_time_tools && pwd`/ld
+      ac_cv_path_LD_FOR_TARGET=$LD_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_LD_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_LD_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    LD_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=ld`
+    test $LD_FOR_TARGET = ld && LD_FOR_TARGET=
+    test -n "$LD_FOR_TARGET" && ac_cv_path_LD_FOR_TARGET=$LD_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_LD_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "ld", so it can be a program name with args.
+set dummy ld; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_LD_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $LD_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_LD_FOR_TARGET="$LD_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_LD_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+LD_FOR_TARGET=$ac_cv_path_LD_FOR_TARGET
+if test -n "$LD_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD_FOR_TARGET" >&5
+$as_echo "$LD_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_LD_FOR_TARGET" ; then
+   
+
+if test -n "$LD_FOR_TARGET"; then
+  ac_cv_prog_LD_FOR_TARGET=$LD_FOR_TARGET
+elif test -n "$ac_cv_prog_LD_FOR_TARGET"; then
+  LD_FOR_TARGET=$ac_cv_prog_LD_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_LD_FOR_TARGET"; then
+  for ncn_progname in ld; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD_FOR_TARGET"; then
+  ac_cv_prog_LD_FOR_TARGET="$LD_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD_FOR_TARGET=$ac_cv_prog_LD_FOR_TARGET
+if test -n "$LD_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD_FOR_TARGET" >&5
+$as_echo "$LD_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_LD_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in ld; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_LD_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_LD_FOR_TARGET"; then
+  for ncn_progname in ld; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD_FOR_TARGET"; then
+  ac_cv_prog_LD_FOR_TARGET="$LD_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD_FOR_TARGET=$ac_cv_prog_LD_FOR_TARGET
+if test -n "$LD_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD_FOR_TARGET" >&5
+$as_echo "$LD_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_LD_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LD_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LD_FOR_TARGET"; then
+  ac_cv_prog_LD_FOR_TARGET="$LD_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LD_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LD_FOR_TARGET=$ac_cv_prog_LD_FOR_TARGET
+if test -n "$LD_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD_FOR_TARGET" >&5
+$as_echo "$LD_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_LD_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_LD_FOR_TARGET" ; then
+  set dummy ld
+  if test $build = $target ; then
+    LD_FOR_TARGET="$2"
+  else
+    LD_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  LD_FOR_TARGET="$ac_cv_prog_LD_FOR_TARGET"
+fi
+
+else
+  LD_FOR_TARGET=$ac_cv_path_LD_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_LIPO_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for lipo in $with_build_time_tools" >&5
+$as_echo_n "checking for lipo in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/lipo; then
+      LIPO_FOR_TARGET=`cd $with_build_time_tools && pwd`/lipo
+      ac_cv_path_LIPO_FOR_TARGET=$LIPO_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_LIPO_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_LIPO_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    LIPO_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=lipo`
+    test $LIPO_FOR_TARGET = lipo && LIPO_FOR_TARGET=
+    test -n "$LIPO_FOR_TARGET" && ac_cv_path_LIPO_FOR_TARGET=$LIPO_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_LIPO_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "lipo", so it can be a program name with args.
+set dummy lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_LIPO_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $LIPO_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_LIPO_FOR_TARGET="$LIPO_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_LIPO_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+LIPO_FOR_TARGET=$ac_cv_path_LIPO_FOR_TARGET
+if test -n "$LIPO_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO_FOR_TARGET" >&5
+$as_echo "$LIPO_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_LIPO_FOR_TARGET" ; then
+   
+
+if test -n "$LIPO_FOR_TARGET"; then
+  ac_cv_prog_LIPO_FOR_TARGET=$LIPO_FOR_TARGET
+elif test -n "$ac_cv_prog_LIPO_FOR_TARGET"; then
+  LIPO_FOR_TARGET=$ac_cv_prog_LIPO_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_LIPO_FOR_TARGET"; then
+  for ncn_progname in lipo; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO_FOR_TARGET"; then
+  ac_cv_prog_LIPO_FOR_TARGET="$LIPO_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO_FOR_TARGET=$ac_cv_prog_LIPO_FOR_TARGET
+if test -n "$LIPO_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO_FOR_TARGET" >&5
+$as_echo "$LIPO_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_LIPO_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in lipo; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_LIPO_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_LIPO_FOR_TARGET"; then
+  for ncn_progname in lipo; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO_FOR_TARGET"; then
+  ac_cv_prog_LIPO_FOR_TARGET="$LIPO_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO_FOR_TARGET=$ac_cv_prog_LIPO_FOR_TARGET
+if test -n "$LIPO_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO_FOR_TARGET" >&5
+$as_echo "$LIPO_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_LIPO_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO_FOR_TARGET"; then
+  ac_cv_prog_LIPO_FOR_TARGET="$LIPO_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO_FOR_TARGET=$ac_cv_prog_LIPO_FOR_TARGET
+if test -n "$LIPO_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO_FOR_TARGET" >&5
+$as_echo "$LIPO_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_LIPO_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_LIPO_FOR_TARGET" ; then
+  set dummy lipo
+  if test $build = $target ; then
+    LIPO_FOR_TARGET="$2"
+  else
+    LIPO_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  LIPO_FOR_TARGET="$ac_cv_prog_LIPO_FOR_TARGET"
+fi
+
+else
+  LIPO_FOR_TARGET=$ac_cv_path_LIPO_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_NM_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for nm in $with_build_time_tools" >&5
+$as_echo_n "checking for nm in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/nm; then
+      NM_FOR_TARGET=`cd $with_build_time_tools && pwd`/nm
+      ac_cv_path_NM_FOR_TARGET=$NM_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_NM_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_NM_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    NM_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=nm`
+    test $NM_FOR_TARGET = nm && NM_FOR_TARGET=
+    test -n "$NM_FOR_TARGET" && ac_cv_path_NM_FOR_TARGET=$NM_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_NM_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "nm", so it can be a program name with args.
+set dummy nm; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_NM_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $NM_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_NM_FOR_TARGET="$NM_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_NM_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+NM_FOR_TARGET=$ac_cv_path_NM_FOR_TARGET
+if test -n "$NM_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM_FOR_TARGET" >&5
+$as_echo "$NM_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_NM_FOR_TARGET" ; then
+   
+
+if test -n "$NM_FOR_TARGET"; then
+  ac_cv_prog_NM_FOR_TARGET=$NM_FOR_TARGET
+elif test -n "$ac_cv_prog_NM_FOR_TARGET"; then
+  NM_FOR_TARGET=$ac_cv_prog_NM_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_NM_FOR_TARGET"; then
+  for ncn_progname in nm; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM_FOR_TARGET"; then
+  ac_cv_prog_NM_FOR_TARGET="$NM_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM_FOR_TARGET=$ac_cv_prog_NM_FOR_TARGET
+if test -n "$NM_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM_FOR_TARGET" >&5
+$as_echo "$NM_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_NM_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in nm; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_NM_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_NM_FOR_TARGET"; then
+  for ncn_progname in nm; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM_FOR_TARGET"; then
+  ac_cv_prog_NM_FOR_TARGET="$NM_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM_FOR_TARGET=$ac_cv_prog_NM_FOR_TARGET
+if test -n "$NM_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM_FOR_TARGET" >&5
+$as_echo "$NM_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_NM_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NM_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM_FOR_TARGET"; then
+  ac_cv_prog_NM_FOR_TARGET="$NM_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NM_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NM_FOR_TARGET=$ac_cv_prog_NM_FOR_TARGET
+if test -n "$NM_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NM_FOR_TARGET" >&5
+$as_echo "$NM_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_NM_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_NM_FOR_TARGET" ; then
+  set dummy nm
+  if test $build = $target ; then
+    NM_FOR_TARGET="$2"
+  else
+    NM_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  NM_FOR_TARGET="$ac_cv_prog_NM_FOR_TARGET"
+fi
+
+else
+  NM_FOR_TARGET=$ac_cv_path_NM_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_OBJDUMP_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for objdump in $with_build_time_tools" >&5
+$as_echo_n "checking for objdump in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/objdump; then
+      OBJDUMP_FOR_TARGET=`cd $with_build_time_tools && pwd`/objdump
+      ac_cv_path_OBJDUMP_FOR_TARGET=$OBJDUMP_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_OBJDUMP_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_OBJDUMP_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    OBJDUMP_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=objdump`
+    test $OBJDUMP_FOR_TARGET = objdump && OBJDUMP_FOR_TARGET=
+    test -n "$OBJDUMP_FOR_TARGET" && ac_cv_path_OBJDUMP_FOR_TARGET=$OBJDUMP_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_OBJDUMP_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "objdump", so it can be a program name with args.
+set dummy objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_OBJDUMP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $OBJDUMP_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_OBJDUMP_FOR_TARGET="$OBJDUMP_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_OBJDUMP_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+OBJDUMP_FOR_TARGET=$ac_cv_path_OBJDUMP_FOR_TARGET
+if test -n "$OBJDUMP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP_FOR_TARGET" >&5
+$as_echo "$OBJDUMP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_OBJDUMP_FOR_TARGET" ; then
+   
+
+if test -n "$OBJDUMP_FOR_TARGET"; then
+  ac_cv_prog_OBJDUMP_FOR_TARGET=$OBJDUMP_FOR_TARGET
+elif test -n "$ac_cv_prog_OBJDUMP_FOR_TARGET"; then
+  OBJDUMP_FOR_TARGET=$ac_cv_prog_OBJDUMP_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_OBJDUMP_FOR_TARGET"; then
+  for ncn_progname in objdump; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP_FOR_TARGET"; then
+  ac_cv_prog_OBJDUMP_FOR_TARGET="$OBJDUMP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP_FOR_TARGET=$ac_cv_prog_OBJDUMP_FOR_TARGET
+if test -n "$OBJDUMP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP_FOR_TARGET" >&5
+$as_echo "$OBJDUMP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_OBJDUMP_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in objdump; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_OBJDUMP_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_OBJDUMP_FOR_TARGET"; then
+  for ncn_progname in objdump; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP_FOR_TARGET"; then
+  ac_cv_prog_OBJDUMP_FOR_TARGET="$OBJDUMP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP_FOR_TARGET=$ac_cv_prog_OBJDUMP_FOR_TARGET
+if test -n "$OBJDUMP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP_FOR_TARGET" >&5
+$as_echo "$OBJDUMP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_OBJDUMP_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP_FOR_TARGET"; then
+  ac_cv_prog_OBJDUMP_FOR_TARGET="$OBJDUMP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP_FOR_TARGET=$ac_cv_prog_OBJDUMP_FOR_TARGET
+if test -n "$OBJDUMP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP_FOR_TARGET" >&5
+$as_echo "$OBJDUMP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_OBJDUMP_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_OBJDUMP_FOR_TARGET" ; then
+  set dummy objdump
+  if test $build = $target ; then
+    OBJDUMP_FOR_TARGET="$2"
+  else
+    OBJDUMP_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  OBJDUMP_FOR_TARGET="$ac_cv_prog_OBJDUMP_FOR_TARGET"
+fi
+
+else
+  OBJDUMP_FOR_TARGET=$ac_cv_path_OBJDUMP_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_RANLIB_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ranlib in $with_build_time_tools" >&5
+$as_echo_n "checking for ranlib in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/ranlib; then
+      RANLIB_FOR_TARGET=`cd $with_build_time_tools && pwd`/ranlib
+      ac_cv_path_RANLIB_FOR_TARGET=$RANLIB_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_RANLIB_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_RANLIB_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    RANLIB_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=ranlib`
+    test $RANLIB_FOR_TARGET = ranlib && RANLIB_FOR_TARGET=
+    test -n "$RANLIB_FOR_TARGET" && ac_cv_path_RANLIB_FOR_TARGET=$RANLIB_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_RANLIB_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_RANLIB_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $RANLIB_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_RANLIB_FOR_TARGET="$RANLIB_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_RANLIB_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+RANLIB_FOR_TARGET=$ac_cv_path_RANLIB_FOR_TARGET
+if test -n "$RANLIB_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB_FOR_TARGET" >&5
+$as_echo "$RANLIB_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_RANLIB_FOR_TARGET" ; then
+   
+
+if test -n "$RANLIB_FOR_TARGET"; then
+  ac_cv_prog_RANLIB_FOR_TARGET=$RANLIB_FOR_TARGET
+elif test -n "$ac_cv_prog_RANLIB_FOR_TARGET"; then
+  RANLIB_FOR_TARGET=$ac_cv_prog_RANLIB_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_RANLIB_FOR_TARGET"; then
+  for ncn_progname in ranlib; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB_FOR_TARGET"; then
+  ac_cv_prog_RANLIB_FOR_TARGET="$RANLIB_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB_FOR_TARGET=$ac_cv_prog_RANLIB_FOR_TARGET
+if test -n "$RANLIB_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB_FOR_TARGET" >&5
+$as_echo "$RANLIB_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_RANLIB_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in ranlib; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_RANLIB_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_RANLIB_FOR_TARGET"; then
+  for ncn_progname in ranlib; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB_FOR_TARGET"; then
+  ac_cv_prog_RANLIB_FOR_TARGET="$RANLIB_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB_FOR_TARGET=$ac_cv_prog_RANLIB_FOR_TARGET
+if test -n "$RANLIB_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB_FOR_TARGET" >&5
+$as_echo "$RANLIB_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_RANLIB_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB_FOR_TARGET"; then
+  ac_cv_prog_RANLIB_FOR_TARGET="$RANLIB_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB_FOR_TARGET=$ac_cv_prog_RANLIB_FOR_TARGET
+if test -n "$RANLIB_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB_FOR_TARGET" >&5
+$as_echo "$RANLIB_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_RANLIB_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_RANLIB_FOR_TARGET" ; then
+  set dummy ranlib
+  if test $build = $target ; then
+    RANLIB_FOR_TARGET="$2"
+  else
+    RANLIB_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  RANLIB_FOR_TARGET="$ac_cv_prog_RANLIB_FOR_TARGET"
+fi
+
+else
+  RANLIB_FOR_TARGET=$ac_cv_path_RANLIB_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_STRIP_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for strip in $with_build_time_tools" >&5
+$as_echo_n "checking for strip in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/strip; then
+      STRIP_FOR_TARGET=`cd $with_build_time_tools && pwd`/strip
+      ac_cv_path_STRIP_FOR_TARGET=$STRIP_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_STRIP_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_STRIP_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    STRIP_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=strip`
+    test $STRIP_FOR_TARGET = strip && STRIP_FOR_TARGET=
+    test -n "$STRIP_FOR_TARGET" && ac_cv_path_STRIP_FOR_TARGET=$STRIP_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_STRIP_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_STRIP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $STRIP_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_STRIP_FOR_TARGET="$STRIP_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_STRIP_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+STRIP_FOR_TARGET=$ac_cv_path_STRIP_FOR_TARGET
+if test -n "$STRIP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP_FOR_TARGET" >&5
+$as_echo "$STRIP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_STRIP_FOR_TARGET" ; then
+   
+
+if test -n "$STRIP_FOR_TARGET"; then
+  ac_cv_prog_STRIP_FOR_TARGET=$STRIP_FOR_TARGET
+elif test -n "$ac_cv_prog_STRIP_FOR_TARGET"; then
+  STRIP_FOR_TARGET=$ac_cv_prog_STRIP_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_STRIP_FOR_TARGET"; then
+  for ncn_progname in strip; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP_FOR_TARGET"; then
+  ac_cv_prog_STRIP_FOR_TARGET="$STRIP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP_FOR_TARGET=$ac_cv_prog_STRIP_FOR_TARGET
+if test -n "$STRIP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP_FOR_TARGET" >&5
+$as_echo "$STRIP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_STRIP_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in strip; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_STRIP_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_STRIP_FOR_TARGET"; then
+  for ncn_progname in strip; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP_FOR_TARGET"; then
+  ac_cv_prog_STRIP_FOR_TARGET="$STRIP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP_FOR_TARGET=$ac_cv_prog_STRIP_FOR_TARGET
+if test -n "$STRIP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP_FOR_TARGET" >&5
+$as_echo "$STRIP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_STRIP_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP_FOR_TARGET"; then
+  ac_cv_prog_STRIP_FOR_TARGET="$STRIP_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP_FOR_TARGET=$ac_cv_prog_STRIP_FOR_TARGET
+if test -n "$STRIP_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP_FOR_TARGET" >&5
+$as_echo "$STRIP_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_STRIP_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_STRIP_FOR_TARGET" ; then
+  set dummy strip
+  if test $build = $target ; then
+    STRIP_FOR_TARGET="$2"
+  else
+    STRIP_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  STRIP_FOR_TARGET="$ac_cv_prog_STRIP_FOR_TARGET"
+fi
+
+else
+  STRIP_FOR_TARGET=$ac_cv_path_STRIP_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_WINDRES_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for windres in $with_build_time_tools" >&5
+$as_echo_n "checking for windres in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/windres; then
+      WINDRES_FOR_TARGET=`cd $with_build_time_tools && pwd`/windres
+      ac_cv_path_WINDRES_FOR_TARGET=$WINDRES_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_WINDRES_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_WINDRES_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    WINDRES_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=windres`
+    test $WINDRES_FOR_TARGET = windres && WINDRES_FOR_TARGET=
+    test -n "$WINDRES_FOR_TARGET" && ac_cv_path_WINDRES_FOR_TARGET=$WINDRES_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_WINDRES_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "windres", so it can be a program name with args.
+set dummy windres; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_WINDRES_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $WINDRES_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_WINDRES_FOR_TARGET="$WINDRES_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_WINDRES_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+WINDRES_FOR_TARGET=$ac_cv_path_WINDRES_FOR_TARGET
+if test -n "$WINDRES_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES_FOR_TARGET" >&5
+$as_echo "$WINDRES_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_WINDRES_FOR_TARGET" ; then
+   
+
+if test -n "$WINDRES_FOR_TARGET"; then
+  ac_cv_prog_WINDRES_FOR_TARGET=$WINDRES_FOR_TARGET
+elif test -n "$ac_cv_prog_WINDRES_FOR_TARGET"; then
+  WINDRES_FOR_TARGET=$ac_cv_prog_WINDRES_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_WINDRES_FOR_TARGET"; then
+  for ncn_progname in windres; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES_FOR_TARGET"; then
+  ac_cv_prog_WINDRES_FOR_TARGET="$WINDRES_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES_FOR_TARGET=$ac_cv_prog_WINDRES_FOR_TARGET
+if test -n "$WINDRES_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES_FOR_TARGET" >&5
+$as_echo "$WINDRES_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_WINDRES_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in windres; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_WINDRES_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_WINDRES_FOR_TARGET"; then
+  for ncn_progname in windres; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES_FOR_TARGET"; then
+  ac_cv_prog_WINDRES_FOR_TARGET="$WINDRES_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES_FOR_TARGET=$ac_cv_prog_WINDRES_FOR_TARGET
+if test -n "$WINDRES_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES_FOR_TARGET" >&5
+$as_echo "$WINDRES_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_WINDRES_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDRES_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDRES_FOR_TARGET"; then
+  ac_cv_prog_WINDRES_FOR_TARGET="$WINDRES_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDRES_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDRES_FOR_TARGET=$ac_cv_prog_WINDRES_FOR_TARGET
+if test -n "$WINDRES_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDRES_FOR_TARGET" >&5
+$as_echo "$WINDRES_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_WINDRES_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_WINDRES_FOR_TARGET" ; then
+  set dummy windres
+  if test $build = $target ; then
+    WINDRES_FOR_TARGET="$2"
+  else
+    WINDRES_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  WINDRES_FOR_TARGET="$ac_cv_prog_WINDRES_FOR_TARGET"
+fi
+
+else
+  WINDRES_FOR_TARGET=$ac_cv_path_WINDRES_FOR_TARGET
+fi
+
+
+
+
+if test -z "$ac_cv_path_WINDMC_FOR_TARGET" ; then
+  if test -n "$with_build_time_tools"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for windmc in $with_build_time_tools" >&5
+$as_echo_n "checking for windmc in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/windmc; then
+      WINDMC_FOR_TARGET=`cd $with_build_time_tools && pwd`/windmc
+      ac_cv_path_WINDMC_FOR_TARGET=$WINDMC_FOR_TARGET
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_WINDMC_FOR_TARGET" >&5
+$as_echo "$ac_cv_path_WINDMC_FOR_TARGET" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  elif test $build != $host && test $have_gcc_for_target = yes; then
+    WINDMC_FOR_TARGET=`$GCC_FOR_TARGET --print-prog-name=windmc`
+    test $WINDMC_FOR_TARGET = windmc && WINDMC_FOR_TARGET=
+    test -n "$WINDMC_FOR_TARGET" && ac_cv_path_WINDMC_FOR_TARGET=$WINDMC_FOR_TARGET
+  fi
+fi
+if test -z "$ac_cv_path_WINDMC_FOR_TARGET" && test -n "$gcc_cv_tool_dirs"; then
+  # Extract the first word of "windmc", so it can be a program name with args.
+set dummy windmc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_WINDMC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $WINDMC_FOR_TARGET in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_WINDMC_FOR_TARGET="$WINDMC_FOR_TARGET" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $gcc_cv_tool_dirs
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_WINDMC_FOR_TARGET="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  ;;
+esac
+fi
+WINDMC_FOR_TARGET=$ac_cv_path_WINDMC_FOR_TARGET
+if test -n "$WINDMC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC_FOR_TARGET" >&5
+$as_echo "$WINDMC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_path_WINDMC_FOR_TARGET" ; then
+   
+
+if test -n "$WINDMC_FOR_TARGET"; then
+  ac_cv_prog_WINDMC_FOR_TARGET=$WINDMC_FOR_TARGET
+elif test -n "$ac_cv_prog_WINDMC_FOR_TARGET"; then
+  WINDMC_FOR_TARGET=$ac_cv_prog_WINDMC_FOR_TARGET
+fi
+
+if test -n "$ac_cv_prog_WINDMC_FOR_TARGET"; then
+  for ncn_progname in windmc; do
+    # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC_FOR_TARGET"; then
+  ac_cv_prog_WINDMC_FOR_TARGET="$WINDMC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC_FOR_TARGET=$ac_cv_prog_WINDMC_FOR_TARGET
+if test -n "$WINDMC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC_FOR_TARGET" >&5
+$as_echo "$WINDMC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  done
+fi
+
+if test -z "$ac_cv_prog_WINDMC_FOR_TARGET" && test -n "$with_build_time_tools"; then
+  for ncn_progname in windmc; do
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools" >&5
+$as_echo_n "checking for ${ncn_progname} in $with_build_time_tools... " >&6; }
+    if test -x $with_build_time_tools/${ncn_progname}; then
+      ac_cv_prog_WINDMC_FOR_TARGET=$with_build_time_tools/${ncn_progname}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      break
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+  done
+fi
+
+if test -z "$ac_cv_prog_WINDMC_FOR_TARGET"; then
+  for ncn_progname in windmc; do
+    if test -n "$ncn_target_tool_prefix"; then
+      # Extract the first word of "${ncn_target_tool_prefix}${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC_FOR_TARGET"; then
+  ac_cv_prog_WINDMC_FOR_TARGET="$WINDMC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC_FOR_TARGET="${ncn_target_tool_prefix}${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC_FOR_TARGET=$ac_cv_prog_WINDMC_FOR_TARGET
+if test -n "$WINDMC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC_FOR_TARGET" >&5
+$as_echo "$WINDMC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    fi
+    if test -z "$ac_cv_prog_WINDMC_FOR_TARGET" && test $build = $target ; then
+      # Extract the first word of "${ncn_progname}", so it can be a program name with args.
+set dummy ${ncn_progname}; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_WINDMC_FOR_TARGET+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$WINDMC_FOR_TARGET"; then
+  ac_cv_prog_WINDMC_FOR_TARGET="$WINDMC_FOR_TARGET" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_WINDMC_FOR_TARGET="${ncn_progname}"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+WINDMC_FOR_TARGET=$ac_cv_prog_WINDMC_FOR_TARGET
+if test -n "$WINDMC_FOR_TARGET"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $WINDMC_FOR_TARGET" >&5
+$as_echo "$WINDMC_FOR_TARGET" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+ 
+    fi
+    test -n "$ac_cv_prog_WINDMC_FOR_TARGET" && break
+  done
+fi
+  
+if test -z "$ac_cv_prog_WINDMC_FOR_TARGET" ; then
+  set dummy windmc
+  if test $build = $target ; then
+    WINDMC_FOR_TARGET="$2"
+  else
+    WINDMC_FOR_TARGET="${ncn_target_tool_prefix}$2"
+  fi
+else
+  WINDMC_FOR_TARGET="$ac_cv_prog_WINDMC_FOR_TARGET"
+fi
+
+else
+  WINDMC_FOR_TARGET=$ac_cv_path_WINDMC_FOR_TARGET
+fi
+
+
+RAW_CXX_FOR_TARGET="$CXX_FOR_TARGET"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target ar" >&5
+$as_echo_n "checking where to find the target ar... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$AR_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $AR_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    AR_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/ar'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$AR_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $AR_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    AR_FOR_TARGET='$(AR)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target as" >&5
+$as_echo_n "checking where to find the target as... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$AS_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $AS_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gas "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    AS_FOR_TARGET='$$r/$(HOST_SUBDIR)/gas/as-new'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$AS_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $AS_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    AS_FOR_TARGET='$(AS)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target cc" >&5
+$as_echo_n "checking where to find the target cc... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$CC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $CC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    CC_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$CC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $CC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    CC_FOR_TARGET='$(CC)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target c++" >&5
+$as_echo_n "checking where to find the target c++... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$CXX_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $CXX_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  case ,${enable_languages}, in
+    *,c++,*) ;;
+    *) ok=no ;;
+  esac
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    CXX_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/g++ -B$$r/$(HOST_SUBDIR)/gcc/ -nostdinc++ `test ! -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags || $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/scripts/testsuite_flags --build-includes` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$CXX_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $CXX_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    CXX_FOR_TARGET='$(CXX)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target c++ for libstdc++" >&5
+$as_echo_n "checking where to find the target c++ for libstdc++... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$RAW_CXX_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $RAW_CXX_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  case ,${enable_languages}, in
+    *,c++,*) ;;
+    *) ok=no ;;
+  esac
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    RAW_CXX_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/xgcc -shared-libgcc -B$$r/$(HOST_SUBDIR)/gcc -nostdinc++ -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$RAW_CXX_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $RAW_CXX_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    RAW_CXX_FOR_TARGET='$(CXX)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target dlltool" >&5
+$as_echo_n "checking where to find the target dlltool... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$DLLTOOL_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $DLLTOOL_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    DLLTOOL_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/dlltool'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$DLLTOOL_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $DLLTOOL_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    DLLTOOL_FOR_TARGET='$(DLLTOOL)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target gcc" >&5
+$as_echo_n "checking where to find the target gcc... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$GCC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GCC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    GCC_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/xgcc -B$$r/$(HOST_SUBDIR)/gcc/'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$GCC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GCC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    GCC_FOR_TARGET='$()'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target gcj" >&5
+$as_echo_n "checking where to find the target gcj... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$GCJ_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GCJ_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  case ,${enable_languages}, in
+    *,java,*) ;;
+    *) ok=no ;;
+  esac
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    GCJ_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gcj -B$$r/$(HOST_SUBDIR)/gcc/'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$GCJ_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GCJ_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    GCJ_FOR_TARGET='$(GCJ)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target gfortran" >&5
+$as_echo_n "checking where to find the target gfortran... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$GFORTRAN_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GFORTRAN_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" gcc "*) ;;
+    *) ok=no ;;
+  esac
+  case ,${enable_languages}, in
+    *,fortran,*) ;;
+    *) ok=no ;;
+  esac
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    GFORTRAN_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gfortran -B$$r/$(HOST_SUBDIR)/gcc/'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$GFORTRAN_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $GFORTRAN_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    GFORTRAN_FOR_TARGET='$(GFORTRAN)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target ld" >&5
+$as_echo_n "checking where to find the target ld... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$LD_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $LD_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" ld "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    LD_FOR_TARGET='$$r/$(HOST_SUBDIR)/ld/ld-new'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$LD_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $LD_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    LD_FOR_TARGET='$(LD)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target lipo" >&5
+$as_echo_n "checking where to find the target lipo... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$LIPO_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $LIPO_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  if expr "x$LIPO_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $LIPO_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    LIPO_FOR_TARGET='$(LIPO)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target nm" >&5
+$as_echo_n "checking where to find the target nm... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$NM_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $NM_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    NM_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/nm-new'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$NM_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $NM_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    NM_FOR_TARGET='$(NM)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target objdump" >&5
+$as_echo_n "checking where to find the target objdump... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$OBJDUMP_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $OBJDUMP_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    OBJDUMP_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/objdump'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$OBJDUMP_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $OBJDUMP_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    OBJDUMP_FOR_TARGET='$(OBJDUMP)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target ranlib" >&5
+$as_echo_n "checking where to find the target ranlib... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$RANLIB_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $RANLIB_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    RANLIB_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/ranlib'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$RANLIB_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $RANLIB_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    RANLIB_FOR_TARGET='$(RANLIB)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target strip" >&5
+$as_echo_n "checking where to find the target strip... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$STRIP_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $STRIP_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    STRIP_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/strip'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$STRIP_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $STRIP_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    STRIP_FOR_TARGET='$(STRIP)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target windres" >&5
+$as_echo_n "checking where to find the target windres... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$WINDRES_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $WINDRES_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    WINDRES_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/windres'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$WINDRES_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $WINDRES_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    WINDRES_FOR_TARGET='$(WINDRES)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking where to find the target windmc" >&5
+$as_echo_n "checking where to find the target windmc... " >&6; }
+if test "x${build}" != "x${host}" ; then
+  if expr "x$WINDMC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $WINDMC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  else
+    # Canadian cross, just use what we found
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+else
+  ok=yes
+  case " ${configdirs} " in
+    *" binutils "*) ;;
+    *) ok=no ;;
+  esac
+  
+  if test $ok = yes; then
+    # An in-tree tool is available and we can use it
+    WINDMC_FOR_TARGET='$$r/$(HOST_SUBDIR)/binutils/windmc'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: just compiled" >&5
+$as_echo "just compiled" >&6; }
+  elif expr "x$WINDMC_FOR_TARGET" : "x/" > /dev/null; then
+    # We already found the complete path
+    ac_dir=`dirname $WINDMC_FOR_TARGET`
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir" >&5
+$as_echo "pre-installed in $ac_dir" >&6; }
+  elif test "x$target" = "x$host"; then
+    # We can use an host tool
+    WINDMC_FOR_TARGET='$(WINDMC)'
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: host tool" >&5
+$as_echo "host tool" >&6; }
+  else
+    # We need a cross tool
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: pre-installed" >&5
+$as_echo "pre-installed" >&6; }
+  fi
+fi
+
+
+
+
+
+# Certain tools may need extra flags.
+AR_FOR_TARGET=${AR_FOR_TARGET}${extra_arflags_for_target}
+RANLIB_FOR_TARGET=${RANLIB_FOR_TARGET}${extra_ranlibflags_for_target}
+NM_FOR_TARGET=${NM_FOR_TARGET}${extra_nmflags_for_target}
+
+# When building target libraries, except in a Canadian cross, we use
+# the same toolchain as the compiler we just built.
+COMPILER_AS_FOR_TARGET='$(AS_FOR_TARGET)'
+COMPILER_LD_FOR_TARGET='$(LD_FOR_TARGET)'
+COMPILER_NM_FOR_TARGET='$(NM_FOR_TARGET)'
+if test $host = $build; then
+  case " $configdirs " in
+    *" gcc "*)
+      COMPILER_AS_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/as'
+      COMPILER_LD_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/collect-ld'
+      COMPILER_NM_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/nm'${extra_nmflags_for_target}
+      ;;
+  esac
+fi
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles" >&5
+$as_echo_n "checking whether to enable maintainer-specific portions of Makefiles... " >&6; }
+@%:@ Check whether --enable-maintainer-mode was given.
+if test "${enable_maintainer_mode+set}" = set; then :
+  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval
+else
+  USE_MAINTAINER_MODE=no
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE" >&5
+$as_echo "$USE_MAINTAINER_MODE" >&6; }
+
+
+if test "$USE_MAINTAINER_MODE" = yes; then
+  MAINTAINER_MODE_TRUE=
+  MAINTAINER_MODE_FALSE='#'
+else
+  MAINTAINER_MODE_TRUE='#'
+  MAINTAINER_MODE_FALSE=
+fi	
+MAINT=$MAINTAINER_MODE_TRUE
+
+# ---------------------
+# GCC bootstrap support
+# ---------------------
+
+# Stage specific cflags for build.
+stage1_cflags="-g"
+case $build in
+  vax-*-*)
+    case ${GCC} in
+      yes) stage1_cflags="-g -Wa,-J" ;;
+      *) stage1_cflags="-g -J" ;;
+    esac ;;
+esac
+
+# This is aimed to mimic bootstrap with a non-GCC compiler to catch problems.
+if test "$GCC" = yes -a "$ENABLE_BUILD_WITH_CXX" != yes; then
+  saved_CFLAGS="$CFLAGS"
+
+  # Pass -fkeep-inline-functions for stage 1 if the GCC version supports it.
+  CFLAGS="$CFLAGS -fkeep-inline-functions"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -fkeep-inline-functions is supported" >&5
+$as_echo_n "checking whether -fkeep-inline-functions is supported... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#if (__GNUC__ < 3) \
+    || (__GNUC__ == 3 && (__GNUC_MINOR__ < 3 \
+			  || (__GNUC_MINOR__ == 3 && __GNUC_PATCHLEVEL__ < 1)))
+#error http://gcc.gnu.org/PR29382
+#endif
+    
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }; stage1_cflags="$stage1_cflags -fkeep-inline-functions"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+  CFLAGS="$saved_CFLAGS"
+fi
+
+
+
+# Enable --enable-checking in stage1 of the compiler.
+@%:@ Check whether --enable-stage1-checking was given.
+if test "${enable_stage1_checking+set}" = set; then :
+  enableval=$enable_stage1_checking; stage1_checking=--enable-checking=${enable_stage1_checking}
+else
+  if test "x$enable_checking" = xno || test "x$enable_checking" = x; then
+  stage1_checking=--enable-checking=yes,types
+else
+  stage1_checking=--enable-checking=$enable_checking,types
+fi
+fi
+
+
+
+# Enable -Werror in bootstrap stage2 and later.
+@%:@ Check whether --enable-werror was given.
+if test "${enable_werror+set}" = set; then :
+  enableval=$enable_werror; 
+else
+  if test -d ${srcdir}/gcc && test x"`cat $srcdir/gcc/DEV-PHASE`" = xexperimental; then
+  enable_werror=yes
+else
+  enable_werror=no
+fi
+fi
+
+case ${enable_werror} in
+  yes) stage2_werror_flag="--enable-werror-always" ;;
+  *) stage2_werror_flag="" ;;
+esac
+
+
+# Specify what files to not compare during bootstrap.
+
+compare_exclusions="gcc/cc*-checksum\$(objext) | gcc/ada/*tools/*"
+case "$target" in
+  hppa*64*-*-hpux*) ;;
+  hppa*-*-hpux*) compare_exclusions="gcc/cc*-checksum\$(objext) | */libgcc/lib2funcs* | gcc/ada/*tools/*" ;;
+esac
+
+
+ac_config_files="$ac_config_files Makefile"
+
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, we kill variables containing newlines.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+
+  (set) 2>&1 |
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      # `set' does not quote correctly, so add quotes: double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \.
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;; #(
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+) |
+  sed '
+     /^ac_cv_env_/b end
+     t clear
+     :clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     :end' >>confcache
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
+$as_echo "$as_me: updating cache $cache_file" >&6;}
+    cat confcache >$cache_file
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
+$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+# Transform confdefs.h into DEFS.
+# Protect against shell expansion while executing Makefile rules.
+# Protect against Makefile macro expansion.
+#
+# If the first sed substitution is executed (which looks for macros that
+# take arguments), then branch to the quote section.  Otherwise,
+# look for a macro that doesn't take arguments.
+ac_script='
+:mline
+/\\$/{
+ N
+ s,\\\n,,
+ b mline
+}
+t clear
+:clear
+s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*([^)]*)\)[	 ]*\(.*\)/-D\1=\2/g
+t quote
+s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)/-D\1=\2/g
+t quote
+b any
+:quote
+s/[	 `~#$^&*(){}\\|;'\''"<>?]/\\&/g
+s/\[/\\&/g
+s/\]/\\&/g
+s/\$/$$/g
+H
+:any
+${
+	g
+	s/^\n//
+	s/\n/ /g
+	p
+}
+'
+DEFS=`sed -n "$ac_script" confdefs.h`
+
+
+ac_libobjs=
+ac_ltlibobjs=
+for ac_i in : $LIB@&t@OBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
+done
+LIB@&t@OBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+
+: ${CONFIG_STATUS=./config.status}
+ac_write_fail=0
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
+$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
+as_write_fail=0
+cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+
+SHELL=\${CONFIG_SHELL-$SHELL}
+export SHELL
+_ASEOF
+cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+## ----------------------------------- ##
+## Main body of $CONFIG_STATUS script. ##
+## ----------------------------------- ##
+_ASEOF
+test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# Save the log message, to keep $0 and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+_ACEOF
+
+case $ac_config_files in *"
+"*) set x $ac_config_files; shift; ac_config_files=$*;;
+esac
+
+
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+# Files that config.status was made for.
+config_files="$ac_config_files"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+ac_cs_usage="\
+\`$as_me' instantiates files and other configuration actions
+from templates according to the current configuration.  Unless the files
+and actions are specified as TAGs, all are instantiated by default.
+
+Usage: $0 [OPTION]... [TAG]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet, --silent
+                   do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE] 
+                   instantiate the configuration file FILE
+
+Configuration files:
+$config_files
+
+Report bugs to the package provider."
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_cs_version="\\
+config.status
+configured by $0, generated by GNU Autoconf 2.64,
+  with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
+INSTALL='$INSTALL'
+AWK='$AWK'
+test -n "\$AWK" || AWK=awk
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# The default lists apply if the user does not specify any file.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    $as_echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_FILES " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --he | --h |  --help | --hel | -h )
+    $as_echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) as_fn_error "unrecognized option: \`$1'
+Try \`$0 --help' for more information." ;;
+
+  *) as_fn_append ac_config_targets " $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+if \$ac_cs_recheck; then
+  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+  shift
+  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
+  CONFIG_SHELL='$SHELL'
+  export CONFIG_SHELL
+  exec "\$@"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
+@%:@@%:@ Running $as_me. @%:@@%:@
+_ASBOX
+  $as_echo "$ac_log"
+} >&5
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+
+  *) as_fn_error "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap 'as_fn_exit 1' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} || as_fn_error "cannot create a temporary directory in ." "$LINENO" 5
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+if $AWK 'BEGIN { getline <"/dev/null" }' </dev/null 2>/dev/null; then
+  ac_cs_awk_getline=:
+  ac_cs_awk_pipe_init=
+  ac_cs_awk_read_file='
+      while ((getline aline < (F[key])) > 0)
+	print(aline)
+      close(F[key])'
+  ac_cs_awk_pipe_fini=
+else
+  ac_cs_awk_getline=false
+  ac_cs_awk_pipe_init="print \"cat <<'|#_!!_#|' &&\""
+  ac_cs_awk_read_file='
+      print "|#_!!_#|"
+      print "cat " F[key] " &&"
+      '$ac_cs_awk_pipe_init
+  # The final `:' finishes the AND list.
+  ac_cs_awk_pipe_fini='END { print "|#_!!_#|"; print ":" }'
+fi
+ac_cr=`echo X | tr X '\015'`
+# On cygwin, bash can eat \r inside `` if the user requested igncr.
+# But we know of no other shell where ac_cr would be empty at this
+# point, so we can use a bashism as a fallback.
+if test "x$ac_cr" = x; then
+  eval ac_cr=\$\'\\r\'
+fi
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$tmp/subs1.awk" &&
+_ACEOF
+
+# Create commands to substitute file output variables.
+{
+  echo "cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1" &&
+  echo 'cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&' &&
+  echo "$ac_subst_files" | sed 's/.*/F@<:@"&"@:>@="$&"/' &&
+  echo "_ACAWK" &&
+  echo "_ACEOF"
+} >conf$$files.sh &&
+. ./conf$$files.sh ||
+  as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+rm -f conf$$files.sh
+
+{
+  echo "cat >conf$$subs.awk <<_ACEOF" &&
+  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
+  echo "_ACEOF"
+} >conf$$subs.sh ||
+  as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+ac_delim_num=`echo "$ac_subst_vars" | grep -c '$'`
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  . ./conf$$subs.sh ||
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+
+  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
+  if test $ac_delim_n = $ac_delim_num; then
+    break
+  elif $ac_last_try; then
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+rm -f conf$$subs.sh
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&
+_ACEOF
+sed -n '
+h
+s/^/S["/; s/!.*/"]=/
+p
+g
+s/^[^!]*!//
+:repl
+t repl
+s/'"$ac_delim"'$//
+t delim
+:nl
+h
+s/\(.\{148\}\).*/\1/
+t more1
+s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
+p
+n
+b repl
+:more1
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t nl
+:delim
+h
+s/\(.\{148\}\).*/\1/
+t more2
+s/["\\]/\\&/g; s/^/"/; s/$/"/
+p
+b
+:more2
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t delim
+' <conf$$subs.awk | sed '
+/^[^""]/{
+  N
+  s/\n//
+}
+' >>$CONFIG_STATUS || ac_write_fail=1
+rm -f conf$$subs.awk
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACAWK
+cat >>"\$tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+  \$ac_cs_awk_pipe_init
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+  if (nfields == 3 && !substed) {
+    key = field[2]
+    if (F[key] != "" && line ~ /^[	 ]*@.*@[	 ]*$/) {
+      \$ac_cs_awk_read_file
+      next
+    }
+  }
+  print line
+}
+\$ac_cs_awk_pipe_fini
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
+  || as_fn_error "could not setup config files machinery" "$LINENO" 5
+_ACEOF
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+fi # test -n "$CONFIG_FILES"
+
+
+eval set X "  :F $CONFIG_FILES      "
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) as_fn_error "invalid tag \`$ac_tag'" "$LINENO" 5;;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   as_fn_error "cannot find input file: \`$ac_f'" "$LINENO" 5;;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      as_fn_append ac_file_inputs " '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin" \
+      || as_fn_error "could not create $ac_file" "$LINENO" 5 ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  as_dir="$ac_dir"; as_fn_mkdir_p
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+  s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_sed_extra="$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" |
+if $ac_cs_awk_getline; then
+  $AWK -f "$tmp/subs.awk"
+else
+  $AWK -f "$tmp/subs.awk" | $SHELL
+fi >$tmp/out \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out" && rm -f "$tmp/out";;
+  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
+  esac \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+ ;;
+  
+  
+  
+  esac
+
+done # for ac_tag
+
+
+as_fn_exit 0
+_ACEOF
+ac_clean_files=$ac_clean_files_save
+
+test $ac_write_fail = 0 ||
+  as_fn_error "write failure creating $CONFIG_STATUS" "$LINENO" 5
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || as_fn_exit $?
+fi
+if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
+$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
+fi
+
diff -rupN binutils-2.20/autom4te.cache/requests binutils-2.20-sean/autom4te.cache/requests
--- binutils-2.20/autom4te.cache/requests	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/autom4te.cache/requests	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,67 @@
+# This file was generated.
+# It contains the lists of macros which have been traced.
+# It can be safely removed.
+
+@request = (
+             bless( [
+                      '0',
+                      1,
+                      [
+                        '/usr/local/share/autoconf'
+                      ],
+                      [
+                        '/usr/local/share/autoconf/autoconf/autoconf.m4f',
+                        'configure.ac'
+                      ],
+                      {
+                        'AM_PROG_F77_C_O' => 1,
+                        '_LT_AC_TAGCONFIG' => 1,
+                        'm4_pattern_forbid' => 1,
+                        'AC_INIT' => 1,
+                        'AC_CANONICAL_TARGET' => 1,
+                        '_AM_COND_IF' => 1,
+                        'AC_CONFIG_LIBOBJ_DIR' => 1,
+                        'AC_SUBST' => 1,
+                        'AC_CANONICAL_HOST' => 1,
+                        'AC_FC_SRCEXT' => 1,
+                        'AC_PROG_LIBTOOL' => 1,
+                        'AM_INIT_AUTOMAKE' => 1,
+                        'AC_CONFIG_SUBDIRS' => 1,
+                        'AM_AUTOMAKE_VERSION' => 1,
+                        'LT_CONFIG_LTDL_DIR' => 1,
+                        'AC_CONFIG_LINKS' => 1,
+                        'AC_REQUIRE_AUX_FILE' => 1,
+                        'LT_SUPPORTED_TAG' => 1,
+                        'm4_sinclude' => 1,
+                        'AM_MAINTAINER_MODE' => 1,
+                        'AM_GNU_GETTEXT_INTL_SUBDIR' => 1,
+                        '_m4_warn' => 1,
+                        'AM_PROG_CXX_C_O' => 1,
+                        '_AM_COND_ENDIF' => 1,
+                        'AM_ENABLE_MULTILIB' => 1,
+                        'AM_SILENT_RULES' => 1,
+                        'AC_CONFIG_FILES' => 1,
+                        'include' => 1,
+                        'LT_INIT' => 1,
+                        'AM_GNU_GETTEXT' => 1,
+                        'AC_LIBSOURCE' => 1,
+                        'AC_CANONICAL_BUILD' => 1,
+                        'AM_PROG_FC_C_O' => 1,
+                        'AC_FC_FREEFORM' => 1,
+                        'AH_OUTPUT' => 1,
+                        'AC_CONFIG_AUX_DIR' => 1,
+                        '_AM_SUBST_NOTMAKE' => 1,
+                        'AM_PROG_CC_C_O' => 1,
+                        'm4_pattern_allow' => 1,
+                        'sinclude' => 1,
+                        'AM_CONDITIONAL' => 1,
+                        'AC_CANONICAL_SYSTEM' => 1,
+                        'AC_CONFIG_HEADERS' => 1,
+                        'AC_DEFINE_TRACE_LITERAL' => 1,
+                        'm4_include' => 1,
+                        '_AM_COND_ELSE' => 1,
+                        'AC_SUBST_TRACE' => 1
+                      }
+                    ], 'Autom4te::Request' )
+           );
+
diff -rupN binutils-2.20/autom4te.cache/traces.0 binutils-2.20-sean/autom4te.cache/traces.0
--- binutils-2.20/autom4te.cache/traces.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/autom4te.cache/traces.0	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,995 @@
+m4trace:configure.ac:22: -1- m4_include([config/acx.m4])
+m4trace:configure.ac:23: -1- m4_include([config/override.m4])
+m4trace:configure.ac:24: -1- m4_include([config/proginstall.m4])
+m4trace:configure.ac:26: -1- AC_INIT([move-if-change])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?A[CHUM]_])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([_AC_])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^AS_FLAGS$])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?m4_])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([^dnl$])
+m4trace:configure.ac:26: -1- m4_pattern_forbid([^_?AS_])
+m4trace:configure.ac:26: -1- AC_SUBST([SHELL])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([SHELL])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^SHELL$])
+m4trace:configure.ac:26: -1- AC_SUBST([PATH_SEPARATOR])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PATH_SEPARATOR])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PATH_SEPARATOR$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_NAME])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_TARNAME])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_VERSION])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_STRING])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_BUGREPORT])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.ac:26: -1- AC_SUBST([PACKAGE_URL], [m4_ifdef([AC_PACKAGE_URL],       ['AC_PACKAGE_URL'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([PACKAGE_URL])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.ac:26: -1- AC_SUBST([exec_prefix], [NONE])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([exec_prefix])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^exec_prefix$])
+m4trace:configure.ac:26: -1- AC_SUBST([prefix], [NONE])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([prefix])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^prefix$])
+m4trace:configure.ac:26: -1- AC_SUBST([program_transform_name], [s,x,x,])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([program_transform_name])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^program_transform_name$])
+m4trace:configure.ac:26: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([bindir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^bindir$])
+m4trace:configure.ac:26: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([sbindir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^sbindir$])
+m4trace:configure.ac:26: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([libexecdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^libexecdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([datarootdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^datarootdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([datadir], ['${datarootdir}'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([datadir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^datadir$])
+m4trace:configure.ac:26: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([sysconfdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^sysconfdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([sharedstatedir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^sharedstatedir$])
+m4trace:configure.ac:26: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([localstatedir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^localstatedir$])
+m4trace:configure.ac:26: -1- AC_SUBST([includedir], ['${prefix}/include'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([includedir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^includedir$])
+m4trace:configure.ac:26: -1- AC_SUBST([oldincludedir], ['/usr/include'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([oldincludedir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^oldincludedir$])
+m4trace:configure.ac:26: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
+				     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
+				     ['${datarootdir}/doc/${PACKAGE}'])])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([docdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^docdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([infodir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^infodir$])
+m4trace:configure.ac:26: -1- AC_SUBST([htmldir], ['${docdir}'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([htmldir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^htmldir$])
+m4trace:configure.ac:26: -1- AC_SUBST([dvidir], ['${docdir}'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([dvidir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^dvidir$])
+m4trace:configure.ac:26: -1- AC_SUBST([pdfdir], ['${docdir}'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([pdfdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^pdfdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([psdir], ['${docdir}'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([psdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^psdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([libdir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^libdir$])
+m4trace:configure.ac:26: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([localedir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^localedir$])
+m4trace:configure.ac:26: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([mandir])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^mandir$])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
+@%:@undef PACKAGE_NAME])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
+@%:@undef PACKAGE_TARNAME])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
+@%:@undef PACKAGE_VERSION])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
+@%:@undef PACKAGE_STRING])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
+@%:@undef PACKAGE_BUGREPORT])
+m4trace:configure.ac:26: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_URL])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.ac:26: -1- AH_OUTPUT([PACKAGE_URL], [/* Define to the home page for this package. */
+@%:@undef PACKAGE_URL])
+m4trace:configure.ac:26: -1- AC_SUBST([DEFS])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([DEFS])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^DEFS$])
+m4trace:configure.ac:26: -1- AC_SUBST([ECHO_C])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([ECHO_C])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_C$])
+m4trace:configure.ac:26: -1- AC_SUBST([ECHO_N])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([ECHO_N])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_N$])
+m4trace:configure.ac:26: -1- AC_SUBST([ECHO_T])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([ECHO_T])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^ECHO_T$])
+m4trace:configure.ac:26: -1- AC_SUBST([LIBS])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.ac:26: -1- AC_SUBST([build_alias])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([build_alias])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^build_alias$])
+m4trace:configure.ac:26: -1- AC_SUBST([host_alias])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([host_alias])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^host_alias$])
+m4trace:configure.ac:26: -1- AC_SUBST([target_alias])
+m4trace:configure.ac:26: -1- AC_SUBST_TRACE([target_alias])
+m4trace:configure.ac:26: -1- m4_pattern_allow([^target_alias$])
+m4trace:configure.ac:56: -1- AC_SUBST([TOPLEVEL_CONFIGURE_ARGUMENTS])
+m4trace:configure.ac:56: -1- AC_SUBST_TRACE([TOPLEVEL_CONFIGURE_ARGUMENTS])
+m4trace:configure.ac:56: -1- m4_pattern_allow([^TOPLEVEL_CONFIGURE_ARGUMENTS$])
+m4trace:configure.ac:59: -1- AC_CANONICAL_BUILD
+m4trace:configure.ac:59: -1- AC_REQUIRE_AUX_FILE([config.sub])
+m4trace:configure.ac:59: -1- AC_REQUIRE_AUX_FILE([config.guess])
+m4trace:configure.ac:59: -1- AC_SUBST([build], [$ac_cv_build])
+m4trace:configure.ac:59: -1- AC_SUBST_TRACE([build])
+m4trace:configure.ac:59: -1- m4_pattern_allow([^build$])
+m4trace:configure.ac:59: -1- AC_SUBST([build_cpu], [$[1]])
+m4trace:configure.ac:59: -1- AC_SUBST_TRACE([build_cpu])
+m4trace:configure.ac:59: -1- m4_pattern_allow([^build_cpu$])
+m4trace:configure.ac:59: -1- AC_SUBST([build_vendor], [$[2]])
+m4trace:configure.ac:59: -1- AC_SUBST_TRACE([build_vendor])
+m4trace:configure.ac:59: -1- m4_pattern_allow([^build_vendor$])
+m4trace:configure.ac:59: -1- AC_SUBST([build_os])
+m4trace:configure.ac:59: -1- AC_SUBST_TRACE([build_os])
+m4trace:configure.ac:59: -1- m4_pattern_allow([^build_os$])
+m4trace:configure.ac:59: -1- AC_SUBST([build_noncanonical])
+m4trace:configure.ac:59: -1- AC_SUBST_TRACE([build_noncanonical])
+m4trace:configure.ac:59: -1- m4_pattern_allow([^build_noncanonical$])
+m4trace:configure.ac:60: -1- AC_SUBST([host_noncanonical])
+m4trace:configure.ac:60: -1- AC_SUBST_TRACE([host_noncanonical])
+m4trace:configure.ac:60: -1- m4_pattern_allow([^host_noncanonical$])
+m4trace:configure.ac:61: -1- AC_SUBST([target_noncanonical])
+m4trace:configure.ac:61: -1- AC_SUBST_TRACE([target_noncanonical])
+m4trace:configure.ac:61: -1- m4_pattern_allow([^target_noncanonical$])
+m4trace:configure.ac:72: -1- AC_CANONICAL_SYSTEM
+m4trace:configure.ac:72: -1- _m4_warn([obsolete], [The macro `AC_CANONICAL_SYSTEM' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:1863: AC_CANONICAL_SYSTEM is expanded from...
+configure.ac:72: the top level])
+m4trace:configure.ac:72: -1- AC_CANONICAL_TARGET
+m4trace:configure.ac:72: -1- AC_CANONICAL_HOST
+m4trace:configure.ac:72: -1- AC_SUBST([host], [$ac_cv_host])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([host])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^host$])
+m4trace:configure.ac:72: -1- AC_SUBST([host_cpu], [$[1]])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([host_cpu])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^host_cpu$])
+m4trace:configure.ac:72: -1- AC_SUBST([host_vendor], [$[2]])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([host_vendor])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^host_vendor$])
+m4trace:configure.ac:72: -1- AC_SUBST([host_os])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([host_os])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^host_os$])
+m4trace:configure.ac:72: -1- AC_SUBST([target], [$ac_cv_target])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([target])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^target$])
+m4trace:configure.ac:72: -1- AC_SUBST([target_cpu], [$[1]])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([target_cpu])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^target_cpu$])
+m4trace:configure.ac:72: -1- AC_SUBST([target_vendor], [$[2]])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([target_vendor])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^target_vendor$])
+m4trace:configure.ac:72: -1- AC_SUBST([target_os])
+m4trace:configure.ac:72: -1- AC_SUBST_TRACE([target_os])
+m4trace:configure.ac:72: -1- m4_pattern_allow([^target_os$])
+m4trace:configure.ac:75: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:76: -1- m4_pattern_allow([^AS_FOR_BUILD$])
+m4trace:configure.ac:79: -1- AC_REQUIRE_AUX_FILE([install-sh])
+m4trace:configure.ac:79: -1- AC_SUBST([INSTALL_PROGRAM])
+m4trace:configure.ac:79: -1- AC_SUBST_TRACE([INSTALL_PROGRAM])
+m4trace:configure.ac:79: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
+m4trace:configure.ac:79: -1- AC_SUBST([INSTALL_SCRIPT])
+m4trace:configure.ac:79: -1- AC_SUBST_TRACE([INSTALL_SCRIPT])
+m4trace:configure.ac:79: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
+m4trace:configure.ac:79: -1- AC_SUBST([INSTALL_DATA])
+m4trace:configure.ac:79: -1- AC_SUBST_TRACE([INSTALL_DATA])
+m4trace:configure.ac:79: -1- m4_pattern_allow([^INSTALL_DATA$])
+m4trace:configure.ac:80: -1- AC_SUBST([LN])
+m4trace:configure.ac:80: -1- AC_SUBST_TRACE([LN])
+m4trace:configure.ac:80: -1- m4_pattern_allow([^LN$])
+m4trace:configure.ac:81: -1- AC_SUBST([LN_S], [$as_ln_s])
+m4trace:configure.ac:81: -1- AC_SUBST_TRACE([LN_S])
+m4trace:configure.ac:81: -1- m4_pattern_allow([^LN_S$])
+m4trace:configure.ac:82: -1- AC_SUBST([SED])
+m4trace:configure.ac:82: -1- AC_SUBST_TRACE([SED])
+m4trace:configure.ac:82: -1- m4_pattern_allow([^SED$])
+m4trace:configure.ac:83: -1- AC_SUBST([AWK])
+m4trace:configure.ac:83: -1- AC_SUBST_TRACE([AWK])
+m4trace:configure.ac:83: -1- m4_pattern_allow([^AWK$])
+m4trace:configure.ac:237: -1- AC_SUBST([build_libsubdir])
+m4trace:configure.ac:237: -1- AC_SUBST_TRACE([build_libsubdir])
+m4trace:configure.ac:237: -1- m4_pattern_allow([^build_libsubdir$])
+m4trace:configure.ac:237: -1- AC_SUBST([build_subdir])
+m4trace:configure.ac:237: -1- AC_SUBST_TRACE([build_subdir])
+m4trace:configure.ac:237: -1- m4_pattern_allow([^build_subdir$])
+m4trace:configure.ac:237: -1- AC_SUBST([host_subdir])
+m4trace:configure.ac:237: -1- AC_SUBST_TRACE([host_subdir])
+m4trace:configure.ac:237: -1- m4_pattern_allow([^host_subdir$])
+m4trace:configure.ac:237: -1- AC_SUBST([target_subdir])
+m4trace:configure.ac:237: -1- AC_SUBST_TRACE([target_subdir])
+m4trace:configure.ac:237: -1- m4_pattern_allow([^target_subdir$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CFLAGS])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.ac:1184: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.ac:1184: -1- AC_SUBST([LIBS])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([ac_ct_CC])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([ac_ct_CC])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^ac_ct_CC$])
+m4trace:configure.ac:1184: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([EXEEXT])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^EXEEXT$])
+m4trace:configure.ac:1184: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
+m4trace:configure.ac:1184: -1- AC_SUBST_TRACE([OBJEXT])
+m4trace:configure.ac:1184: -1- m4_pattern_allow([^OBJEXT$])
+m4trace:configure.ac:1185: -1- AC_SUBST([CXX])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([CXX])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^CXX$])
+m4trace:configure.ac:1185: -1- AC_SUBST([CXXFLAGS])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([CXXFLAGS])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^CXXFLAGS$])
+m4trace:configure.ac:1185: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.ac:1185: -1- AC_SUBST([LIBS])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.ac:1185: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.ac:1185: -1- AC_SUBST([CXX])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([CXX])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^CXX$])
+m4trace:configure.ac:1185: -1- AC_SUBST([ac_ct_CXX])
+m4trace:configure.ac:1185: -1- AC_SUBST_TRACE([ac_ct_CXX])
+m4trace:configure.ac:1185: -1- m4_pattern_allow([^ac_ct_CXX$])
+m4trace:configure.ac:1206: -1- _m4_warn([obsolete], [The macro `AC_CHECK_TOOL_PREFIX' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/programs.m4:207: AC_CHECK_TOOL_PREFIX is expanded from...
+config/acx.m4:365: ACX_PROG_GNAT is expanded from...
+configure.ac:1206: the top level])
+m4trace:configure.ac:1206: -1- AC_SUBST([GNATBIND])
+m4trace:configure.ac:1206: -1- AC_SUBST_TRACE([GNATBIND])
+m4trace:configure.ac:1206: -1- m4_pattern_allow([^GNATBIND$])
+m4trace:configure.ac:1206: -1- AC_SUBST([GNATMAKE])
+m4trace:configure.ac:1206: -1- AC_SUBST_TRACE([GNATMAKE])
+m4trace:configure.ac:1206: -1- m4_pattern_allow([^GNATMAKE$])
+m4trace:configure.ac:1207: -1- AC_SUBST([do_compare])
+m4trace:configure.ac:1207: -1- AC_SUBST_TRACE([do_compare])
+m4trace:configure.ac:1207: -1- m4_pattern_allow([^do_compare$])
+m4trace:configure.ac:1326: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1326: the top level])
+m4trace:configure.ac:1341: -2- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1341: the top level])
+m4trace:configure.ac:1336: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1336: the top level])
+m4trace:configure.ac:1354: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1354: the top level])
+m4trace:configure.ac:1367: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2674: AC_TRY_LINK is expanded from...
+configure.ac:1367: the top level])
+m4trace:configure.ac:1385: -1- _m4_warn([obsolete], [The macro `AC_TRY_LINK' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2674: AC_TRY_LINK is expanded from...
+configure.ac:1385: the top level])
+m4trace:configure.ac:1430: -1- AC_SUBST([gmplibs])
+m4trace:configure.ac:1430: -1- AC_SUBST_TRACE([gmplibs])
+m4trace:configure.ac:1430: -1- m4_pattern_allow([^gmplibs$])
+m4trace:configure.ac:1431: -1- AC_SUBST([gmpinc])
+m4trace:configure.ac:1431: -1- AC_SUBST_TRACE([gmpinc])
+m4trace:configure.ac:1431: -1- m4_pattern_allow([^gmpinc$])
+m4trace:configure.ac:1432: -1- AC_SUBST([extra_mpfr_configure_flags])
+m4trace:configure.ac:1432: -1- AC_SUBST_TRACE([extra_mpfr_configure_flags])
+m4trace:configure.ac:1432: -1- m4_pattern_allow([^extra_mpfr_configure_flags$])
+m4trace:configure.ac:1433: -1- AC_SUBST([extra_mpc_gmp_configure_flags])
+m4trace:configure.ac:1433: -1- AC_SUBST_TRACE([extra_mpc_gmp_configure_flags])
+m4trace:configure.ac:1433: -1- m4_pattern_allow([^extra_mpc_gmp_configure_flags$])
+m4trace:configure.ac:1434: -1- AC_SUBST([extra_mpc_mpfr_configure_flags])
+m4trace:configure.ac:1434: -1- AC_SUBST_TRACE([extra_mpc_mpfr_configure_flags])
+m4trace:configure.ac:1434: -1- m4_pattern_allow([^extra_mpc_mpfr_configure_flags$])
+m4trace:configure.ac:1455: -1- AC_SUBST([stage1_ldflags])
+m4trace:configure.ac:1455: -1- AC_SUBST_TRACE([stage1_ldflags])
+m4trace:configure.ac:1455: -1- m4_pattern_allow([^stage1_ldflags$])
+m4trace:configure.ac:1466: -1- AC_SUBST([stage1_libs])
+m4trace:configure.ac:1466: -1- AC_SUBST_TRACE([stage1_libs])
+m4trace:configure.ac:1466: -1- m4_pattern_allow([^stage1_libs$])
+m4trace:configure.ac:1481: -1- AC_SUBST([poststage1_ldflags])
+m4trace:configure.ac:1481: -1- AC_SUBST_TRACE([poststage1_ldflags])
+m4trace:configure.ac:1481: -1- m4_pattern_allow([^poststage1_ldflags$])
+m4trace:configure.ac:1493: -1- AC_SUBST([poststage1_libs])
+m4trace:configure.ac:1493: -1- AC_SUBST_TRACE([poststage1_libs])
+m4trace:configure.ac:1493: -1- m4_pattern_allow([^poststage1_libs$])
+m4trace:configure.ac:1539: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1539: the top level])
+m4trace:configure.ac:1548: -1- AC_SUBST([ppllibs])
+m4trace:configure.ac:1548: -1- AC_SUBST_TRACE([ppllibs])
+m4trace:configure.ac:1548: -1- m4_pattern_allow([^ppllibs$])
+m4trace:configure.ac:1549: -1- AC_SUBST([pplinc])
+m4trace:configure.ac:1549: -1- AC_SUBST_TRACE([pplinc])
+m4trace:configure.ac:1549: -1- m4_pattern_allow([^pplinc$])
+m4trace:configure.ac:1595: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:1595: the top level])
+m4trace:configure.ac:1604: -1- AC_SUBST([clooglibs])
+m4trace:configure.ac:1604: -1- AC_SUBST_TRACE([clooglibs])
+m4trace:configure.ac:1604: -1- m4_pattern_allow([^clooglibs$])
+m4trace:configure.ac:1605: -1- AC_SUBST([clooginc])
+m4trace:configure.ac:1605: -1- AC_SUBST_TRACE([clooginc])
+m4trace:configure.ac:1605: -1- m4_pattern_allow([^clooginc$])
+m4trace:configure.ac:1827: -1- AC_SUBST([stage1_languages])
+m4trace:configure.ac:1827: -1- AC_SUBST_TRACE([stage1_languages])
+m4trace:configure.ac:1827: -1- m4_pattern_allow([^stage1_languages$])
+m4trace:configure.ac:2004: -1- AC_SUBST([SYSROOT_CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2004: -1- AC_SUBST_TRACE([SYSROOT_CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2004: -1- m4_pattern_allow([^SYSROOT_CFLAGS_FOR_TARGET$])
+m4trace:configure.ac:2016: -1- AC_SUBST([DEBUG_PREFIX_CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2016: -1- AC_SUBST_TRACE([DEBUG_PREFIX_CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2016: -1- m4_pattern_allow([^DEBUG_PREFIX_CFLAGS_FOR_TARGET$])
+m4trace:configure.ac:2035: -1- AC_SUBST([CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2035: -1- AC_SUBST_TRACE([CFLAGS_FOR_TARGET])
+m4trace:configure.ac:2035: -1- m4_pattern_allow([^CFLAGS_FOR_TARGET$])
+m4trace:configure.ac:2048: -1- AC_SUBST([CXXFLAGS_FOR_TARGET])
+m4trace:configure.ac:2048: -1- AC_SUBST_TRACE([CXXFLAGS_FOR_TARGET])
+m4trace:configure.ac:2048: -1- m4_pattern_allow([^CXXFLAGS_FOR_TARGET$])
+m4trace:configure.ac:2567: -1- m4_pattern_allow([^serialization_dependencies$])
+m4trace:configure.ac:2832: -1- m4_pattern_allow([^host_makefile_frag$])
+m4trace:configure.ac:2833: -1- m4_pattern_allow([^target_makefile_frag$])
+m4trace:configure.ac:2834: -1- m4_pattern_allow([^alphaieee_frag$])
+m4trace:configure.ac:2835: -1- m4_pattern_allow([^ospace_frag$])
+m4trace:configure.ac:2838: -1- AC_SUBST([RPATH_ENVVAR])
+m4trace:configure.ac:2838: -1- AC_SUBST_TRACE([RPATH_ENVVAR])
+m4trace:configure.ac:2838: -1- m4_pattern_allow([^RPATH_ENVVAR$])
+m4trace:configure.ac:2839: -1- AC_SUBST([GCC_SHLIB_SUBDIR])
+m4trace:configure.ac:2839: -1- AC_SUBST_TRACE([GCC_SHLIB_SUBDIR])
+m4trace:configure.ac:2839: -1- m4_pattern_allow([^GCC_SHLIB_SUBDIR$])
+m4trace:configure.ac:2840: -1- AC_SUBST([tooldir])
+m4trace:configure.ac:2840: -1- AC_SUBST_TRACE([tooldir])
+m4trace:configure.ac:2840: -1- m4_pattern_allow([^tooldir$])
+m4trace:configure.ac:2841: -1- AC_SUBST([build_tooldir])
+m4trace:configure.ac:2841: -1- AC_SUBST_TRACE([build_tooldir])
+m4trace:configure.ac:2841: -1- m4_pattern_allow([^build_tooldir$])
+m4trace:configure.ac:2842: -1- AC_SUBST([CONFIGURE_GDB_TK])
+m4trace:configure.ac:2842: -1- AC_SUBST_TRACE([CONFIGURE_GDB_TK])
+m4trace:configure.ac:2842: -1- m4_pattern_allow([^CONFIGURE_GDB_TK$])
+m4trace:configure.ac:2843: -1- AC_SUBST([GDB_TK])
+m4trace:configure.ac:2843: -1- AC_SUBST_TRACE([GDB_TK])
+m4trace:configure.ac:2843: -1- m4_pattern_allow([^GDB_TK$])
+m4trace:configure.ac:2844: -1- AC_SUBST([INSTALL_GDB_TK])
+m4trace:configure.ac:2844: -1- AC_SUBST_TRACE([INSTALL_GDB_TK])
+m4trace:configure.ac:2844: -1- m4_pattern_allow([^INSTALL_GDB_TK$])
+m4trace:configure.ac:2847: -1- AC_SUBST([build_configargs])
+m4trace:configure.ac:2847: -1- AC_SUBST_TRACE([build_configargs])
+m4trace:configure.ac:2847: -1- m4_pattern_allow([^build_configargs$])
+m4trace:configure.ac:2848: -1- AC_SUBST([build_configdirs])
+m4trace:configure.ac:2848: -1- AC_SUBST_TRACE([build_configdirs])
+m4trace:configure.ac:2848: -1- m4_pattern_allow([^build_configdirs$])
+m4trace:configure.ac:2851: -1- AC_SUBST([host_configargs])
+m4trace:configure.ac:2851: -1- AC_SUBST_TRACE([host_configargs])
+m4trace:configure.ac:2851: -1- m4_pattern_allow([^host_configargs$])
+m4trace:configure.ac:2852: -1- AC_SUBST([configdirs])
+m4trace:configure.ac:2852: -1- AC_SUBST_TRACE([configdirs])
+m4trace:configure.ac:2852: -1- m4_pattern_allow([^configdirs$])
+m4trace:configure.ac:2855: -1- AC_SUBST([target_configargs])
+m4trace:configure.ac:2855: -1- AC_SUBST_TRACE([target_configargs])
+m4trace:configure.ac:2855: -1- m4_pattern_allow([^target_configargs$])
+m4trace:configure.ac:2859: -1- AC_SUBST([AR_FOR_BUILD])
+m4trace:configure.ac:2859: -1- AC_SUBST_TRACE([AR_FOR_BUILD])
+m4trace:configure.ac:2859: -1- m4_pattern_allow([^AR_FOR_BUILD$])
+m4trace:configure.ac:2860: -1- AC_SUBST([AS_FOR_BUILD])
+m4trace:configure.ac:2860: -1- AC_SUBST_TRACE([AS_FOR_BUILD])
+m4trace:configure.ac:2860: -1- m4_pattern_allow([^AS_FOR_BUILD$])
+m4trace:configure.ac:2861: -1- AC_SUBST([CC_FOR_BUILD])
+m4trace:configure.ac:2861: -1- AC_SUBST_TRACE([CC_FOR_BUILD])
+m4trace:configure.ac:2861: -1- m4_pattern_allow([^CC_FOR_BUILD$])
+m4trace:configure.ac:2862: -1- AC_SUBST([CFLAGS_FOR_BUILD])
+m4trace:configure.ac:2862: -1- AC_SUBST_TRACE([CFLAGS_FOR_BUILD])
+m4trace:configure.ac:2862: -1- m4_pattern_allow([^CFLAGS_FOR_BUILD$])
+m4trace:configure.ac:2863: -1- AC_SUBST([CXXFLAGS_FOR_BUILD])
+m4trace:configure.ac:2863: -1- AC_SUBST_TRACE([CXXFLAGS_FOR_BUILD])
+m4trace:configure.ac:2863: -1- m4_pattern_allow([^CXXFLAGS_FOR_BUILD$])
+m4trace:configure.ac:2864: -1- AC_SUBST([CXX_FOR_BUILD])
+m4trace:configure.ac:2864: -1- AC_SUBST_TRACE([CXX_FOR_BUILD])
+m4trace:configure.ac:2864: -1- m4_pattern_allow([^CXX_FOR_BUILD$])
+m4trace:configure.ac:2865: -1- AC_SUBST([DLLTOOL_FOR_BUILD])
+m4trace:configure.ac:2865: -1- AC_SUBST_TRACE([DLLTOOL_FOR_BUILD])
+m4trace:configure.ac:2865: -1- m4_pattern_allow([^DLLTOOL_FOR_BUILD$])
+m4trace:configure.ac:2866: -1- AC_SUBST([GCJ_FOR_BUILD])
+m4trace:configure.ac:2866: -1- AC_SUBST_TRACE([GCJ_FOR_BUILD])
+m4trace:configure.ac:2866: -1- m4_pattern_allow([^GCJ_FOR_BUILD$])
+m4trace:configure.ac:2867: -1- AC_SUBST([GFORTRAN_FOR_BUILD])
+m4trace:configure.ac:2867: -1- AC_SUBST_TRACE([GFORTRAN_FOR_BUILD])
+m4trace:configure.ac:2867: -1- m4_pattern_allow([^GFORTRAN_FOR_BUILD$])
+m4trace:configure.ac:2868: -1- AC_SUBST([LDFLAGS_FOR_BUILD])
+m4trace:configure.ac:2868: -1- AC_SUBST_TRACE([LDFLAGS_FOR_BUILD])
+m4trace:configure.ac:2868: -1- m4_pattern_allow([^LDFLAGS_FOR_BUILD$])
+m4trace:configure.ac:2869: -1- AC_SUBST([LD_FOR_BUILD])
+m4trace:configure.ac:2869: -1- AC_SUBST_TRACE([LD_FOR_BUILD])
+m4trace:configure.ac:2869: -1- m4_pattern_allow([^LD_FOR_BUILD$])
+m4trace:configure.ac:2870: -1- AC_SUBST([NM_FOR_BUILD])
+m4trace:configure.ac:2870: -1- AC_SUBST_TRACE([NM_FOR_BUILD])
+m4trace:configure.ac:2870: -1- m4_pattern_allow([^NM_FOR_BUILD$])
+m4trace:configure.ac:2871: -1- AC_SUBST([RANLIB_FOR_BUILD])
+m4trace:configure.ac:2871: -1- AC_SUBST_TRACE([RANLIB_FOR_BUILD])
+m4trace:configure.ac:2871: -1- m4_pattern_allow([^RANLIB_FOR_BUILD$])
+m4trace:configure.ac:2872: -1- AC_SUBST([WINDMC_FOR_BUILD])
+m4trace:configure.ac:2872: -1- AC_SUBST_TRACE([WINDMC_FOR_BUILD])
+m4trace:configure.ac:2872: -1- m4_pattern_allow([^WINDMC_FOR_BUILD$])
+m4trace:configure.ac:2873: -1- AC_SUBST([WINDRES_FOR_BUILD])
+m4trace:configure.ac:2873: -1- AC_SUBST_TRACE([WINDRES_FOR_BUILD])
+m4trace:configure.ac:2873: -1- m4_pattern_allow([^WINDRES_FOR_BUILD$])
+m4trace:configure.ac:2874: -1- AC_SUBST([config_shell])
+m4trace:configure.ac:2874: -1- AC_SUBST_TRACE([config_shell])
+m4trace:configure.ac:2874: -1- m4_pattern_allow([^config_shell$])
+m4trace:configure.ac:2881: -1- AC_SUBST([YACC])
+m4trace:configure.ac:2881: -1- AC_SUBST_TRACE([YACC])
+m4trace:configure.ac:2881: -1- m4_pattern_allow([^YACC$])
+m4trace:configure.ac:2887: -1- AC_SUBST([BISON])
+m4trace:configure.ac:2887: -1- AC_SUBST_TRACE([BISON])
+m4trace:configure.ac:2887: -1- m4_pattern_allow([^BISON$])
+m4trace:configure.ac:2892: -1- AC_SUBST([M4])
+m4trace:configure.ac:2892: -1- AC_SUBST_TRACE([M4])
+m4trace:configure.ac:2892: -1- m4_pattern_allow([^M4$])
+m4trace:configure.ac:2897: -1- AC_SUBST([LEX])
+m4trace:configure.ac:2897: -1- AC_SUBST_TRACE([LEX])
+m4trace:configure.ac:2897: -1- m4_pattern_allow([^LEX$])
+m4trace:configure.ac:2903: -1- AC_SUBST([FLEX])
+m4trace:configure.ac:2903: -1- AC_SUBST_TRACE([FLEX])
+m4trace:configure.ac:2903: -1- m4_pattern_allow([^FLEX$])
+m4trace:configure.ac:2908: -1- AC_SUBST([MAKEINFO])
+m4trace:configure.ac:2908: -1- AC_SUBST_TRACE([MAKEINFO])
+m4trace:configure.ac:2908: -1- m4_pattern_allow([^MAKEINFO$])
+m4trace:configure.ac:2927: -1- AC_SUBST([EXPECT])
+m4trace:configure.ac:2927: -1- AC_SUBST_TRACE([EXPECT])
+m4trace:configure.ac:2927: -1- m4_pattern_allow([^EXPECT$])
+m4trace:configure.ac:2934: -1- AC_SUBST([RUNTEST])
+m4trace:configure.ac:2934: -1- AC_SUBST_TRACE([RUNTEST])
+m4trace:configure.ac:2934: -1- m4_pattern_allow([^RUNTEST$])
+m4trace:configure.ac:2943: -1- AC_SUBST([AR])
+m4trace:configure.ac:2943: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.ac:2943: -1- m4_pattern_allow([^AR$])
+m4trace:configure.ac:2943: -1- AC_SUBST([AR])
+m4trace:configure.ac:2943: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.ac:2943: -1- m4_pattern_allow([^AR$])
+m4trace:configure.ac:2943: -1- AC_SUBST([AR])
+m4trace:configure.ac:2943: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.ac:2943: -1- m4_pattern_allow([^AR$])
+m4trace:configure.ac:2943: -1- AC_SUBST([AR])
+m4trace:configure.ac:2943: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.ac:2943: -1- m4_pattern_allow([^AR$])
+m4trace:configure.ac:2944: -1- AC_SUBST([AS])
+m4trace:configure.ac:2944: -1- AC_SUBST_TRACE([AS])
+m4trace:configure.ac:2944: -1- m4_pattern_allow([^AS$])
+m4trace:configure.ac:2944: -1- AC_SUBST([AS])
+m4trace:configure.ac:2944: -1- AC_SUBST_TRACE([AS])
+m4trace:configure.ac:2944: -1- m4_pattern_allow([^AS$])
+m4trace:configure.ac:2944: -1- AC_SUBST([AS])
+m4trace:configure.ac:2944: -1- AC_SUBST_TRACE([AS])
+m4trace:configure.ac:2944: -1- m4_pattern_allow([^AS$])
+m4trace:configure.ac:2944: -1- AC_SUBST([AS])
+m4trace:configure.ac:2944: -1- AC_SUBST_TRACE([AS])
+m4trace:configure.ac:2944: -1- m4_pattern_allow([^AS$])
+m4trace:configure.ac:2945: -1- AC_SUBST([DLLTOOL])
+m4trace:configure.ac:2945: -1- AC_SUBST_TRACE([DLLTOOL])
+m4trace:configure.ac:2945: -1- m4_pattern_allow([^DLLTOOL$])
+m4trace:configure.ac:2945: -1- AC_SUBST([DLLTOOL])
+m4trace:configure.ac:2945: -1- AC_SUBST_TRACE([DLLTOOL])
+m4trace:configure.ac:2945: -1- m4_pattern_allow([^DLLTOOL$])
+m4trace:configure.ac:2945: -1- AC_SUBST([DLLTOOL])
+m4trace:configure.ac:2945: -1- AC_SUBST_TRACE([DLLTOOL])
+m4trace:configure.ac:2945: -1- m4_pattern_allow([^DLLTOOL$])
+m4trace:configure.ac:2945: -1- AC_SUBST([DLLTOOL])
+m4trace:configure.ac:2945: -1- AC_SUBST_TRACE([DLLTOOL])
+m4trace:configure.ac:2945: -1- m4_pattern_allow([^DLLTOOL$])
+m4trace:configure.ac:2946: -1- AC_SUBST([LD])
+m4trace:configure.ac:2946: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.ac:2946: -1- m4_pattern_allow([^LD$])
+m4trace:configure.ac:2946: -1- AC_SUBST([LD])
+m4trace:configure.ac:2946: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.ac:2946: -1- m4_pattern_allow([^LD$])
+m4trace:configure.ac:2946: -1- AC_SUBST([LD])
+m4trace:configure.ac:2946: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.ac:2946: -1- m4_pattern_allow([^LD$])
+m4trace:configure.ac:2946: -1- AC_SUBST([LD])
+m4trace:configure.ac:2946: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.ac:2946: -1- m4_pattern_allow([^LD$])
+m4trace:configure.ac:2947: -1- AC_SUBST([LIPO])
+m4trace:configure.ac:2947: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.ac:2947: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.ac:2947: -1- AC_SUBST([LIPO])
+m4trace:configure.ac:2947: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.ac:2947: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.ac:2947: -1- AC_SUBST([LIPO])
+m4trace:configure.ac:2947: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.ac:2947: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.ac:2947: -1- AC_SUBST([LIPO])
+m4trace:configure.ac:2947: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.ac:2947: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.ac:2948: -1- AC_SUBST([NM])
+m4trace:configure.ac:2948: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.ac:2948: -1- m4_pattern_allow([^NM$])
+m4trace:configure.ac:2948: -1- AC_SUBST([NM])
+m4trace:configure.ac:2948: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.ac:2948: -1- m4_pattern_allow([^NM$])
+m4trace:configure.ac:2948: -1- AC_SUBST([NM])
+m4trace:configure.ac:2948: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.ac:2948: -1- m4_pattern_allow([^NM$])
+m4trace:configure.ac:2948: -1- AC_SUBST([NM])
+m4trace:configure.ac:2948: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.ac:2948: -1- m4_pattern_allow([^NM$])
+m4trace:configure.ac:2949: -1- AC_SUBST([RANLIB])
+m4trace:configure.ac:2949: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.ac:2949: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.ac:2949: -1- AC_SUBST([RANLIB])
+m4trace:configure.ac:2949: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.ac:2949: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.ac:2949: -1- AC_SUBST([RANLIB])
+m4trace:configure.ac:2949: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.ac:2949: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.ac:2949: -1- AC_SUBST([RANLIB])
+m4trace:configure.ac:2949: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.ac:2949: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.ac:2950: -1- AC_SUBST([STRIP])
+m4trace:configure.ac:2950: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.ac:2950: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.ac:2950: -1- AC_SUBST([STRIP])
+m4trace:configure.ac:2950: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.ac:2950: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.ac:2950: -1- AC_SUBST([STRIP])
+m4trace:configure.ac:2950: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.ac:2950: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.ac:2950: -1- AC_SUBST([STRIP])
+m4trace:configure.ac:2950: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.ac:2950: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.ac:2951: -1- AC_SUBST([WINDRES])
+m4trace:configure.ac:2951: -1- AC_SUBST_TRACE([WINDRES])
+m4trace:configure.ac:2951: -1- m4_pattern_allow([^WINDRES$])
+m4trace:configure.ac:2951: -1- AC_SUBST([WINDRES])
+m4trace:configure.ac:2951: -1- AC_SUBST_TRACE([WINDRES])
+m4trace:configure.ac:2951: -1- m4_pattern_allow([^WINDRES$])
+m4trace:configure.ac:2951: -1- AC_SUBST([WINDRES])
+m4trace:configure.ac:2951: -1- AC_SUBST_TRACE([WINDRES])
+m4trace:configure.ac:2951: -1- m4_pattern_allow([^WINDRES$])
+m4trace:configure.ac:2951: -1- AC_SUBST([WINDRES])
+m4trace:configure.ac:2951: -1- AC_SUBST_TRACE([WINDRES])
+m4trace:configure.ac:2951: -1- m4_pattern_allow([^WINDRES$])
+m4trace:configure.ac:2952: -1- AC_SUBST([WINDMC])
+m4trace:configure.ac:2952: -1- AC_SUBST_TRACE([WINDMC])
+m4trace:configure.ac:2952: -1- m4_pattern_allow([^WINDMC$])
+m4trace:configure.ac:2952: -1- AC_SUBST([WINDMC])
+m4trace:configure.ac:2952: -1- AC_SUBST_TRACE([WINDMC])
+m4trace:configure.ac:2952: -1- m4_pattern_allow([^WINDMC$])
+m4trace:configure.ac:2952: -1- AC_SUBST([WINDMC])
+m4trace:configure.ac:2952: -1- AC_SUBST_TRACE([WINDMC])
+m4trace:configure.ac:2952: -1- m4_pattern_allow([^WINDMC$])
+m4trace:configure.ac:2952: -1- AC_SUBST([WINDMC])
+m4trace:configure.ac:2952: -1- AC_SUBST_TRACE([WINDMC])
+m4trace:configure.ac:2952: -1- m4_pattern_allow([^WINDMC$])
+m4trace:configure.ac:2953: -1- AC_SUBST([OBJCOPY])
+m4trace:configure.ac:2953: -1- AC_SUBST_TRACE([OBJCOPY])
+m4trace:configure.ac:2953: -1- m4_pattern_allow([^OBJCOPY$])
+m4trace:configure.ac:2953: -1- AC_SUBST([OBJCOPY])
+m4trace:configure.ac:2953: -1- AC_SUBST_TRACE([OBJCOPY])
+m4trace:configure.ac:2953: -1- m4_pattern_allow([^OBJCOPY$])
+m4trace:configure.ac:2953: -1- AC_SUBST([OBJCOPY])
+m4trace:configure.ac:2953: -1- AC_SUBST_TRACE([OBJCOPY])
+m4trace:configure.ac:2953: -1- m4_pattern_allow([^OBJCOPY$])
+m4trace:configure.ac:2953: -1- AC_SUBST([OBJCOPY])
+m4trace:configure.ac:2953: -1- AC_SUBST_TRACE([OBJCOPY])
+m4trace:configure.ac:2953: -1- m4_pattern_allow([^OBJCOPY$])
+m4trace:configure.ac:2954: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.ac:2954: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.ac:2954: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.ac:2954: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.ac:2954: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.ac:2954: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.ac:2954: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.ac:2954: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.ac:2954: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.ac:2954: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.ac:2954: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.ac:2954: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.ac:2955: -1- AC_SUBST([CC])
+m4trace:configure.ac:2955: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.ac:2955: -1- m4_pattern_allow([^CC$])
+m4trace:configure.ac:2956: -1- AC_SUBST([CXX])
+m4trace:configure.ac:2956: -1- AC_SUBST_TRACE([CXX])
+m4trace:configure.ac:2956: -1- m4_pattern_allow([^CXX$])
+m4trace:configure.ac:2957: -1- AC_SUBST([CFLAGS])
+m4trace:configure.ac:2957: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.ac:2957: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.ac:2958: -1- AC_SUBST([CXXFLAGS])
+m4trace:configure.ac:2958: -1- AC_SUBST_TRACE([CXXFLAGS])
+m4trace:configure.ac:2958: -1- m4_pattern_allow([^CXXFLAGS$])
+m4trace:configure.ac:2973: -1- AC_SUBST([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- AC_SUBST_TRACE([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- m4_pattern_allow([^CC_FOR_TARGET$])
+m4trace:configure.ac:2973: -1- AC_SUBST([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- AC_SUBST_TRACE([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- m4_pattern_allow([^CC_FOR_TARGET$])
+m4trace:configure.ac:2973: -1- AC_SUBST([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- AC_SUBST_TRACE([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- m4_pattern_allow([^CC_FOR_TARGET$])
+m4trace:configure.ac:2973: -1- AC_SUBST([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- AC_SUBST_TRACE([CC_FOR_TARGET])
+m4trace:configure.ac:2973: -1- m4_pattern_allow([^CC_FOR_TARGET$])
+m4trace:configure.ac:2974: -1- AC_SUBST([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- AC_SUBST_TRACE([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- m4_pattern_allow([^CXX_FOR_TARGET$])
+m4trace:configure.ac:2974: -1- AC_SUBST([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- AC_SUBST_TRACE([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- m4_pattern_allow([^CXX_FOR_TARGET$])
+m4trace:configure.ac:2974: -1- AC_SUBST([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- AC_SUBST_TRACE([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- m4_pattern_allow([^CXX_FOR_TARGET$])
+m4trace:configure.ac:2974: -1- AC_SUBST([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- AC_SUBST_TRACE([CXX_FOR_TARGET])
+m4trace:configure.ac:2974: -1- m4_pattern_allow([^CXX_FOR_TARGET$])
+m4trace:configure.ac:2975: -1- AC_SUBST([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- AC_SUBST_TRACE([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- m4_pattern_allow([^GCC_FOR_TARGET$])
+m4trace:configure.ac:2975: -1- AC_SUBST([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- AC_SUBST_TRACE([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- m4_pattern_allow([^GCC_FOR_TARGET$])
+m4trace:configure.ac:2975: -1- AC_SUBST([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- AC_SUBST_TRACE([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- m4_pattern_allow([^GCC_FOR_TARGET$])
+m4trace:configure.ac:2975: -1- AC_SUBST([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- AC_SUBST_TRACE([GCC_FOR_TARGET])
+m4trace:configure.ac:2975: -1- m4_pattern_allow([^GCC_FOR_TARGET$])
+m4trace:configure.ac:2976: -1- AC_SUBST([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- AC_SUBST_TRACE([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- m4_pattern_allow([^GCJ_FOR_TARGET$])
+m4trace:configure.ac:2976: -1- AC_SUBST([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- AC_SUBST_TRACE([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- m4_pattern_allow([^GCJ_FOR_TARGET$])
+m4trace:configure.ac:2976: -1- AC_SUBST([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- AC_SUBST_TRACE([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- m4_pattern_allow([^GCJ_FOR_TARGET$])
+m4trace:configure.ac:2976: -1- AC_SUBST([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- AC_SUBST_TRACE([GCJ_FOR_TARGET])
+m4trace:configure.ac:2976: -1- m4_pattern_allow([^GCJ_FOR_TARGET$])
+m4trace:configure.ac:2977: -1- AC_SUBST([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- AC_SUBST_TRACE([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- m4_pattern_allow([^GFORTRAN_FOR_TARGET$])
+m4trace:configure.ac:2977: -1- AC_SUBST([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- AC_SUBST_TRACE([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- m4_pattern_allow([^GFORTRAN_FOR_TARGET$])
+m4trace:configure.ac:2977: -1- AC_SUBST([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- AC_SUBST_TRACE([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- m4_pattern_allow([^GFORTRAN_FOR_TARGET$])
+m4trace:configure.ac:2977: -1- AC_SUBST([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- AC_SUBST_TRACE([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:2977: -1- m4_pattern_allow([^GFORTRAN_FOR_TARGET$])
+m4trace:configure.ac:2979: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2979: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2979: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2979: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2979: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2979: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2980: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2980: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2980: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2980: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2980: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2980: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2981: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:2981: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:2981: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:2981: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:2981: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:2981: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:2982: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:2982: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:2982: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:2982: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:2982: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:2982: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:2983: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:2983: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:2983: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:2983: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:2983: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:2983: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:2984: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:2984: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:2984: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:2984: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:2984: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:2984: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:2985: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:2985: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:2985: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:2985: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:2985: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:2985: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:2986: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:2986: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:2986: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:2986: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:2986: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:2986: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:2987: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:2987: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:2987: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:2987: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:2987: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:2987: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:2988: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:2988: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:2988: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:2988: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:2988: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:2988: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:2989: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:2989: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:2989: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:2989: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:2989: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:2989: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:2993: -1- AC_SUBST([AR_FOR_TARGET])
+m4trace:configure.ac:2993: -1- AC_SUBST_TRACE([AR_FOR_TARGET])
+m4trace:configure.ac:2993: -1- m4_pattern_allow([^AR_FOR_TARGET$])
+m4trace:configure.ac:2994: -1- AC_SUBST([AS_FOR_TARGET])
+m4trace:configure.ac:2994: -1- AC_SUBST_TRACE([AS_FOR_TARGET])
+m4trace:configure.ac:2994: -1- m4_pattern_allow([^AS_FOR_TARGET$])
+m4trace:configure.ac:2995: -1- AC_SUBST([CC_FOR_TARGET])
+m4trace:configure.ac:2995: -1- AC_SUBST_TRACE([CC_FOR_TARGET])
+m4trace:configure.ac:2995: -1- m4_pattern_allow([^CC_FOR_TARGET$])
+m4trace:configure.ac:2996: -1- AC_SUBST([CXX_FOR_TARGET])
+m4trace:configure.ac:2996: -1- AC_SUBST_TRACE([CXX_FOR_TARGET])
+m4trace:configure.ac:2996: -1- m4_pattern_allow([^CXX_FOR_TARGET$])
+m4trace:configure.ac:2999: -1- AC_SUBST([RAW_CXX_FOR_TARGET])
+m4trace:configure.ac:2999: -1- AC_SUBST_TRACE([RAW_CXX_FOR_TARGET])
+m4trace:configure.ac:2999: -1- m4_pattern_allow([^RAW_CXX_FOR_TARGET$])
+m4trace:configure.ac:3002: -1- AC_SUBST([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:3002: -1- AC_SUBST_TRACE([DLLTOOL_FOR_TARGET])
+m4trace:configure.ac:3002: -1- m4_pattern_allow([^DLLTOOL_FOR_TARGET$])
+m4trace:configure.ac:3003: -1- AC_SUBST([GCC_FOR_TARGET])
+m4trace:configure.ac:3003: -1- AC_SUBST_TRACE([GCC_FOR_TARGET])
+m4trace:configure.ac:3003: -1- m4_pattern_allow([^GCC_FOR_TARGET$])
+m4trace:configure.ac:3004: -1- AC_SUBST([GCJ_FOR_TARGET])
+m4trace:configure.ac:3004: -1- AC_SUBST_TRACE([GCJ_FOR_TARGET])
+m4trace:configure.ac:3004: -1- m4_pattern_allow([^GCJ_FOR_TARGET$])
+m4trace:configure.ac:3006: -1- AC_SUBST([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:3006: -1- AC_SUBST_TRACE([GFORTRAN_FOR_TARGET])
+m4trace:configure.ac:3006: -1- m4_pattern_allow([^GFORTRAN_FOR_TARGET$])
+m4trace:configure.ac:3008: -1- AC_SUBST([LD_FOR_TARGET])
+m4trace:configure.ac:3008: -1- AC_SUBST_TRACE([LD_FOR_TARGET])
+m4trace:configure.ac:3008: -1- m4_pattern_allow([^LD_FOR_TARGET$])
+m4trace:configure.ac:3009: -1- AC_SUBST([LIPO_FOR_TARGET])
+m4trace:configure.ac:3009: -1- AC_SUBST_TRACE([LIPO_FOR_TARGET])
+m4trace:configure.ac:3009: -1- m4_pattern_allow([^LIPO_FOR_TARGET$])
+m4trace:configure.ac:3010: -1- AC_SUBST([NM_FOR_TARGET])
+m4trace:configure.ac:3010: -1- AC_SUBST_TRACE([NM_FOR_TARGET])
+m4trace:configure.ac:3010: -1- m4_pattern_allow([^NM_FOR_TARGET$])
+m4trace:configure.ac:3011: -1- AC_SUBST([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:3011: -1- AC_SUBST_TRACE([OBJDUMP_FOR_TARGET])
+m4trace:configure.ac:3011: -1- m4_pattern_allow([^OBJDUMP_FOR_TARGET$])
+m4trace:configure.ac:3012: -1- AC_SUBST([RANLIB_FOR_TARGET])
+m4trace:configure.ac:3012: -1- AC_SUBST_TRACE([RANLIB_FOR_TARGET])
+m4trace:configure.ac:3012: -1- m4_pattern_allow([^RANLIB_FOR_TARGET$])
+m4trace:configure.ac:3013: -1- AC_SUBST([STRIP_FOR_TARGET])
+m4trace:configure.ac:3013: -1- AC_SUBST_TRACE([STRIP_FOR_TARGET])
+m4trace:configure.ac:3013: -1- m4_pattern_allow([^STRIP_FOR_TARGET$])
+m4trace:configure.ac:3014: -1- AC_SUBST([WINDRES_FOR_TARGET])
+m4trace:configure.ac:3014: -1- AC_SUBST_TRACE([WINDRES_FOR_TARGET])
+m4trace:configure.ac:3014: -1- m4_pattern_allow([^WINDRES_FOR_TARGET$])
+m4trace:configure.ac:3015: -1- AC_SUBST([WINDMC_FOR_TARGET])
+m4trace:configure.ac:3015: -1- AC_SUBST_TRACE([WINDMC_FOR_TARGET])
+m4trace:configure.ac:3015: -1- m4_pattern_allow([^WINDMC_FOR_TARGET$])
+m4trace:configure.ac:3017: -1- AC_SUBST([FLAGS_FOR_TARGET])
+m4trace:configure.ac:3017: -1- AC_SUBST_TRACE([FLAGS_FOR_TARGET])
+m4trace:configure.ac:3017: -1- m4_pattern_allow([^FLAGS_FOR_TARGET$])
+m4trace:configure.ac:3018: -1- AC_SUBST([RAW_CXX_FOR_TARGET])
+m4trace:configure.ac:3018: -1- AC_SUBST_TRACE([RAW_CXX_FOR_TARGET])
+m4trace:configure.ac:3018: -1- m4_pattern_allow([^RAW_CXX_FOR_TARGET$])
+m4trace:configure.ac:3040: -1- AC_SUBST([COMPILER_AS_FOR_TARGET])
+m4trace:configure.ac:3040: -1- AC_SUBST_TRACE([COMPILER_AS_FOR_TARGET])
+m4trace:configure.ac:3040: -1- m4_pattern_allow([^COMPILER_AS_FOR_TARGET$])
+m4trace:configure.ac:3041: -1- AC_SUBST([COMPILER_LD_FOR_TARGET])
+m4trace:configure.ac:3041: -1- AC_SUBST_TRACE([COMPILER_LD_FOR_TARGET])
+m4trace:configure.ac:3041: -1- m4_pattern_allow([^COMPILER_LD_FOR_TARGET$])
+m4trace:configure.ac:3042: -1- AC_SUBST([COMPILER_NM_FOR_TARGET])
+m4trace:configure.ac:3042: -1- AC_SUBST_TRACE([COMPILER_NM_FOR_TARGET])
+m4trace:configure.ac:3042: -1- m4_pattern_allow([^COMPILER_NM_FOR_TARGET$])
+m4trace:configure.ac:3051: -1- AC_SUBST([MAINTAINER_MODE_TRUE])
+m4trace:configure.ac:3051: -1- AC_SUBST_TRACE([MAINTAINER_MODE_TRUE])
+m4trace:configure.ac:3051: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
+m4trace:configure.ac:3052: -1- AC_SUBST([MAINTAINER_MODE_FALSE])
+m4trace:configure.ac:3052: -1- AC_SUBST_TRACE([MAINTAINER_MODE_FALSE])
+m4trace:configure.ac:3052: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
+m4trace:configure.ac:3061: -1- AC_SUBST([MAINT])
+m4trace:configure.ac:3061: -1- AC_SUBST_TRACE([MAINT])
+m4trace:configure.ac:3061: -1- m4_pattern_allow([^MAINT$])
+m4trace:configure.ac:3084: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+configure.ac:3084: the top level])
+m4trace:configure.ac:3097: -1- AC_SUBST([stage1_cflags])
+m4trace:configure.ac:3097: -1- AC_SUBST_TRACE([stage1_cflags])
+m4trace:configure.ac:3097: -1- m4_pattern_allow([^stage1_cflags$])
+m4trace:configure.ac:3109: -1- AC_SUBST([stage1_checking])
+m4trace:configure.ac:3109: -1- AC_SUBST_TRACE([stage1_checking])
+m4trace:configure.ac:3109: -1- m4_pattern_allow([^stage1_checking$])
+m4trace:configure.ac:3123: -1- AC_SUBST([stage2_werror_flag])
+m4trace:configure.ac:3123: -1- AC_SUBST_TRACE([stage2_werror_flag])
+m4trace:configure.ac:3123: -1- m4_pattern_allow([^stage2_werror_flag$])
+m4trace:configure.ac:3132: -1- AC_SUBST([compare_exclusions])
+m4trace:configure.ac:3132: -1- AC_SUBST_TRACE([compare_exclusions])
+m4trace:configure.ac:3132: -1- m4_pattern_allow([^compare_exclusions$])
+m4trace:configure.ac:3134: -1- AC_CONFIG_FILES([Makefile])
+m4trace:configure.ac:3134: -1- _m4_warn([obsolete], [AC_OUTPUT should be used without arguments.
+You should run autoupdate.], [])
+m4trace:configure.ac:3134: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
+m4trace:configure.ac:3134: -1- m4_pattern_allow([^LIB@&t@OBJS$])
+m4trace:configure.ac:3134: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([LTLIBOBJS])
+m4trace:configure.ac:3134: -1- m4_pattern_allow([^LTLIBOBJS$])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([top_builddir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([top_build_prefix])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([srcdir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([abs_srcdir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([top_srcdir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([abs_top_srcdir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([builddir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([abs_builddir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([abs_top_builddir])
+m4trace:configure.ac:3134: -1- AC_SUBST_TRACE([INSTALL])
diff -rupN binutils-2.20/bfd/Makefile.am binutils-2.20-sean/bfd/Makefile.am
--- binutils-2.20/bfd/Makefile.am	2009-10-16 05:47:44.000000000 -0600
+++ binutils-2.20-sean/bfd/Makefile.am	2010-10-01 14:37:28.000000000 -0600
@@ -101,6 +101,8 @@ ALL_MACHINES = \
 	cpu-m32r.lo \
 	cpu-m68hc11.lo \
 	cpu-m68hc12.lo \
+	cpu-mc9s12x.lo \
+	cpu-mc9xgate.lo \
 	cpu-m68k.lo \
 	cpu-m88k.lo \
 	cpu-maxq.lo \
@@ -172,6 +174,8 @@ ALL_MACHINES_CFILES = \
 	cpu-m32r.c \
 	cpu-m68hc11.c \
 	cpu-m68hc12.c \
+	cpu-mc9s12x.c \
+	cpu-mc9xgate.c \
 	cpu-m68k.c \
 	cpu-m88k.c \
 	cpu-maxq.c \
@@ -294,6 +298,8 @@ BFD32_BACKENDS = \
 	elf32-m68hc11.lo \
 	elf32-m68hc12.lo \
 	elf32-m68hc1x.lo \
+	elf32-mc9s12x.lo \
+	elf32-mc9xgate.lo \
 	elf32-m68k.lo \
 	elf32-m88k.lo \
 	elf32-mcore.lo \
@@ -477,6 +483,8 @@ BFD32_BACKENDS_CFILES = \
 	elf32-m68hc11.c \
 	elf32-m68hc12.c \
 	elf32-m68hc1x.c \
+	elf32-mc9s12x.c \
+	elf32-mc9xgate.c \
 	elf32-m68k.c \
 	elf32-m88k.c \
 	elf32-mcore.c \
diff -rupN binutils-2.20/bfd/Makefile.in binutils-2.20-sean/bfd/Makefile.in
--- binutils-2.20/bfd/Makefile.in	2009-10-16 05:47:48.000000000 -0600
+++ binutils-2.20-sean/bfd/Makefile.in	2010-10-01 14:37:28.000000000 -0600
@@ -396,6 +396,8 @@ ALL_MACHINES = \
 	cpu-m32r.lo \
 	cpu-m68hc11.lo \
 	cpu-m68hc12.lo \
+	cpu-mc9s12x.lo \
+	cpu-mc9xgate.lo \
 	cpu-m68k.lo \
 	cpu-m88k.lo \
 	cpu-maxq.lo \
@@ -467,6 +469,8 @@ ALL_MACHINES_CFILES = \
 	cpu-m32r.c \
 	cpu-m68hc11.c \
 	cpu-m68hc12.c \
+	cpu-mc9s12x.c \
+	cpu-mc9xgate.c \
 	cpu-m68k.c \
 	cpu-m88k.c \
 	cpu-maxq.c \
@@ -590,6 +594,8 @@ BFD32_BACKENDS = \
 	elf32-m68hc11.lo \
 	elf32-m68hc12.lo \
 	elf32-m68hc1x.lo \
+	elf32-mc9s12x.lo \
+	elf32-mc9xgate.lo \
 	elf32-m68k.lo \
 	elf32-m88k.lo \
 	elf32-mcore.lo \
@@ -773,6 +779,8 @@ BFD32_BACKENDS_CFILES = \
 	elf32-m68hc11.c \
 	elf32-m68hc12.c \
 	elf32-m68hc1x.c \
+	elf32-mc9s12x.c \
+	elf32-mc9xgate.c \
 	elf32-m68k.c \
 	elf32-m88k.c \
 	elf32-mcore.c \
@@ -1255,6 +1263,8 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-m68k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-m88k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-maxq.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-mc9s12x.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-mc9xgate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-mcore.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-mep.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-microblaze.Plo@am__quote@
@@ -1334,6 +1344,8 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-m68hc1x.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-m68k.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-m88k.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-mc9s12x.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-mc9xgate.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-mcore.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-mep.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-microblaze.Plo@am__quote@
diff -rupN binutils-2.20/bfd/archures.c binutils-2.20-sean/bfd/archures.c
--- binutils-2.20/bfd/archures.c	2009-09-10 05:47:11.000000000 -0600
+++ binutils-2.20-sean/bfd/archures.c	2010-10-01 14:37:28.000000000 -0600
@@ -25,6 +25,7 @@
 #include "bfd.h"
 #include "libbfd.h"
 #include "safe-ctype.h"
+#include "stdio.h"
 
 /*
 
@@ -251,6 +252,8 @@ DESCRIPTION
 .#define bfd_mach_m6812_default 0
 .#define bfd_mach_m6812         1
 .#define bfd_mach_m6812s        2
+.  bfd_arch_mc9xgate,   {* Motorola S12XGATE *}
+.#define bfd_mach_mc9xgate      0
 .  bfd_arch_z8k,       {* Zilog Z8000 *}
 .#define bfd_mach_z8001		1
 .#define bfd_mach_z8002		2
@@ -491,6 +494,8 @@ extern const bfd_arch_info_type bfd_m32c
 extern const bfd_arch_info_type bfd_m32r_arch;
 extern const bfd_arch_info_type bfd_m68hc11_arch;
 extern const bfd_arch_info_type bfd_m68hc12_arch;
+extern const bfd_arch_info_type bfd_mc9s12x_arch;
+extern const bfd_arch_info_type bfd_mc9xgate_arch;
 extern const bfd_arch_info_type bfd_m68k_arch;
 extern const bfd_arch_info_type bfd_m88k_arch;
 extern const bfd_arch_info_type bfd_maxq_arch;
@@ -567,6 +572,8 @@ static const bfd_arch_info_type * const 
     &bfd_m32r_arch,
     &bfd_m68hc11_arch,
     &bfd_m68hc12_arch,
+    &bfd_mc9s12x_arch,
+    &bfd_mc9xgate_arch,
     &bfd_m68k_arch,
     &bfd_m88k_arch,
     &bfd_maxq_arch,
@@ -908,6 +915,7 @@ const bfd_arch_info_type *
 bfd_default_compatible (const bfd_arch_info_type *a,
 			const bfd_arch_info_type *b)
 {
+  //printf("\n in bfd_default_compatible about to compare %d and %d", a->arch, b->arch);
   if (a->arch != b->arch)
     return NULL;
 
diff -rupN binutils-2.20/bfd/autom4te.cache/output.0 binutils-2.20-sean/bfd/autom4te.cache/output.0
--- binutils-2.20/bfd/autom4te.cache/output.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/autom4te.cache/output.0	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,18277 @@
+@%:@! /bin/sh
+@%:@ Guess values for system-dependent variables and create Makefiles.
+@%:@ Generated by GNU Autoconf 2.64.
+@%:@ 
+@%:@ Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+@%:@ 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
+@%:@ Foundation, Inc.
+@%:@ 
+@%:@ This configure script is free software; the Free Software Foundation
+@%:@ gives unlimited permission to copy, distribute and modify it.
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test "x$CONFIG_SHELL" = x; then
+  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '\${1+\"\$@\"}'='\"\$@\"'
+  setopt NO_GLOB_SUBST
+else
+  case \`(set -o) 2>/dev/null\` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+"
+  as_required="as_fn_return () { (exit \$1); }
+as_fn_success () { as_fn_return 0; }
+as_fn_failure () { as_fn_return 1; }
+as_fn_ret_success () { return 0; }
+as_fn_ret_failure () { return 1; }
+
+exitcode=0
+as_fn_success || { exitcode=1; echo as_fn_success failed.; }
+as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
+as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
+as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
+if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :
+  
+else
+  exitcode=1; echo positional parameters were not saved.
+fi
+test x\$exitcode = x0 || exit 1"
+  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
+  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
+  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
+  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
+test \$(( 1 + 1 )) = 2 || exit 1"
+  if (eval "$as_required") 2>/dev/null; then :
+  as_have_required=yes
+else
+  as_have_required=no
+fi
+  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :
+  
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_found=false
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  as_found=:
+  case $as_dir in @%:@(
+	 /*)
+	   for as_base in sh bash ksh sh5; do
+	     # Try only shells that exist, to save several forks.
+	     as_shell=$as_dir/$as_base
+	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  CONFIG_SHELL=$as_shell as_have_required=yes
+		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  break 2
+fi
+fi
+	   done;;
+       esac
+  as_found=false
+done
+$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
+	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
+  CONFIG_SHELL=$SHELL as_have_required=yes
+fi; }
+IFS=$as_save_IFS
+
+
+      if test "x$CONFIG_SHELL" != x; then :
+  # We cannot yet assume a decent shell, so we have to provide a
+	# neutralization value for shells without unset; and this also
+	# works around shells that cannot unset nonexistent variables.
+	BASH_ENV=/dev/null
+	ENV=/dev/null
+	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
+	export CONFIG_SHELL
+	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+    if test x$as_have_required = xno; then :
+  $as_echo "$0: This script requires a shell more modern than all"
+  $as_echo "$0: the shells that I found on your system."
+  if test x${ZSH_VERSION+set} = xset ; then
+    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
+    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
+  else
+    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
+$0: including any error possibly output before this
+$0: message. Then install a modern shell, or manually run
+$0: the script under such a shell if you do have one."
+  fi
+  exit 1
+fi
+fi
+fi
+SHELL=${CONFIG_SHELL-/bin/sh}
+export SHELL
+# Unset more variables known to interfere with behavior of common tools.
+CLICOLOR_FORCE= GREP_OPTIONS=
+unset CLICOLOR_FORCE GREP_OPTIONS
+
+## --------------------- ##
+## M4sh Shell Functions. ##
+## --------------------- ##
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+
+  as_lineno_1=$LINENO as_lineno_1a=$LINENO
+  as_lineno_2=$LINENO as_lineno_2a=$LINENO
+  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
+  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
+  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$lt_ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$lt_ECHO" | sed 's,\\\\\$\\$0,'$0','`
+  ;;
+esac
+
+ECHO=${lt_ECHO-echo}
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $ECHO works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "$0" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<_LT_EOF
+$*
+_LT_EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$lt_ECHO"; then
+  if test "X${echo_test_string+set}" != Xset; then
+    # find a string as large as possible, as long as the shell can cope with it
+    for cmd in 'sed 50q "$0"' 'sed 20q "$0"' 'sed 10q "$0"' 'sed 2q "$0"' 'echo test'; do
+      # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+      if { echo_test_string=`eval $cmd`; } 2>/dev/null &&
+	 { test "X$echo_test_string" = "X$echo_test_string"; } 2>/dev/null
+      then
+        break
+      fi
+    done
+  fi
+
+  if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+     echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+     test "X$echo_testing_string" = "X$echo_test_string"; then
+    :
+  else
+    # The Solaris, AIX, and Digital Unix default echo programs unquote
+    # backslashes.  This makes it impossible to quote backslashes using
+    #   echo "$something" | sed 's/\\/\\\\/g'
+    #
+    # So, first we look for a working echo in the user's PATH.
+
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for dir in $PATH /usr/ucb; do
+      IFS="$lt_save_ifs"
+      if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+         test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        ECHO="$dir/echo"
+        break
+      fi
+    done
+    IFS="$lt_save_ifs"
+
+    if test "X$ECHO" = Xecho; then
+      # We didn't find a better echo, so look for alternatives.
+      if test "X`{ print -r '\t'; } 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`{ print -r "$echo_test_string"; } 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        # This shell has a builtin print -r that does the trick.
+        ECHO='print -r'
+      elif { test -f /bin/ksh || test -f /bin/ksh$ac_exeext; } &&
+	   test "X$CONFIG_SHELL" != X/bin/ksh; then
+        # If we have ksh, try running configure again with it.
+        ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+        export ORIGINAL_CONFIG_SHELL
+        CONFIG_SHELL=/bin/ksh
+        export CONFIG_SHELL
+        exec $CONFIG_SHELL "$0" --no-reexec ${1+"$@"}
+      else
+        # Try using printf.
+        ECHO='printf %s\n'
+        if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+	   echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	  # Cool, printf works
+	  :
+        elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	  export CONFIG_SHELL
+	  SHELL="$CONFIG_SHELL"
+	  export SHELL
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        elif echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        else
+	  # maybe with a smaller string...
+	  prev=:
+
+	  for cmd in 'echo test' 'sed 2q "$0"' 'sed 10q "$0"' 'sed 20q "$0"' 'sed 50q "$0"'; do
+	    if { test "X$echo_test_string" = "X`eval $cmd`"; } 2>/dev/null
+	    then
+	      break
+	    fi
+	    prev="$cmd"
+	  done
+
+	  if test "$prev" != 'sed 50q "$0"'; then
+	    echo_test_string=`eval $prev`
+	    export echo_test_string
+	    exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "$0" ${1+"$@"}
+	  else
+	    # Oops.  We lost completely, so just stick with echo.
+	    ECHO=echo
+	  fi
+        fi
+      fi
+    fi
+  fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+lt_ECHO=$ECHO
+if test "X$lt_ECHO" = "X$CONFIG_SHELL $0 --fallback-echo"; then
+   lt_ECHO="$CONFIG_SHELL \\\$\$0 --fallback-echo"
+fi
+
+
+
+
+exec 7<&0 </dev/null 6>&1
+
+# Name of the host.
+# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_clean_files=
+ac_config_libobj_dir=.
+LIB@&t@OBJS=
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+
+# Identity of this package.
+PACKAGE_NAME=
+PACKAGE_TARNAME=
+PACKAGE_VERSION=
+PACKAGE_STRING=
+PACKAGE_BUGREPORT=
+PACKAGE_URL=
+
+ac_unique_file="libbfd.c"
+# Factoring default headers for most tests.
+ac_includes_default="\
+#include <stdio.h>
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+#ifdef HAVE_SYS_STAT_H
+# include <sys/stat.h>
+#endif
+#ifdef STDC_HEADERS
+# include <stdlib.h>
+# include <stddef.h>
+#else
+# ifdef HAVE_STDLIB_H
+#  include <stdlib.h>
+# endif
+#endif
+#ifdef HAVE_STRING_H
+# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+#  include <memory.h>
+# endif
+# include <string.h>
+#endif
+#ifdef HAVE_STRINGS_H
+# include <strings.h>
+#endif
+#ifdef HAVE_INTTYPES_H
+# include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#endif
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif"
+
+ac_subst_vars='am__EXEEXT_FALSE
+am__EXEEXT_TRUE
+LTLIBOBJS
+LIB@&t@OBJS
+tdefaults
+bfd_ufile_ptr
+bfd_file_ptr
+supports_plugins
+bfd_default_target_size
+bfd_machines
+bfd_backends
+all_backends
+bfd64_libs
+wordsize
+TDEFINES
+SHARED_LIBADD
+SHARED_LDFLAGS
+LIBM
+COREFLAG
+COREFILE
+EXEEXT_FOR_BUILD
+CC_FOR_BUILD
+BFD_HOSTPTR_T
+BFD_HOST_U_64_BIT
+BFD_HOST_64_BIT
+BFD_HOST_64_BIT_DEFINED
+BFD_HOST_64BIT_LONG_LONG
+BFD_HOST_64BIT_LONG
+HDEFINES
+MSGMERGE
+MSGFMT
+MKINSTALLDIRS
+CATOBJEXT
+GENCAT
+INSTOBJEXT
+DATADIRNAME
+CATALOGS
+POSUB
+GMSGFMT
+XGETTEXT
+INCINTL
+LIBINTL_DEP
+LIBINTL
+USE_NLS
+bfdincludedir
+bfdlibdir
+target_noncanonical
+host_noncanonical
+INSTALL_LIBBFD_FALSE
+INSTALL_LIBBFD_TRUE
+GENINSRC_NEVER_FALSE
+GENINSRC_NEVER_TRUE
+MAINT
+MAINTAINER_MODE_FALSE
+MAINTAINER_MODE_TRUE
+NO_WERROR
+WARN_CFLAGS
+REPORT_BUGS_TEXI
+REPORT_BUGS_TO
+PKGVERSION
+DEBUGDIR
+PLUGINS_FALSE
+PLUGINS_TRUE
+OTOOL64
+OTOOL
+LIPO
+NMEDIT
+DSYMUTIL
+lt_ECHO
+OBJDUMP
+LN_S
+NM
+ac_ct_DUMPBIN
+DUMPBIN
+LD
+FGREP
+SED
+LIBTOOL
+EGREP
+GREP
+CPP
+RANLIB
+AR
+am__fastdepCC_FALSE
+am__fastdepCC_TRUE
+CCDEPMODE
+AMDEPBACKSLASH
+AMDEP_FALSE
+AMDEP_TRUE
+am__quote
+am__include
+DEPDIR
+am__untar
+am__tar
+AMTAR
+am__leading_dot
+SET_MAKE
+AWK
+mkdir_p
+MKDIR_P
+INSTALL_STRIP_PROGRAM
+STRIP
+install_sh
+MAKEINFO
+AUTOHEADER
+AUTOMAKE
+AUTOCONF
+ACLOCAL
+VERSION
+PACKAGE
+CYGPATH_W
+am__isrc
+INSTALL_DATA
+INSTALL_SCRIPT
+INSTALL_PROGRAM
+OBJEXT
+EXEEXT
+ac_ct_CC
+CPPFLAGS
+LDFLAGS
+CFLAGS
+CC
+target_os
+target_vendor
+target_cpu
+target
+host_os
+host_vendor
+host_cpu
+host
+build_os
+build_vendor
+build_cpu
+build
+target_alias
+host_alias
+build_alias
+LIBS
+ECHO_T
+ECHO_N
+ECHO_C
+DEFS
+mandir
+localedir
+libdir
+psdir
+pdfdir
+dvidir
+htmldir
+infodir
+docdir
+oldincludedir
+includedir
+localstatedir
+sharedstatedir
+sysconfdir
+datadir
+datarootdir
+libexecdir
+sbindir
+bindir
+program_transform_name
+prefix
+exec_prefix
+PACKAGE_URL
+PACKAGE_BUGREPORT
+PACKAGE_STRING
+PACKAGE_VERSION
+PACKAGE_TARNAME
+PACKAGE_NAME
+PATH_SEPARATOR
+SHELL'
+ac_subst_files=''
+ac_user_opts='
+enable_option_checking
+enable_dependency_tracking
+enable_shared
+enable_static
+with_pic
+enable_fast_install
+with_gnu_ld
+enable_libtool_lock
+enable_plugins
+enable_largefile
+enable_64_bit_bfd
+enable_targets
+with_mmap
+enable_secureplt
+with_separate_debug_dir
+enable_elf_stt_common
+with_pkgversion
+with_bugurl
+enable_werror
+enable_build_warnings
+enable_maintainer_mode
+enable_install_libbfd
+enable_nls
+'
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CPP'
+
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+ac_unrecognized_opts=
+ac_unrecognized_sep=
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+docdir='${datarootdir}/doc/${PACKAGE}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
+
+ac_prev=
+ac_dashdash=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval $ac_prev=\$ac_option
+    ac_prev=
+    continue
+  fi
+
+  case $ac_option in
+  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *)	ac_optarg=yes ;;
+  esac
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
+    datadir=$ac_optarg ;;
+
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
+
+  -enable-* | --enable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=\$ac_optarg ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst | --locals)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=\$ac_optarg ;;
+
+  -without-* | --without-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=no ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) as_fn_error "unrecognized option: \`$ac_option'
+Try \`$0 --help' for more information."
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    case $ac_envvar in #(
+      '' | [0-9]* | *[!_$as_cr_alnum]* )
+      as_fn_error "invalid variable name: \`$ac_envvar'" ;;
+    esac
+    eval $ac_envvar=\$ac_optarg
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  as_fn_error "missing argument to $ac_option"
+fi
+
+if test -n "$ac_unrecognized_opts"; then
+  case $enable_option_checking in
+    no) ;;
+    fatal) as_fn_error "unrecognized options: $ac_unrecognized_opts" ;;
+    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
+  esac
+fi
+
+# Check all directory arguments for consistency.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
+do
+  eval ac_val=\$$ac_var
+  # Remove trailing slashes.
+  case $ac_val in
+    */ )
+      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
+      eval $ac_var=\$ac_val;;
+  esac
+  # Be sure to have absolute directory names.
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
+  esac
+  as_fn_error "expected an absolute directory name for --$ac_var: $ac_val"
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    $as_echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used." >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  as_fn_error "working directory cannot be determined"
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  as_fn_error "pwd does not report name of working directory"
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$as_myself" ||
+$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_myself" : 'X\(//\)[^/]' \| \
+	 X"$as_myself" : 'X\(//\)$' \| \
+	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_myself" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r "$srcdir/$ac_unique_file"; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
+  as_fn_error "cannot find sources ($ac_unique_file) in $srcdir"
+fi
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error "$ac_msg"
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures this package to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+                          [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+                          [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR            user executables [EPREFIX/bin]
+  --sbindir=DIR           system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR        program executables [EPREFIX/libexec]
+  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+  --libdir=DIR            object code libraries [EPREFIX/lib]
+  --includedir=DIR        C header files [PREFIX/include]
+  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR           info documentation [DATAROOTDIR/info]
+  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR            man documentation [DATAROOTDIR/man]
+  --docdir=DIR            documentation root @<:@DATAROOTDIR/doc/PACKAGE@:>@
+  --htmldir=DIR           html documentation [DOCDIR]
+  --dvidir=DIR            dvi documentation [DOCDIR]
+  --pdfdir=DIR            pdf documentation [DOCDIR]
+  --psdir=DIR             ps documentation [DOCDIR]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+  --target=TARGET   configure for building compilers for TARGET [HOST]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-option-checking  ignore unrecognized --enable/--with options
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors
+  --enable-shared@<:@=PKGS@:>@  build shared libraries @<:@default=no@:>@
+  --enable-static@<:@=PKGS@:>@  build static libraries @<:@default=yes@:>@
+  --enable-fast-install@<:@=PKGS@:>@ 
+                          optimize for fast installation @<:@default=yes@:>@
+  --disable-libtool-lock  avoid locking (might break parallel builds)
+  --enable-plugins        Enable support for plugins (defaults no)
+  --disable-largefile     omit support for large files
+  --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)
+  --enable-targets        alternative target configurations
+  --enable-secureplt      Default to creating read-only plt entries
+  --enable-elf-stt-common Allow the generation of ELF symbols with the STT_COMMON type
+  --enable-werror         treat compile warnings as errors
+  --enable-build-warnings enable build-time compiler warnings
+  --enable-maintainer-mode  enable make rules and dependencies not useful
+			  (and sometimes confusing) to the casual installer
+  --enable-install-libbfd controls installation of libbfd and related headers
+  --disable-nls           do not use Native Language Support
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-pic              try to use only PIC/non-PIC objects @<:@default=use
+                          both@:>@
+  --with-gnu-ld           assume the C compiler uses GNU ld @<:@default=no@:>@
+  --with-mmap             try using mmap for BFD input files if available
+  --with-separate-debug-dir=DIR 
+                          Look for global separate debug info in DIR
+                          [default=LIBDIR/debug]
+  --with-pkgversion=PKG   Use PKG in the version string in place of "GNU
+                          Binutils"
+  --with-bugurl=URL       Direct users to URL to report a bug
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+Report bugs to the package provider.
+_ACEOF
+ac_status=$?
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d "$ac_dir" ||
+      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
+      continue
+    ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
+    else
+      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
+  done
+fi
+
+test -n "$ac_init_help" && exit $ac_status
+if $ac_init_version; then
+  cat <<\_ACEOF
+configure
+generated by GNU Autoconf 2.64
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit
+fi
+
+## ------------------------ ##
+## Autoconf initialization. ##
+## ------------------------ ##
+
+@%:@ ac_fn_c_try_compile LINENO
+@%:@ --------------------------
+@%:@ Try to compile conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext
+  if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_compile
+
+@%:@ ac_fn_c_try_link LINENO
+@%:@ -----------------------
+@%:@ Try to link conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_link ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext conftest$ac_exeext
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext && {
+	 test "$cross_compiling" = yes ||
+	 $as_test_x conftest$ac_exeext
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
+  # interfere with the next link command; also delete a directory that is
+  # left behind by Apple's compiler.  We do this before executing the actions.
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_link
+
+@%:@ ac_fn_c_try_cpp LINENO
+@%:@ ----------------------
+@%:@ Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_cpp ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+    ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_cpp
+
+@%:@ ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES
+@%:@ -------------------------------------------------------
+@%:@ Tests whether HEADER exists, giving a warning if it cannot be compiled using
+@%:@ the include files in INCLUDES and setting the cache variable VAR
+@%:@ accordingly.
+ac_fn_c_check_header_mongrel ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 usability" >&5
+$as_echo_n "checking $2 usability... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_header_compiler=yes
+else
+  ac_header_compiler=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler" >&5
+$as_echo "$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 presence" >&5
+$as_echo_n "checking $2 presence... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  ac_header_preproc=yes
+else
+  ac_header_preproc=no
+fi
+rm -f conftest.err conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc" >&5
+$as_echo "$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((
+  yes:no: )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&5
+$as_echo "$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+    ;;
+  no:yes:* )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled" >&5
+$as_echo "$as_me: WARNING: $2: present but cannot be compiled" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?" >&5
+$as_echo "$as_me: WARNING: $2:     check for missing prerequisite headers?" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation" >&5
+$as_echo "$as_me: WARNING: $2: see the Autoconf documentation" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&5
+$as_echo "$as_me: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+    ;;
+esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=\$ac_header_compiler"
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_header_mongrel
+
+@%:@ ac_fn_c_try_run LINENO
+@%:@ ----------------------
+@%:@ Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
+@%:@ that executables *can* be run.
+ac_fn_c_try_run ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: program exited with status $ac_status" >&5
+       $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+       ac_retval=$ac_status
+fi
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_run
+
+@%:@ ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
+@%:@ -------------------------------------------------------
+@%:@ Tests whether HEADER exists and can be compiled using the include files in
+@%:@ INCLUDES, setting the cache variable VAR accordingly.
+ac_fn_c_check_header_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_header_compile
+
+@%:@ ac_fn_c_check_func LINENO FUNC VAR
+@%:@ ----------------------------------
+@%:@ Tests whether FUNC exists, setting the cache variable VAR accordingly
+ac_fn_c_check_func ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $2 innocuous_$2
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $2 (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $2
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $2 ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$2 || defined __stub___$2
+choke me
+#endif
+
+int
+main ()
+{
+return $2 ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_func
+
+@%:@ ac_fn_c_compute_int LINENO EXPR VAR INCLUDES
+@%:@ --------------------------------------------
+@%:@ Tries to find the compile-time value of EXPR in a program that includes
+@%:@ INCLUDES, setting VAR accordingly. Returns whether the value could be
+@%:@ computed
+ac_fn_c_compute_int ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if test "$cross_compiling" = yes; then
+    # Depending upon the size, compute the lo and hi bounds.
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+static int test_array @<:@1 - 2 * !(($2) >= 0)@:>@;
+test_array @<:@0@:>@ = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_lo=0 ac_mid=0
+  while :; do
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+static int test_array @<:@1 - 2 * !(($2) <= $ac_mid)@:>@;
+test_array @<:@0@:>@ = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_hi=$ac_mid; break
+else
+  as_fn_arith $ac_mid + 1 && ac_lo=$as_val
+			if test $ac_lo -le $ac_mid; then
+			  ac_lo= ac_hi=
+			  break
+			fi
+			as_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  done
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+static int test_array @<:@1 - 2 * !(($2) < 0)@:>@;
+test_array @<:@0@:>@ = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_hi=-1 ac_mid=-1
+  while :; do
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+static int test_array @<:@1 - 2 * !(($2) >= $ac_mid)@:>@;
+test_array @<:@0@:>@ = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_lo=$ac_mid; break
+else
+  as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val
+			if test $ac_mid -le $ac_hi; then
+			  ac_lo= ac_hi=
+			  break
+			fi
+			as_fn_arith 2 '*' $ac_mid && ac_mid=$as_val
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  done
+else
+  ac_lo= ac_hi=
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+# Binary search between lo and hi bounds.
+while test "x$ac_lo" != "x$ac_hi"; do
+  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+static int test_array @<:@1 - 2 * !(($2) <= $ac_mid)@:>@;
+test_array @<:@0@:>@ = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_hi=$ac_mid
+else
+  as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+done
+case $ac_lo in @%:@((
+?*) eval "$3=\$ac_lo"; ac_retval=0 ;;
+'') ac_retval=1 ;;
+esac
+  else
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+static long int longval () { return $2; }
+static unsigned long int ulongval () { return $2; }
+@%:@include <stdio.h>
+@%:@include <stdlib.h>
+int
+main ()
+{
+
+  FILE *f = fopen ("conftest.val", "w");
+  if (! f)
+    return 1;
+  if (($2) < 0)
+    {
+      long int i = longval ();
+      if (i != ($2))
+	return 1;
+      fprintf (f, "%ld", i);
+    }
+  else
+    {
+      unsigned long int i = ulongval ();
+      if (i != ($2))
+	return 1;
+      fprintf (f, "%lu", i);
+    }
+  /* Do not output a trailing newline, as this causes \r\n confusion
+     on some platforms.  */
+  return ferror (f) || fclose (f) != 0;
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+  echo >>conftest.val; read $3 <conftest.val; ac_retval=0
+else
+  ac_retval=1
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+rm -f conftest.val
+
+  fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_compute_int
+
+@%:@ ac_fn_c_check_type LINENO TYPE VAR INCLUDES
+@%:@ -------------------------------------------
+@%:@ Tests whether TYPE exists after having included INCLUDES, setting cache
+@%:@ variable VAR accordingly.
+ac_fn_c_check_type ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=no"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof ($2))
+	 return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof (($2)))
+	    return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  eval "$3=yes"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_type
+
+@%:@ ac_fn_c_check_decl LINENO SYMBOL VAR
+@%:@ ------------------------------------
+@%:@ Tests whether SYMBOL is declared, setting cache variable VAR accordingly.
+ac_fn_c_check_decl ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $2 is declared" >&5
+$as_echo_n "checking whether $2 is declared... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+@%:@ifndef $2
+  (void) $2;
+@%:@endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_decl
+cat >config.log <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+exec 5>>config.log
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    $as_echo "PATH: $as_dir"
+  done
+IFS=$as_save_IFS
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *\'*)
+      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
+    2)
+      as_fn_append ac_configure_args1 " '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      as_fn_append ac_configure_args " '$ac_arg'"
+      ;;
+    esac
+  done
+done
+{ ac_configure_args0=; unset ac_configure_args0;}
+{ ac_configure_args1=; unset ac_configure_args1;}
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    cat <<\_ASBOX
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+_ASBOX
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+  (set) 2>&1 |
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      sed -n \
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
+    echo
+
+    cat <<\_ASBOX
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+_ASBOX
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      $as_echo "$ac_var='\''$ac_val'\''"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      cat <<\_ASBOX
+## ------------------- ##
+## File substitutions. ##
+## ------------------- ##
+_ASBOX
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	$as_echo "$ac_var='\''$ac_val'\''"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      cat <<\_ASBOX
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+_ASBOX
+      echo
+      cat confdefs.h
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      $as_echo "$as_me: caught signal $ac_signal"
+    $as_echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -f -r conftest* confdefs.h
+
+$as_echo "/* confdefs.h */" > confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_URL "$PACKAGE_URL"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer an explicitly selected file to automatically selected ones.
+ac_site_file1=NONE
+ac_site_file2=NONE
+if test -n "$CONFIG_SITE"; then
+  ac_site_file1=$CONFIG_SITE
+elif test "x$prefix" != xNONE; then
+  ac_site_file1=$prefix/share/config.site
+  ac_site_file2=$prefix/etc/config.site
+else
+  ac_site_file1=$ac_default_prefix/share/config.site
+  ac_site_file2=$ac_default_prefix/etc/config.site
+fi
+for ac_site_file in "$ac_site_file1" "$ac_site_file2"
+do
+  test "x$ac_site_file" = xNONE && continue
+  if test -r "$ac_site_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
+$as_echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file"
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special
+  # files actually), so we avoid doing that.
+  if test -f "$cache_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
+$as_echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
+    esac
+  fi
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
+$as_echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in $ac_precious_vars; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	# differences in whitespace do not lead to failure.
+	ac_old_val_w=`echo x $ac_old_val`
+	ac_new_val_w=`echo x $ac_new_val`
+	if test "$ac_old_val_w" != "$ac_new_val_w"; then
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
+$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	  ac_cache_corrupted=:
+	else
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
+$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
+	  eval $ac_var=\$ac_old_val
+	fi
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
+$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
+$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
+$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  as_fn_error "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
+fi
+## -------------------- ##
+## Main body of script. ##
+## -------------------- ##
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+
+
+
+
+ac_aux_dir=
+for ac_dir in "$srcdir" "$srcdir/.." "$srcdir/../.."; do
+  for ac_t in install-sh install.sh shtool; do
+    if test -f "$ac_dir/$ac_t"; then
+      ac_aux_dir=$ac_dir
+      ac_install_sh="$ac_aux_dir/$ac_t -c"
+      break 2
+    fi
+  done
+done
+if test -z "$ac_aux_dir"; then
+  as_fn_error "cannot find install-sh, install.sh, or shtool in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"" "$LINENO" 5
+fi
+
+# These three variables are undocumented and unsupported,
+# and are intended to be withdrawn in a future Autoconf release.
+# They can cause serious problems if a builder's source tree is in a directory
+# whose full name contains unusual characters.
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
+ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.
+
+
+# Make sure we can run config.sub.
+$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
+  as_fn_error "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
+$as_echo_n "checking build system type... " >&6; }
+if test "${ac_cv_build+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_build_alias=$build_alias
+test "x$ac_build_alias" = x &&
+  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
+test "x$ac_build_alias" = x &&
+  as_fn_error "cannot guess build type; you must specify one" "$LINENO" 5
+ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
+  as_fn_error "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
+$as_echo "$ac_cv_build" >&6; }
+case $ac_cv_build in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical build" "$LINENO" 5;;
+esac
+build=$ac_cv_build
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_build
+shift
+build_cpu=$1
+build_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+build_os=$*
+IFS=$ac_save_IFS
+case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
+$as_echo_n "checking host system type... " >&6; }
+if test "${ac_cv_host+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$host_alias" = x; then
+  ac_cv_host=$ac_cv_build
+else
+  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $host_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
+$as_echo "$ac_cv_host" >&6; }
+case $ac_cv_host in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical host" "$LINENO" 5;;
+esac
+host=$ac_cv_host
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_host
+shift
+host_cpu=$1
+host_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+host_os=$*
+IFS=$ac_save_IFS
+case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking target system type" >&5
+$as_echo_n "checking target system type... " >&6; }
+if test "${ac_cv_target+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$target_alias" = x; then
+  ac_cv_target=$ac_cv_host
+else
+  ac_cv_target=`$SHELL "$ac_aux_dir/config.sub" $target_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $target_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_target" >&5
+$as_echo "$ac_cv_target" >&6; }
+case $ac_cv_target in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical target" "$LINENO" 5;;
+esac
+target=$ac_cv_target
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_target
+shift
+target_cpu=$1
+target_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+target_os=$*
+IFS=$ac_save_IFS
+case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac
+
+
+# The aliases save the names the user supplied, while $host etc.
+# will get canonicalized.
+test -n "$target_alias" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_prefix=${target_alias}-
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $@%:@ != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "no acceptable C compiler found in \$PATH
+See \`config.log' for more details." "$LINENO" 5; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out conftest.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
+$as_echo_n "checking for C compiler default output file name... " >&6; }
+ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+
+# The possible output files:
+ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"
+
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { { ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link_default") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
+	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
+	break;;
+    * )
+	break;;
+  esac
+done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
+else
+  ac_file=''
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
+$as_echo "$ac_file" >&6; }
+if test -z "$ac_file"; then :
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "C compiler cannot create executables
+See \`config.log' for more details." "$LINENO" 5; }; }
+fi
+ac_exeext=$ac_cv_exeext
+
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
+$as_echo_n "checking whether the C compiler works... " >&6; }
+# If not cross compiling, check that we can run a simple program.
+if test "$cross_compiling" != yes; then
+  if { ac_try='./$ac_file'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." "$LINENO" 5; }
+    fi
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out conftest.out
+ac_clean_files=$ac_clean_files_save
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
+$as_echo_n "checking whether we are cross compiling... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
+$as_echo "$cross_compiling" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
+$as_echo_n "checking for suffix of executables... " >&6; }
+if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest$ac_cv_exeext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
+$as_echo "$ac_cv_exeext" >&6; }
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
+$as_echo_n "checking for suffix of object files... " >&6; }
+if test "${ac_cv_objext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
+$as_echo "$ac_cv_objext" >&6; }
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+  
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing strerror" >&5
+$as_echo_n "checking for library containing strerror... " >&6; }
+if test "${ac_cv_search_strerror+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char strerror ();
+int
+main ()
+{
+return strerror ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' cposix; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_strerror=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if test "${ac_cv_search_strerror+set}" = set; then :
+  break
+fi
+done
+if test "${ac_cv_search_strerror+set}" = set; then :
+  
+else
+  ac_cv_search_strerror=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_strerror" >&5
+$as_echo "$ac_cv_search_strerror" >&6; }
+ac_res=$ac_cv_search_strerror
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  
+fi
+
+
+am__api_version='1.11'
+
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+# Reject install programs that cannot install multiple files.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
+$as_echo_n "checking for a BSD-compatible install... " >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in @%:@((
+  ./ | .// | /[cC]/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    rm -rf conftest.one conftest.two conftest.dir
+	    echo one > conftest.one
+	    echo two > conftest.two
+	    mkdir conftest.dir
+	    if "$as_dir/$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir" &&
+	      test -s conftest.one && test -s conftest.two &&
+	      test -s conftest.dir/conftest.one &&
+	      test -s conftest.dir/conftest.two
+	    then
+	      ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	      break 3
+	    fi
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+
+  done
+IFS=$as_save_IFS
+
+rm -rf conftest.one conftest.two conftest.dir
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
+$as_echo "$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
+$as_echo_n "checking whether build environment is sane... " >&6; }
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Reject unsafe characters in $srcdir or the absolute working directory
+# name.  Accept space and tab only in the latter.
+am_lf='
+'
+case `pwd` in
+  *[\\\"\#\$\&\'\`$am_lf]*)
+    as_fn_error "unsafe absolute working directory name" "$LINENO" 5;;
+esac
+case $srcdir in
+  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
+    as_fn_error "unsafe srcdir value: \`$srcdir'" "$LINENO" 5;;
+esac
+
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
+   if test "$*" = "X"; then
+      # -L didn't work.
+      set X `ls -t "$srcdir/configure" conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$*" != "X $srcdir/configure conftest.file" \
+      && test "$*" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      as_fn_error "ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" "$LINENO" 5
+   fi
+
+   test "$2" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   as_fn_error "newly created file is older than distributed files!
+Check your system clock" "$LINENO" 5
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+test "$program_prefix" != NONE &&
+  program_transform_name="s&^&$program_prefix&;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
+# Double any \ or $.
+# By default was `s,x,x', remove it if useless.
+ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
+program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`
+
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+
+if test x"${MISSING+set}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
+  *)
+    MISSING="\${SHELL} $am_aux_dir/missing" ;;
+  esac
+fi
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`missing' script is too old or missing" >&5
+$as_echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
+fi
+
+if test x"${install_sh}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
+  *)
+    install_sh="\${SHELL} $am_aux_dir/install-sh"
+  esac
+fi
+
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+if test "$cross_compiling" != no; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+fi
+INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p" >&5
+$as_echo_n "checking for a thread-safe mkdir -p... " >&6; }
+if test -z "$MKDIR_P"; then
+  if test "${ac_cv_path_mkdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in mkdir gmkdir; do
+	 for ac_exec_ext in '' $ac_executable_extensions; do
+	   { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; } || continue
+	   case `"$as_dir/$ac_prog$ac_exec_ext" --version 2>&1` in #(
+	     'mkdir (GNU coreutils) '* | \
+	     'mkdir (coreutils) '* | \
+	     'mkdir (fileutils) '4.1*)
+	       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext
+	       break 3;;
+	   esac
+	 done
+       done
+  done
+IFS=$as_save_IFS
+
+fi
+
+  if test "${ac_cv_path_mkdir+set}" = set; then
+    MKDIR_P="$ac_cv_path_mkdir -p"
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for MKDIR_P within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    test -d ./--version && rmdir ./--version
+    MKDIR_P="$ac_install_sh -d"
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
+$as_echo "$MKDIR_P" >&6; }
+
+mkdir_p="$MKDIR_P"
+case $mkdir_p in
+  [\\/$]* | ?:[\\/]*) ;;
+  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
+esac
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
+$as_echo "$AWK" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
+set x ${MAKE-make}
+ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
+if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat >conftest.make <<\_ACEOF
+SHELL = /bin/sh
+all:
+	@echo '@@@%%%=$(MAKE)=@@@%%%'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
+case `${MAKE-make} -f conftest.make 2>/dev/null` in
+  *@@@%%%=?*=@@@%%%*)
+    eval ac_cv_prog_make_${ac_make}_set=yes;;
+  *)
+    eval ac_cv_prog_make_${ac_make}_set=no;;
+esac
+rm -f conftest.make
+fi
+if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  SET_MAKE=
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+
+DEPDIR="${am__leading_dot}deps"
+
+ac_config_commands="$ac_config_commands depfiles"
+
+
+am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo this is the am__doit target
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for style of include used by $am_make" >&5
+$as_echo_n "checking for style of include used by $am_make... " >&6; }
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# Ignore all kinds of additional output from `make'.
+case `$am_make -s -f confmf 2> /dev/null` in #(
+*the\ am__doit\ target*)
+  am__include=include
+  am__quote=
+  _am_result=GNU
+  ;;
+esac
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   case `$am_make -s -f confmf 2> /dev/null` in #(
+   *the\ am__doit\ target*)
+     am__include=.include
+     am__quote="\""
+     _am_result=BSD
+     ;;
+   esac
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $_am_result" >&5
+$as_echo "$_am_result" >&6; }
+rm -f confinc confmf
+
+@%:@ Check whether --enable-dependency-tracking was given.
+if test "${enable_dependency_tracking+set}" = set; then :
+  enableval=$enable_dependency_tracking; 
+fi
+
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+ if test "x$enable_dependency_tracking" != xno; then
+  AMDEP_TRUE=
+  AMDEP_FALSE='#'
+else
+  AMDEP_TRUE='#'
+  AMDEP_FALSE=
+fi
+
+
+if test "`cd $srcdir && pwd`" != "`pwd`"; then
+  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
+  # is not polluted with repeated "-I."
+  am__isrc=' -I$(srcdir)'
+  # test to see if srcdir already configured
+  if test -f $srcdir/config.status; then
+    as_fn_error "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
+  fi
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+
+
+# Define the identity of the package.
+ PACKAGE=bfd
+ VERSION=2.20
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE "$PACKAGE"
+_ACEOF
+
+ 
+cat >>confdefs.h <<_ACEOF
+@%:@define VERSION "$VERSION"
+_ACEOF
+
+# Some tools Automake needs.
+
+ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}
+
+
+AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}
+
+
+AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}
+
+
+AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}
+
+
+MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
+
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+# Always define AMTAR for backward compatibility.
+
+AMTAR=${AMTAR-"${am_missing_run}tar"}
+
+am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'
+
+
+
+
+depcc="$CC"   am_compiler_list=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
+$as_echo_n "checking dependency style of $depcc... " >&6; }
+if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CC_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  am__universal=false
+  case " $depcc " in #(
+     *\ -arch\ *\ -arch\ *) am__universal=true ;;
+     esac
+
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.  Also, some Intel
+    # versions had trouble with output in subdirs
+    am__obj=sub/conftest.${OBJEXT-o}
+    am__minus_obj="-o $am__obj"
+    case $depmode in
+    gcc)
+      # This depmode causes a compiler race in universal mode.
+      test "$am__universal" = false || continue
+      ;;
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    msvisualcpp | msvcmsys)
+      # This compiler won't grok `-c -o', but also, the minuso test has
+      # not run yet.  These depmodes are late enough in the game, and
+      # so weak that their functioning should not be impacted.
+      am__obj=conftest.${OBJEXT-o}
+      am__minus_obj=
+      ;;
+    none) break ;;
+    esac
+    if depmode=$depmode \
+       source=sub/conftest.c object=$am__obj \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_CC_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CC_dependencies_compiler_type=none
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
+$as_echo "$am_cv_CC_dependencies_compiler_type" >&6; }
+CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type
+
+ if 
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
+  am__fastdepCC_TRUE=
+  am__fastdepCC_FALSE='#'
+else
+  am__fastdepCC_TRUE='#'
+  am__fastdepCC_FALSE=
+fi
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
+$as_echo "$ac_ct_RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+
+@%:@ Check whether --enable-shared was given.
+if test "${enable_shared+set}" = set; then :
+  enableval=$enable_shared; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_shared=no
+fi
+
+
+    
+    
+    
+    
+
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $@%:@ != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "no acceptable C compiler found in \$PATH
+See \`config.log' for more details." "$LINENO" 5; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+  
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+$as_echo_n "checking how to run the C preprocessor... " >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if test "${ac_cv_prog_CPP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@ifdef __STDC__
+@%:@ include <limits.h>
+@%:@else
+@%:@ include <assert.h>
+@%:@endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  break
+fi
+
+    done
+    ac_cv_prog_CPP=$CPP
+  
+fi
+  CPP=$ac_cv_prog_CPP
+else
+  ac_cv_prog_CPP=$CPP
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+$as_echo "$CPP" >&6; }
+ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@ifdef __STDC__
+@%:@ include <limits.h>
+@%:@else
+@%:@ include <assert.h>
+@%:@endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
+$as_echo_n "checking for grep that handles long lines and -e... " >&6; }
+if test "${ac_cv_path_GREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$GREP"; then
+  ac_path_GREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in grep ggrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
+# Check for GNU ac_path_GREP and select it if it is found.
+  # Check for GNU $ac_path_GREP
+case `"$ac_path_GREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'GREP' >> "conftest.nl"
+    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_GREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_GREP="$ac_path_GREP"
+      ac_path_GREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_GREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_GREP"; then
+    as_fn_error "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_GREP=$GREP
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
+$as_echo "$ac_cv_path_GREP" >&6; }
+ GREP="$ac_cv_path_GREP"
+ 
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
+$as_echo_n "checking for egrep... " >&6; }
+if test "${ac_cv_path_EGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
+   then ac_cv_path_EGREP="$GREP -E"
+   else
+     if test -z "$EGREP"; then
+  ac_path_EGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in egrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
+# Check for GNU ac_path_EGREP and select it if it is found.
+  # Check for GNU $ac_path_EGREP
+case `"$ac_path_EGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'EGREP' >> "conftest.nl"
+    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_EGREP="$ac_path_EGREP"
+      ac_path_EGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_EGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_EGREP"; then
+    as_fn_error "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_EGREP=$EGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
+$as_echo "$ac_cv_path_EGREP" >&6; }
+ EGREP="$ac_cv_path_EGREP"
+ 
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
+$as_echo_n "checking for ANSI C header files... " >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdc=yes
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then :
+  :
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
+$as_echo "$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+  
+$as_echo "@%:@define STDC_HEADERS 1" >>confdefs.h
+
+fi
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
+"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+
+
+  ac_fn_c_check_header_mongrel "$LINENO" "minix/config.h" "ac_cv_header_minix_config_h" "$ac_includes_default"
+if test "x$ac_cv_header_minix_config_h" = x""yes; then :
+  MINIX=yes
+else
+  MINIX=
+fi
+
+
+  if test "$MINIX" = yes; then
+    
+$as_echo "@%:@define _POSIX_SOURCE 1" >>confdefs.h
+
+    
+$as_echo "@%:@define _POSIX_1_SOURCE 2" >>confdefs.h
+
+    
+$as_echo "@%:@define _MINIX 1" >>confdefs.h
+
+  fi
+
+  
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__" >&5
+$as_echo_n "checking whether it is safe to define __EXTENSIONS__... " >&6; }
+if test "${ac_cv_safe_to_define___extensions__+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#	  define __EXTENSIONS__ 1
+	  $ac_includes_default
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_safe_to_define___extensions__=yes
+else
+  ac_cv_safe_to_define___extensions__=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__" >&5
+$as_echo "$ac_cv_safe_to_define___extensions__" >&6; }
+  test $ac_cv_safe_to_define___extensions__ = yes &&
+    $as_echo "@%:@define __EXTENSIONS__ 1" >>confdefs.h
+
+  $as_echo "@%:@define _ALL_SOURCE 1" >>confdefs.h
+
+  $as_echo "@%:@define _GNU_SOURCE 1" >>confdefs.h
+
+  $as_echo "@%:@define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h
+
+  $as_echo "@%:@define _TANDEM_SOURCE 1" >>confdefs.h
+
+
+
+
+
+case `pwd` in
+  *\ * | *\	*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
+$as_echo "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
+esac
+
+
+
+macro_version='2.2.6'
+macro_revision='1.3012'
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+ltmain="$ac_aux_dir/ltmain.sh"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if test "${ac_cv_path_SED+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+test -z "$SED" && SED=sed
+Xsed="$SED -e 1s/^X//"
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5
+$as_echo_n "checking for fgrep... " >&6; }
+if test "${ac_cv_path_FGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1
+   then ac_cv_path_FGREP="$GREP -F"
+   else
+     if test -z "$FGREP"; then
+  ac_path_FGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in fgrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_FGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_FGREP" && $as_test_x "$ac_path_FGREP"; } || continue
+# Check for GNU ac_path_FGREP and select it if it is found.
+  # Check for GNU $ac_path_FGREP
+case `"$ac_path_FGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_FGREP="$ac_path_FGREP" ac_path_FGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'FGREP' >> "conftest.nl"
+    "$ac_path_FGREP" FGREP < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_FGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_FGREP="$ac_path_FGREP"
+      ac_path_FGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_FGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_FGREP"; then
+    as_fn_error "no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_FGREP=$FGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP" >&5
+$as_echo "$ac_cv_path_FGREP" >&6; }
+ FGREP="$ac_cv_path_FGREP"
+ 
+
+test -z "$GREP" && GREP=grep
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+
+@%:@ Check whether --with-gnu-ld was given.
+if test "${with_gnu_ld+set}" = set; then :
+  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+else
+  with_gnu_ld=no
+fi
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
+$as_echo_n "checking for ld used by $CC... " >&6; }
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [\\/]* | ?:[\\/]*)
+      re_direlt='/[^/][^/]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
+      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
+$as_echo_n "checking for GNU ld... " >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for non-GNU ld" >&5
+$as_echo_n "checking for non-GNU ld... " >&6; }
+fi
+if test "${lt_cv_path_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi
+fi
+
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+test -z "$LD" && as_fn_error "no acceptable ld found in \$PATH" "$LINENO" 5
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
+$as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
+if test "${lt_cv_prog_gnu_ld+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld" >&5
+$as_echo "$lt_cv_prog_gnu_ld" >&6; }
+with_gnu_ld=$lt_cv_prog_gnu_ld
+
+
+
+
+    
+    
+    
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)" >&5
+$as_echo_n "checking for BSD- or MS-compatible name lister (nm)... " >&6; }
+if test "${lt_cv_path_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  : ${lt_cv_path_NM=no}
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM" >&5
+$as_echo "$lt_cv_path_NM" >&6; }
+if test "$lt_cv_path_NM" != "no"; then
+  NM="$lt_cv_path_NM"
+else
+  # Didn't find any BSD compatible name lister, look for dumpbin.
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DUMPBIN"; then
+  ac_cv_prog_DUMPBIN="$DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DUMPBIN="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DUMPBIN=$ac_cv_prog_DUMPBIN
+if test -n "$DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DUMPBIN" >&5
+$as_echo "$DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$DUMPBIN" && break
+  done
+fi
+if test -z "$DUMPBIN"; then
+  ac_ct_DUMPBIN=$DUMPBIN
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DUMPBIN"; then
+  ac_cv_prog_ac_ct_DUMPBIN="$ac_ct_DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DUMPBIN="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN
+if test -n "$ac_ct_DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN" >&5
+$as_echo "$ac_ct_DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_DUMPBIN" && break
+done
+
+  if test "x$ac_ct_DUMPBIN" = x; then
+    DUMPBIN=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DUMPBIN=$ac_ct_DUMPBIN
+  fi
+fi
+
+  
+  if test "$DUMPBIN" != ":"; then
+    NM="$DUMPBIN"
+  fi
+fi
+test -z "$NM" && NM=nm
+
+
+    
+    
+    
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface" >&5
+$as_echo_n "checking the name lister ($NM) interface... " >&6; }
+if test "${lt_cv_nm_interface+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_nm_interface="BSD nm"
+  echo "int some_variable = 0;" > conftest.$ac_ext
+  (eval echo "\"\$as_me:__oline__: $ac_compile\"" >&5)
+  (eval "$ac_compile" 2>conftest.err)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:__oline__: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
+  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:__oline__: output\"" >&5)
+  cat conftest.out >&5
+  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
+    lt_cv_nm_interface="MS dumpbin"
+  fi
+  rm -f conftest*
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface" >&5
+$as_echo "$lt_cv_nm_interface" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
+$as_echo_n "checking whether ln -s works... " >&6; }
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
+$as_echo "no, using $LN_S" >&6; }
+fi
+
+# find the maximum length of command line arguments
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments" >&5
+$as_echo_n "checking the maximum length of command line arguments... " >&6; }
+if test "${lt_cv_sys_max_cmd_len+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+    i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw* | cegcc*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[	 ]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
+    if test -n "$lt_cv_sys_max_cmd_len"; then
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    else
+      # Make teststring a little bigger before we do anything with it.
+      # a 1K string should be a reasonable start.
+      for i in 1 2 3 4 5 6 7 8 ; do
+        teststring=$teststring$teststring
+      done
+      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+      # If test is not a shell built-in, we'll probably end up computing a
+      # maximum length that is only half of the actual maximum length, but
+      # we can't tell.
+      while { test "X"`$SHELL $0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
+	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
+	      test $i != 17 # 1/2 MB should be enough
+      do
+        i=`expr $i + 1`
+        teststring=$teststring$teststring
+      done
+      # Only check the string length outside the loop.
+      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
+      teststring=
+      # Add a significant safety factor because C++ compilers can tack on
+      # massive amounts of additional arguments before passing them to the
+      # linker.  It appears as though 1/2 is a usable value.
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    fi
+    ;;
+  esac
+
+fi
+
+if test -n $lt_cv_sys_max_cmd_len ; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len" >&5
+$as_echo "$lt_cv_sys_max_cmd_len" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: none" >&5
+$as_echo "none" >&6; }
+fi
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+    
+    
+    
+
+
+: ${CP="cp -f"}
+: ${MV="mv -f"}
+: ${RM="rm -f"}
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands some XSI constructs" >&5
+$as_echo_n "checking whether the shell understands some XSI constructs... " >&6; }
+# Try some XSI features
+xsi_shell=no
+( _lt_dummy="a/b/c"
+  test "${_lt_dummy##*/},${_lt_dummy%/*},"${_lt_dummy%"$_lt_dummy"}, \
+      = c,a/b,, \
+    && eval 'test $(( 1 + 1 )) -eq 2 \
+    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
+  && xsi_shell=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xsi_shell" >&5
+$as_echo "$xsi_shell" >&6; }
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands \"+=\"" >&5
+$as_echo_n "checking whether the shell understands \"+=\"... " >&6; }
+lt_shell_append=no
+( foo=bar; set foo baz; eval "$1+=\$2" && test "$foo" = barbaz ) \
+    >/dev/null 2>&1 \
+  && lt_shell_append=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_shell_append" >&5
+$as_echo "$lt_shell_append" >&6; }
+
+
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  lt_unset=unset
+else
+  lt_unset=false
+fi
+
+    
+    
+    
+
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  lt_SP2NL='tr \040 \012'
+  lt_NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  lt_SP2NL='tr \100 \n'
+  lt_NL2SP='tr \r\n \100\100'
+  ;;
+esac
+
+    
+    
+    
+
+    
+    
+    
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files" >&5
+$as_echo_n "checking for $LD option to reload object files... " >&6; }
+if test "${lt_cv_ld_reload_flag+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_reload_flag='-r'
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag" >&5
+$as_echo "$lt_cv_ld_reload_flag" >&6; }
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+
+    
+    
+    
+
+    
+    
+    
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
+set dummy ${ac_tool_prefix}objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OBJDUMP"; then
+  ac_ct_OBJDUMP=$OBJDUMP
+  # Extract the first word of "objdump", so it can be a program name with args.
+set dummy objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OBJDUMP"; then
+  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OBJDUMP="objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
+if test -n "$ac_ct_OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
+$as_echo "$ac_ct_OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OBJDUMP" = x; then
+    OBJDUMP="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OBJDUMP=$ac_ct_OBJDUMP
+  fi
+else
+  OBJDUMP="$ac_cv_prog_OBJDUMP"
+fi
+
+test -z "$OBJDUMP" && OBJDUMP=objdump
+
+    
+    
+    
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries" >&5
+$as_echo_n "checking how to recognize dependent libraries... " >&6; }
+if test "${lt_cv_deplibs_check_method+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix[4-9]*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[45]*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump',
+  # unless we find 'file', for example because we are cross-compiling.
+  if ( file / ) >/dev/null 2>&1; then
+    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+    lt_cv_file_magic_cmd='func_win32_libid'
+  else
+    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+    lt_cv_file_magic_cmd='$OBJDUMP -f'
+  fi
+  ;;
+
+cegcc)
+  # use the weaker test based on 'objdump'. See mingw*.
+  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]'
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix[3-9]*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+*nto* | *qnx*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+rdos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+tpf*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method" >&5
+$as_echo "$lt_cv_deplibs_check_method" >&6; }
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+test -z "$STRIP" && STRIP=:
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
+$as_echo "$ac_ct_RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+test -z "$RANLIB" && RANLIB=:
+
+    
+    
+    
+
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object" >&5
+$as_echo_n "checking command to parse $NM output from $compiler object... " >&6; }
+if test "${lt_cv_sys_global_symbol_pipe+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[BCDEGRST]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([_A-Za-z][_A-Za-z0-9]*\)'
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[BCDT]'
+  ;;
+cygwin* | mingw* | pw32* | cegcc*)
+  symcode='[ABCDGISTW]'
+  ;;
+hpux*)
+  if test "$host_cpu" = ia64; then
+    symcode='[ABCDEGRST]'
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[BCDEGRST]'
+  ;;
+osf*)
+  symcode='[BCDEGQRST]'
+  ;;
+solaris*)
+  symcode='[BDRT]'
+  ;;
+sco3.2v5*)
+  symcode='[DT]'
+  ;;
+sysv4.2uw2*)
+  symcode='[DT]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[ABDT]'
+  ;;
+sysv4)
+  symcode='[DFNSTU]'
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[ABCDGIRSTW]' ;;
+esac
+
+# Transform an extracted symbol line into a proper C declaration.
+# Some systems (esp. on ia64) link data and code symbols differently,
+# so use this general approach.
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \(lib[^ ]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`$ECHO 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# Try without a prefix underscore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+    # Fake it for dumpbin and say T for any non-static function
+    # and D for any global variable.
+    # Also find C++ and __fastcall symbols from MSVC++,
+    # which start with @ or ?.
+    lt_cv_sys_global_symbol_pipe="$AWK '"\
+"     {last_section=section; section=\$ 3};"\
+"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     \$ 0!~/External *\|/{next};"\
+"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
+"     {if(hide[section]) next};"\
+"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
+"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
+"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     ' prfx=^$ac_symprfx"
+  else
+    lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+  fi
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<_LT_EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(void);
+void nm_test_func(void){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+_LT_EOF
+
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist\""; } >&5
+  (eval $NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if $GREP ' nm_test_var$' "$nlist" >/dev/null; then
+	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<_LT_EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+_LT_EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | $GREP -v main >> conftest.$ac_ext'
+
+	  cat <<_LT_EOF >> conftest.$ac_ext
+
+/* The mapping between symbol names and symbols.  */
+const struct {
+  const char *name;
+  void       *address;
+}
+lt__PROGRAM__LTX_preloaded_symbols[] =
+{
+  { "@PROGRAM@", (void *) 0 },
+_LT_EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  cat <<\_LT_EOF >> conftest.$ac_ext
+  {0, (void *) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt__PROGRAM__LTX_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+_LT_EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
+	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&5
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&5
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&5
+    fi
+  else
+    echo "$progname: failed program was:" >&5
+    cat conftest.$ac_ext >&5
+  fi
+  rm -rf conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+
+fi
+
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: failed" >&5
+$as_echo "failed" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: ok" >&5
+$as_echo "ok" >&6; }
+fi
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+@%:@ Check whether --enable-libtool-lock was given.
+if test "${enable_libtool_lock+set}" = set; then :
+  enableval=$enable_libtool_lock; 
+fi
+
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.$ac_objext` in
+      *ELF-32*)
+	HPUX_IA64_MODE="32"
+	;;
+      *ELF-64*)
+	HPUX_IA64_MODE="64"
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '#line __oline__ "configure"' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    if test "$lt_cv_prog_gnu_ld" = yes; then
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -melf32bsmip"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -melf32bmipn32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -melf64bmip"
+	;;
+      esac
+    else
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -32"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -n32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -64"
+	  ;;
+      esac
+    fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
+s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+      *32-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_i386_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_i386"
+	    ;;
+	  ppc64-*linux*|powerpc64-*linux*)
+	    LD="${LD-ld} -m elf32ppclinux"
+	    ;;
+	  s390x-*linux*)
+	    LD="${LD-ld} -m elf_s390"
+	    ;;
+	  sparc64-*linux*)
+	    LD="${LD-ld} -m elf32_sparc"
+	    ;;
+	esac
+	;;
+      *64-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_x86_64_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_x86_64"
+	    ;;
+	  ppc*-*linux*|powerpc*-*linux*)
+	    LD="${LD-ld} -m elf64ppc"
+	    ;;
+	  s390*-*linux*|s390*-*tpf*)
+	    LD="${LD-ld} -m elf64_s390"
+	    ;;
+	  sparc*-*linux*)
+	    LD="${LD-ld} -m elf64_sparc"
+	    ;;
+	esac
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf" >&5
+$as_echo_n "checking whether the C compiler needs -belf... " >&6; }
+if test "${lt_cv_cc_needs_belf+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_cc_needs_belf=yes
+else
+  lt_cv_cc_needs_belf=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf" >&5
+$as_echo "$lt_cv_cc_needs_belf" >&6; }
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)
+	if ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then
+	  LD="${LD-ld} -64"
+	fi
+	;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+need_locks="$enable_libtool_lock"
+
+
+  case $host_os in
+    rhapsody* | darwin*)
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}dsymutil", so it can be a program name with args.
+set dummy ${ac_tool_prefix}dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DSYMUTIL"; then
+  ac_cv_prog_DSYMUTIL="$DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DSYMUTIL="${ac_tool_prefix}dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DSYMUTIL=$ac_cv_prog_DSYMUTIL
+if test -n "$DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL" >&5
+$as_echo "$DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_DSYMUTIL"; then
+  ac_ct_DSYMUTIL=$DSYMUTIL
+  # Extract the first word of "dsymutil", so it can be a program name with args.
+set dummy dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DSYMUTIL"; then
+  ac_cv_prog_ac_ct_DSYMUTIL="$ac_ct_DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DSYMUTIL="dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL
+if test -n "$ac_ct_DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL" >&5
+$as_echo "$ac_ct_DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_DSYMUTIL" = x; then
+    DSYMUTIL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DSYMUTIL=$ac_ct_DSYMUTIL
+  fi
+else
+  DSYMUTIL="$ac_cv_prog_DSYMUTIL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}nmedit", so it can be a program name with args.
+set dummy ${ac_tool_prefix}nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NMEDIT"; then
+  ac_cv_prog_NMEDIT="$NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NMEDIT="${ac_tool_prefix}nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NMEDIT=$ac_cv_prog_NMEDIT
+if test -n "$NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NMEDIT" >&5
+$as_echo "$NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_NMEDIT"; then
+  ac_ct_NMEDIT=$NMEDIT
+  # Extract the first word of "nmedit", so it can be a program name with args.
+set dummy nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_NMEDIT"; then
+  ac_cv_prog_ac_ct_NMEDIT="$ac_ct_NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_NMEDIT="nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT
+if test -n "$ac_ct_NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT" >&5
+$as_echo "$ac_ct_NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_NMEDIT" = x; then
+    NMEDIT=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    NMEDIT=$ac_ct_NMEDIT
+  fi
+else
+  NMEDIT="$ac_cv_prog_NMEDIT"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}lipo", so it can be a program name with args.
+set dummy ${ac_tool_prefix}lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ac_tool_prefix}lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_LIPO"; then
+  ac_ct_LIPO=$LIPO
+  # Extract the first word of "lipo", so it can be a program name with args.
+set dummy lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_LIPO"; then
+  ac_cv_prog_ac_ct_LIPO="$ac_ct_LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_LIPO="lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO
+if test -n "$ac_ct_LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO" >&5
+$as_echo "$ac_ct_LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_LIPO" = x; then
+    LIPO=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    LIPO=$ac_ct_LIPO
+  fi
+else
+  LIPO="$ac_cv_prog_LIPO"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL"; then
+  ac_cv_prog_OTOOL="$OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL="${ac_tool_prefix}otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL=$ac_cv_prog_OTOOL
+if test -n "$OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL" >&5
+$as_echo "$OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL"; then
+  ac_ct_OTOOL=$OTOOL
+  # Extract the first word of "otool", so it can be a program name with args.
+set dummy otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL"; then
+  ac_cv_prog_ac_ct_OTOOL="$ac_ct_OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL="otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL
+if test -n "$ac_ct_OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL" >&5
+$as_echo "$ac_ct_OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL" = x; then
+    OTOOL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL=$ac_ct_OTOOL
+  fi
+else
+  OTOOL="$ac_cv_prog_OTOOL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool64", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL64"; then
+  ac_cv_prog_OTOOL64="$OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL64="${ac_tool_prefix}otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL64=$ac_cv_prog_OTOOL64
+if test -n "$OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL64" >&5
+$as_echo "$OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL64"; then
+  ac_ct_OTOOL64=$OTOOL64
+  # Extract the first word of "otool64", so it can be a program name with args.
+set dummy otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL64"; then
+  ac_cv_prog_ac_ct_OTOOL64="$ac_ct_OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL64="otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64
+if test -n "$ac_ct_OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64" >&5
+$as_echo "$ac_ct_OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL64" = x; then
+    OTOOL64=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL64=$ac_ct_OTOOL64
+  fi
+else
+  OTOOL64="$ac_cv_prog_OTOOL64"
+fi
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
+$as_echo_n "checking for -single_module linker flag... " >&6; }
+if test "${lt_cv_apple_cc_single_mod+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_apple_cc_single_mod=no
+      if test -z "${LT_MULTI_MODULE}"; then
+	# By default we will add the -single_module flag. You can override
+	# by either setting the environment variable LT_MULTI_MODULE
+	# non-empty at configure time, or by adding -multi_module to the
+	# link flags.
+	rm -rf libconftest.dylib*
+	echo "int foo(void){return 1;}" > conftest.c
+	echo "$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+-dynamiclib -Wl,-single_module conftest.c" >&5
+	$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+	  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err
+        _lt_result=$?
+	if test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then
+	  lt_cv_apple_cc_single_mod=yes
+	else
+	  cat conftest.err >&5
+	fi
+	rm -rf libconftest.dylib*
+	rm -f conftest.*
+      fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod" >&5
+$as_echo "$lt_cv_apple_cc_single_mod" >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
+$as_echo_n "checking for -exported_symbols_list linker flag... " >&6; }
+if test "${lt_cv_ld_exported_symbols_list+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_exported_symbols_list=no
+      save_LDFLAGS=$LDFLAGS
+      echo "_main" > conftest.sym
+      LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_ld_exported_symbols_list=yes
+else
+  lt_cv_ld_exported_symbols_list=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+	LDFLAGS="$save_LDFLAGS"
+    
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list" >&5
+$as_echo "$lt_cv_ld_exported_symbols_list" >&6; }
+    case $host_os in
+    rhapsody* | darwin1.[012])
+      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+    darwin1.*)
+      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+    darwin*) # darwin 5.x on
+      # if running on 10.5 or later, the deployment target defaults
+      # to the OS version, if on x86, and 10.4, the deployment
+      # target defaults to 10.4. Don't you love it?
+      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
+	10.0,*86*-darwin8*|10.0,*-darwin[91]*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	10.[012]*)
+	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	10.*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+      esac
+    ;;
+  esac
+    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+      _lt_dar_single_mod='$single_module'
+    fi
+    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
+      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    else
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    fi
+    if test "$DSYMUTIL" != ":"; then
+      _lt_dsymutil='~$DSYMUTIL $lib || :'
+    else
+      _lt_dsymutil=
+    fi
+    ;;
+  esac
+
+for ac_header in dlfcn.h
+do :
+  ac_fn_c_check_header_compile "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default
+"
+if test "x$ac_cv_header_dlfcn_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DLFCN_H 1
+_ACEOF
+ 
+fi
+
+done
+
+
+
+# Set options
+enable_dlopen=yes
+
+
+
+        
+  enable_win32_dll=no
+  
+
+            
+  @%:@ Check whether --enable-static was given.
+if test "${enable_static+set}" = set; then :
+  enableval=$enable_static; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_static=yes
+fi
+
+
+    
+    
+    
+    
+
+
+
+  
+@%:@ Check whether --with-pic was given.
+if test "${with_pic+set}" = set; then :
+  withval=$with_pic; pic_mode="$withval"
+else
+  pic_mode=default
+fi
+
+
+test -z "$pic_mode" && pic_mode=default
+
+
+    
+    
+    
+
+
+  @%:@ Check whether --enable-fast-install was given.
+if test "${enable_fast_install+set}" = set; then :
+  enableval=$enable_fast_install; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_fast_install=yes
+fi
+
+
+
+    
+    
+    
+
+
+  
+
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ltmain"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+test -z "$LN_S" && LN_S="ln -s"
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+
+if test -n "${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for objdir" >&5
+$as_echo_n "checking for objdir... " >&6; }
+if test "${lt_cv_objdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir" >&5
+$as_echo "$lt_cv_objdir" >&6; }
+objdir=$lt_cv_objdir
+
+    
+    
+    
+
+cat >>confdefs.h <<_ACEOF
+@%:@define LT_OBJDIR "$lt_cv_objdir/"
+_ACEOF
+
+
+
+
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\(["`\\]\)/\\\1/g'
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to delay expansion of an escaped single quote.
+delay_single_quote_subst='s/'\''/'\'\\\\\\\'\''/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Global variables:
+ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$LD" && LD=ld
+test -z "$ac_objext" && ac_objext=o
+
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$ECHO "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# Only perform the check for file, if the check method requires it
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file" >&5
+$as_echo_n "checking for ${ac_tool_prefix}file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/${ac_tool_prefix}file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/${ac_tool_prefix}file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+    
+    
+    
+
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for file" >&5
+$as_echo_n "checking for file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  else
+    MAGIC_CMD=:
+  fi
+fi
+
+  fi
+  ;;
+esac
+
+# Use C for the default configuration in the libtool script
+
+lt_save_CC="$CC"
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+objext=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}'
+
+
+
+
+
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+# Save the default compiler, since it gets overwritten when the other
+# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.
+compiler_DEFAULT=$CC
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$RM conftest*
+
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$RM -r conftest*
+
+
+## CAVEAT EMPTOR:
+## There is no encapsulation within the following macros, do not change
+## the running order or otherwise move them around unless you know exactly
+## what you are doing...
+if test -n "$compiler"; then
+  
+lt_prog_compiler_no_builtin_flag=
+
+if test "$GCC" = yes; then
+  lt_prog_compiler_no_builtin_flag=' -fno-builtin'
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
+$as_echo_n "checking if $compiler supports -fno-rtti -fno-exceptions... " >&6; }
+if test "${lt_cv_prog_compiler_rtti_exceptions+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_rtti_exceptions=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_rtti_exceptions=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
+$as_echo "$lt_cv_prog_compiler_rtti_exceptions" >&6; }
+
+if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+    lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
+else
+    :
+fi
+
+fi
+
+    
+    
+    
+
+
+  lt_prog_compiler_wl=
+lt_prog_compiler_pic=
+lt_prog_compiler_static=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC" >&5
+$as_echo_n "checking for $compiler option to produce PIC... " >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl='-Wl,'
+    lt_prog_compiler_static='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            lt_prog_compiler_pic='-fPIC'
+        ;;
+      m68k)
+            # FIXME: we need at least 68020 code to build shared libraries, but
+            # adding the `-m68020' flag to GCC prevents building anything better,
+            # like `-m68040'.
+            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
+        ;;
+      esac
+      ;;
+
+    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      # Although the cygwin gcc ignores -fPIC, still need this for old-style
+      # (--disable-auto-import) libraries
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic='-fno-common'
+      ;;
+
+    hpux*)
+      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
+      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
+      # sets the default TLS model and affects inlining.
+      case $host_cpu in
+      hppa*64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='-fPIC'
+	;;
+      esac
+      ;;
+
+    interix[3-9]*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared=no
+      enable_shared=no
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic=-Kconform_pic
+      fi
+      ;;
+
+    *)
+      lt_prog_compiler_pic='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      else
+	lt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
+      case $cc_basename in
+      # old Intel for x86_64 which still supported -KPIC.
+      ecc*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-KPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # icc used to be incompatible with GCC.
+      # ICC 10 doesn't accept -KPIC any more.
+      icc* | ifort*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # Lahey Fortran 8.1.
+      lf95*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='--shared'
+	lt_prog_compiler_static='--static'
+	;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fpic'
+	lt_prog_compiler_static='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static='-non_shared'
+        ;;
+      xl*)
+	# IBM XL C 8.0/Fortran 10.1 on PPC
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-qpic'
+	lt_prog_compiler_static='-qstaticlink'
+	;;
+      *)
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)
+	  # Sun C 5.9
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl='-Wl,'
+	  ;;
+	*Sun\ F*)
+	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl=''
+	  ;;
+	esac
+	;;
+      esac
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    rdos*)
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl='-Qoption ld '
+      lt_prog_compiler_pic='-PIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic='-Kconform_pic'
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_can_build_shared=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic='-pic'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared=no
+      ;;
+    esac
+  fi
+
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic=
+    ;;
+  *)
+    lt_prog_compiler_pic="$lt_prog_compiler_pic@&t@ -DPIC"
+    ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_prog_compiler_pic" >&5
+$as_echo "$lt_prog_compiler_pic" >&6; }
+
+    
+    
+    
+
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works" >&5
+$as_echo_n "checking if $compiler PIC flag $lt_prog_compiler_pic works... " >&6; }
+if test "${lt_cv_prog_compiler_pic_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_pic_works=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic@&t@ -DPIC"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_pic_works=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works" >&5
+$as_echo "$lt_cv_prog_compiler_pic_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_pic_works" = xyes; then
+    case $lt_prog_compiler_pic in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
+     esac
+else
+    lt_prog_compiler_pic=
+     lt_prog_compiler_can_build_shared=no
+fi
+
+fi
+
+    
+    
+    
+
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\"$lt_prog_compiler_static\"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+$as_echo_n "checking if $compiler static flag $lt_tmp_static_flag works... " >&6; }
+if test "${lt_cv_prog_compiler_static_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_static_works=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   echo "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_cv_prog_compiler_static_works=yes
+       fi
+     else
+       lt_cv_prog_compiler_static_works=yes
+     fi
+   fi
+   $RM -r conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works" >&5
+$as_echo "$lt_cv_prog_compiler_static_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_static_works" = xyes; then
+    :
+else
+    lt_prog_compiler_static=
+fi
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
+$as_echo_n "checking if we can lock with hard links... " >&6; }
+  hard_links=yes
+  $RM conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
+$as_echo "$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+$as_echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
+
+  runpath_var=
+  allow_undefined_flag=
+  always_export_symbols=no
+  archive_cmds=
+  archive_expsym_cmds=
+  compiler_needs_object=no
+  enable_shared_with_static_runtimes=no
+  export_dynamic_flag_spec=
+  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  hardcode_automatic=no
+  hardcode_direct=no
+  hardcode_direct_absolute=no
+  hardcode_libdir_flag_spec=
+  hardcode_libdir_flag_spec_ld=
+  hardcode_libdir_separator=
+  hardcode_minus_L=no
+  hardcode_shlibpath_var=unsupported
+  inherit_rpath=no
+  link_all_deplibs=unknown
+  module_cmds=
+  module_expsym_cmds=
+  old_archive_from_new_cmds=
+  old_archive_from_expsyms_cmds=
+  thread_safe_flag_spec=
+  whole_archive_flag_spec=
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  # Exclude shared library initialization/finalization symbols.
+  extract_expsyms_cmds=
+
+  case $host_os in
+  cygwin* | mingw* | pw32* | cegcc*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  ld_shlibs=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+    export_dynamic_flag_spec='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
+      whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      whole_archive_flag_spec=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>&1` in
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix[3-9]*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+_LT_EOF
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec='-L$libdir'
+      allow_undefined_flag=unsupported
+      always_export_symbols=no
+      enable_shared_with_static_runtimes=yes
+      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS][ ]/s/.*[ ]\([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW][ ]/s/.*[ ]//'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
+        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    interix[3-9]*)
+      hardcode_direct=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
+      tmp_diet=no
+      if test "$host_os" = linux-dietlibc; then
+	case $cc_basename in
+	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
+	esac
+      fi
+      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
+	 && test "$tmp_diet" = no
+      then
+	tmp_addflag=
+	tmp_sharedflag='-shared'
+	case $cc_basename,$host_cpu in
+        pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	lf95*)				# Lahey Fortran 8.1
+	  whole_archive_flag_spec=
+	  tmp_sharedflag='--shared' ;;
+	xl[cC]*)			# IBM XL C 8.0 on PPC (deal with xlf below)
+	  tmp_sharedflag='-qmkshrobj'
+	  tmp_addflag= ;;
+	esac
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)			# Sun C 5.9
+	  whole_archive_flag_spec='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  compiler_needs_object=yes
+	  tmp_sharedflag='-G' ;;
+	*Sun\ F*)			# Sun Fortran 8.3
+	  tmp_sharedflag='-G' ;;
+	esac
+	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+        if test "x$supports_anon_versioning" = xyes; then
+          archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	    echo "local: *; };" >> $output_objdir/$libname.ver~
+	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+        fi
+
+	case $cc_basename in
+	xlf*)
+	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
+	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
+	  hardcode_libdir_flag_spec=
+	  hardcode_libdir_flag_spec_ld='-rpath $libdir'
+	  archive_cmds='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'
+	  if test "x$supports_anon_versioning" = xyes; then
+	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	      echo "local: *; };" >> $output_objdir/$libname.ver~
+	      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+	  fi
+	  ;;
+	esac
+      else
+        ld_shlibs=no
+      fi
+      ;;
+
+    netbsd*)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | $GREP 'BFD 2\.8' > /dev/null; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  # For security reasons, it is highly recommended that you always
+	  # use absolute paths for naming shared libraries, and exclude the
+	  # DT_RUNPATH tag from executables and libraries.  But doing so
+	  # requires that you compile everything twice, which is a pain.
+	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  else
+	    ld_shlibs=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec=
+      export_dynamic_flag_spec=
+      whole_archive_flag_spec=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag=unsupported
+      always_export_symbols=yes
+      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct=unsupported
+      fi
+      ;;
+
+    aix[4-9]*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
+	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)
+	  for ld_flag in $LDFLAGS; do
+	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	    aix_use_runtimelinking=yes
+	    break
+	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds=''
+      hardcode_direct=yes
+      hardcode_direct_absolute=yes
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      file_list_spec='${wl}-f,'
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" &&
+	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
+	  then
+	  # We have reworked collect2
+	  :
+	  else
+	  # We have old collect2
+	  hardcode_direct=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  hardcode_minus_L=yes
+	  hardcode_libdir_flag_spec='-L$libdir'
+	  hardcode_libdir_separator=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      export_dynamic_flag_spec='${wl}-bexpall'
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag='-berok'
+        # Determine the default libpath from the value encoded in an
+        # empty executable.
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+        hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then $ECHO "X${wl}${allow_undefined_flag}" | $Xsed; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+      else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag="-z nodefs"
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an
+	 # empty executable.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag=' ${wl}-bernotok'
+	  allow_undefined_flag=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec='$convenience'
+	  archive_cmds_need_lc=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec=' '
+      allow_undefined_flag=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds='$CC -o $lib $libobjs $compiler_flags `$ECHO "X$deplibs" | $Xsed -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_from_new_cmds='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes=yes
+      ;;
+
+    darwin* | rhapsody*)
+      
+  
+  archive_cmds_need_lc=no
+  hardcode_direct=no
+  hardcode_automatic=yes
+  hardcode_shlibpath_var=unsupported
+  whole_archive_flag_spec=''
+  link_all_deplibs=yes
+  allow_undefined_flag="$_lt_dar_allow_undefined"
+  case $cc_basename in
+     ifort*) _lt_dar_can_shared=yes ;;
+     *) _lt_dar_can_shared=$GCC ;;
+  esac
+  if test "$_lt_dar_can_shared" = "yes"; then
+    output_verbose_link_cmd=echo
+    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
+    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
+    archive_expsym_cmds="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
+    module_expsym_cmds="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+    
+  else
+  ld_shlibs=no
+  fi
+
+      ;;
+
+    dgux*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_direct=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L=yes
+      export_dynamic_flag_spec='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_flag_spec_ld='+b $libdir'
+	hardcode_libdir_separator=:
+	hardcode_direct=yes
+	hardcode_direct_absolute=yes
+	export_dynamic_flag_spec='${wl}-E'
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_direct=no
+	  hardcode_shlibpath_var=no
+	  ;;
+	*)
+	  hardcode_direct=yes
+	  hardcode_direct_absolute=yes
+	  export_dynamic_flag_spec='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	# Try to use the -exported_symbol ld option, if it does not
+	# work, assume that -exports_file does not work either and
+	# implicitly export all symbols.
+        save_LDFLAGS="$LDFLAGS"
+        LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+int foo(void) {}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+        
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+        LDFLAGS="$save_LDFLAGS"
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      inherit_rpath=yes
+      link_all_deplibs=yes
+      ;;
+
+    netbsd*)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    newsos6)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_shlibpath_var=no
+      ;;
+
+    *nto* | *qnx*)
+      ;;
+
+    openbsd*)
+      if test -f /usr/libexec/ld.so; then
+	hardcode_direct=yes
+	hardcode_shlibpath_var=no
+	hardcode_direct_absolute=yes
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	  hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	  export_dynamic_flag_spec='${wl}-E'
+	else
+	  case $host_os in
+	   openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	     hardcode_libdir_flag_spec='-R$libdir'
+	     ;;
+	   *)
+	     archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	     hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	     ;;
+	  esac
+	fi
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      allow_undefined_flag=unsupported
+      archive_cmds='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$ECHO DATA >> $output_objdir/$libname.def~$ECHO " SINGLE NONSHARED" >> $output_objdir/$libname.def~$ECHO EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_from_new_cmds='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
+	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec='-rpath $libdir'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_separator=:
+      ;;
+
+    solaris*)
+      no_undefined_flag=' -z defs'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+      else
+	case `$CC -V 2>&1` in
+	*"Compilers 5.0"*)
+	  wlarc=''
+	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+	  ;;
+	*)
+	  wlarc='${wl}'
+	  archive_cmds='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+	  ;;
+	esac
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_shlibpath_var=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+	# The compiler driver will combine and reorder linker options,
+	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but is careful enough not to reorder.
+	# Supported since Solaris 2.6 (maybe 2.5.1?)
+	if test "$GCC" = yes; then
+	  whole_archive_flag_spec='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	else
+	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'
+	fi
+	;;
+      esac
+      link_all_deplibs=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds='$CC -r -o $output$reload_objs'
+	  hardcode_direct=no
+        ;;
+	motorola)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var=no
+      export_dynamic_flag_spec='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
+      no_undefined_flag='${wl}-z,text'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag='${wl}-z,text'
+      allow_undefined_flag='${wl}-z,nodefs'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-R,$libdir'
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      export_dynamic_flag_spec='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      ld_shlibs=no
+      ;;
+    esac
+
+    if test x$host_vendor = xsni; then
+      case $host in
+      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
+	export_dynamic_flag_spec='${wl}-Blargedynsym'
+	;;
+      esac
+    fi
+  fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ld_shlibs" >&5
+$as_echo "$ld_shlibs" >&6; }
+test "$ld_shlibs" = no && can_build_shared=no
+
+with_gnu_ld=$with_gnu_ld
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
+$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
+if test "${lt_cv_archive_cmds_need_lc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  $RM conftest*
+	echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+	if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } 2>conftest.err; then
+	  soname=conftest
+	  lib=conftest
+	  libobjs=conftest.$ac_objext
+	  deplibs=
+	  wl=$lt_prog_compiler_wl
+	  pic_flag=$lt_prog_compiler_pic
+	  compiler_flags=-v
+	  linker_flags=-v
+	  verstring=
+	  output_objdir=.
+	  libname=conftest
+	  lt_save_allow_undefined_flag=$allow_undefined_flag
+	  allow_undefined_flag=
+	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1\""; } >&5
+  (eval $archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+	  then
+	    lt_cv_archive_cmds_need_lc=no
+	  else
+	    lt_cv_archive_cmds_need_lc=yes
+	  fi
+	  allow_undefined_flag=$lt_save_allow_undefined_flag
+	else
+	  cat conftest.err 1>&5
+	fi
+	$RM conftest*
+	
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc" >&5
+$as_echo "$lt_cv_archive_cmds_need_lc" >&6; }
+      archive_cmds_need_lc=$lt_cv_archive_cmds_need_lc
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
+$as_echo_n "checking dynamic linker characteristics... " >&6; }
+
+if test "$GCC" = yes; then
+  case $host_os in
+    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
+    *) lt_awk_arg="/^libraries:/" ;;
+  esac
+  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if $ECHO "$lt_search_path_spec" | $GREP ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+  # Ok, now we have the path, separated by spaces, we can step through it
+  # and add multilib dir if necessary.
+  lt_tmp_lt_search_path_spec=
+  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  for lt_sys_path in $lt_search_path_spec; do
+    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
+    else
+      test -d "$lt_sys_path" && \
+	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
+    fi
+  done
+  lt_search_path_spec=`$ECHO $lt_tmp_lt_search_path_spec | awk '
+BEGIN {RS=" "; FS="/|\n";} {
+  lt_foo="";
+  lt_count=0;
+  for (lt_i = NF; lt_i > 0; lt_i--) {
+    if ($lt_i != "" && $lt_i != ".") {
+      if ($lt_i == "..") {
+        lt_count++;
+      } else {
+        if (lt_count == 0) {
+          lt_foo="/" $lt_i lt_foo;
+        } else {
+          lt_count--;
+        }
+      }
+    }
+  }
+  if (lt_foo != "") { lt_freq[lt_foo]++; }
+  if (lt_freq[lt_foo] == 1) { print lt_foo; }
+}'`
+  sys_lib_search_path_spec=`$ECHO $lt_search_path_spec`
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix[4-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  case $host_cpu in
+  powerpc)
+    # Since July 2007 AmigaOS4 officially supports .so libraries.
+    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    ;;
+  m68k)
+    library_names_spec='$libname.ixlibrary $libname.a'
+    # Create ${libname}_ixlibrary.a entries in /sys/libs.
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$ECHO "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    ;;
+  esac
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32* | cegcc*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname~
+      if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+        eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+      fi'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $RM \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw* | cegcc*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | $GREP "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if $ECHO "$sys_lib_search_path_spec" | $GREP ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+
+  sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/local/lib"
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  *) # from 4.6 on, and DragonFly
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  hppa*64*)
+    shrext_cmds='.sl'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix[3-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+
+  # Some binutils ld are patched to set DT_RUNPATH
+  if test "${lt_cv_shlibpath_overrides_runpath+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_shlibpath_overrides_runpath=no
+    save_LDFLAGS=$LDFLAGS
+    save_libdir=$libdir
+    eval "libdir=/foo; wl=\"$lt_prog_compiler_wl\"; \
+	 LDFLAGS=\"\$LDFLAGS $hardcode_libdir_flag_spec\""
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep "RUNPATH.*$libdir" >/dev/null; then :
+  lt_cv_shlibpath_overrides_runpath=yes
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    LDFLAGS=$save_LDFLAGS
+    libdir=$save_libdir
+    
+fi
+
+  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+*nto* | *qnx*)
+  version_type=qnx
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='ldqnx.so'
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
+    *)				need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+rdos*)
+  dynamic_linker=no
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+tpf*)
+  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
+$as_echo "$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
+  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+fi
+if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
+  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+fi
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs" >&5
+$as_echo_n "checking how to hardcode library paths into programs... " >&6; }
+hardcode_action=
+if test -n "$hardcode_libdir_flag_spec" ||
+   test -n "$runpath_var" ||
+   test "X$hardcode_automatic" = "Xyes" ; then
+
+  # We can hardcode non-existent directories.
+  if test "$hardcode_direct" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, )" != no &&
+     test "$hardcode_minus_L" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action=unsupported
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $hardcode_action" >&5
+$as_echo "$hardcode_action" >&6; }
+
+if test "$hardcode_action" = relink ||
+   test "$inherit_rpath" = yes; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+    
+    
+    
+
+
+  if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32* | cegcc*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+    ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+    ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    
+fi
+
+    ;;
+
+  *)
+    ac_fn_c_check_func "$LINENO" "shl_load" "ac_cv_func_shl_load"
+if test "x$ac_cv_func_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld" >&5
+$as_echo_n "checking for shl_load in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_shl_load+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char shl_load ();
+int
+main ()
+{
+return shl_load ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_shl_load=yes
+else
+  ac_cv_lib_dld_shl_load=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
+$as_echo "$ac_cv_lib_dld_shl_load" >&6; }
+if test "x$ac_cv_lib_dld_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"
+else
+  ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
+if test "x$ac_cv_func_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
+$as_echo_n "checking for dlopen in -lsvld... " >&6; }
+if test "${ac_cv_lib_svld_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lsvld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_svld_dlopen=yes
+else
+  ac_cv_lib_svld_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
+$as_echo "$ac_cv_lib_svld_dlopen" >&6; }
+if test "x$ac_cv_lib_svld_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
+$as_echo_n "checking for dld_link in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_dld_link+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dld_link ();
+int
+main ()
+{
+return dld_link ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_dld_link=yes
+else
+  ac_cv_lib_dld_dld_link=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
+$as_echo "$ac_cv_lib_dld_dld_link" >&6; }
+if test "x$ac_cv_lib_dld_dld_link" = x""yes; then :
+  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
+fi
+
+	      
+fi
+
+	    
+fi
+
+	  
+fi
+
+	
+fi
+
+      
+fi
+
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
+$as_echo_n "checking whether a program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self=no
+  fi
+fi
+rm -fr conftest*
+
+    
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self" >&5
+$as_echo "$lt_cv_dlopen_self" >&6; }
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
+$as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self_static+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self_static=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self_static=no
+  fi
+fi
+rm -fr conftest*
+
+      
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static" >&5
+$as_echo "$lt_cv_dlopen_self_static" >&6; }
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  
+striplib=
+old_striplib=
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
+$as_echo_n "checking whether stripping libraries is possible... " >&6; }
+if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+  darwin*)
+    if test -n "$STRIP" ; then
+      striplib="$STRIP -x"
+      old_striplib="$STRIP -S"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+    ;;
+  *)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    ;;
+  esac
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+  # Report which library types will actually be built
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
+$as_echo_n "checking if libtool supports shared libraries... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
+$as_echo "$can_build_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
+$as_echo_n "checking whether to build shared libraries... " >&6; }
+  test "$can_build_shared" = "no" && enable_shared=no
+
+  # On AIX, shared libraries and static libraries use the same namespace, and
+  # are all built from PIC.
+  case $host_os in
+  aix3*)
+    test "$enable_shared" = yes && enable_static=no
+    if test -n "$RANLIB"; then
+      archive_cmds="$archive_cmds~\$RANLIB \$lib"
+      postinstall_cmds='$RANLIB $lib'
+    fi
+    ;;
+
+  aix[4-9]*)
+    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+      test "$enable_shared" = yes && enable_static=no
+    fi
+    ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
+$as_echo "$enable_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
+$as_echo_n "checking whether to build static libraries... " >&6; }
+  # Make sure either enable_shared or enable_static is yes.
+  test "$enable_shared" = yes || enable_static=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
+$as_echo "$enable_static" >&6; }
+
+  
+
+
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+
+
+
+
+
+
+
+       
+       
+
+
+
+        ac_config_commands="$ac_config_commands libtool"
+
+
+
+
+# Only expand once:
+
+
+
+
+@%:@ Check whether --enable-plugins was given.
+if test "${enable_plugins+set}" = set; then :
+  enableval=$enable_plugins; case "${enableval}" in
+  yes | "") plugins=yes ;;
+  no) plugins=no ;;
+  *) plugins=yes ;;
+ esac
+else
+  plugins=no
+fi
+
+
+
+ if test "$plugins" = "yes"; then
+  PLUGINS_TRUE=
+  PLUGINS_FALSE='#'
+else
+  PLUGINS_TRUE='#'
+  PLUGINS_FALSE=
+fi
+
+
+if test "$plugins" = "yes"; then
+  if test "$enable_dlopen" != "yes" ; then
+    as_fn_error "
+      Building BFD with plugin support requires a host that supports -ldl." "$LINENO" 5
+  fi
+  enable_targets="$enable_targets plugin"
+fi
+
+case "${target}" in
+  sparc-*-solaris*|i[3-7]86-*-solaris*)
+    # On native 32bit sparc and ia32 solaris, large-file and procfs support
+    # are mutually exclusive; and without procfs support, the elf module
+    # cannot provide certain routines such as elfcore_write_prpsinfo
+    # or elfcore_write_prstatus.  So unless the user explicitly requested
+    # large-file support through the --enable-largefile switch, disable
+    # large-file support in favor of procfs support.
+    if test "${target}" = "${host}" -a "$enable_largefile" != 'yes'; then
+      if test "$plugins" = "no"; then
+        enable_largefile="no"
+      fi
+    fi
+    ;;
+esac
+
+@%:@ Check whether --enable-largefile was given.
+if test "${enable_largefile+set}" = set; then :
+  enableval=$enable_largefile; 
+fi
+
+if test "$enable_largefile" != no; then
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for special C compiler options needed for large files" >&5
+$as_echo_n "checking for special C compiler options needed for large files... " >&6; }
+if test "${ac_cv_sys_largefile_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_sys_largefile_CC=no
+     if test "$GCC" != yes; then
+       ac_save_CC=$CC
+       while :; do
+	 # IRIX 6.2 and later do not support large files by default,
+	 # so use the C compiler's -n32 option if that helps.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <sys/types.h>
+ /* Check that off_t can represent 2**63 - 1 correctly.
+    We can't simply define LARGE_OFF_T to be 9223372036854775807,
+    since some C++ compilers masquerading as C compilers
+    incorrectly reject 9223372036854775807.  */
+@%:@define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
+		       && LARGE_OFF_T % 2147483647 == 1)
+		      ? 1 : -1];
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+	 if ac_fn_c_try_compile "$LINENO"; then :
+  break
+fi
+rm -f core conftest.err conftest.$ac_objext
+	 CC="$CC -n32"
+	 if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_sys_largefile_CC=' -n32'; break
+fi
+rm -f core conftest.err conftest.$ac_objext
+	 break
+       done
+       CC=$ac_save_CC
+       rm -f conftest.$ac_ext
+    fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_largefile_CC" >&5
+$as_echo "$ac_cv_sys_largefile_CC" >&6; }
+  if test "$ac_cv_sys_largefile_CC" != no; then
+    CC=$CC$ac_cv_sys_largefile_CC
+  fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _FILE_OFFSET_BITS value needed for large files" >&5
+$as_echo_n "checking for _FILE_OFFSET_BITS value needed for large files... " >&6; }
+if test "${ac_cv_sys_file_offset_bits+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  while :; do
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <sys/types.h>
+ /* Check that off_t can represent 2**63 - 1 correctly.
+    We can't simply define LARGE_OFF_T to be 9223372036854775807,
+    since some C++ compilers masquerading as C compilers
+    incorrectly reject 9223372036854775807.  */
+@%:@define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
+		       && LARGE_OFF_T % 2147483647 == 1)
+		      ? 1 : -1];
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_sys_file_offset_bits=no; break
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@define _FILE_OFFSET_BITS 64
+@%:@include <sys/types.h>
+ /* Check that off_t can represent 2**63 - 1 correctly.
+    We can't simply define LARGE_OFF_T to be 9223372036854775807,
+    since some C++ compilers masquerading as C compilers
+    incorrectly reject 9223372036854775807.  */
+@%:@define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
+		       && LARGE_OFF_T % 2147483647 == 1)
+		      ? 1 : -1];
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_sys_file_offset_bits=64; break
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  ac_cv_sys_file_offset_bits=unknown
+  break
+done
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_file_offset_bits" >&5
+$as_echo "$ac_cv_sys_file_offset_bits" >&6; }
+case $ac_cv_sys_file_offset_bits in #(
+  no | unknown) ;;
+  *) 
+cat >>confdefs.h <<_ACEOF
+@%:@define _FILE_OFFSET_BITS $ac_cv_sys_file_offset_bits
+_ACEOF
+;;
+esac
+rm -rf conftest*
+  if test $ac_cv_sys_file_offset_bits = unknown; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _LARGE_FILES value needed for large files" >&5
+$as_echo_n "checking for _LARGE_FILES value needed for large files... " >&6; }
+if test "${ac_cv_sys_large_files+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  while :; do
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <sys/types.h>
+ /* Check that off_t can represent 2**63 - 1 correctly.
+    We can't simply define LARGE_OFF_T to be 9223372036854775807,
+    since some C++ compilers masquerading as C compilers
+    incorrectly reject 9223372036854775807.  */
+@%:@define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
+		       && LARGE_OFF_T % 2147483647 == 1)
+		      ? 1 : -1];
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_sys_large_files=no; break
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@define _LARGE_FILES 1
+@%:@include <sys/types.h>
+ /* Check that off_t can represent 2**63 - 1 correctly.
+    We can't simply define LARGE_OFF_T to be 9223372036854775807,
+    since some C++ compilers masquerading as C compilers
+    incorrectly reject 9223372036854775807.  */
+@%:@define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))
+  int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721
+		       && LARGE_OFF_T % 2147483647 == 1)
+		      ? 1 : -1];
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_sys_large_files=1; break
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  ac_cv_sys_large_files=unknown
+  break
+done
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sys_large_files" >&5
+$as_echo "$ac_cv_sys_large_files" >&6; }
+case $ac_cv_sys_large_files in #(
+  no | unknown) ;;
+  *) 
+cat >>confdefs.h <<_ACEOF
+@%:@define _LARGE_FILES $ac_cv_sys_large_files
+_ACEOF
+;;
+esac
+rm -rf conftest*
+  fi
+fi
+
+
+@%:@ Check whether --enable-64-bit-bfd was given.
+if test "${enable_64_bit_bfd+set}" = set; then :
+  enableval=$enable_64_bit_bfd; case "${enableval}" in
+  yes)  want64=true  ;;
+  no)   want64=false ;;
+  *)    as_fn_error "bad value ${enableval} for 64-bit-bfd option" "$LINENO" 5 ;;
+esac
+else
+  want64=false
+fi
+
+@%:@ Check whether --enable-targets was given.
+if test "${enable_targets+set}" = set; then :
+  enableval=$enable_targets; case "${enableval}" in
+  yes | "") as_fn_error "enable-targets option must specify target names or 'all'" "$LINENO" 5
+            ;;
+  no)       enable_targets= ;;
+  *)        enable_targets=$enableval ;;
+esac
+fi
+
+
+@%:@ Check whether --with-mmap was given.
+if test "${with_mmap+set}" = set; then :
+  withval=$with_mmap; case "${withval}" in
+  yes)  want_mmap=true ;;
+  no)   want_mmap=false ;;
+  *)    as_fn_error "bad value ${withval} for BFD with-mmap option" "$LINENO" 5 ;;
+esac
+else
+  want_mmap=false
+fi
+
+@%:@ Check whether --enable-secureplt was given.
+if test "${enable_secureplt+set}" = set; then :
+  enableval=$enable_secureplt; case "${enableval}" in
+  yes)  use_secureplt=true  ;;
+  no)   use_secureplt=false ;;
+  *)    as_fn_error "bad value ${enableval} for secureplt option" "$LINENO" 5 ;;
+esac
+else
+  use_secureplt=false
+fi
+if test $use_secureplt = true; then
+  
+$as_echo "@%:@define USE_SECUREPLT 1" >>confdefs.h
+
+fi
+
+DEBUGDIR=${libdir}/debug
+
+@%:@ Check whether --with-separate-debug-dir was given.
+if test "${with_separate_debug_dir+set}" = set; then :
+  withval=$with_separate_debug_dir; DEBUGDIR="${withval}"
+fi
+
+
+
+# Check to see if we should allow the generation of
+# symbols with the ELF standard's STT_COMMON type.
+@%:@ Check whether --enable-elf-stt-common was given.
+if test "${enable_elf_stt_common+set}" = set; then :
+  enableval=$enable_elf_stt_common; case "${enableval}" in
+  yes) want_elf_stt_common=true ;;
+  no)  want_elf_stt_common=false ;;
+  *)   as_fn_error "bad value ${enableval} for ELF STT_COMMON option" "$LINENO" 5 ;;
+ esac
+else
+  # We have to choose a default behaviour.  For native builds we could
+# test whether the loader supports the STT_COMMON type, but that would
+# mean that built binaries could not be exported to older systems where
+# the loader does not support it. So by default we always choose to
+# disable this feature.
+  want_elf_stt_common=false
+fi
+if test $want_elf_stt_common = true; then
+  
+$as_echo "@%:@define USE_STT_COMMON 1" >>confdefs.h
+
+fi
+	 
+
+  
+@%:@ Check whether --with-pkgversion was given.
+if test "${with_pkgversion+set}" = set; then :
+  withval=$with_pkgversion; case "$withval" in
+      yes) as_fn_error "package version not specified" "$LINENO" 5 ;;
+      no)  PKGVERSION= ;;
+      *)   PKGVERSION="($withval) " ;;
+     esac
+else
+  PKGVERSION="(GNU Binutils) "
+  
+fi
+
+  
+
+
+  
+@%:@ Check whether --with-bugurl was given.
+if test "${with_bugurl+set}" = set; then :
+  withval=$with_bugurl; case "$withval" in
+      yes) as_fn_error "bug URL not specified" "$LINENO" 5 ;;
+      no)  BUGURL=
+	   ;;
+      *)   BUGURL="$withval"
+	   ;;
+     esac
+else
+  BUGURL="http://www.sourceware.org/bugzilla/"
+  
+fi
+
+  case ${BUGURL} in
+  "")
+    REPORT_BUGS_TO=
+    REPORT_BUGS_TEXI=
+    ;;
+  *)
+    REPORT_BUGS_TO="<$BUGURL>"
+    REPORT_BUGS_TEXI=@uref{`echo "$BUGURL" | sed 's/@/@@/g'`}
+    ;;
+  esac;
+  
+  
+
+
+
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+
+@%:@ Check whether --enable-werror was given.
+if test "${enable_werror+set}" = set; then :
+  enableval=$enable_werror; case "${enableval}" in
+     yes | y) ERROR_ON_WARNING="yes" ;;
+     no | n)  ERROR_ON_WARNING="no" ;;
+     *) as_fn_error "bad value ${enableval} for --enable-werror" "$LINENO" 5 ;;
+   esac
+fi
+
+
+# Enable -Wno-format by default when using gcc on mingw
+case "${host}" in
+  *-*-mingw32*)
+    if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
+      GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wno-format"
+    fi
+    ;;
+  *) ;;
+esac
+
+# Enable -Werror by default when using gcc
+if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
+    ERROR_ON_WARNING=yes
+fi
+
+NO_WERROR=
+if test "${ERROR_ON_WARNING}" = yes ; then
+    GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Werror"
+    NO_WERROR="-Wno-error"
+fi
+		   
+if test "${GCC}" = yes ; then
+  WARN_CFLAGS="${GCC_WARN_CFLAGS}"
+fi
+
+@%:@ Check whether --enable-build-warnings was given.
+if test "${enable_build_warnings+set}" = set; then :
+  enableval=$enable_build_warnings; case "${enableval}" in
+  yes)	WARN_CFLAGS="${GCC_WARN_CFLAGS}";;
+  no)	if test "${GCC}" = yes ; then
+	  WARN_CFLAGS="-w"
+	fi;;
+  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
+        WARN_CFLAGS="${GCC_WARN_CFLAGS} ${t}";;
+  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
+        WARN_CFLAGS="${t} ${GCC_WARN_CFLAGS}";;
+  *)    WARN_CFLAGS=`echo "${enableval}" | sed -e "s/,/ /g"`;;
+esac
+fi
+
+
+if test x"$silent" != x"yes" && test x"$WARN_CFLAGS" != x""; then
+  echo "Setting warning flags = $WARN_CFLAGS" 6>&1
+fi
+
+
+
+
+
+ac_config_headers="$ac_config_headers config.h:config.in"
+
+
+if test -z "$target" ; then
+    as_fn_error "Unrecognized target system type; please check config.sub." "$LINENO" 5
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles" >&5
+$as_echo_n "checking whether to enable maintainer-specific portions of Makefiles... " >&6; }
+    @%:@ Check whether --enable-maintainer-mode was given.
+if test "${enable_maintainer_mode+set}" = set; then :
+  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval
+else
+  USE_MAINTAINER_MODE=no
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE" >&5
+$as_echo "$USE_MAINTAINER_MODE" >&6; }
+   if test $USE_MAINTAINER_MODE = yes; then
+  MAINTAINER_MODE_TRUE=
+  MAINTAINER_MODE_FALSE='#'
+else
+  MAINTAINER_MODE_TRUE='#'
+  MAINTAINER_MODE_FALSE=
+fi
+
+  MAINT=$MAINTAINER_MODE_TRUE
+  
+
+ if false; then
+  GENINSRC_NEVER_TRUE=
+  GENINSRC_NEVER_FALSE='#'
+else
+  GENINSRC_NEVER_TRUE='#'
+  GENINSRC_NEVER_FALSE=
+fi
+
+ case ${build_alias} in
+  "") build_noncanonical=${build} ;;
+  *) build_noncanonical=${build_alias} ;;
+esac
+
+ case ${host_alias} in
+  "") host_noncanonical=${build_noncanonical} ;;
+  *) host_noncanonical=${host_alias} ;;
+esac
+
+ case ${target_alias} in
+  "") target_noncanonical=${host_noncanonical} ;;
+  *) target_noncanonical=${target_alias} ;;
+esac
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to install libbfd" >&5
+$as_echo_n "checking whether to install libbfd... " >&6; }
+  @%:@ Check whether --enable-install-libbfd was given.
+if test "${enable_install_libbfd+set}" = set; then :
+  enableval=$enable_install_libbfd; install_libbfd_p=$enableval
+else
+  if test "${host}" = "${target}" || test "$enable_shared" = "yes"; then
+        install_libbfd_p=yes
+      else
+        install_libbfd_p=no
+      fi
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $install_libbfd_p" >&5
+$as_echo "$install_libbfd_p" >&6; }
+   if test $install_libbfd_p = yes; then
+  INSTALL_LIBBFD_TRUE=
+  INSTALL_LIBBFD_FALSE='#'
+else
+  INSTALL_LIBBFD_TRUE='#'
+  INSTALL_LIBBFD_FALSE=
+fi
+
+  # Need _noncanonical variables for this.
+   
+
+   
+
+  # libbfd.a is a host library containing target dependent code
+  bfdlibdir='$(libdir)'
+  bfdincludedir='$(includedir)'
+  if test "${host}" != "${target}"; then
+    bfdlibdir='$(exec_prefix)/$(host_noncanonical)/$(target_noncanonical)/lib'
+    bfdincludedir='$(exec_prefix)/$(host_noncanonical)/$(target_noncanonical)/include'
+  fi
+  
+  
+  
+  
+
+
+
+
+host64=false
+target64=false
+bfd_default_target_size=32
+
+# host stuff:
+
+ALL_LINGUAS="fr tr ja es sv da zh_CN ro rw vi fi id ru"
+# If we haven't got the data from the intl directory,
+# assume NLS is disabled.
+USE_NLS=no	
+LIBINTL=	
+LIBINTL_DEP=	
+INCINTL=	
+XGETTEXT=	
+GMSGFMT=	
+POSUB=		
+
+if test -f  ../intl/config.intl; then
+  .  ../intl/config.intl
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
+$as_echo_n "checking whether NLS is requested... " >&6; }
+if test x"$USE_NLS" != xyes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  
+$as_echo "@%:@define ENABLE_NLS 1" >>confdefs.h
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for catalogs to be installed" >&5
+$as_echo_n "checking for catalogs to be installed... " >&6; }
+  # Look for .po and .gmo files in the source directory.
+  CATALOGS=  
+  XLINGUAS=
+  for cat in $srcdir/po/*.gmo $srcdir/po/*.po; do
+    # If there aren't any .gmo files the shell will give us the
+    # literal string "../path/to/srcdir/po/*.gmo" which has to be
+    # weeded out.
+    case "$cat" in *\**)
+      continue;;
+    esac
+    # The quadruple backslash is collapsed to a double backslash
+    # by the backticks, then collapsed again by the double quotes,
+    # leaving us with one backslash in the sed expression (right
+    # before the dot that mustn't act as a wildcard).
+    cat=`echo $cat | sed -e "s!$srcdir/po/!!" -e "s!\\\\.po!.gmo!"`
+    lang=`echo $cat | sed -e "s!\\\\.gmo!!"`
+    # The user is allowed to set LINGUAS to a list of languages to
+    # install catalogs for.  If it's empty that means "all of them."
+    if test "x$LINGUAS" = x; then
+      CATALOGS="$CATALOGS $cat"
+      XLINGUAS="$XLINGUAS $lang"
+    else
+      case "$LINGUAS" in *$lang*)
+        CATALOGS="$CATALOGS $cat"
+        XLINGUAS="$XLINGUAS $lang"
+        ;;
+      esac
+    fi
+  done
+  LINGUAS="$XLINGUAS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LINGUAS" >&5
+$as_echo "$LINGUAS" >&6; }
+
+    
+    DATADIRNAME=share
+  
+  INSTOBJEXT=.mo
+  
+  GENCAT=gencat
+  
+  CATOBJEXT=.gmo
+  
+fi
+
+        MKINSTALLDIRS=
+  if test -n "$ac_aux_dir"; then
+    case "$ac_aux_dir" in
+      /*) MKINSTALLDIRS="$ac_aux_dir/mkinstalldirs" ;;
+      *) MKINSTALLDIRS="\$(top_builddir)/$ac_aux_dir/mkinstalldirs" ;;
+    esac
+  fi
+  if test -z "$MKINSTALLDIRS"; then
+    MKINSTALLDIRS="\$(top_srcdir)/mkinstalldirs"
+  fi
+  
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
+$as_echo_n "checking whether NLS is requested... " >&6; }
+    @%:@ Check whether --enable-nls was given.
+if test "${enable_nls+set}" = set; then :
+  enableval=$enable_nls; USE_NLS=$enableval
+else
+  USE_NLS=yes
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_NLS" >&5
+$as_echo "$USE_NLS" >&6; }
+  
+
+
+        
+    
+        
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "msgfmt", so it can be a program name with args.
+set dummy msgfmt; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_MSGFMT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$MSGFMT" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_MSGFMT="$MSGFMT" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1 &&
+     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+            ac_cv_path_MSGFMT="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_MSGFMT" && ac_cv_path_MSGFMT=":"
+    ;;
+esac
+fi
+MSGFMT="$ac_cv_path_MSGFMT"
+if test "$MSGFMT" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MSGFMT" >&5
+$as_echo "$MSGFMT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  # Extract the first word of "gmsgfmt", so it can be a program name with args.
+set dummy gmsgfmt; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_GMSGFMT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $GMSGFMT in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_GMSGFMT="$GMSGFMT" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_GMSGFMT="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_GMSGFMT" && ac_cv_path_GMSGFMT="$MSGFMT"
+  ;;
+esac
+fi
+GMSGFMT=$ac_cv_path_GMSGFMT
+if test -n "$GMSGFMT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GMSGFMT" >&5
+$as_echo "$GMSGFMT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+
+        
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "xgettext", so it can be a program name with args.
+set dummy xgettext; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_XGETTEXT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$XGETTEXT" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_XGETTEXT="$XGETTEXT" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
+     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+            ac_cv_path_XGETTEXT="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_XGETTEXT" && ac_cv_path_XGETTEXT=":"
+    ;;
+esac
+fi
+XGETTEXT="$ac_cv_path_XGETTEXT"
+if test "$XGETTEXT" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $XGETTEXT" >&5
+$as_echo "$XGETTEXT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+    rm -f messages.po
+
+    
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "msgmerge", so it can be a program name with args.
+set dummy msgmerge; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_MSGMERGE+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$MSGMERGE" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_MSGMERGE="$MSGMERGE" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --update -q /dev/null /dev/null >/dev/null 2>&1; then
+            ac_cv_path_MSGMERGE="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_MSGMERGE" && ac_cv_path_MSGMERGE=":"
+    ;;
+esac
+fi
+MSGMERGE="$ac_cv_path_MSGMERGE"
+if test "$MSGMERGE" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MSGMERGE" >&5
+$as_echo "$MSGMERGE" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+      if test "$GMSGFMT" != ":"; then
+            if $GMSGFMT --statistics /dev/null >/dev/null 2>&1 &&
+       (if $GMSGFMT --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+      : ;
+    else
+      GMSGFMT=`echo "$GMSGFMT" | sed -e 's,^.*/,,'`
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: found $GMSGFMT program is not GNU msgfmt; ignore it" >&5
+$as_echo "found $GMSGFMT program is not GNU msgfmt; ignore it" >&6; }
+      GMSGFMT=":"
+    fi
+  fi
+
+      if test "$XGETTEXT" != ":"; then
+            if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
+       (if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+      : ;
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: found xgettext program is not GNU xgettext; ignore it" >&5
+$as_echo "found xgettext program is not GNU xgettext; ignore it" >&6; }
+      XGETTEXT=":"
+    fi
+        rm -f messages.po
+  fi
+
+  ac_config_commands="$ac_config_commands default-1"
+
+
+
+# Permit host specific settings.
+. ${srcdir}/configure.host
+
+
+
+
+BFD_HOST_64BIT_LONG=0
+BFD_HOST_64BIT_LONG_LONG=0
+BFD_HOST_64_BIT_DEFINED=0
+BFD_HOST_64_BIT=
+BFD_HOST_U_64_BIT=
+BFD_HOSTPTR_T="unsigned long"
+
+# The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long long" >&5
+$as_echo_n "checking size of long long... " >&6; }
+if test "${ac_cv_sizeof_long_long+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long long))" "ac_cv_sizeof_long_long"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_long_long" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (long long)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_long_long=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long_long" >&5
+$as_echo "$ac_cv_sizeof_long_long" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_LONG_LONG $ac_cv_sizeof_long_long
+_ACEOF
+
+
+# The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of void *" >&5
+$as_echo_n "checking size of void *... " >&6; }
+if test "${ac_cv_sizeof_void_p+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (void *))" "ac_cv_sizeof_void_p"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_void_p" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (void *)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_void_p=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p" >&5
+$as_echo "$ac_cv_sizeof_void_p" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_VOID_P $ac_cv_sizeof_void_p
+_ACEOF
+
+
+# The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long" >&5
+$as_echo_n "checking size of long... " >&6; }
+if test "${ac_cv_sizeof_long+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long))" "ac_cv_sizeof_long"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_long" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (long)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_long=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long" >&5
+$as_echo "$ac_cv_sizeof_long" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_LONG $ac_cv_sizeof_long
+_ACEOF
+
+
+
+if test "x${ac_cv_sizeof_void_p}" = "x8"; then
+  host64=true
+fi
+
+if test "x${ac_cv_sizeof_long}" = "x8"; then
+  BFD_HOST_64BIT_LONG=1
+  test -n "${HOST_64BIT_TYPE}" || HOST_64BIT_TYPE="long"
+  test -n "${HOST_U_64BIT_TYPE}" || HOST_U_64BIT_TYPE="unsigned long"
+elif test "x${ac_cv_sizeof_long_long}" = "x8"; then
+  BFD_HOST_64BIT_LONG_LONG=1
+  test -n "${HOST_64BIT_TYPE}" || HOST_64BIT_TYPE="long long"
+  test -n "${HOST_U_64BIT_TYPE}" || HOST_U_64BIT_TYPE="unsigned long long"
+  if test "x${ac_cv_sizeof_void_p}" = "x8"; then
+    BFD_HOSTPTR_T="unsigned long long"
+  fi
+fi
+
+if test -n "${HOST_64BIT_TYPE}" -a -n "${HOST_U_64BIT_TYPE}"; then
+  BFD_HOST_64_BIT_DEFINED=1
+  BFD_HOST_64_BIT="${HOST_64BIT_TYPE}"
+  BFD_HOST_U_64_BIT="${HOST_U_64BIT_TYPE}"
+fi
+
+
+
+
+
+
+
+
+# Put a plausible default for CC_FOR_BUILD in Makefile.
+if test -z "$CC_FOR_BUILD"; then
+  if test "x$cross_compiling" = "xno"; then
+    CC_FOR_BUILD='$(CC)'
+  else
+    CC_FOR_BUILD=gcc
+  fi
+fi
+
+# Also set EXEEXT_FOR_BUILD.
+if test "x$cross_compiling" = "xno"; then
+  EXEEXT_FOR_BUILD='$(EXEEXT)'
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for build system executable suffix" >&5
+$as_echo_n "checking for build system executable suffix... " >&6; }
+if test "${bfd_cv_build_exeext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f conftest*
+     echo 'int main () { return 0; }' > conftest.c
+     bfd_cv_build_exeext=
+     ${CC_FOR_BUILD} -o conftest conftest.c 1>&5 2>&5
+     for file in conftest.*; do
+       case $file in
+       *.c | *.o | *.obj | *.ilk | *.pdb) ;;
+       *) bfd_cv_build_exeext=`echo $file | sed -e s/conftest//` ;;
+       esac
+     done
+     rm -f conftest*
+     test x"${bfd_cv_build_exeext}" = x && bfd_cv_build_exeext=no
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_build_exeext" >&5
+$as_echo "$bfd_cv_build_exeext" >&6; }
+  EXEEXT_FOR_BUILD=""
+  test x"${bfd_cv_build_exeext}" != xno && EXEEXT_FOR_BUILD=${bfd_cv_build_exeext}
+fi
+
+
+for ac_header in alloca.h stddef.h string.h strings.h stdlib.h time.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+for ac_header in fcntl.h sys/file.h sys/time.h sys/stat.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+
+
+inttype_headers=`echo inttypes.h sys/inttypes.h  | sed -e 's/,/ /g'`
+
+acx_cv_header_stdint=stddef.h
+acx_cv_header_stdint_kind="(already complete)"
+for i in stdint.h $inttype_headers; do
+  unset ac_cv_type_uintptr_t
+  unset ac_cv_type_uintmax_t
+  unset ac_cv_type_int_least32_t
+  unset ac_cv_type_int_fast32_t
+  unset ac_cv_type_uint64_t
+  $as_echo_n "looking for a compliant stdint.h in $i, " >&6
+  ac_fn_c_check_type "$LINENO" "uintmax_t" "ac_cv_type_uintmax_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uintmax_t" = x""yes; then :
+  acx_cv_header_stdint=$i
+else
+  continue
+fi
+
+  ac_fn_c_check_type "$LINENO" "uintptr_t" "ac_cv_type_uintptr_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uintptr_t" = x""yes; then :
+  
+else
+  acx_cv_header_stdint_kind="(mostly complete)"
+fi
+
+  ac_fn_c_check_type "$LINENO" "int_least32_t" "ac_cv_type_int_least32_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_int_least32_t" = x""yes; then :
+  
+else
+  acx_cv_header_stdint_kind="(mostly complete)"
+fi
+
+  ac_fn_c_check_type "$LINENO" "int_fast32_t" "ac_cv_type_int_fast32_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_int_fast32_t" = x""yes; then :
+  
+else
+  acx_cv_header_stdint_kind="(mostly complete)"
+fi
+
+  ac_fn_c_check_type "$LINENO" "uint64_t" "ac_cv_type_uint64_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uint64_t" = x""yes; then :
+  
+else
+  acx_cv_header_stdint_kind="(lacks uint64_t)"
+fi
+
+  break
+done
+if test "$acx_cv_header_stdint" = stddef.h; then
+  acx_cv_header_stdint_kind="(lacks uintmax_t)"
+  for i in stdint.h $inttype_headers; do
+    unset ac_cv_type_uintptr_t
+    unset ac_cv_type_uint32_t
+    unset ac_cv_type_uint64_t
+    $as_echo_n "looking for an incomplete stdint.h in $i, " >&6
+    ac_fn_c_check_type "$LINENO" "uint32_t" "ac_cv_type_uint32_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uint32_t" = x""yes; then :
+  acx_cv_header_stdint=$i
+else
+  continue
+fi
+
+    ac_fn_c_check_type "$LINENO" "uint64_t" "ac_cv_type_uint64_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uint64_t" = x""yes; then :
+  
+fi
+
+    ac_fn_c_check_type "$LINENO" "uintptr_t" "ac_cv_type_uintptr_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_uintptr_t" = x""yes; then :
+  
+fi
+
+    break
+  done
+fi
+if test "$acx_cv_header_stdint" = stddef.h; then
+  acx_cv_header_stdint_kind="(u_intXX_t style)"
+  for i in sys/types.h $inttype_headers; do
+    unset ac_cv_type_u_int32_t
+    unset ac_cv_type_u_int64_t
+    $as_echo_n "looking for u_intXX_t types in $i, " >&6
+    ac_fn_c_check_type "$LINENO" "u_int32_t" "ac_cv_type_u_int32_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_u_int32_t" = x""yes; then :
+  acx_cv_header_stdint=$i
+else
+  continue
+fi
+
+    ac_fn_c_check_type "$LINENO" "u_int64_t" "ac_cv_type_u_int64_t" "#include <sys/types.h>
+#include <$i>
+"
+if test "x$ac_cv_type_u_int64_t" = x""yes; then :
+  
+fi
+
+    break
+  done
+fi
+if test "$acx_cv_header_stdint" = stddef.h; then
+  acx_cv_header_stdint_kind="(using manual detection)"
+fi
+
+test -z "$ac_cv_type_uintptr_t" && ac_cv_type_uintptr_t=no
+test -z "$ac_cv_type_uint64_t" && ac_cv_type_uint64_t=no
+test -z "$ac_cv_type_u_int64_t" && ac_cv_type_u_int64_t=no
+test -z "$ac_cv_type_int_least32_t" && ac_cv_type_int_least32_t=no
+test -z "$ac_cv_type_int_fast32_t" && ac_cv_type_int_fast32_t=no
+
+# ----------------- Summarize what we found so far
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking what to include in bfd_stdint.h" >&5
+$as_echo_n "checking what to include in bfd_stdint.h... " >&6; }
+
+case `$as_basename -- bfd_stdint.h ||
+$as_expr X/bfd_stdint.h : '.*/\([^/][^/]*\)/*$' \| \
+	 Xbfd_stdint.h : 'X\(//\)$' \| \
+	 Xbfd_stdint.h : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/bfd_stdint.h |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'` in
+  stdint.h) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?" >&5
+$as_echo "$as_me: WARNING: are you sure you want it there?" >&2;} ;;
+  inttypes.h) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: are you sure you want it there?" >&5
+$as_echo "$as_me: WARNING: are you sure you want it there?" >&2;} ;;
+  *) ;;
+esac
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_header_stdint $acx_cv_header_stdint_kind" >&5
+$as_echo "$acx_cv_header_stdint $acx_cv_header_stdint_kind" >&6; }
+
+# ----------------- done included file, check C basic types --------
+
+# Lacking an uintptr_t?  Test size of void *
+case "$acx_cv_header_stdint:$ac_cv_type_uintptr_t" in
+  stddef.h:* | *:no) # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of void *" >&5
+$as_echo_n "checking size of void *... " >&6; }
+if test "${ac_cv_sizeof_void_p+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (void *))" "ac_cv_sizeof_void_p"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_void_p" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (void *)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_void_p=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p" >&5
+$as_echo "$ac_cv_sizeof_void_p" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_VOID_P $ac_cv_sizeof_void_p
+_ACEOF
+
+ ;;
+esac
+
+# Lacking an uint64_t?  Test size of long
+case "$acx_cv_header_stdint:$ac_cv_type_uint64_t:$ac_cv_type_u_int64_t" in
+  stddef.h:*:* | *:no:no) # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long" >&5
+$as_echo_n "checking size of long... " >&6; }
+if test "${ac_cv_sizeof_long+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long))" "ac_cv_sizeof_long"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_long" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (long)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_long=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long" >&5
+$as_echo "$ac_cv_sizeof_long" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_LONG $ac_cv_sizeof_long
+_ACEOF
+
+ ;;
+esac
+
+if test $acx_cv_header_stdint = stddef.h; then
+  # Lacking a good header?  Test size of everything and deduce all types.
+  # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of int" >&5
+$as_echo_n "checking size of int... " >&6; }
+if test "${ac_cv_sizeof_int+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (int))" "ac_cv_sizeof_int"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_int" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (int)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_int=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_int" >&5
+$as_echo "$ac_cv_sizeof_int" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_INT $ac_cv_sizeof_int
+_ACEOF
+
+
+  # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of short" >&5
+$as_echo_n "checking size of short... " >&6; }
+if test "${ac_cv_sizeof_short+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (short))" "ac_cv_sizeof_short"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_short" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (short)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_short=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_short" >&5
+$as_echo "$ac_cv_sizeof_short" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_SHORT $ac_cv_sizeof_short
+_ACEOF
+
+
+  # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of char" >&5
+$as_echo_n "checking size of char... " >&6; }
+if test "${ac_cv_sizeof_char+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (char))" "ac_cv_sizeof_char"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_char" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (char)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_char=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_char" >&5
+$as_echo "$ac_cv_sizeof_char" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_CHAR $ac_cv_sizeof_char
+_ACEOF
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for type equivalent to int8_t" >&5
+$as_echo_n "checking for type equivalent to int8_t... " >&6; }
+  case "$ac_cv_sizeof_char" in
+    1) acx_cv_type_int8_t=char ;;
+    *) { as_fn_set_status please report a bug
+as_fn_error "no 8-bit type" "$LINENO" 5; }
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t" >&5
+$as_echo "$acx_cv_type_int8_t" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for type equivalent to int16_t" >&5
+$as_echo_n "checking for type equivalent to int16_t... " >&6; }
+  case "$ac_cv_sizeof_int:$ac_cv_sizeof_short" in
+    2:*) acx_cv_type_int16_t=int ;;
+    *:2) acx_cv_type_int16_t=short ;;
+    *) { as_fn_set_status please report a bug
+as_fn_error "no 16-bit type" "$LINENO" 5; }
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t" >&5
+$as_echo "$acx_cv_type_int16_t" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for type equivalent to int32_t" >&5
+$as_echo_n "checking for type equivalent to int32_t... " >&6; }
+  case "$ac_cv_sizeof_int:$ac_cv_sizeof_long" in
+    4:*) acx_cv_type_int32_t=int ;;
+    *:4) acx_cv_type_int32_t=long ;;
+    *) { as_fn_set_status please report a bug
+as_fn_error "no 32-bit type" "$LINENO" 5; }
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t" >&5
+$as_echo "$acx_cv_type_int32_t" >&6; }
+fi
+
+# These tests are here to make the output prettier
+
+if test "$ac_cv_type_uint64_t" != yes && test "$ac_cv_type_u_int64_t" != yes; then
+  case "$ac_cv_sizeof_long" in
+    8) acx_cv_type_int64_t=long ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for type equivalent to int64_t" >&5
+$as_echo_n "checking for type equivalent to int64_t... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: ${acx_cv_type_int64_t-'using preprocessor symbols'}" >&5
+$as_echo "${acx_cv_type_int64_t-'using preprocessor symbols'}" >&6; }
+fi
+
+# Now we can use the above types
+
+if test "$ac_cv_type_uintptr_t" != yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for type equivalent to intptr_t" >&5
+$as_echo_n "checking for type equivalent to intptr_t... " >&6; }
+  case $ac_cv_sizeof_void_p in
+    2) acx_cv_type_intptr_t=int16_t ;;
+    4) acx_cv_type_intptr_t=int32_t ;;
+    8) acx_cv_type_intptr_t=int64_t ;;
+    *) { as_fn_set_status please report a bug
+as_fn_error "no equivalent for intptr_t" "$LINENO" 5; }
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t" >&5
+$as_echo "$acx_cv_type_intptr_t" >&6; }
+fi
+
+# ----------------- done all checks, emit header -------------
+ac_config_commands="$ac_config_commands bfd_stdint.h"
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether time.h and sys/time.h may both be included" >&5
+$as_echo_n "checking whether time.h and sys/time.h may both be included... " >&6; }
+if test "${ac_cv_header_time+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <sys/types.h>
+#include <sys/time.h>
+#include <time.h>
+
+int
+main ()
+{
+if ((struct tm *) 0)
+return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_time=yes
+else
+  ac_cv_header_time=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_time" >&5
+$as_echo "$ac_cv_header_time" >&6; }
+if test $ac_cv_header_time = yes; then
+  
+$as_echo "@%:@define TIME_WITH_SYS_TIME 1" >>confdefs.h
+
+fi
+
+ac_header_dirent=no
+for ac_hdr in dirent.h sys/ndir.h sys/dir.h ndir.h; do
+  as_ac_Header=`$as_echo "ac_cv_header_dirent_$ac_hdr" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_hdr that defines DIR" >&5
+$as_echo_n "checking for $ac_hdr that defines DIR... " >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <sys/types.h>
+#include <$ac_hdr>
+
+int
+main ()
+{
+if ((DIR *) 0)
+return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$as_ac_Header=yes"
+else
+  eval "$as_ac_Header=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$as_ac_Header
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_hdr" | $as_tr_cpp` 1
+_ACEOF
+
+ac_header_dirent=$ac_hdr; break
+fi
+
+done
+# Two versions of opendir et al. are in -ldir and -lx on SCO Xenix.
+if test $ac_header_dirent = dirent.h; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing opendir" >&5
+$as_echo_n "checking for library containing opendir... " >&6; }
+if test "${ac_cv_search_opendir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char opendir ();
+int
+main ()
+{
+return opendir ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' dir; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_opendir=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if test "${ac_cv_search_opendir+set}" = set; then :
+  break
+fi
+done
+if test "${ac_cv_search_opendir+set}" = set; then :
+  
+else
+  ac_cv_search_opendir=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_opendir" >&5
+$as_echo "$ac_cv_search_opendir" >&6; }
+ac_res=$ac_cv_search_opendir
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  
+fi
+
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing opendir" >&5
+$as_echo_n "checking for library containing opendir... " >&6; }
+if test "${ac_cv_search_opendir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char opendir ();
+int
+main ()
+{
+return opendir ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' x; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_opendir=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if test "${ac_cv_search_opendir+set}" = set; then :
+  break
+fi
+done
+if test "${ac_cv_search_opendir+set}" = set; then :
+  
+else
+  ac_cv_search_opendir=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_opendir" >&5
+$as_echo "$ac_cv_search_opendir" >&6; }
+ac_res=$ac_cv_search_opendir
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  
+fi
+
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether string.h and strings.h may both be included" >&5
+$as_echo_n "checking whether string.h and strings.h may both be included... " >&6; }
+if test "${gcc_cv_header_string+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+#include <strings.h>
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  gcc_cv_header_string=yes
+else
+  gcc_cv_header_string=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gcc_cv_header_string" >&5
+$as_echo "$gcc_cv_header_string" >&6; }
+if test $gcc_cv_header_string = yes; then
+  
+$as_echo "@%:@define STRING_WITH_STRINGS 1" >>confdefs.h
+
+fi
+
+for ac_func in fcntl getpagesize setitimer sysconf fdopen getuid getgid fileno
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+eval as_val=\$$as_ac_var
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+done
+
+for ac_func in strtoull
+do :
+  ac_fn_c_check_func "$LINENO" "strtoull" "ac_cv_func_strtoull"
+if test "x$ac_cv_func_strtoull" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_STRTOULL 1
+_ACEOF
+ 
+fi
+done
+
+
+ac_fn_c_check_decl "$LINENO" "basename" "ac_cv_have_decl_basename" "$ac_includes_default"
+if test "x$ac_cv_have_decl_basename" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_BASENAME $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "ftello" "ac_cv_have_decl_ftello" "$ac_includes_default"
+if test "x$ac_cv_have_decl_ftello" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FTELLO $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "ftello64" "ac_cv_have_decl_ftello64" "$ac_includes_default"
+if test "x$ac_cv_have_decl_ftello64" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FTELLO64 $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "fseeko" "ac_cv_have_decl_fseeko" "$ac_includes_default"
+if test "x$ac_cv_have_decl_fseeko" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FSEEKO $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "fseeko64" "ac_cv_have_decl_fseeko64" "$ac_includes_default"
+if test "x$ac_cv_have_decl_fseeko64" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FSEEKO64 $ac_have_decl
+_ACEOF
+
+
+
+case "${host}" in
+*-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-cygwin* | *-*-windows*)
+  
+$as_echo "@%:@define USE_BINARY_FOPEN 1" >>confdefs.h
+ ;;
+esac
+
+ac_fn_c_check_decl "$LINENO" "ffs" "ac_cv_have_decl_ffs" "$ac_includes_default"
+if test "x$ac_cv_have_decl_ffs" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FFS $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "free" "ac_cv_have_decl_free" "$ac_includes_default"
+if test "x$ac_cv_have_decl_free" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_FREE $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "getenv" "ac_cv_have_decl_getenv" "$ac_includes_default"
+if test "x$ac_cv_have_decl_getenv" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_GETENV $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "malloc" "ac_cv_have_decl_malloc" "$ac_includes_default"
+if test "x$ac_cv_have_decl_malloc" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_MALLOC $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "realloc" "ac_cv_have_decl_realloc" "$ac_includes_default"
+if test "x$ac_cv_have_decl_realloc" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_REALLOC $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "stpcpy" "ac_cv_have_decl_stpcpy" "$ac_includes_default"
+if test "x$ac_cv_have_decl_stpcpy" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_STPCPY $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "strstr" "ac_cv_have_decl_strstr" "$ac_includes_default"
+if test "x$ac_cv_have_decl_strstr" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_STRSTR $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "snprintf" "ac_cv_have_decl_snprintf" "$ac_includes_default"
+if test "x$ac_cv_have_decl_snprintf" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_SNPRINTF $ac_have_decl
+_ACEOF
+
+ac_fn_c_check_decl "$LINENO" "vsnprintf" "ac_cv_have_decl_vsnprintf" "$ac_includes_default"
+if test "x$ac_cv_have_decl_vsnprintf" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_VSNPRINTF $ac_have_decl
+_ACEOF
+
+
+# Link in zlib if we can.  This allows us to read compressed debug sections.
+# This is used only by compress.c.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing zlibVersion" >&5
+$as_echo_n "checking for library containing zlibVersion... " >&6; }
+if test "${ac_cv_search_zlibVersion+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char zlibVersion ();
+int
+main ()
+{
+return zlibVersion ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' z; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_zlibVersion=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if test "${ac_cv_search_zlibVersion+set}" = set; then :
+  break
+fi
+done
+if test "${ac_cv_search_zlibVersion+set}" = set; then :
+  
+else
+  ac_cv_search_zlibVersion=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_zlibVersion" >&5
+$as_echo "$ac_cv_search_zlibVersion" >&6; }
+ac_res=$ac_cv_search_zlibVersion
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  for ac_header in zlib.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "zlib.h" "ac_cv_header_zlib_h" "$ac_includes_default"
+if test "x$ac_cv_header_zlib_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_ZLIB_H 1
+_ACEOF
+ 
+fi
+
+done
+
+fi
+
+
+# If we are configured native, pick a core file support file.
+COREFILE=
+COREFLAG=
+TRAD_HEADER=
+if test "${target}" = "${host}"; then
+  case "${host}" in
+  alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
+	COREFILE=''
+	;;
+  alpha*-*-linux-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/alphalinux.h"'
+	;;
+  alpha*-*-netbsd* | alpha*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  alpha*-*-*)		COREFILE=osf-core.lo ;;
+  arm-*-freebsd* | arm-*-kfreebsd*-gnu)
+			COREFILE='' ;;
+  arm-*-netbsd* | arm-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  arm-*-riscix)		COREFILE=trad-core.lo ;;
+  hppa*-*-hpux*)	COREFILE=hpux-core.lo ;;
+  hppa*-*-hiux*)	COREFILE=hpux-core.lo ;;
+  hppa*-*-mpeix*)	COREFILE=hpux-core.lo ;;
+  hppa*-*-bsd*)		COREFILE="hpux-core.lo hppabsd-core.lo"
+			COREFLAG="-DHPUX_CORE -DHPPABSD_CORE" ;;
+  hppa*-*-netbsd* | hppa*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+
+  i370-*-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i370linux.h"'
+	;;
+
+  i[3-7]86-sequent-bsd*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/symmetry.h"'
+	;;
+  i[3-7]86-sequent-sysv4*) ;;
+  i[3-7]86-sequent-sysv*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/symmetry.h"'
+	;;
+  i[3-7]86-*-bsdi)
+	COREFILE=
+	;;
+  i[3-7]86-*-bsd* | i[3-7]86-*-freebsd[123] | i[3-7]86-*-freebsd[123]\.* | i[3-7]86-*-freebsd4\.[01234] | i[3-7]86-*-freebsd4\.[01234]\.* | i[3-7]86-*-freebsd*aout*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i386bsd.h"'
+	;;
+  i[3-7]86-*-freebsd* | i[3-7]86-*-kfreebsd*-gnu | i[3-7]86-*-dragonfly*)
+	COREFILE=''
+	TRAD_HEADER='"hosts/i386bsd.h"'
+	;;
+  i[3-7]86-*-netbsd* | i[3-7]86-*-knetbsd*-gnu | i[3-7]86-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  i[3-7]86-esix-sysv3*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/esix.h"'
+	;;
+  i[3-7]86-*-sco3.2v5*)
+	COREFILE=sco5-core.lo
+	;;
+  i[3-7]86-*-sco* | i[3-7]86-*-isc*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i386sco.h"'
+	;;
+  i[3-7]86-*-mach3*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i386mach3.h"'
+	;;
+  i[3-7]86-*-linux-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i386linux.h"'
+	;;
+  i[3-7]86-*-isc*)	COREFILE=trad-core.lo ;;
+  i[3-7]86-*-aix*)	COREFILE=aix386-core.lo ;;
+  i860-*-mach3* | i860-*-osf1*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/i860mach3.h"'
+	;;
+  mips-*-netbsd* | mips*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  mips-dec-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/decstation.h"'
+	;;
+  mips-sgi-irix4*)	COREFILE=irix-core.lo ;;
+  mips-sgi-irix5*)	COREFILE=irix-core.lo ;;
+  mips-sgi-irix6*)	COREFILE=irix-core.lo ;;
+  mips-*-sysv4*)	;;
+  mips-*-sysv* | mips-*-riscos*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/riscos.h"'
+	;;
+  mips-sony-bsd*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/news-mips.h"'
+	;;
+  m68*-bull*-sysv*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/dpx2.h"'
+	;;
+  m68*-hp-hpux*)	COREFILE=hpux-core.lo ;;
+  m68*-hp-bsd*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/hp300bsd.h"'
+	;;
+  m68*-*-linux-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/m68klinux.h"'
+	;;
+  m68*-motorola-sysv*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/delta68.h"'
+	;;
+  m68*-sony-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/news.h"'
+	;;
+  m68*-*-netbsd* | m68*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  m68*-apple-aux*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/m68kaux.h"'
+	;;
+  m88*-*-sysv4*)
+	;;
+  m88*-motorola-sysv*)
+	COREFILE=ptrace-core.lo
+	;;
+  m88*-*-mach3*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/m88kmach3.h"'
+	;;
+  m88*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  ns32k-pc532-mach)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/pc532mach.h"'
+	;;
+  ns32k-*-netbsd* | ns32k-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  rs6000-*-lynx*)
+  	COREFILE=lynx-core.lo
+	;;
+  rs6000-*-aix[5-9].* | powerpc-*-aix[5-9].*)
+        COREFILE=rs6000-core.lo
+	COREFLAG="$COREFLAG -DAIX_5_CORE -DAIX_CORE_DUMPX_CORE"
+	;;
+  rs6000-*-aix4.[3-9]* | powerpc-*-aix4.[3-9]*)
+        COREFILE=rs6000-core.lo
+	COREFLAG="$COREFLAG -DAIX_CORE_DUMPX_CORE"
+	# Not all versions of AIX with -DAIX_CORE_DUMPX_CORE
+	# have c_impl as a member of struct core_dumpx
+	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for c_impl in struct core_dumpx" >&5
+$as_echo_n "checking for c_impl in struct core_dumpx... " >&6; }
+	cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <core.h>
+int
+main ()
+{
+struct core_dumpx c; c.c_impl = 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+$as_echo "@%:@define HAVE_ST_C_IMPL 1" >>confdefs.h
+
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+	;;
+  rs6000-*-aix4*)	COREFILE=rs6000-core.lo ;;
+  rs6000-*-*)		COREFILE=rs6000-core.lo ;;
+  powerpc-*-aix4*)	COREFILE=rs6000-core.lo ;;
+  powerpc-*-aix*)	COREFILE=rs6000-core.lo ;;
+  powerpc-*-beos*)	;;
+  powerpc-*-freebsd* | powerpc-*-kfreebsd*-gnu)
+		        COREFILE='' ;;
+  powerpc-*-netbsd*)	COREFILE=netbsd-core.lo ;;
+  powerpc-*-*bsd*)	COREFILE=netbsd-core.lo ;;
+  s390*-*-*)            COREFILE=trad-core.lo ;;
+  sh*-*-netbsd* | sh*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  sparc-*-netbsd* | sparc*-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  tahoe-*-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/tahoe.h"'
+	;;
+  vax-*-netbsd* | vax-*-openbsd*)
+  	COREFILE=netbsd-core.lo
+	;;
+  vax-*-ultrix2*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/vaxult2.h"'
+	;;
+  vax-*-ultrix*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/vaxult2.h"'
+	;;
+  vax-*-linux-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/vaxlinux.h"'
+	;;
+  vax-*-*)
+	COREFILE=trad-core.lo
+	TRAD_HEADER='"hosts/vaxbsd.h"'
+	;;
+  x86_64-*-netbsd* | x86_64-*-openbsd*)
+	COREFILE=netbsd-core.lo
+	;;
+  esac
+
+  case "$COREFILE" in
+  aix386-core.lo)	COREFLAG=-DAIX386_CORE ;;
+  hppabsd-core.lo)	COREFLAG=-DHPPABSD_CORE ;;
+  hpux-core.lo)		COREFLAG=-DHPUX_CORE ;;
+  irix-core.lo)		COREFLAG=-DIRIX_CORE ;;
+  lynx-core.lo)		COREFLAG=-DLYNX_CORE ;;
+  netbsd-core.lo)	COREFLAG=-DNETBSD_CORE ;;
+  osf-core.lo)		COREFLAG=-DOSF_CORE ;;
+  ptrace-core.lo)	COREFLAG=-DPTRACE_CORE ;;
+  rs6000-core.lo)	COREFLAG="$COREFLAG -DAIX_CORE" ;;
+  sco5-core.lo)		COREFLAG="$COREFLAG -DSCO5_CORE" ;;
+  trad-core.lo)		COREFLAG="$COREFLAG -DTRAD_CORE" ;;
+  esac
+
+  # ELF corefile support has several flavors, but all of
+  # them use something called <sys/procfs.h>
+  for ac_header in sys/procfs.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "sys/procfs.h" "ac_cv_header_sys_procfs_h" "$ac_includes_default"
+if test "x$ac_cv_header_sys_procfs_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_SYS_PROCFS_H 1
+_ACEOF
+ 
+fi
+
+done
+
+  if test "$ac_cv_header_sys_procfs_h" = yes; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for prstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_prstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_prstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_prstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_prstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_PRSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_prstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_prstatus_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prstatus32_t in sys/procfs.h" >&5
+$as_echo_n "checking for prstatus32_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_prstatus32_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prstatus32_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_prstatus32_t=yes
+else
+  bfd_cv_have_sys_procfs_type_prstatus32_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_prstatus32_t = yes; then
+   
+$as_echo "@%:@define HAVE_PRSTATUS32_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_prstatus32_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_prstatus32_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prstatus_t.pr_who in sys/procfs.h" >&5
+$as_echo_n "checking for prstatus_t.pr_who in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prstatus_t avar; void* aref = (void*) &avar.pr_who
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who=yes
+else
+  bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who = yes; then
+   
+$as_echo "@%:@define HAVE_PRSTATUS_T_PR_WHO 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_member_prstatus_t_pr_who" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prstatus32_t.pr_who in sys/procfs.h" >&5
+$as_echo_n "checking for prstatus32_t.pr_who in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prstatus32_t avar; void* aref = (void*) &avar.pr_who
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who=yes
+else
+  bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who = yes; then
+   
+$as_echo "@%:@define HAVE_PRSTATUS32_T_PR_WHO 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_member_prstatus32_t_pr_who" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for pstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for pstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_pstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+pstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_pstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_pstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_pstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_PSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_pstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_pstatus_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for pxstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for pxstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_pxstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+pxstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_pxstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_pxstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_pxstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_PXSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_pxstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_pxstatus_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for pstatus32_t in sys/procfs.h" >&5
+$as_echo_n "checking for pstatus32_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_pstatus32_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+pstatus32_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_pstatus32_t=yes
+else
+  bfd_cv_have_sys_procfs_type_pstatus32_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_pstatus32_t = yes; then
+   
+$as_echo "@%:@define HAVE_PSTATUS32_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_pstatus32_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_pstatus32_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prpsinfo_t in sys/procfs.h" >&5
+$as_echo_n "checking for prpsinfo_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_prpsinfo_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prpsinfo_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_prpsinfo_t=yes
+else
+  bfd_cv_have_sys_procfs_type_prpsinfo_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_prpsinfo_t = yes; then
+   
+$as_echo "@%:@define HAVE_PRPSINFO_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_prpsinfo_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_prpsinfo_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for prpsinfo32_t in sys/procfs.h" >&5
+$as_echo_n "checking for prpsinfo32_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_prpsinfo32_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+prpsinfo32_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_prpsinfo32_t=yes
+else
+  bfd_cv_have_sys_procfs_type_prpsinfo32_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_prpsinfo32_t = yes; then
+   
+$as_echo "@%:@define HAVE_PRPSINFO32_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_prpsinfo32_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_prpsinfo32_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for psinfo_t in sys/procfs.h" >&5
+$as_echo_n "checking for psinfo_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_psinfo_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+psinfo_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_psinfo_t=yes
+else
+  bfd_cv_have_sys_procfs_type_psinfo_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_psinfo_t = yes; then
+   
+$as_echo "@%:@define HAVE_PSINFO_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_psinfo_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_psinfo_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for psinfo32_t in sys/procfs.h" >&5
+$as_echo_n "checking for psinfo32_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_psinfo32_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+psinfo32_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_psinfo32_t=yes
+else
+  bfd_cv_have_sys_procfs_type_psinfo32_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_psinfo32_t = yes; then
+   
+$as_echo "@%:@define HAVE_PSINFO32_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_psinfo32_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_psinfo32_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for lwpstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for lwpstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_lwpstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+lwpstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_lwpstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_lwpstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_lwpstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_LWPSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_lwpstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_lwpstatus_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for lwpxstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for lwpxstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_lwpxstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+lwpxstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_lwpxstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_lwpxstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_lwpxstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_LWPXSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_lwpxstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_lwpxstatus_t" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for lwpstatus_t.pr_context in sys/procfs.h" >&5
+$as_echo_n "checking for lwpstatus_t.pr_context in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+lwpstatus_t avar; void* aref = (void*) &avar.pr_context
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context=yes
+else
+  bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context = yes; then
+   
+$as_echo "@%:@define HAVE_LWPSTATUS_T_PR_CONTEXT 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_context" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for lwpstatus_t.pr_reg in sys/procfs.h" >&5
+$as_echo_n "checking for lwpstatus_t.pr_reg in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+lwpstatus_t avar; void* aref = (void*) &avar.pr_reg
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg=yes
+else
+  bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg = yes; then
+   
+$as_echo "@%:@define HAVE_LWPSTATUS_T_PR_REG 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_member_lwpstatus_t_pr_reg" >&6; }
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for win32_pstatus_t in sys/procfs.h" >&5
+$as_echo_n "checking for win32_pstatus_t in sys/procfs.h... " >&6; }
+ if test "${bfd_cv_have_sys_procfs_type_win32_pstatus_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#define _SYSCALL32
+#include <sys/procfs.h>
+int
+main ()
+{
+win32_pstatus_t avar
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  bfd_cv_have_sys_procfs_type_win32_pstatus_t=yes
+else
+  bfd_cv_have_sys_procfs_type_win32_pstatus_t=no
+   
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+
+ if test $bfd_cv_have_sys_procfs_type_win32_pstatus_t = yes; then
+   
+$as_echo "@%:@define HAVE_WIN32_PSTATUS_T 1" >>confdefs.h
+
+ fi
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_have_sys_procfs_type_win32_pstatus_t" >&5
+$as_echo "$bfd_cv_have_sys_procfs_type_win32_pstatus_t" >&6; }
+
+  fi
+fi
+
+
+if test -n "$TRAD_HEADER"; then
+  
+cat >>confdefs.h <<_ACEOF
+@%:@define TRAD_HEADER $TRAD_HEADER
+_ACEOF
+
+fi
+
+# Check if linker supports --as-needed and --no-as-needed options
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking linker --as-needed support" >&5
+$as_echo_n "checking linker --as-needed support... " >&6; }
+if test "${bfd_cv_ld_as_needed+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  bfd_cv_ld_as_needed=no
+	if $LD --help 2>/dev/null | grep as-needed > /dev/null; then
+		bfd_cv_ld_as_needed=yes
+	fi
+	
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_ld_as_needed" >&5
+$as_echo "$bfd_cv_ld_as_needed" >&6; }
+
+LIBM=
+case $host in
+*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
+  # These system don't have libm, or don't need it
+  ;;
+*-ncr-sysv4.3*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _mwvalidcheckl in -lmw" >&5
+$as_echo_n "checking for _mwvalidcheckl in -lmw... " >&6; }
+if test "${ac_cv_lib_mw__mwvalidcheckl+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lmw  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char _mwvalidcheckl ();
+int
+main ()
+{
+return _mwvalidcheckl ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_mw__mwvalidcheckl=yes
+else
+  ac_cv_lib_mw__mwvalidcheckl=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_mw__mwvalidcheckl" >&5
+$as_echo "$ac_cv_lib_mw__mwvalidcheckl" >&6; }
+if test "x$ac_cv_lib_mw__mwvalidcheckl" = x""yes; then :
+  LIBM="-lmw"
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cos in -lm" >&5
+$as_echo_n "checking for cos in -lm... " >&6; }
+if test "${ac_cv_lib_m_cos+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lm  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cos ();
+int
+main ()
+{
+return cos ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_m_cos=yes
+else
+  ac_cv_lib_m_cos=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_cos" >&5
+$as_echo "$ac_cv_lib_m_cos" >&6; }
+if test "x$ac_cv_lib_m_cos" = x""yes; then :
+  LIBM="$LIBM -lm"
+fi
+
+  ;;
+*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cos in -lm" >&5
+$as_echo_n "checking for cos in -lm... " >&6; }
+if test "${ac_cv_lib_m_cos+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lm  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cos ();
+int
+main ()
+{
+return cos ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_m_cos=yes
+else
+  ac_cv_lib_m_cos=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_cos" >&5
+$as_echo "$ac_cv_lib_m_cos" >&6; }
+if test "x$ac_cv_lib_m_cos" = x""yes; then :
+  LIBM="-lm"
+fi
+
+  ;;
+esac
+
+
+
+# When building a shared libbfd, link against the pic version of libiberty
+# so that apps that use libbfd won't need libiberty just to satisfy any
+# libbfd references.
+# We can't do that if a pic libiberty is unavailable since including non-pic
+# code would insert text relocations into libbfd.
+SHARED_LIBADD=
+SHARED_LDFLAGS=
+if test "$enable_shared" = "yes"; then
+  x=`sed -n -e 's/^[ 	]*PICFLAG[ 	]*=[ 	]*//p' < ../libiberty/Makefile | sed -n '$p'`
+  if test -n "$x"; then
+    SHARED_LIBADD="-L`pwd`/../libiberty/pic -liberty"
+  fi
+
+# More hacks to build DLLs on Windows.
+  case "${host}" in
+  *-*-cygwin*)
+    SHARED_LDFLAGS="-no-undefined"
+    SHARED_LIBADD="-L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin -lkernel32"
+  ;;
+  esac
+
+  if test -n "$SHARED_LIBADD"; then
+    if test -n "$LIBM"; then
+      if test x"$bfd_cv_ld_as_needed" = xyes; then
+	# Link against libm only when needed.  Put -lc, -lm inside -Wl
+	# to stop libtool reordering these options.
+	SHARED_LIBADD="$SHARED_LIBADD -Wl,-lc,--as-needed,`echo $LIBM | sed 's/ /,/g'`,--no-as-needed"
+      else
+	SHARED_LIBADD="$SHARED_LIBADD $LIBM"
+      fi
+    fi
+  fi
+fi
+
+
+
+# target stuff:
+
+# Canonicalize the secondary target names.
+if test -n "$enable_targets" ; then
+    for targ in `echo $enable_targets | sed 's/,/ /g'`
+    do
+	result=`$ac_config_sub $targ 2>/dev/null`
+	if test -n "$result" ; then
+	    canon_targets="$canon_targets $result"
+	else
+	    # Allow targets that config.sub doesn't recognize, like "all".
+	    canon_targets="$canon_targets $targ"
+	fi
+    done
+fi
+
+all_targets=false
+defvec=
+selvecs=
+assocvecs=
+selarchs=
+TDEFINES=
+for targ in $target $canon_targets
+do
+    if test "x$targ" = "xall"; then
+        all_targets=true
+	assocvecs="$assocvecs $targ_defvec $targ_selvecs"
+    else
+	. $srcdir/config.bfd
+	if test "x$targ" = "x$target"; then
+	    defvec=$targ_defvec
+	fi
+	selvecs="$selvecs $targ_defvec $targ_selvecs"
+	selarchs="$selarchs $targ_archs"
+	TDEFINES="$TDEFINES $targ_cflags"
+    fi
+done
+
+
+# This processing still needs to be done if we're to decide properly whether
+# 64-bit support needs to be compiled in.  Currently, it will be included if
+# the default or any other explicitly requested target requires it; it
+# will not be included on a 32-bit host if no 64-bit target is requested, and
+# no "--with-64-bit-bfd" option is given, even if "--enable-targets=all" is
+# used.
+
+# uniq the default and selected vectors in all the configured targets.
+f=""
+for i in $selvecs ; do
+    case " $f " in
+    *" $i "*) ;;
+    *) f="$f $i" ;;
+    esac
+done
+selvecs="$f"
+
+
+# uniq the associated vectors in all the configured targets.
+f=""
+for i in $assocvecs ; do
+    case " $f " in
+    *" $i "*) ;;
+    *) f="$f $i" ;;
+    esac
+done
+assocvecs="$f"
+
+
+# uniq the architectures in all the configured targets.
+f=""
+for i in $selarchs ; do
+    case " $f " in
+    *" $i "*) ;;
+    *) f="$f $i" ;;
+    esac
+done
+selarchs="$f"
+
+# Target backend .o files.
+tb=
+
+elf="elf.lo elflink.lo elf-attrs.lo elf-strtab.lo
+     elf-eh-frame.lo dwarf1.lo"
+
+for vec in $selvecs
+do
+    target_size=32
+    case "$vec" in
+    # This list is alphabetized to make it easy to compare
+    # with the two vector lists in targets.c.  For the same reason,
+    # use one entry per line, even though this leads to long lines.
+    a_out_adobe_vec)		tb="$tb aout-adobe.lo aout32.lo" ;;
+    aix5coff64_vec)		tb="$tb coff64-rs6000.lo xcofflink.lo aix5ppc-core.lo"; target_size=64 ;;
+    aout0_big_vec)		tb="$tb aout0.lo aout32.lo" ;;
+    aout_arm_big_vec)		tb="$tb aout-arm.lo aout32.lo" ;;
+    aout_arm_little_vec)	tb="$tb aout-arm.lo aout32.lo" ;;
+    apollocoff_vec)		tb="$tb coff-apollo.lo" ;;
+    arm_epoc_pe_big_vec)	tb="$tb epoc-pe-arm.lo peigen.lo cofflink.lo " ;;
+    arm_epoc_pe_little_vec)	tb="$tb epoc-pe-arm.lo peigen.lo cofflink.lo " ;;
+    arm_epoc_pei_big_vec)	tb="$tb epoc-pei-arm.lo peigen.lo cofflink.lo " ;;
+    arm_epoc_pei_little_vec)	tb="$tb epoc-pei-arm.lo peigen.lo cofflink.lo " ;;
+    arm_wince_pe_big_vec)	tb="$tb pe-arm-wince.lo pe-arm.lo peigen.lo cofflink.lo " ;;
+    arm_wince_pe_little_vec)	tb="$tb pe-arm-wince.lo pe-arm.lo peigen.lo cofflink.lo " ;;
+    arm_wince_pei_big_vec)	tb="$tb pei-arm-wince.lo pei-arm.lo peigen.lo cofflink.lo " ;;
+    arm_wince_pei_little_vec)	tb="$tb pei-arm-wince.lo pei-arm.lo peigen.lo cofflink.lo " ;;
+    armcoff_big_vec)		tb="$tb coff-arm.lo cofflink.lo " ;;
+    armcoff_little_vec)		tb="$tb coff-arm.lo cofflink.lo " ;;
+    armnetbsd_vec)		tb="$tb armnetbsd.lo aout32.lo" ;;
+    armpe_big_vec)		tb="$tb pe-arm.lo peigen.lo cofflink.lo " ;;
+    armpe_little_vec)		tb="$tb pe-arm.lo peigen.lo cofflink.lo " ;;
+    armpei_big_vec)		tb="$tb pei-arm.lo peigen.lo cofflink.lo " ;;
+    armpei_little_vec)		tb="$tb pei-arm.lo peigen.lo cofflink.lo " ;;
+    b_out_vec_big_host)		tb="$tb bout.lo aout32.lo" ;;
+    b_out_vec_little_host)	tb="$tb bout.lo aout32.lo" ;;
+    bfd_pei_ia64_vec)		tb="$tb pei-ia64.lo pepigen.lo cofflink.lo"; target_size=64 ;;
+    bfd_elf32_am33lin_vec)	tb="$tb elf32-am33lin.lo elf32.lo $elf" ;;
+    bfd_elf32_avr_vec)		tb="$tb elf32-avr.lo elf32.lo $elf" ;;
+    bfd_elf32_bfin_vec)		tb="$tb elf32-bfin.lo elf32.lo $elf" ;;
+    bfd_elf32_bfinfdpic_vec)	tb="$tb elf32-bfin.lo elf32.lo $elf" ;;
+    bfd_elf32_big_generic_vec) 	tb="$tb elf32-gen.lo elf32.lo $elf" ;;
+    bfd_elf32_bigarc_vec)	tb="$tb elf32-arc.lo elf32.lo $elf" ;;
+    bfd_elf32_bigarm_vec)	tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_bigarm_symbian_vec)	
+                                tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_bigarm_vxworks_vec)	
+                                tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_bigmips_vec) 	tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_bigmips_vxworks_vec)
+			 	tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_cr16_vec)		tb="$tb elf32-cr16.lo elf32.lo $elf" ;;
+    bfd_elf32_cr16c_vec)	tb="$tb elf32-cr16c.lo elf32.lo $elf" ;;
+    bfd_elf32_cris_vec)		tb="$tb elf32-cris.lo elf32.lo $elf" ;;
+    bfd_elf32_crx_vec)          tb="$tb elf32-crx.lo elf32.lo $elf" ;;    
+    bfd_elf32_d10v_vec)		tb="$tb elf32-d10v.lo elf32.lo $elf" ;;
+    bfd_elf32_d30v_vec)		tb="$tb elf32-d30v.lo elf32.lo $elf" ;;
+    bfd_elf32_dlx_big_vec)	tb="$tb elf32-dlx.lo elf32.lo $elf" ;;
+    bfd_elf32_fr30_vec)		tb="$tb elf32-fr30.lo elf32.lo $elf" ;;
+    bfd_elf32_frv_vec)		tb="$tb elf32-frv.lo elf32.lo $elf" ;;
+    bfd_elf32_frvfdpic_vec)	tb="$tb elf32-frv.lo elf32.lo $elf" ;;
+    bfd_elf32_moxie_vec)	tb="$tb elf32-moxie.lo elf32.lo $elf" ;;
+    bfd_elf32_h8300_vec)	tb="$tb elf32-h8300.lo elf32.lo $elf" ;;
+    bfd_elf32_hppa_linux_vec)	tb="$tb elf32-hppa.lo elf32.lo $elf" ;;
+    bfd_elf32_hppa_nbsd_vec)	tb="$tb elf32-hppa.lo elf32.lo $elf" ;;
+    bfd_elf32_hppa_vec)		tb="$tb elf32-hppa.lo elf32.lo $elf" ;;
+    bfd_elf32_i370_vec)		tb="$tb elf32-i370.lo elf32.lo $elf" ;;
+    bfd_elf32_i386_dragonfly_vec)
+				tb="$tb elf32-i386.lo elf-ifunc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_i386_freebsd_vec)	tb="$tb elf32-i386.lo elf-ifunc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_i386_vxworks_vec)	tb="$tb elf32-i386.lo elf-ifunc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_i386_vec)		tb="$tb elf32-i386.lo elf-ifunc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_i860_little_vec)	tb="$tb elf32-i860.lo elf32.lo $elf" ;;
+    bfd_elf32_i860_vec)		tb="$tb elf32-i860.lo elf32.lo $elf" ;;
+    bfd_elf32_i960_vec)		tb="$tb elf32-i960.lo elf32.lo $elf" ;;
+    bfd_elf32_ia64_big_vec)	tb="$tb elf32-ia64.lo elf32.lo $elf" ;;
+    bfd_elf32_ia64_hpux_big_vec) tb="$tb elf32-ia64.lo elf32.lo $elf";;
+    bfd_elf32_ip2k_vec)		tb="$tb elf32-ip2k.lo elf32.lo $elf" ;;
+    bfd_elf32_iq2000_vec)       tb="$tb elf32-iq2000.lo elf32.lo $elf" ;;
+    bfd_elf32_lm32_vec)         tb="$tb elf32-lm32.lo elf32.lo $elf" ;;
+    bfd_elf32_lm32fdpic_vec)         tb="$tb elf32-lm32.lo elf32.lo $elf" ;;
+    bfd_elf32_little_generic_vec) tb="$tb elf32-gen.lo elf32.lo $elf" ;;
+    bfd_elf32_littlearc_vec)	tb="$tb elf32-arc.lo elf32.lo $elf" ;;
+    bfd_elf32_littlearm_symbian_vec)
+                                tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_littlearm_vxworks_vec)
+                                tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_littlearm_vec)	tb="$tb elf32-arm.lo elf32.lo elf-vxworks.lo $elf" ;;
+    bfd_elf32_littlemips_vec) 	tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_littlemips_vxworks_vec)
+			 	tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_m32c_vec)         tb="$tb elf32-m32c.lo elf32.lo $elf" ;;
+    bfd_elf32_m32r_vec)		tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
+    bfd_elf32_m32rle_vec)       tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
+    bfd_elf32_m32rlin_vec)      tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
+    bfd_elf32_m32rlelin_vec)    tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
+    bfd_elf32_m68hc11_vec)	tb="$tb elf32-m68hc11.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
+    bfd_elf32_m68hc12_vec)	tb="$tb elf32-m68hc12.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9s12x_vec)	tb="$tb elf32-mc9s12x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9xgate_vec)	tb="$tb elf32-mc9xgate.lo elf32.lo $elf" ;;
+    bfd_elf32_m68k_vec)		tb="$tb elf32-m68k.lo elf32.lo $elf" ;;
+    bfd_elf32_m88k_vec)		tb="$tb elf32-m88k.lo elf32.lo $elf" ;;
+    bfd_elf32_mcore_big_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
+    bfd_elf32_mcore_little_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
+    bfd_elf32_mep_vec)		tb="$tb elf32-mep.lo elf32.lo $elf" ;;
+    bfd_elf32_mep_little_vec)	tb="$tb elf32-mep.lo elf32.lo $elf" ;;
+    bfd_elf32_microblaze_vec)	tb="$tb elf32-microblaze.lo elf32.lo $elf" ;;
+    bfd_elf32_mn10200_vec)	tb="$tb elf-m10200.lo elf32.lo $elf" ;;
+    bfd_elf32_mn10300_vec)	tb="$tb elf-m10300.lo elf32.lo $elf" ;;
+    bfd_elf32_mt_vec)           tb="$tb elf32-mt.lo elf32.lo $elf" ;;
+    bfd_elf32_msp430_vec)	tb="$tb elf32-msp430.lo elf32.lo $elf" ;;
+    bfd_elf32_nbigmips_vec)	tb="$tb elfn32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf32_nlittlemips_vec)	tb="$tb elfn32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf32_ntradbigmips_vec)	tb="$tb elfn32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf32_ntradlittlemips_vec) tb="$tb elfn32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf32_openrisc_vec)	tb="$tb elf32-openrisc.lo elf32.lo $elf" ;;
+    bfd_elf32_or32_big_vec)	tb="$tb elf32-or32.lo elf32.lo $elf" ;;
+    bfd_elf32_pj_vec)           tb="$tb elf32-pj.lo elf32.lo $elf";;
+    bfd_elf32_pjl_vec)          tb="$tb elf32-pj.lo elf32.lo $elf";;
+    bfd_elf32_powerpc_vec)	tb="$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_powerpcle_vec)	tb="$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_powerpc_vxworks_vec) tb="$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_s390_vec)		tb="$tb elf32-s390.lo elf32.lo $elf" ;;
+    bfd_elf32_bigscore_vec)     tb="$tb elf32-score.lo elf32-score7.lo elf32.lo $elf"; want64=true; target_size=64;;
+    bfd_elf32_littlescore_vec)  tb="$tb elf32-score.lo elf32-score7.lo elf32.lo $elf"; want64=true; target_size=64;;
+    # FIXME: We include cofflink.lo not because it's needed for
+    # bfd_elf32_sh64[l]_vec, but because we include bfd_elf32_sh[l]_vec
+    # which needs it but does not list it.  Should be fixed in right place.
+    bfd_elf32_sh64_vec)		tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" target_size=64 ;;
+    bfd_elf32_sh64l_vec)	tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" target_size=64 ;;
+    bfd_elf32_sh64lin_vec)	tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" target_size=64 ;;
+    bfd_elf32_sh64blin_vec)	tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" target_size=64 ;;
+    bfd_elf32_sh64lnbsd_vec)	tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" ;;
+    bfd_elf32_sh64nbsd_vec)	tb="$tb elf32-sh64.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf cofflink.lo" ;;
+    bfd_elf32_sh_vec)		tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo" ;;
+    bfd_elf32_shblin_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo cofflink.lo" ;;
+    bfd_elf32_shl_vec)		tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo" ;;
+    bfd_elf32_shl_symbian_vec)	tb="$tb elf32-sh-symbian.lo elf32-sh64-com.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo" ;;
+    bfd_elf32_shlin_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo cofflink.lo" ;;
+    bfd_elf32_shlnbsd_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo cofflink.lo" ;;
+    bfd_elf32_shlvxworks_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo" ;;
+    bfd_elf32_shnbsd_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo cofflink.lo" ;;
+    bfd_elf32_shvxworks_vec)	tb="$tb elf32-sh.lo elf-vxworks.lo elf32.lo $elf coff-sh.lo" ;;
+    bfd_elf32_sparc_vec)	tb="$tb elf32-sparc.lo elfxx-sparc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_sparc_vxworks_vec) tb="$tb elf32-sparc.lo elfxx-sparc.lo elf-vxworks.lo elf32.lo $elf" ;;
+    bfd_elf32_spu_vec)		tb="$tb elf32-spu.lo elf32.lo $elf" ;;
+    bfd_elf32_tradbigmips_vec)  tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_tradlittlemips_vec) tb="$tb elf32-mips.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo" ;;
+    bfd_elf32_us_cris_vec)	tb="$tb elf32-cris.lo elf32.lo $elf" ;;
+    bfd_elf32_v850_vec)		tb="$tb elf32-v850.lo elf32.lo $elf" ;;
+    bfd_elf32_vax_vec)		tb="$tb elf32-vax.lo elf32.lo $elf" ;;
+    bfd_elf32_xstormy16_vec)	tb="$tb elf32-xstormy16.lo elf32.lo $elf" ;;
+    bfd_elf32_xc16x_vec)		tb="$tb elf32-xc16x.lo elf32.lo $elf" ;;
+    bfd_elf32_xtensa_le_vec)	tb="$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf" ;;
+    bfd_elf32_xtensa_be_vec)	tb="$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf" ;;
+    bfd_elf64_alpha_freebsd_vec) tb="$tb elf64-alpha.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_alpha_vec)	tb="$tb elf64-alpha.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_big_generic_vec) 	tb="$tb elf64-gen.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_bigmips_vec) 	tb="$tb elf64-mips.lo elf64.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf64_hppa_linux_vec)	tb="$tb elf64-hppa.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_hppa_vec)		tb="$tb elf64-hppa.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_ia64_big_vec)	tb="$tb elf64-ia64.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_ia64_hpux_big_vec) tb="$tb elf64-ia64.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_ia64_little_vec)	tb="$tb elf64-ia64.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_ia64_vms_vec)	tb="$tb elf64-ia64.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_little_generic_vec) tb="$tb elf64-gen.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_littlemips_vec) 	tb="$tb elf64-mips.lo elf64.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf64_mmix_vec) 	tb="$tb elf64-mmix.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_powerpc_vec)	tb="$tb elf64-ppc.lo elf64-gen.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_powerpcle_vec)	tb="$tb elf64-ppc.lo elf64-gen.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_s390_vec)		tb="$tb elf64-s390.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_sh64_vec)		tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sh64l_vec)	tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sh64lin_vec)	tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sh64blin_vec)	tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sh64lnbsd_vec)	tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sh64nbsd_vec)	tb="$tb elf64-sh64.lo elf64.lo $elf" target_size=64 ;;
+    bfd_elf64_sparc_vec)	tb="$tb elf64-sparc.lo elfxx-sparc.lo elf-vxworks.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_sparc_freebsd_vec) tb="$tb elf64-sparc.lo elfxx-sparc.lo elf-vxworks.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_tradbigmips_vec)	tb="$tb elf64-mips.lo elf64.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf64_tradlittlemips_vec) tb="$tb elf64-mips.lo elf64.lo elfxx-mips.lo elf-vxworks.lo elf32.lo $elf ecofflink.lo"; target_size=64 ;;
+    bfd_elf64_x86_64_freebsd_vec) tb="$tb elf64-x86-64.lo elf-ifunc.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_x86_64_vec)	tb="$tb elf64-x86-64.lo elf-ifunc.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_l1om_vec)		tb="$tb elf64-x86-64.lo elf-ifunc.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_elf64_l1om_freebsd_vec) tb="$tb elf64-x86-64.lo elf-ifunc.lo elf64.lo $elf"; target_size=64 ;;
+    bfd_mmo_vec)		tb="$tb mmo.lo" target_size=64 ;;
+    bfd_powerpc_pe_vec)         tb="$tb pe-ppc.lo peigen.lo cofflink.lo" ;;
+    bfd_powerpc_pei_vec)        tb="$tb pei-ppc.lo peigen.lo cofflink.lo" ;;
+    bfd_powerpcle_pe_vec)       tb="$tb pe-ppc.lo peigen.lo cofflink.lo" ;;
+    bfd_powerpcle_pei_vec)      tb="$tb pei-ppc.lo peigen.lo cofflink.lo" ;;
+    cris_aout_vec)		tb="$tb aout-cris.lo" ;;
+    demo_64_vec)		tb="$tb demo64.lo aout64.lo"; target_size=64 ;;
+    ecoff_big_vec)		tb="$tb coff-mips.lo ecoff.lo ecofflink.lo" ;;
+    ecoff_biglittle_vec)	tb="$tb coff-mips.lo ecoff.lo ecofflink.lo" ;;
+    ecoff_little_vec)		tb="$tb coff-mips.lo ecoff.lo ecofflink.lo" ;;
+    ecoffalpha_little_vec)	tb="$tb coff-alpha.lo ecoff.lo ecofflink.lo"; target_size=64 ;;
+    go32coff_vec)		tb="$tb coff-go32.lo cofflink.lo" ;;
+    go32stubbedcoff_vec)	tb="$tb coff-stgo32.lo cofflink.lo" ;;
+    h8300coff_vec)		tb="$tb coff-h8300.lo reloc16.lo" ;;
+    h8500coff_vec)		tb="$tb coff-h8500.lo reloc16.lo" ;;
+    host_aout_vec)		tb="$tb host-aout.lo aout32.lo" ;;
+    hp300bsd_vec)		tb="$tb hp300bsd.lo aout32.lo" ;;
+    hp300hpux_vec)		tb="$tb hp300hpux.lo aout32.lo" ;;
+    i386aout_vec)		tb="$tb i386aout.lo aout32.lo" ;;
+    i386bsd_vec)		tb="$tb i386bsd.lo aout32.lo" ;;
+    i386coff_vec)		tb="$tb coff-i386.lo cofflink.lo" ;;
+    x86_64coff_vec)		tb="$tb coff-x86_64.lo cofflink.lo"; target_size=64 ;;
+    i386dynix_vec)		tb="$tb i386dynix.lo aout32.lo" ;;
+    i386freebsd_vec)		tb="$tb i386freebsd.lo aout32.lo" ;;
+    i386linux_vec)		tb="$tb i386linux.lo aout32.lo" ;;
+    i386lynx_aout_vec)		tb="$tb i386lynx.lo lynx-core.lo aout32.lo" ;;
+    i386lynx_coff_vec)		tb="$tb cf-i386lynx.lo cofflink.lo lynx-core.lo" ;;
+    i386mach3_vec)		tb="$tb i386mach3.lo aout32.lo" ;;
+    i386msdos_vec)		tb="$tb i386msdos.lo" ;;
+    i386netbsd_vec)		tb="$tb i386netbsd.lo aout32.lo" ;;
+    i386os9k_vec)		tb="$tb i386os9k.lo aout32.lo" ;;
+    i386pe_vec)			tb="$tb pe-i386.lo peigen.lo cofflink.lo" ;;
+    i386pei_vec)		tb="$tb pei-i386.lo peigen.lo cofflink.lo" ;;
+    x86_64pe_vec)		tb="$tb pe-x86_64.lo pex64igen.lo cofflink.lo"; target_size=64 ;;
+    x86_64pei_vec)		tb="$tb pei-x86_64.lo pex64igen.lo cofflink.lo"; target_size=64 ;;
+    i860coff_vec)		tb="$tb coff-i860.lo cofflink.lo" ;;
+    icoff_big_vec)		tb="$tb coff-i960.lo cofflink.lo" ;;
+    icoff_little_vec)		tb="$tb coff-i960.lo cofflink.lo" ;;
+    ieee_vec)			tb="$tb ieee.lo" ;;
+    m68k4knetbsd_vec)		tb="$tb m68k4knetbsd.lo aout32.lo" ;;
+    m68kaux_coff_vec)		tb="$tb coff-aux.lo coff-m68k.lo cofflink.lo" ;;
+    m68kcoff_vec)		tb="$tb coff-m68k.lo cofflink.lo" ;;
+    m68kcoffun_vec)		tb="$tb coff-u68k.lo coff-m68k.lo cofflink.lo" ;;
+    m68klinux_vec)		tb="$tb m68klinux.lo aout32.lo" ;;
+    m68knetbsd_vec)		tb="$tb m68knetbsd.lo aout32.lo" ;;
+    m68ksysvcoff_vec)		tb="$tb coff-svm68k.lo cofflink.lo" ;;
+    m88kbcs_vec)		tb="$tb coff-m88k.lo" ;;
+    m88kmach3_vec)		tb="$tb m88kmach3.lo aout32.lo" ;;
+    m88kopenbsd_vec)		tb="$tb m88kopenbsd.lo aout32.lo" ;;
+    maxqcoff_vec)               tb="$tb coff-maxq.lo" ;;
+    mach_o_be_vec)              tb="$tb mach-o.lo" ;;
+    mach_o_le_vec)              tb="$tb mach-o.lo" ;;
+    mach_o_fat_vec)             tb="$tb mach-o.lo" ;;
+    mach_o_i386_vec)            tb="$tb mach-o-i386.lo" ;;
+    mcore_pe_big_vec)		tb="$tb pe-mcore.lo peigen.lo cofflink.lo" ;;
+    mcore_pe_little_vec)	tb="$tb pe-mcore.lo peigen.lo cofflink.lo" ;;
+    mcore_pei_big_vec)		tb="$tb pei-mcore.lo peigen.lo cofflink.lo" ;;
+    mcore_pei_little_vec)	tb="$tb pei-mcore.lo peigen.lo cofflink.lo" ;;
+    mipslpe_vec)		tb="$tb pe-mips.lo peigen.lo cofflink.lo" ;;
+    mipslpei_vec)		tb="$tb pei-mips.lo peigen.lo cofflink.lo" ;;
+    newsos3_vec)		tb="$tb newsos3.lo aout32.lo" ;;
+    nlm32_alpha_vec)		tb="$tb nlm32-alpha.lo nlm32.lo nlm.lo"; target_size=64 ;;
+    nlm32_i386_vec)		tb="$tb nlm32-i386.lo nlm32.lo nlm.lo" ;;
+    nlm32_powerpc_vec)		tb="$tb nlm32-ppc.lo nlm32.lo nlm.lo" ;;
+    nlm32_sparc_vec)		tb="$tb nlm32-sparc.lo nlm32.lo nlm.lo" ;;
+    or32coff_big_vec)		tb="$tb coff-or32.lo cofflink.lo" ;;
+    pc532machaout_vec)		tb="$tb pc532-mach.lo aout-ns32k.lo" ;;
+    pc532netbsd_vec)		tb="$tb ns32knetbsd.lo aout-ns32k.lo" ;;
+    pef_vec)                    tb="$tb pef.lo" ;;
+    pef_xlib_vec)               tb="$tb pef.lo" ;;
+    pdp11_aout_vec)		tb="$tb pdp11.lo" ;;
+    plugin_vec)                 tb="$tb plugin.lo" ;;
+    pmac_xcoff_vec)		tb="$tb coff-rs6000.lo xcofflink.lo" ;;
+    ppcboot_vec)		tb="$tb ppcboot.lo" ;;
+    riscix_vec)			tb="$tb aout32.lo riscix.lo" ;;
+    rs6000coff64_vec)		tb="$tb coff64-rs6000.lo xcofflink.lo aix5ppc-core.lo"; target_size=64 ;;
+    rs6000coff_vec)		tb="$tb coff-rs6000.lo xcofflink.lo" ;;
+    shcoff_small_vec)		tb="$tb coff-sh.lo cofflink.lo" ;;
+    shcoff_vec)			tb="$tb coff-sh.lo cofflink.lo" ;;
+    shlcoff_small_vec)		tb="$tb coff-sh.lo cofflink.lo" ;;
+    shlcoff_vec)		tb="$tb coff-sh.lo cofflink.lo" ;;
+    shlpe_vec)			tb="$tb pe-sh.lo coff-sh.lo peigen.lo cofflink.lo" ;;
+    shlpei_vec)			tb="$tb pei-sh.lo coff-sh.lo peigen.lo cofflink.lo" ;;
+    som_vec)			tb="$tb som.lo" ;;
+    sparccoff_vec)		tb="$tb coff-sparc.lo" ;;
+    sparcle_aout_vec)		tb="$tb aout-sparcle.lo aout32.lo" ;;
+    sparclinux_vec)		tb="$tb sparclinux.lo aout32.lo" ;;
+    sparclynx_aout_vec)		tb="$tb sparclynx.lo lynx-core.lo aout32.lo" ;;
+    sparclynx_coff_vec)		tb="$tb cf-sparclynx.lo lynx-core.lo" ;;
+    sparcnetbsd_vec)		tb="$tb sparcnetbsd.lo aout32.lo" ;;
+    sunos_big_vec)		tb="$tb sunos.lo aout32.lo" ;;
+    sym_vec)                    tb="$tb xsym.lo" ;;
+    tic30_aout_vec)		tb="$tb aout-tic30.lo" ;;
+    tic30_coff_vec)		tb="$tb coff-tic30.lo" ;;
+    tic4x_coff0_vec)            tb="$tb coff-tic4x.lo" ;;
+    tic4x_coff0_beh_vec)        tb="$tb coff-tic4x.lo" ;;
+    tic4x_coff1_vec)            tb="$tb coff-tic4x.lo" ;;
+    tic4x_coff1_beh_vec)        tb="$tb coff-tic4x.lo" ;;
+    tic4x_coff2_vec)            tb="$tb coff-tic4x.lo" ;;
+    tic4x_coff2_beh_vec)        tb="$tb coff-tic4x.lo" ;;
+    tic54x_coff0_beh_vec)	tb="$tb coff-tic54x.lo" ;;
+    tic54x_coff0_vec)		tb="$tb coff-tic54x.lo" ;;
+    tic54x_coff1_beh_vec)	tb="$tb coff-tic54x.lo" ;;
+    tic54x_coff1_vec)		tb="$tb coff-tic54x.lo" ;;
+    tic54x_coff2_beh_vec)	tb="$tb coff-tic54x.lo" ;;
+    tic54x_coff2_vec)		tb="$tb coff-tic54x.lo" ;;
+    tic80coff_vec)		tb="$tb coff-tic80.lo cofflink.lo" ;;
+    vaxnetbsd_vec)		tb="$tb vaxnetbsd.lo aout32.lo" ;;
+    vax1knetbsd_vec)		tb="$tb vax1knetbsd.lo aout32.lo" ;;
+    vaxbsd_vec)			tb="$tb vaxbsd.lo aout32.lo" ;;
+    versados_vec)		tb="$tb versados.lo" ;;
+    vms_alpha_vec)		tb="$tb vms.lo vms-hdr.lo vms-gsd.lo vms-tir.lo vms-misc.lo"; target_size=64 ;;
+    vms_vax_vec)		tb="$tb vms.lo vms-hdr.lo vms-gsd.lo vms-tir.lo vms-misc.lo" ;;
+    w65_vec)			tb="$tb coff-w65.lo reloc16.lo" ;;
+    we32kcoff_vec)		tb="$tb coff-we32k.lo" ;;
+    z80coff_vec)		tb="$tb coff-z80.lo reloc16.lo" ;;
+    z8kcoff_vec)		tb="$tb coff-z8k.lo reloc16.lo cofflink.lo" ;;
+
+    # These appear out of order in targets.c
+    srec_vec)			tb="$tb srec.lo" ;;
+    symbolsrec_vec)		tb="$tb srec.lo" ;;
+    tekhex_vec)			tb="$tb tekhex.lo" ;;
+    cisco_core_big_vec)		tb="$tb cisco-core.lo" ;;
+    cisco_core_little_vec)	tb="$tb cisco-core.lo" ;;
+
+    "")			;;
+    *) as_fn_error "*** unknown target vector $vec" "$LINENO" 5 ;;
+    esac
+
+    if test ${target_size} = 64; then
+	target64=true
+    fi
+    if test x"${vec}" = x"${defvec}"; then
+	bfd_default_target_size=${target_size}
+    fi
+done
+
+# Target architecture .o files.
+# A couple of CPUs use shorter file names to avoid problems on DOS
+# filesystems.
+ta=`echo $selarchs | sed -e s/bfd_/cpu-/g -e s/_arch/.lo/g -e s/mn10200/m10200/ -e s/mn10300/m10300/`
+
+# Weed out duplicate .o files.
+f=""
+for i in $tb ; do
+    case " $f " in
+    *" $i "*) ;;
+    *) f="$f $i" ;;
+    esac
+done
+tb="$f"
+
+f=""
+for i in $ta ; do
+    case " $f " in
+    *" $i "*) ;;
+    *) f="$f $i" ;;
+    esac
+done
+ta="$f"
+
+bfd_backends="$tb"
+bfd_machines="$ta"
+
+if test x${all_targets} = xtrue ; then
+  bfd_backends="${bfd_backends}"' $(ALL_BACKENDS)'
+  bfd_machines="${bfd_machines}"' $(ALL_MACHINES)'
+  selvecs=
+  havevecs=
+  selarchs=
+  test -n "$assocvecs" &&
+    assocvecs=`echo $assocvecs | sed -e 's/^/\&/' -e 's/ \(.\)/,\&\1/g'`
+else	# all_targets is true
+  # Only set these if they will be nonempty, for the clever echo.
+  havevecs=
+  assocvecs=
+  test -n "$selvecs" &&
+    havevecs=`echo $selvecs | sed -e 's/^/-DHAVE_/' -e 's/ \(.\)/ -DHAVE_\1/g'`
+  test -n "$selvecs" &&
+    selvecs=`echo $selvecs | sed -e 's/^/\&/' -e 's/ \(.\)/,\&\1/g'`
+  test -n "$selarchs" &&
+    selarchs=`echo $selarchs | sed -e 's/^/\&/' -e 's/ \(.\)/,\&\1/g'`
+fi	# all_targets is true
+
+case ${host64}-${target64}-${want64} in
+  *true*)
+    wordsize=64
+    bfd64_libs='$(BFD64_LIBS)'
+    all_backends='$(BFD64_BACKENDS) $(BFD32_BACKENDS)'
+    if test $BFD_HOST_64_BIT_DEFINED = 0; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: You have requested a 64 bit BFD configuration, but" >&5
+$as_echo "$as_me: WARNING: You have requested a 64 bit BFD configuration, but" >&2;}
+      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: your compiler may not have a 64 bit integral type" >&5
+$as_echo "$as_me: WARNING: your compiler may not have a 64 bit integral type" >&2;}
+    fi
+    if test -n "$GCC" ; then
+       bad_64bit_gcc=no;
+       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for gcc version with buggy 64-bit support" >&5
+$as_echo_n "checking for gcc version with buggy 64-bit support... " >&6; }
+       # Add more tests for gcc versions with non-working 64-bit support here.
+       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+:__GNUC__:__GNUC_MINOR__:__i386__:
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP ": 2 : 91 : 1 :" >/dev/null 2>&1; then :
+  bad_64bit_gcc=yes;
+		    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes: egcs-1.1.2 on ix86 spotted" >&5
+$as_echo "yes: egcs-1.1.2 on ix86 spotted" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f conftest*
+
+       if test $bad_64bit_gcc = yes ; then
+	 as_fn_error "A newer version of gcc is needed for the requested 64-bit BFD configuration" "$LINENO" 5
+       fi
+    fi
+    ;;
+  false-false-false)
+    wordsize=32
+    all_backends='$(BFD32_BACKENDS)'
+    ;;
+esac
+
+
+
+
+
+
+
+
+if test "$plugins" = "yes"; then
+  supports_plugins=1
+else
+  supports_plugins=0
+fi
+
+
+# Determine the host dependant file_ptr a.k.a. off_t type.  In order
+# prefer: off64_t - if ftello64 and fseeko64, off_t - if ftello and
+# fseeko, long.  This assumes that sizeof off_t is .ge. sizeof long.
+# Hopefully a reasonable assumption since fseeko et.al. should be
+# upward compatible.
+for ac_func in ftello ftello64 fseeko fseeko64 fopen64
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+eval as_val=\$$as_ac_var
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+done
+
+if test x"$ac_cv_func_ftello" = xyes -a x"$ac_cv_func_fseeko" = xyes; then
+    # The cast to long int works around a bug in the HP C Compiler
+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
+# This bug is HP SR number 8606223364.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of off_t" >&5
+$as_echo_n "checking size of off_t... " >&6; }
+if test "${ac_cv_sizeof_off_t+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (off_t))" "ac_cv_sizeof_off_t"        "$ac_includes_default"; then :
+  
+else
+  if test "$ac_cv_type_off_t" = yes; then
+     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "cannot compute sizeof (off_t)
+See \`config.log' for more details." "$LINENO" 5; }; }
+   else
+     ac_cv_sizeof_off_t=0
+   fi
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_off_t" >&5
+$as_echo "$ac_cv_sizeof_off_t" >&6; }
+
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define SIZEOF_OFF_T $ac_cv_sizeof_off_t
+_ACEOF
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking file_ptr type" >&5
+$as_echo_n "checking file_ptr type... " >&6; }
+bfd_file_ptr="long"
+bfd_ufile_ptr="unsigned long"
+if test x"$ac_cv_func_ftello64" = xyes -a x"$ac_cv_func_fseeko64" = xyes \
+	-o x"${ac_cv_sizeof_off_t}" = x8; then
+    bfd_file_ptr=BFD_HOST_64_BIT
+    bfd_ufile_ptr=BFD_HOST_U_64_BIT
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_file_ptr" >&5
+$as_echo "$bfd_file_ptr" >&6; }
+
+
+
+
+tdefaults=""
+test -n "${defvec}" && tdefaults="${tdefaults} -DDEFAULT_VECTOR=${defvec}"
+test -n "${selvecs}" && tdefaults="${tdefaults} -DSELECT_VECS='${selvecs}'"
+test -n "${assocvecs}" && tdefaults="${tdefaults} -DASSOCIATED_VECS='${assocvecs}'"
+test -n "${selarchs}" && tdefaults="${tdefaults} -DSELECT_ARCHITECTURES='${selarchs}'"
+test -n "${havevecs}" && tdefaults="${tdefaults} ${havevecs}"
+
+
+for ac_header in stdlib.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+for ac_func in getpagesize
+do :
+  ac_fn_c_check_func "$LINENO" "getpagesize" "ac_cv_func_getpagesize"
+if test "x$ac_cv_func_getpagesize" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_GETPAGESIZE 1
+_ACEOF
+ 
+fi
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for working mmap" >&5
+$as_echo_n "checking for working mmap... " >&6; }
+if test "${ac_cv_func_mmap_fixed_mapped+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "$cross_compiling" = yes; then :
+  ac_cv_func_mmap_fixed_mapped=no
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$ac_includes_default
+/* malloc might have been renamed as rpl_malloc. */
+#undef malloc
+
+/* Thanks to Mike Haertel and Jim Avera for this test.
+   Here is a matrix of mmap possibilities:
+	mmap private not fixed
+	mmap private fixed at somewhere currently unmapped
+	mmap private fixed at somewhere already mapped
+	mmap shared not fixed
+	mmap shared fixed at somewhere currently unmapped
+	mmap shared fixed at somewhere already mapped
+   For private mappings, we should verify that changes cannot be read()
+   back from the file, nor mmap's back from the file at a different
+   address.  (There have been systems where private was not correctly
+   implemented like the infamous i386 svr4.0, and systems where the
+   VM page cache was not coherent with the file system buffer cache
+   like early versions of FreeBSD and possibly contemporary NetBSD.)
+   For shared mappings, we should conversely verify that changes get
+   propagated back to all the places they're supposed to be.
+
+   Grep wants private fixed already mapped.
+   The main things grep needs to know about mmap are:
+   * does it exist and is it safe to write into the mmap'd area
+   * how to use it (BSD variants)  */
+
+#include <fcntl.h>
+#include <sys/mman.h>
+
+#if !defined STDC_HEADERS && !defined HAVE_STDLIB_H
+char *malloc ();
+#endif
+
+/* This mess was copied from the GNU getpagesize.h.  */
+#ifndef HAVE_GETPAGESIZE
+/* Assume that all systems that can run configure have sys/param.h.  */
+# ifndef HAVE_SYS_PARAM_H
+#  define HAVE_SYS_PARAM_H 1
+# endif
+
+# ifdef _SC_PAGESIZE
+#  define getpagesize() sysconf(_SC_PAGESIZE)
+# else /* no _SC_PAGESIZE */
+#  ifdef HAVE_SYS_PARAM_H
+#   include <sys/param.h>
+#   ifdef EXEC_PAGESIZE
+#    define getpagesize() EXEC_PAGESIZE
+#   else /* no EXEC_PAGESIZE */
+#    ifdef NBPG
+#     define getpagesize() NBPG * CLSIZE
+#     ifndef CLSIZE
+#      define CLSIZE 1
+#     endif /* no CLSIZE */
+#    else /* no NBPG */
+#     ifdef NBPC
+#      define getpagesize() NBPC
+#     else /* no NBPC */
+#      ifdef PAGESIZE
+#       define getpagesize() PAGESIZE
+#      endif /* PAGESIZE */
+#     endif /* no NBPC */
+#    endif /* no NBPG */
+#   endif /* no EXEC_PAGESIZE */
+#  else /* no HAVE_SYS_PARAM_H */
+#   define getpagesize() 8192	/* punt totally */
+#  endif /* no HAVE_SYS_PARAM_H */
+# endif /* no _SC_PAGESIZE */
+
+#endif /* no HAVE_GETPAGESIZE */
+
+int
+main ()
+{
+  char *data, *data2, *data3;
+  int i, pagesize;
+  int fd;
+
+  pagesize = getpagesize ();
+
+  /* First, make a file with some known garbage in it. */
+  data = (char *) malloc (pagesize);
+  if (!data)
+    return 1;
+  for (i = 0; i < pagesize; ++i)
+    *(data + i) = rand ();
+  umask (0);
+  fd = creat ("conftest.mmap", 0600);
+  if (fd < 0)
+    return 1;
+  if (write (fd, data, pagesize) != pagesize)
+    return 1;
+  close (fd);
+
+  /* Next, try to mmap the file at a fixed address which already has
+     something else allocated at it.  If we can, also make sure that
+     we see the same garbage.  */
+  fd = open ("conftest.mmap", O_RDWR);
+  if (fd < 0)
+    return 1;
+  data2 = (char *) malloc (2 * pagesize);
+  if (!data2)
+    return 1;
+  data2 += (pagesize - ((long int) data2 & (pagesize - 1))) & (pagesize - 1);
+  if (data2 != mmap (data2, pagesize, PROT_READ | PROT_WRITE,
+		     MAP_PRIVATE | MAP_FIXED, fd, 0L))
+    return 1;
+  for (i = 0; i < pagesize; ++i)
+    if (*(data + i) != *(data2 + i))
+      return 1;
+
+  /* Finally, make sure that changes to the mapped area do not
+     percolate back to the file as seen by read().  (This is a bug on
+     some variants of i386 svr4.0.)  */
+  for (i = 0; i < pagesize; ++i)
+    *(data2 + i) = *(data2 + i) + 1;
+  data3 = (char *) malloc (pagesize);
+  if (!data3)
+    return 1;
+  if (read (fd, data3, pagesize) != pagesize)
+    return 1;
+  for (i = 0; i < pagesize; ++i)
+    if (*(data + i) != *(data3 + i))
+      return 1;
+  close (fd);
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+  ac_cv_func_mmap_fixed_mapped=yes
+else
+  ac_cv_func_mmap_fixed_mapped=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_mmap_fixed_mapped" >&5
+$as_echo "$ac_cv_func_mmap_fixed_mapped" >&6; }
+if test $ac_cv_func_mmap_fixed_mapped = yes; then
+  
+$as_echo "@%:@define HAVE_MMAP 1" >>confdefs.h
+
+fi
+rm -f conftest.mmap
+
+for ac_func in madvise mprotect
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+eval as_val=\$$as_ac_var
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+done
+
+case ${want_mmap}+${ac_cv_func_mmap_fixed_mapped} in
+  true+yes )  
+$as_echo "@%:@define USE_MMAP 1" >>confdefs.h
+ ;;
+esac
+
+rm -f doc/config.status
+ac_config_files="$ac_config_files Makefile doc/Makefile bfd-in3.h:bfd-in2.h po/Makefile.in:po/Make-in"
+
+
+ac_config_commands="$ac_config_commands default"
+
+
+
+
+
+
+
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, we kill variables containing newlines.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+
+  (set) 2>&1 |
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      # `set' does not quote correctly, so add quotes: double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \.
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;; #(
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+) |
+  sed '
+     /^ac_cv_env_/b end
+     t clear
+     :clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     :end' >>confcache
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
+$as_echo "$as_me: updating cache $cache_file" >&6;}
+    cat confcache >$cache_file
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
+$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+DEFS=-DHAVE_CONFIG_H
+
+ac_libobjs=
+ac_ltlibobjs=
+for ac_i in : $LIB@&t@OBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
+done
+LIB@&t@OBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
+  as_fn_error "conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  as_fn_error "conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+ if test -n "$EXEEXT"; then
+  am__EXEEXT_TRUE=
+  am__EXEEXT_FALSE='#'
+else
+  am__EXEEXT_TRUE='#'
+  am__EXEEXT_FALSE=
+fi
+
+if test -z "${PLUGINS_TRUE}" && test -z "${PLUGINS_FALSE}"; then
+  as_fn_error "conditional \"PLUGINS\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
+  as_fn_error "conditional \"MAINTAINER_MODE\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${GENINSRC_NEVER_TRUE}" && test -z "${GENINSRC_NEVER_FALSE}"; then
+  as_fn_error "conditional \"GENINSRC_NEVER\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${INSTALL_LIBBFD_TRUE}" && test -z "${INSTALL_LIBBFD_FALSE}"; then
+  as_fn_error "conditional \"INSTALL_LIBBFD\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+
+: ${CONFIG_STATUS=./config.status}
+ac_write_fail=0
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
+$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
+as_write_fail=0
+cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+
+SHELL=\${CONFIG_SHELL-$SHELL}
+export SHELL
+_ASEOF
+cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+## ----------------------------------- ##
+## Main body of $CONFIG_STATUS script. ##
+## ----------------------------------- ##
+_ASEOF
+test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# Save the log message, to keep $0 and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+_ACEOF
+
+case $ac_config_files in *"
+"*) set x $ac_config_files; shift; ac_config_files=$*;;
+esac
+
+case $ac_config_headers in *"
+"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
+esac
+
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+# Files that config.status was made for.
+config_files="$ac_config_files"
+config_headers="$ac_config_headers"
+config_commands="$ac_config_commands"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+ac_cs_usage="\
+\`$as_me' instantiates files and other configuration actions
+from templates according to the current configuration.  Unless the files
+and actions are specified as TAGs, all are instantiated by default.
+
+Usage: $0 [OPTION]... [TAG]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet, --silent
+                   do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE] 
+                   instantiate the configuration file FILE
+      --header=FILE[:TEMPLATE] 
+                   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to the package provider."
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_cs_version="\\
+config.status
+configured by $0, generated by GNU Autoconf 2.64,
+  with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
+INSTALL='$INSTALL'
+MKDIR_P='$MKDIR_P'
+AWK='$AWK'
+test -n "\$AWK" || AWK=awk
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# The default lists apply if the user does not specify any file.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    $as_echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_FILES " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    as_fn_error "ambiguous option: \`$1'
+Try \`$0 --help' for more information.";;
+  --help | --hel | -h )
+    $as_echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) as_fn_error "unrecognized option: \`$1'
+Try \`$0 --help' for more information." ;;
+
+  *) as_fn_append ac_config_targets " $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+if \$ac_cs_recheck; then
+  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+  shift
+  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
+  CONFIG_SHELL='$SHELL'
+  export CONFIG_SHELL
+  exec "\$@"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
+@%:@@%:@ Running $as_me. @%:@@%:@
+_ASBOX
+  $as_echo "$ac_log"
+} >&5
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+#
+# INIT-COMMANDS
+#
+AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+sed_quote_subst='$sed_quote_subst'
+double_quote_subst='$double_quote_subst'
+delay_variable_subst='$delay_variable_subst'
+enable_shared='`$ECHO "X$enable_shared" | $Xsed -e "$delay_single_quote_subst"`'
+macro_version='`$ECHO "X$macro_version" | $Xsed -e "$delay_single_quote_subst"`'
+macro_revision='`$ECHO "X$macro_revision" | $Xsed -e "$delay_single_quote_subst"`'
+enable_static='`$ECHO "X$enable_static" | $Xsed -e "$delay_single_quote_subst"`'
+pic_mode='`$ECHO "X$pic_mode" | $Xsed -e "$delay_single_quote_subst"`'
+enable_fast_install='`$ECHO "X$enable_fast_install" | $Xsed -e "$delay_single_quote_subst"`'
+host_alias='`$ECHO "X$host_alias" | $Xsed -e "$delay_single_quote_subst"`'
+host='`$ECHO "X$host" | $Xsed -e "$delay_single_quote_subst"`'
+host_os='`$ECHO "X$host_os" | $Xsed -e "$delay_single_quote_subst"`'
+build_alias='`$ECHO "X$build_alias" | $Xsed -e "$delay_single_quote_subst"`'
+build='`$ECHO "X$build" | $Xsed -e "$delay_single_quote_subst"`'
+build_os='`$ECHO "X$build_os" | $Xsed -e "$delay_single_quote_subst"`'
+SED='`$ECHO "X$SED" | $Xsed -e "$delay_single_quote_subst"`'
+Xsed='`$ECHO "X$Xsed" | $Xsed -e "$delay_single_quote_subst"`'
+GREP='`$ECHO "X$GREP" | $Xsed -e "$delay_single_quote_subst"`'
+EGREP='`$ECHO "X$EGREP" | $Xsed -e "$delay_single_quote_subst"`'
+FGREP='`$ECHO "X$FGREP" | $Xsed -e "$delay_single_quote_subst"`'
+LD='`$ECHO "X$LD" | $Xsed -e "$delay_single_quote_subst"`'
+NM='`$ECHO "X$NM" | $Xsed -e "$delay_single_quote_subst"`'
+LN_S='`$ECHO "X$LN_S" | $Xsed -e "$delay_single_quote_subst"`'
+max_cmd_len='`$ECHO "X$max_cmd_len" | $Xsed -e "$delay_single_quote_subst"`'
+ac_objext='`$ECHO "X$ac_objext" | $Xsed -e "$delay_single_quote_subst"`'
+exeext='`$ECHO "X$exeext" | $Xsed -e "$delay_single_quote_subst"`'
+lt_unset='`$ECHO "X$lt_unset" | $Xsed -e "$delay_single_quote_subst"`'
+lt_SP2NL='`$ECHO "X$lt_SP2NL" | $Xsed -e "$delay_single_quote_subst"`'
+lt_NL2SP='`$ECHO "X$lt_NL2SP" | $Xsed -e "$delay_single_quote_subst"`'
+reload_flag='`$ECHO "X$reload_flag" | $Xsed -e "$delay_single_quote_subst"`'
+reload_cmds='`$ECHO "X$reload_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+OBJDUMP='`$ECHO "X$OBJDUMP" | $Xsed -e "$delay_single_quote_subst"`'
+deplibs_check_method='`$ECHO "X$deplibs_check_method" | $Xsed -e "$delay_single_quote_subst"`'
+file_magic_cmd='`$ECHO "X$file_magic_cmd" | $Xsed -e "$delay_single_quote_subst"`'
+AR='`$ECHO "X$AR" | $Xsed -e "$delay_single_quote_subst"`'
+AR_FLAGS='`$ECHO "X$AR_FLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+STRIP='`$ECHO "X$STRIP" | $Xsed -e "$delay_single_quote_subst"`'
+RANLIB='`$ECHO "X$RANLIB" | $Xsed -e "$delay_single_quote_subst"`'
+old_postinstall_cmds='`$ECHO "X$old_postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_postuninstall_cmds='`$ECHO "X$old_postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_cmds='`$ECHO "X$old_archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+CC='`$ECHO "X$CC" | $Xsed -e "$delay_single_quote_subst"`'
+CFLAGS='`$ECHO "X$CFLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+compiler='`$ECHO "X$compiler" | $Xsed -e "$delay_single_quote_subst"`'
+GCC='`$ECHO "X$GCC" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_pipe='`$ECHO "X$lt_cv_sys_global_symbol_pipe" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_cdecl='`$ECHO "X$lt_cv_sys_global_symbol_to_cdecl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+objdir='`$ECHO "X$objdir" | $Xsed -e "$delay_single_quote_subst"`'
+SHELL='`$ECHO "X$SHELL" | $Xsed -e "$delay_single_quote_subst"`'
+ECHO='`$ECHO "X$ECHO" | $Xsed -e "$delay_single_quote_subst"`'
+MAGIC_CMD='`$ECHO "X$MAGIC_CMD" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_no_builtin_flag='`$ECHO "X$lt_prog_compiler_no_builtin_flag" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_wl='`$ECHO "X$lt_prog_compiler_wl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_pic='`$ECHO "X$lt_prog_compiler_pic" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_static='`$ECHO "X$lt_prog_compiler_static" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_prog_compiler_c_o='`$ECHO "X$lt_cv_prog_compiler_c_o" | $Xsed -e "$delay_single_quote_subst"`'
+need_locks='`$ECHO "X$need_locks" | $Xsed -e "$delay_single_quote_subst"`'
+DSYMUTIL='`$ECHO "X$DSYMUTIL" | $Xsed -e "$delay_single_quote_subst"`'
+NMEDIT='`$ECHO "X$NMEDIT" | $Xsed -e "$delay_single_quote_subst"`'
+LIPO='`$ECHO "X$LIPO" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL='`$ECHO "X$OTOOL" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL64='`$ECHO "X$OTOOL64" | $Xsed -e "$delay_single_quote_subst"`'
+libext='`$ECHO "X$libext" | $Xsed -e "$delay_single_quote_subst"`'
+shrext_cmds='`$ECHO "X$shrext_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+extract_expsyms_cmds='`$ECHO "X$extract_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds_need_lc='`$ECHO "X$archive_cmds_need_lc" | $Xsed -e "$delay_single_quote_subst"`'
+enable_shared_with_static_runtimes='`$ECHO "X$enable_shared_with_static_runtimes" | $Xsed -e "$delay_single_quote_subst"`'
+export_dynamic_flag_spec='`$ECHO "X$export_dynamic_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+whole_archive_flag_spec='`$ECHO "X$whole_archive_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+compiler_needs_object='`$ECHO "X$compiler_needs_object" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_new_cmds='`$ECHO "X$old_archive_from_new_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_expsyms_cmds='`$ECHO "X$old_archive_from_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds='`$ECHO "X$archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_expsym_cmds='`$ECHO "X$archive_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_cmds='`$ECHO "X$module_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_expsym_cmds='`$ECHO "X$module_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+with_gnu_ld='`$ECHO "X$with_gnu_ld" | $Xsed -e "$delay_single_quote_subst"`'
+allow_undefined_flag='`$ECHO "X$allow_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+no_undefined_flag='`$ECHO "X$no_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec='`$ECHO "X$hardcode_libdir_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec_ld='`$ECHO "X$hardcode_libdir_flag_spec_ld" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_separator='`$ECHO "X$hardcode_libdir_separator" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct='`$ECHO "X$hardcode_direct" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct_absolute='`$ECHO "X$hardcode_direct_absolute" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_minus_L='`$ECHO "X$hardcode_minus_L" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_shlibpath_var='`$ECHO "X$hardcode_shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_automatic='`$ECHO "X$hardcode_automatic" | $Xsed -e "$delay_single_quote_subst"`'
+inherit_rpath='`$ECHO "X$inherit_rpath" | $Xsed -e "$delay_single_quote_subst"`'
+link_all_deplibs='`$ECHO "X$link_all_deplibs" | $Xsed -e "$delay_single_quote_subst"`'
+fix_srcfile_path='`$ECHO "X$fix_srcfile_path" | $Xsed -e "$delay_single_quote_subst"`'
+always_export_symbols='`$ECHO "X$always_export_symbols" | $Xsed -e "$delay_single_quote_subst"`'
+export_symbols_cmds='`$ECHO "X$export_symbols_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+exclude_expsyms='`$ECHO "X$exclude_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+include_expsyms='`$ECHO "X$include_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+prelink_cmds='`$ECHO "X$prelink_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+file_list_spec='`$ECHO "X$file_list_spec" | $Xsed -e "$delay_single_quote_subst"`'
+variables_saved_for_relink='`$ECHO "X$variables_saved_for_relink" | $Xsed -e "$delay_single_quote_subst"`'
+need_lib_prefix='`$ECHO "X$need_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+need_version='`$ECHO "X$need_version" | $Xsed -e "$delay_single_quote_subst"`'
+version_type='`$ECHO "X$version_type" | $Xsed -e "$delay_single_quote_subst"`'
+runpath_var='`$ECHO "X$runpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_var='`$ECHO "X$shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_overrides_runpath='`$ECHO "X$shlibpath_overrides_runpath" | $Xsed -e "$delay_single_quote_subst"`'
+libname_spec='`$ECHO "X$libname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+library_names_spec='`$ECHO "X$library_names_spec" | $Xsed -e "$delay_single_quote_subst"`'
+soname_spec='`$ECHO "X$soname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+postinstall_cmds='`$ECHO "X$postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+postuninstall_cmds='`$ECHO "X$postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_cmds='`$ECHO "X$finish_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_eval='`$ECHO "X$finish_eval" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_into_libs='`$ECHO "X$hardcode_into_libs" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_search_path_spec='`$ECHO "X$sys_lib_search_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_dlsearch_path_spec='`$ECHO "X$sys_lib_dlsearch_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_action='`$ECHO "X$hardcode_action" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen='`$ECHO "X$enable_dlopen" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self='`$ECHO "X$enable_dlopen_self" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self_static='`$ECHO "X$enable_dlopen_self_static" | $Xsed -e "$delay_single_quote_subst"`'
+old_striplib='`$ECHO "X$old_striplib" | $Xsed -e "$delay_single_quote_subst"`'
+striplib='`$ECHO "X$striplib" | $Xsed -e "$delay_single_quote_subst"`'
+
+LTCC='$LTCC'
+LTCFLAGS='$LTCFLAGS'
+compiler='$compiler_DEFAULT'
+
+# Quote evaled strings.
+for var in SED \
+GREP \
+EGREP \
+FGREP \
+LD \
+NM \
+LN_S \
+lt_SP2NL \
+lt_NL2SP \
+reload_flag \
+OBJDUMP \
+deplibs_check_method \
+file_magic_cmd \
+AR \
+AR_FLAGS \
+STRIP \
+RANLIB \
+CC \
+CFLAGS \
+compiler \
+lt_cv_sys_global_symbol_pipe \
+lt_cv_sys_global_symbol_to_cdecl \
+lt_cv_sys_global_symbol_to_c_name_address \
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix \
+SHELL \
+ECHO \
+lt_prog_compiler_no_builtin_flag \
+lt_prog_compiler_wl \
+lt_prog_compiler_pic \
+lt_prog_compiler_static \
+lt_cv_prog_compiler_c_o \
+need_locks \
+DSYMUTIL \
+NMEDIT \
+LIPO \
+OTOOL \
+OTOOL64 \
+shrext_cmds \
+export_dynamic_flag_spec \
+whole_archive_flag_spec \
+compiler_needs_object \
+with_gnu_ld \
+allow_undefined_flag \
+no_undefined_flag \
+hardcode_libdir_flag_spec \
+hardcode_libdir_flag_spec_ld \
+hardcode_libdir_separator \
+fix_srcfile_path \
+exclude_expsyms \
+include_expsyms \
+file_list_spec \
+variables_saved_for_relink \
+libname_spec \
+library_names_spec \
+soname_spec \
+finish_eval \
+old_striplib \
+striplib; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Double-quote double-evaled strings.
+for var in reload_cmds \
+old_postinstall_cmds \
+old_postuninstall_cmds \
+old_archive_cmds \
+extract_expsyms_cmds \
+old_archive_from_new_cmds \
+old_archive_from_expsyms_cmds \
+archive_cmds \
+archive_expsym_cmds \
+module_cmds \
+module_expsym_cmds \
+export_symbols_cmds \
+prelink_cmds \
+postinstall_cmds \
+postuninstall_cmds \
+finish_cmds \
+sys_lib_search_path_spec \
+sys_lib_dlsearch_path_spec; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Fix-up fallback echo if it was mangled by the above quoting rules.
+case \$lt_ECHO in
+*'\\\$0 --fallback-echo"')  lt_ECHO=\`\$ECHO "X\$lt_ECHO" | \$Xsed -e 's/\\\\\\\\\\\\\\\$0 --fallback-echo"\$/\$0 --fallback-echo"/'\`
+  ;;
+esac
+
+ac_aux_dir='$ac_aux_dir'
+xsi_shell='$xsi_shell'
+lt_shell_append='$lt_shell_append'
+
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes INIT.
+if test -n "\${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+
+    PACKAGE='$PACKAGE'
+    VERSION='$VERSION'
+    TIMESTAMP='$TIMESTAMP'
+    RM='$RM'
+    ofile='$ofile'
+
+
+
+# Capture the value of obsolete ALL_LINGUAS because we need it to compute
+    # POFILES, GMOFILES, UPDATEPOFILES, DUMMYPOFILES, CATALOGS. But hide it
+    # from automake.
+    eval 'OBSOLETE_ALL_LINGUAS''="$ALL_LINGUAS"'
+    # Capture the value of LINGUAS because we need it to compute CATALOGS.
+    LINGUAS="${LINGUAS-%UNSET%}"
+   
+
+GCC="$GCC"
+CC="$CC"
+acx_cv_header_stdint="$acx_cv_header_stdint"
+acx_cv_type_int8_t="$acx_cv_type_int8_t"
+acx_cv_type_int16_t="$acx_cv_type_int16_t"
+acx_cv_type_int32_t="$acx_cv_type_int32_t"
+acx_cv_type_int64_t="$acx_cv_type_int64_t"
+acx_cv_type_intptr_t="$acx_cv_type_intptr_t"
+ac_cv_type_uintmax_t="$ac_cv_type_uintmax_t"
+ac_cv_type_uintptr_t="$ac_cv_type_uintptr_t"
+ac_cv_type_uint64_t="$ac_cv_type_uint64_t"
+ac_cv_type_u_int64_t="$ac_cv_type_u_int64_t"
+ac_cv_type_u_int32_t="$ac_cv_type_u_int32_t"
+ac_cv_type_int_least32_t="$ac_cv_type_int_least32_t"
+ac_cv_type_int_fast32_t="$ac_cv_type_int_fast32_t"
+ac_cv_sizeof_void_p="$ac_cv_sizeof_void_p"
+
+
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
+    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h:config.in" ;;
+    "default-1") CONFIG_COMMANDS="$CONFIG_COMMANDS default-1" ;;
+    "bfd_stdint.h") CONFIG_COMMANDS="$CONFIG_COMMANDS bfd_stdint.h" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
+    "bfd-in3.h") CONFIG_FILES="$CONFIG_FILES bfd-in3.h:bfd-in2.h" ;;
+    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in:po/Make-in" ;;
+    "default") CONFIG_COMMANDS="$CONFIG_COMMANDS default" ;;
+
+  *) as_fn_error "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap 'as_fn_exit 1' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} || as_fn_error "cannot create a temporary directory in ." "$LINENO" 5
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+
+ac_cr=`echo X | tr X '\015'`
+# On cygwin, bash can eat \r inside `` if the user requested igncr.
+# But we know of no other shell where ac_cr would be empty at this
+# point, so we can use a bashism as a fallback.
+if test "x$ac_cr" = x; then
+  eval ac_cr=\$\'\\r\'
+fi
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$tmp/subs1.awk" &&
+_ACEOF
+
+
+{
+  echo "cat >conf$$subs.awk <<_ACEOF" &&
+  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
+  echo "_ACEOF"
+} >conf$$subs.sh ||
+  as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+ac_delim_num=`echo "$ac_subst_vars" | grep -c '$'`
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  . ./conf$$subs.sh ||
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+
+  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
+  if test $ac_delim_n = $ac_delim_num; then
+    break
+  elif $ac_last_try; then
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+rm -f conf$$subs.sh
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&
+_ACEOF
+sed -n '
+h
+s/^/S["/; s/!.*/"]=/
+p
+g
+s/^[^!]*!//
+:repl
+t repl
+s/'"$ac_delim"'$//
+t delim
+:nl
+h
+s/\(.\{148\}\).*/\1/
+t more1
+s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
+p
+n
+b repl
+:more1
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t nl
+:delim
+h
+s/\(.\{148\}\).*/\1/
+t more2
+s/["\\]/\\&/g; s/^/"/; s/$/"/
+p
+b
+:more2
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t delim
+' <conf$$subs.awk | sed '
+/^[^""]/{
+  N
+  s/\n//
+}
+' >>$CONFIG_STATUS || ac_write_fail=1
+rm -f conf$$subs.awk
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACAWK
+cat >>"\$tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+
+  print line
+}
+
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
+  || as_fn_error "could not setup config files machinery" "$LINENO" 5
+_ACEOF
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+fi # test -n "$CONFIG_FILES"
+
+# Set up the scripts for CONFIG_HEADERS section.
+# No need to generate them if there are no CONFIG_HEADERS.
+# This happens for instance with `./config.status Makefile'.
+if test -n "$CONFIG_HEADERS"; then
+cat >"$tmp/defines.awk" <<\_ACAWK ||
+BEGIN {
+_ACEOF
+
+# Transform confdefs.h into an awk script `defines.awk', embedded as
+# here-document in config.status, that substitutes the proper values into
+# config.h.in to produce config.h.
+
+# Create a delimiter string that does not exist in confdefs.h, to ease
+# handling of long lines.
+ac_delim='%!_!# '
+for ac_last_try in false false :; do
+  ac_t=`sed -n "/$ac_delim/p" confdefs.h`
+  if test -z "$ac_t"; then
+    break
+  elif $ac_last_try; then
+    as_fn_error "could not make $CONFIG_HEADERS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+# For the awk script, D is an array of macro values keyed by name,
+# likewise P contains macro parameters if any.  Preserve backslash
+# newline sequences.
+
+ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
+sed -n '
+s/.\{148\}/&'"$ac_delim"'/g
+t rset
+:rset
+s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
+t def
+d
+:def
+s/\\$//
+t bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3"/p
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
+d
+:bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3\\\\\\n"\\/p
+t cont
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
+t cont
+d
+:cont
+n
+s/.\{148\}/&'"$ac_delim"'/g
+t clear
+:clear
+s/\\$//
+t bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/"/p
+d
+:bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
+b cont
+' <confdefs.h | sed '
+s/'"$ac_delim"'/"\\\
+"/g' >>$CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  for (key in D) D_is_set[key] = 1
+  FS = ""
+}
+/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
+  line = \$ 0
+  split(line, arg, " ")
+  if (arg[1] == "#") {
+    defundef = arg[2]
+    mac1 = arg[3]
+  } else {
+    defundef = substr(arg[1], 2)
+    mac1 = arg[2]
+  }
+  split(mac1, mac2, "(") #)
+  macro = mac2[1]
+  prefix = substr(line, 1, index(line, defundef) - 1)
+  if (D_is_set[macro]) {
+    # Preserve the white space surrounding the "#".
+    print prefix "define", macro P[macro] D[macro]
+    next
+  } else {
+    # Replace #undef with comments.  This is necessary, for example,
+    # in the case of _POSIX_SOURCE, which is predefined and required
+    # on some systems where configure will not decide to define it.
+    if (defundef == "undef") {
+      print "/*", prefix defundef, macro, "*/"
+      next
+    }
+  }
+}
+{ print }
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+  as_fn_error "could not setup config headers machinery" "$LINENO" 5
+fi # test -n "$CONFIG_HEADERS"
+
+
+eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) as_fn_error "invalid tag \`$ac_tag'" "$LINENO" 5;;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   as_fn_error "cannot find input file: \`$ac_f'" "$LINENO" 5;;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      as_fn_append ac_file_inputs " '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin" \
+      || as_fn_error "could not create $ac_file" "$LINENO" 5 ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  as_dir="$ac_dir"; as_fn_mkdir_p
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+  ac_MKDIR_P=$MKDIR_P
+  case $MKDIR_P in
+  [\\/$]* | ?:[\\/]* ) ;;
+  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
+  esac
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+  s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_sed_extra="$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+s&@MKDIR_P@&$ac_MKDIR_P&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out" && rm -f "$tmp/out";;
+  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
+  esac \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+  if test x"$ac_file" != x-; then
+    {
+      $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
+    } >"$tmp/config.h" \
+      || as_fn_error "could not create $ac_file" "$LINENO" 5
+    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
+$as_echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f "$ac_file"
+      mv "$tmp/config.h" "$ac_file" \
+	|| as_fn_error "could not create $ac_file" "$LINENO" 5
+    fi
+  else
+    $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
+      || as_fn_error "could not create -" "$LINENO" 5
+  fi
+# Compute "$ac_file"'s index in $config_headers.
+_am_arg="$ac_file"
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $_am_arg | $_am_arg:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
+$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$_am_arg" : 'X\(//\)[^/]' \| \
+	 X"$_am_arg" : 'X\(//\)$' \| \
+	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$_am_arg" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`/stamp-h$_am_stamp_count
+ ;;
+  
+  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
+$as_echo "$as_me: executing $ac_file commands" >&6;}
+ ;;
+  esac
+
+
+  case $ac_file$ac_mode in
+    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
+  # Autoconf 2.62 quotes --file arguments for eval, but not when files
+  # are listed without --file.  Let's play safe and only enable the eval
+  # if we detect the quoting.
+  case $CONFIG_FILES in
+  *\'*) eval set x "$CONFIG_FILES" ;;
+  *)   set x $CONFIG_FILES ;;
+  esac
+  shift
+  for mf
+  do
+    # Strip MF so we end up with the name of the file.
+    mf=`echo "$mf" | sed -e 's/:.*$//'`
+    # Check whether this is an Automake generated Makefile or not.
+    # We used to match only the files named `Makefile.in', but
+    # some people rename them; so instead we look at the file content.
+    # Grep'ing the first line is not enough: some people post-process
+    # each Makefile.in and add a new line on top of each file to say so.
+    # Grep'ing the whole file is not good either: AIX grep has a line
+    # limit of 2048, but all sed's we know have understand at least 4000.
+    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
+      dirpart=`$as_dirname -- "$mf" ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+    else
+      continue
+    fi
+    # Extract the definition of DEPDIR, am__include, and am__quote
+    # from the Makefile without running `make'.
+    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+    test -z "$DEPDIR" && continue
+    am__include=`sed -n 's/^am__include = //p' < "$mf"`
+    test -z "am__include" && continue
+    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+    # When using ansi2knr, U may be empty or an underscore; expand it
+    U=`sed -n 's/^U = //p' < "$mf"`
+    # Find all dependency output files, they are included files with
+    # $(DEPDIR) in their names.  We invoke sed twice because it is the
+    # simplest approach to changing $(DEPDIR) to its actual value in the
+    # expansion.
+    for file in `sed -n "
+      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+      # Make sure the directory exists.
+      test -f "$dirpart/$file" && continue
+      fdir=`$as_dirname -- "$file" ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      as_dir=$dirpart/$fdir; as_fn_mkdir_p
+      # echo "creating $dirpart/$file"
+      echo '# dummy' > "$dirpart/$file"
+    done
+  done
+}
+ ;;
+    "libtool":C) 
+    
+    # See if we are running on zsh, and set the options which allow our
+    # commands through without removal of \ escapes.
+    if test -n "${ZSH_VERSION+set}" ; then
+      setopt NO_GLOB_SUBST
+    fi
+
+    cfgfile="${ofile}T"
+    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
+    $RM "$cfgfile"
+
+    cat <<_LT_EOF >> "$cfgfile"
+#! $SHELL
+
+# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
+#                 2006, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gordon Matzigkeit, 1996
+#
+#   This file is part of GNU Libtool.
+#
+# GNU Libtool is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# As a special exception to the GNU General Public License,
+# if you distribute this file as part of a program or library that
+# is built using GNU Libtool, you may include this file under the
+# same distribution terms that you use for the rest of that program.
+#
+# GNU Libtool is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Libtool; see the file COPYING.  If not, a copy
+# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
+# obtained by writing to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+
+# The names of the tagged configurations supported by this script.
+available_tags=""
+
+# ### BEGIN LIBTOOL CONFIG
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Which release of libtool.m4 was used?
+macro_version=$macro_version
+macro_revision=$macro_revision
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# What type of objects to build.
+pic_mode=$pic_mode
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# A sed program that does not truncate output.
+SED=$lt_SED
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="\$SED -e 1s/^X//"
+
+# A grep program that handles long lines.
+GREP=$lt_GREP
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# A literal string matcher.
+FGREP=$lt_FGREP
+
+# A BSD- or MS-compatible name lister.
+NM=$lt_NM
+
+# Whether we need soft or hard links.
+LN_S=$lt_LN_S
+
+# What is the maximum length of a command?
+max_cmd_len=$max_cmd_len
+
+# Object file suffix (normally "o").
+objext=$ac_objext
+
+# Executable file suffix (normally "").
+exeext=$exeext
+
+# whether the shell understands "unset".
+lt_unset=$lt_unset
+
+# turn spaces into newlines.
+SP2NL=$lt_lt_SP2NL
+
+# turn newlines into spaces.
+NL2SP=$lt_lt_NL2SP
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# An object symbol dumper.
+OBJDUMP=$lt_OBJDUMP
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == "file_magic".
+file_magic_cmd=$lt_file_magic_cmd
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A symbol stripping program.
+STRIP=$lt_STRIP
+
+# Commands used to install an old-style archive.
+RANLIB=$lt_RANLIB
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# A C compiler.
+LTCC=$lt_CC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_CFLAGS
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration.
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair.
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# Transform the output of nm in a C name address pair when lib prefix is needed.
+global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# An echo program that does not interpret backslashes.
+ECHO=$lt_ECHO
+
+# Used to examine libraries when file_magic_cmd begins with "file".
+MAGIC_CMD=$MAGIC_CMD
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
+DSYMUTIL=$lt_DSYMUTIL
+
+# Tool to change global to local symbols on Mac OS X.
+NMEDIT=$lt_NMEDIT
+
+# Tool to manipulate fat objects and archives on Mac OS X.
+LIPO=$lt_LIPO
+
+# ldd/readelf like tool for Mach-O binaries on Mac OS X.
+OTOOL=$lt_OTOOL
+
+# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
+OTOOL64=$lt_OTOOL64
+
+# Old archive suffix (normally "a").
+libext=$libext
+
+# Shared library suffix (normally ".so").
+shrext_cmds=$lt_shrext_cmds
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at link time.
+variables_saved_for_relink=$lt_variables_saved_for_relink
+
+# Do we need the "lib" prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Library versioning type.
+version_type=$version_type
+
+# Shared library runtime path variable.
+runpath_var=$runpath_var
+
+# Shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Command to use after installation of a shared archive.
+postinstall_cmds=$lt_postinstall_cmds
+
+# Command to use after uninstallation of a shared archive.
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# As "finish_cmds", except a single script fragment to be evaled but
+# not shown.
+finish_eval=$lt_finish_eval
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Compile-time system search path for libraries.
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries.
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+
+# The linker used to build libraries.
+LD=$lt_LD
+
+# Commands used to build an old-style archive.
+old_archive_cmds=$lt_old_archive_cmds
+
+# A language specific compiler.
+CC=$lt_compiler
+
+# Is the compiler the GNU compiler?
+with_gcc=$GCC
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc
+
+# Whether or not to disallow shared libs when runtime libs are static.
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec
+
+# Whether the compiler copes with passing no objects directly.
+compiler_needs_object=$lt_compiler_needs_object
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds
+
+# Commands used to build a shared archive.
+archive_cmds=$lt_archive_cmds
+archive_expsym_cmds=$lt_archive_expsym_cmds
+
+# Commands used to build a loadable module if different from building
+# a shared archive.
+module_cmds=$lt_module_cmds
+module_expsym_cmds=$lt_module_expsym_cmds
+
+# Whether we are building with GNU ld or not.
+with_gnu_ld=$lt_with_gnu_ld
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag
+
+# Flag that enforces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
+
+# If ld is used when linking, flag to hardcode \$libdir into a binary
+# during linking.  This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld
+
+# Whether we need a single "-rpath" flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary.
+hardcode_direct=$hardcode_direct
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary and the resulting library dependency is
+# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
+# library is relocated.
+hardcode_direct_absolute=$hardcode_direct_absolute
+
+# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
+# into the resulting binary.
+hardcode_minus_L=$hardcode_minus_L
+
+# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
+# into the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var
+
+# Set to "yes" if building a shared library automatically hardcodes DIR
+# into the library and all subsequent libraries and executables linked
+# against it.
+hardcode_automatic=$hardcode_automatic
+
+# Set to yes if linker adds runtime paths of dependent libraries
+# to runtime path list.
+inherit_rpath=$inherit_rpath
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path=$lt_fix_srcfile_path
+
+# Set to "yes" if exported symbols are required.
+always_export_symbols=$always_export_symbols
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms
+
+# Commands necessary for linking programs (against libraries) with templates.
+prelink_cmds=$lt_prelink_cmds
+
+# Specify filename containing input files.
+file_list_spec=$lt_file_list_spec
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action
+
+# ### END LIBTOOL CONFIG
+
+_LT_EOF
+
+  case $host_os in
+  aix3*)
+    cat <<\_LT_EOF >> "$cfgfile"
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+_LT_EOF
+    ;;
+  esac
+
+  
+ltmain="$ac_aux_dir/ltmain.sh"
+
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  case $xsi_shell in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result="${1##*/}"
+}
+
+# func_dirname_and_basename file append nondir_replacement
+# perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# Implementation must be kept synchronized with func_dirname
+# and func_basename. For efficiency, we do not delegate to
+# those functions but instead duplicate the functionality here.
+func_dirname_and_basename ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+  func_basename_result="${1##*/}"
+}
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+func_stripname ()
+{
+  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
+  # positional parameters, so assign one to ordinary parameter first.
+  func_stripname_result=${3}
+  func_stripname_result=${func_stripname_result#"${1}"}
+  func_stripname_result=${func_stripname_result%"${2}"}
+}
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=${1%%=*}
+  func_opt_split_arg=${1#*=}
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  case ${1} in
+    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
+    *)    func_lo2o_result=${1} ;;
+  esac
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=${1%.*}.lo
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=$(( $* ))
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=${#1}
+}
+
+_LT_EOF
+    ;;
+  *) # Bourne compatible functions.
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  # Extract subdirectory from the argument.
+  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
+  if test "X$func_dirname_result" = "X${1}"; then
+    func_dirname_result="${3}"
+  else
+    func_dirname_result="$func_dirname_result${2}"
+  fi
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
+}
+
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+# func_strip_suffix prefix name
+func_stripname ()
+{
+  case ${2} in
+    .*) func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
+    *)  func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
+  esac
+}
+
+# sed scripts:
+my_sed_long_opt='1s/^\(-[^=]*\)=.*/\1/;q'
+my_sed_long_arg='1s/^-[^=]*=//'
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
+  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[^.]*$/.lo/'`
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=`expr "$@"`
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
+}
+
+_LT_EOF
+esac
+
+case $lt_shell_append in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1+=\$2"
+}
+_LT_EOF
+    ;;
+  *)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1=\$$1\$2"
+}
+
+_LT_EOF
+    ;;
+  esac
+
+
+  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" ||
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+
+ ;;
+    "default-1":C) 
+    for ac_file in $CONFIG_FILES; do
+      # Support "outfile[:infile[:infile...]]"
+      case "$ac_file" in
+        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
+      esac
+      # PO directories have a Makefile.in generated from Makefile.in.in.
+      case "$ac_file" in */Makefile.in)
+        # Adjust a relative srcdir.
+        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
+        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
+        # In autoconf-2.13 it is called $ac_given_srcdir.
+        # In autoconf-2.50 it is called $srcdir.
+        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
+        case "$ac_given_srcdir" in
+          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
+          /*) top_srcdir="$ac_given_srcdir" ;;
+          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
+        esac
+        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
+          rm -f "$ac_dir/POTFILES"
+          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
+          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
+          POMAKEFILEDEPS="POTFILES.in"
+          # ALL_LINGUAS, POFILES, GMOFILES, UPDATEPOFILES, DUMMYPOFILES depend
+          # on $ac_dir but don't depend on user-specified configuration
+          # parameters.
+          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
+            # The LINGUAS file contains the set of available languages.
+            if test -n "$OBSOLETE_ALL_LINGUAS"; then
+              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
+            fi
+            ALL_LINGUAS_=`sed -e "/^#/d" "$ac_given_srcdir/$ac_dir/LINGUAS"`
+            # Hide the ALL_LINGUAS assigment from automake.
+            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
+            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
+          else
+            # The set of available languages was given in configure.in.
+            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
+          fi
+          case "$ac_given_srcdir" in
+            .) srcdirpre= ;;
+            *) srcdirpre='$(srcdir)/' ;;
+          esac
+          POFILES=
+          GMOFILES=
+          UPDATEPOFILES=
+          DUMMYPOFILES=
+          for lang in $ALL_LINGUAS; do
+            POFILES="$POFILES $srcdirpre$lang.po"
+            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
+            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
+            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
+          done
+          # CATALOGS depends on both $ac_dir and the user's LINGUAS
+          # environment variable.
+          INST_LINGUAS=
+          if test -n "$ALL_LINGUAS"; then
+            for presentlang in $ALL_LINGUAS; do
+              useit=no
+              if test "%UNSET%" != "$LINGUAS"; then
+                desiredlanguages="$LINGUAS"
+              else
+                desiredlanguages="$ALL_LINGUAS"
+              fi
+              for desiredlang in $desiredlanguages; do
+                # Use the presentlang catalog if desiredlang is
+                #   a. equal to presentlang, or
+                #   b. a variant of presentlang (because in this case,
+                #      presentlang can be used as a fallback for messages
+                #      which are not translated in the desiredlang catalog).
+                case "$desiredlang" in
+                  "$presentlang"*) useit=yes;;
+                esac
+              done
+              if test $useit = yes; then
+                INST_LINGUAS="$INST_LINGUAS $presentlang"
+              fi
+            done
+          fi
+          CATALOGS=
+          if test -n "$INST_LINGUAS"; then
+            for lang in $INST_LINGUAS; do
+              CATALOGS="$CATALOGS $lang.gmo"
+            done
+          fi
+          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
+          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
+          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
+            if test -f "$f"; then
+              case "$f" in
+                *.orig | *.bak | *~) ;;
+                *) cat "$f" >> "$ac_dir/Makefile" ;;
+              esac
+            fi
+          done
+        fi
+        ;;
+      esac
+    done ;;
+    "bfd_stdint.h":C) 
+if test "$GCC" = yes; then
+  echo "/* generated for " `$CC --version | sed 1q` "*/" > tmp-stdint.h
+else
+  echo "/* generated for $CC */" > tmp-stdint.h
+fi
+
+sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+  #ifndef GCC_GENERATED_STDINT_H
+  #define GCC_GENERATED_STDINT_H 1
+
+  #include <sys/types.h>
+EOF
+
+if test "$acx_cv_header_stdint" != stdint.h; then
+  echo "#include <stddef.h>" >> tmp-stdint.h
+fi
+if test "$acx_cv_header_stdint" != stddef.h; then
+  echo "#include <$acx_cv_header_stdint>" >> tmp-stdint.h
+fi
+
+sed 's/^ *//' >> tmp-stdint.h <<EOF
+  /* glibc uses these symbols as guards to prevent redefinitions.  */
+  #ifdef __int8_t_defined
+  #define _INT8_T
+  #define _INT16_T
+  #define _INT32_T
+  #endif
+  #ifdef __uint32_t_defined
+  #define _UINT32_T
+  #endif
+
+EOF
+
+# ----------------- done header, emit basic int types -------------
+if test "$acx_cv_header_stdint" = stddef.h; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    #ifndef _UINT8_T
+    #define _UINT8_T
+    #ifndef __uint8_t_defined
+    #define __uint8_t_defined
+    typedef unsigned $acx_cv_type_int8_t uint8_t;
+    #endif
+    #endif
+
+    #ifndef _UINT16_T
+    #define _UINT16_T
+    #ifndef __uint16_t_defined
+    #define __uint16_t_defined
+    typedef unsigned $acx_cv_type_int16_t uint16_t;
+    #endif
+    #endif
+
+    #ifndef _UINT32_T
+    #define _UINT32_T
+    #ifndef __uint32_t_defined
+    #define __uint32_t_defined
+    typedef unsigned $acx_cv_type_int32_t uint32_t;
+    #endif
+    #endif
+
+    #ifndef _INT8_T
+    #define _INT8_T
+    #ifndef __int8_t_defined
+    #define __int8_t_defined
+    typedef $acx_cv_type_int8_t int8_t;
+    #endif
+    #endif
+
+    #ifndef _INT16_T
+    #define _INT16_T
+    #ifndef __int16_t_defined
+    #define __int16_t_defined
+    typedef $acx_cv_type_int16_t int16_t;
+    #endif
+    #endif
+
+    #ifndef _INT32_T
+    #define _INT32_T
+    #ifndef __int32_t_defined
+    #define __int32_t_defined
+    typedef $acx_cv_type_int32_t int32_t;
+    #endif
+    #endif
+EOF
+elif test "$ac_cv_type_u_int32_t" = yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* int8_t int16_t int32_t defined by inet code, we do the u_intXX types */
+    #ifndef _INT8_T
+    #define _INT8_T
+    #endif
+    #ifndef _INT16_T
+    #define _INT16_T
+    #endif
+    #ifndef _INT32_T
+    #define _INT32_T
+    #endif
+
+    #ifndef _UINT8_T
+    #define _UINT8_T
+    #ifndef __uint8_t_defined
+    #define __uint8_t_defined
+    typedef u_int8_t uint8_t;
+    #endif
+    #endif
+
+    #ifndef _UINT16_T
+    #define _UINT16_T
+    #ifndef __uint16_t_defined
+    #define __uint16_t_defined
+    typedef u_int16_t uint16_t;
+    #endif
+    #endif
+
+    #ifndef _UINT32_T
+    #define _UINT32_T
+    #ifndef __uint32_t_defined
+    #define __uint32_t_defined
+    typedef u_int32_t uint32_t;
+    #endif
+    #endif
+EOF
+else
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* Some systems have guard macros to prevent redefinitions, define them.  */
+    #ifndef _INT8_T
+    #define _INT8_T
+    #endif
+    #ifndef _INT16_T
+    #define _INT16_T
+    #endif
+    #ifndef _INT32_T
+    #define _INT32_T
+    #endif
+    #ifndef _UINT8_T
+    #define _UINT8_T
+    #endif
+    #ifndef _UINT16_T
+    #define _UINT16_T
+    #endif
+    #ifndef _UINT32_T
+    #define _UINT32_T
+    #endif
+EOF
+fi
+
+# ------------- done basic int types, emit int64_t types ------------
+if test "$ac_cv_type_uint64_t" = yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* system headers have good uint64_t and int64_t */
+    #ifndef _INT64_T
+    #define _INT64_T
+    #endif
+    #ifndef _UINT64_T
+    #define _UINT64_T
+    #endif
+EOF
+elif test "$ac_cv_type_u_int64_t" = yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* system headers have an u_int64_t (and int64_t) */
+    #ifndef _INT64_T
+    #define _INT64_T
+    #endif
+    #ifndef _UINT64_T
+    #define _UINT64_T
+    #ifndef __uint64_t_defined
+    #define __uint64_t_defined
+    typedef u_int64_t uint64_t;
+    #endif
+    #endif
+EOF
+elif test -n "$acx_cv_type_int64_t"; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* architecture has a 64-bit type, $acx_cv_type_int64_t */
+    #ifndef _INT64_T
+    #define _INT64_T
+    typedef $acx_cv_type_int64_t int64_t;
+    #endif
+    #ifndef _UINT64_T
+    #define _UINT64_T
+    #ifndef __uint64_t_defined
+    #define __uint64_t_defined
+    typedef unsigned $acx_cv_type_int64_t uint64_t;
+    #endif
+    #endif
+EOF
+else
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* some common heuristics for int64_t, using compiler-specific tests */
+    #if defined __STDC_VERSION__ && (__STDC_VERSION__-0) >= 199901L
+    #ifndef _INT64_T
+    #define _INT64_T
+    #ifndef __int64_t_defined
+    typedef long long int64_t;
+    #endif
+    #endif
+    #ifndef _UINT64_T
+    #define _UINT64_T
+    typedef unsigned long long uint64_t;
+    #endif
+
+    #elif defined __GNUC__ && defined (__STDC__) && __STDC__-0
+    /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and
+       does not implement __extension__.  But that compiler doesn't define
+       __GNUC_MINOR__.  */
+    # if __GNUC__ < 2 || (__NeXT__ && !__GNUC_MINOR__)
+    # define __extension__
+    # endif
+
+    # ifndef _INT64_T
+    # define _INT64_T
+    __extension__ typedef long long int64_t;
+    # endif
+    # ifndef _UINT64_T
+    # define _UINT64_T
+    __extension__ typedef unsigned long long uint64_t;
+    # endif
+
+    #elif !defined __STRICT_ANSI__
+    # if defined _MSC_VER || defined __WATCOMC__ || defined __BORLANDC__
+
+    #  ifndef _INT64_T
+    #  define _INT64_T
+    typedef __int64 int64_t;
+    #  endif
+    #  ifndef _UINT64_T
+    #  define _UINT64_T
+    typedef unsigned __int64 uint64_t;
+    #  endif
+    # endif /* compiler */
+
+    #endif /* ANSI version */
+EOF
+fi
+
+# ------------- done int64_t types, emit intptr types ------------
+if test "$ac_cv_type_uintptr_t" != yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* Define intptr_t based on sizeof(void*) = $ac_cv_sizeof_void_p */
+    #ifndef __uintptr_t_defined
+    typedef u$acx_cv_type_intptr_t uintptr_t;
+    #endif
+    #ifndef __intptr_t_defined
+    typedef $acx_cv_type_intptr_t  intptr_t;
+    #endif
+EOF
+fi
+
+# ------------- done intptr types, emit int_least types ------------
+if test "$ac_cv_type_int_least32_t" != yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* Define int_least types */
+    typedef int8_t     int_least8_t;
+    typedef int16_t    int_least16_t;
+    typedef int32_t    int_least32_t;
+    #ifdef _INT64_T
+    typedef int64_t    int_least64_t;
+    #endif
+
+    typedef uint8_t    uint_least8_t;
+    typedef uint16_t   uint_least16_t;
+    typedef uint32_t   uint_least32_t;
+    #ifdef _UINT64_T
+    typedef uint64_t   uint_least64_t;
+    #endif
+EOF
+fi
+
+# ------------- done intptr types, emit int_fast types ------------
+if test "$ac_cv_type_int_fast32_t" != yes; then
+      sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* Define int_fast types.  short is often slow */
+    typedef int8_t       int_fast8_t;
+    typedef int          int_fast16_t;
+    typedef int32_t      int_fast32_t;
+    #ifdef _INT64_T
+    typedef int64_t      int_fast64_t;
+    #endif
+
+    typedef uint8_t      uint_fast8_t;
+    typedef unsigned int uint_fast16_t;
+    typedef uint32_t     uint_fast32_t;
+    #ifdef _UINT64_T
+    typedef uint64_t     uint_fast64_t;
+    #endif
+EOF
+fi
+
+if test "$ac_cv_type_uintmax_t" != yes; then
+  sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+    /* Define intmax based on what we found */
+    #ifdef _INT64_T
+    typedef int64_t       intmax_t;
+    #else
+    typedef long          intmax_t;
+    #endif
+    #ifdef _UINT64_T
+    typedef uint64_t      uintmax_t;
+    #else
+    typedef unsigned long uintmax_t;
+    #endif
+EOF
+fi
+
+sed 's/^ *//' >> tmp-stdint.h <<EOF
+
+  #endif /* GCC_GENERATED_STDINT_H */
+EOF
+
+if test -r bfd_stdint.h && cmp -s tmp-stdint.h bfd_stdint.h; then
+  rm -f tmp-stdint.h
+else
+  mv -f tmp-stdint.h bfd_stdint.h
+fi
+
+ ;;
+    "default":C) 
+case "$srcdir" in
+  .) srcdirpre= ;;
+  *) srcdirpre='$(srcdir)/' ;;
+esac
+POFILES=
+GMOFILES=
+for lang in dummy $OBSOLETE_ALL_LINGUAS; do
+  if test $lang != dummy; then
+    POFILES="$POFILES $srcdirpre$lang.po"
+    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
+  fi
+done
+sed -e '/SRC-POTFILES =/r po/SRC-POTFILES' \
+    -e '/BLD-POTFILES =/r po/BLD-POTFILES' \
+    -e "s,@POFILES@,$POFILES," \
+    -e "s,@GMOFILES@,$GMOFILES," \
+    po/Makefile.in > po/Makefile ;;
+
+  esac
+done # for ac_tag
+
+
+as_fn_exit 0
+_ACEOF
+ac_clean_files=$ac_clean_files_save
+
+test $ac_write_fail = 0 ||
+  as_fn_error "write failure creating $CONFIG_STATUS" "$LINENO" 5
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || as_fn_exit $?
+fi
+if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
+$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
+fi
+
+
diff -rupN binutils-2.20/bfd/autom4te.cache/requests binutils-2.20-sean/bfd/autom4te.cache/requests
--- binutils-2.20/bfd/autom4te.cache/requests	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/autom4te.cache/requests	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,68 @@
+# This file was generated.
+# It contains the lists of macros which have been traced.
+# It can be safely removed.
+
+@request = (
+             bless( [
+                      '0',
+                      1,
+                      [
+                        '/usr/local/share/autoconf'
+                      ],
+                      [
+                        '/usr/local/share/autoconf/autoconf/autoconf.m4f',
+                        'aclocal.m4',
+                        'configure.in'
+                      ],
+                      {
+                        '_LT_AC_TAGCONFIG' => 1,
+                        'AM_PROG_F77_C_O' => 1,
+                        'AC_INIT' => 1,
+                        'm4_pattern_forbid' => 1,
+                        'AC_CANONICAL_TARGET' => 1,
+                        '_AM_COND_IF' => 1,
+                        'AC_CONFIG_LIBOBJ_DIR' => 1,
+                        'AC_SUBST' => 1,
+                        'AC_CANONICAL_HOST' => 1,
+                        'AC_FC_SRCEXT' => 1,
+                        'AC_PROG_LIBTOOL' => 1,
+                        'AM_INIT_AUTOMAKE' => 1,
+                        'AC_CONFIG_SUBDIRS' => 1,
+                        'AM_AUTOMAKE_VERSION' => 1,
+                        'LT_CONFIG_LTDL_DIR' => 1,
+                        'AC_CONFIG_LINKS' => 1,
+                        'AC_REQUIRE_AUX_FILE' => 1,
+                        'm4_sinclude' => 1,
+                        'LT_SUPPORTED_TAG' => 1,
+                        'AM_MAINTAINER_MODE' => 1,
+                        'AM_GNU_GETTEXT_INTL_SUBDIR' => 1,
+                        '_m4_warn' => 1,
+                        'AM_PROG_CXX_C_O' => 1,
+                        '_AM_COND_ENDIF' => 1,
+                        'AM_ENABLE_MULTILIB' => 1,
+                        'AM_SILENT_RULES' => 1,
+                        'AC_CONFIG_FILES' => 1,
+                        'LT_INIT' => 1,
+                        'include' => 1,
+                        'AM_GNU_GETTEXT' => 1,
+                        'AC_LIBSOURCE' => 1,
+                        'AC_CANONICAL_BUILD' => 1,
+                        'AM_PROG_FC_C_O' => 1,
+                        'AC_FC_FREEFORM' => 1,
+                        'AH_OUTPUT' => 1,
+                        'AC_CONFIG_AUX_DIR' => 1,
+                        '_AM_SUBST_NOTMAKE' => 1,
+                        'AM_PROG_CC_C_O' => 1,
+                        'sinclude' => 1,
+                        'm4_pattern_allow' => 1,
+                        'AM_CONDITIONAL' => 1,
+                        'AC_CANONICAL_SYSTEM' => 1,
+                        'AC_CONFIG_HEADERS' => 1,
+                        'AC_DEFINE_TRACE_LITERAL' => 1,
+                        'm4_include' => 1,
+                        '_AM_COND_ELSE' => 1,
+                        'AC_SUBST_TRACE' => 1
+                      }
+                    ], 'Autom4te::Request' )
+           );
+
diff -rupN binutils-2.20/bfd/autom4te.cache/traces.0 binutils-2.20-sean/bfd/autom4te.cache/traces.0
--- binutils-2.20/bfd/autom4te.cache/traces.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/autom4te.cache/traces.0	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,1214 @@
+m4trace:aclocal.m4:971: -1- m4_include([../config/acx.m4])
+m4trace:aclocal.m4:972: -1- m4_include([../config/depstand.m4])
+m4trace:aclocal.m4:973: -1- m4_include([../config/gettext-sister.m4])
+m4trace:aclocal.m4:974: -1- m4_include([../config/lead-dot.m4])
+m4trace:aclocal.m4:975: -1- m4_include([../config/nls.m4])
+m4trace:aclocal.m4:976: -1- m4_include([../config/override.m4])
+m4trace:aclocal.m4:977: -1- m4_include([../config/plugins.m4])
+m4trace:aclocal.m4:978: -1- m4_include([../config/po.m4])
+m4trace:aclocal.m4:979: -1- m4_include([../config/progtest.m4])
+m4trace:aclocal.m4:980: -1- m4_include([../config/stdint.m4])
+m4trace:aclocal.m4:981: -1- m4_include([../libtool.m4])
+m4trace:aclocal.m4:982: -1- m4_include([../ltoptions.m4])
+m4trace:aclocal.m4:983: -1- m4_include([../ltsugar.m4])
+m4trace:aclocal.m4:984: -1- m4_include([../ltversion.m4])
+m4trace:aclocal.m4:985: -1- m4_include([../lt~obsolete.m4])
+m4trace:aclocal.m4:986: -1- m4_include([bfd.m4])
+m4trace:aclocal.m4:987: -1- m4_include([warning.m4])
+m4trace:aclocal.m4:988: -1- m4_include([acinclude.m4])
+m4trace:configure.in:5: -1- AC_INIT
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?A[CHUM]_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([_AC_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
+m4trace:configure.in:5: -1- m4_pattern_allow([^AS_FLAGS$])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?m4_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^dnl$])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?AS_])
+m4trace:configure.in:5: -1- AC_SUBST([SHELL])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([SHELL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^SHELL$])
+m4trace:configure.in:5: -1- AC_SUBST([PATH_SEPARATOR])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PATH_SEPARATOR])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PATH_SEPARATOR$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_NAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_VERSION])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_STRING])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_URL], [m4_ifdef([AC_PACKAGE_URL],       ['AC_PACKAGE_URL'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_URL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.in:5: -1- AC_SUBST([exec_prefix], [NONE])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([exec_prefix])
+m4trace:configure.in:5: -1- m4_pattern_allow([^exec_prefix$])
+m4trace:configure.in:5: -1- AC_SUBST([prefix], [NONE])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([prefix])
+m4trace:configure.in:5: -1- m4_pattern_allow([^prefix$])
+m4trace:configure.in:5: -1- AC_SUBST([program_transform_name], [s,x,x,])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([program_transform_name])
+m4trace:configure.in:5: -1- m4_pattern_allow([^program_transform_name$])
+m4trace:configure.in:5: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([bindir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^bindir$])
+m4trace:configure.in:5: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sbindir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sbindir$])
+m4trace:configure.in:5: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([libexecdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^libexecdir$])
+m4trace:configure.in:5: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([datarootdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^datarootdir$])
+m4trace:configure.in:5: -1- AC_SUBST([datadir], ['${datarootdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([datadir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^datadir$])
+m4trace:configure.in:5: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sysconfdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sysconfdir$])
+m4trace:configure.in:5: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sharedstatedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sharedstatedir$])
+m4trace:configure.in:5: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([localstatedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^localstatedir$])
+m4trace:configure.in:5: -1- AC_SUBST([includedir], ['${prefix}/include'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([includedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^includedir$])
+m4trace:configure.in:5: -1- AC_SUBST([oldincludedir], ['/usr/include'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([oldincludedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^oldincludedir$])
+m4trace:configure.in:5: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
+				     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
+				     ['${datarootdir}/doc/${PACKAGE}'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([docdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^docdir$])
+m4trace:configure.in:5: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([infodir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^infodir$])
+m4trace:configure.in:5: -1- AC_SUBST([htmldir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([htmldir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^htmldir$])
+m4trace:configure.in:5: -1- AC_SUBST([dvidir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([dvidir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^dvidir$])
+m4trace:configure.in:5: -1- AC_SUBST([pdfdir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([pdfdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^pdfdir$])
+m4trace:configure.in:5: -1- AC_SUBST([psdir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([psdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^psdir$])
+m4trace:configure.in:5: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([libdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^libdir$])
+m4trace:configure.in:5: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([localedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^localedir$])
+m4trace:configure.in:5: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([mandir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^mandir$])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
+@%:@undef PACKAGE_NAME])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
+@%:@undef PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
+@%:@undef PACKAGE_VERSION])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
+@%:@undef PACKAGE_STRING])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
+@%:@undef PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_URL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_URL], [/* Define to the home page for this package. */
+@%:@undef PACKAGE_URL])
+m4trace:configure.in:5: -1- AC_SUBST([DEFS])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([DEFS])
+m4trace:configure.in:5: -1- m4_pattern_allow([^DEFS$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_C])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_C])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_C$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_N])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_N])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_N$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_T])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_T])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_T$])
+m4trace:configure.in:5: -1- AC_SUBST([LIBS])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:5: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:5: -1- AC_SUBST([build_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([build_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^build_alias$])
+m4trace:configure.in:5: -1- AC_SUBST([host_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([host_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^host_alias$])
+m4trace:configure.in:5: -1- AC_SUBST([target_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([target_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^target_alias$])
+m4trace:configure.in:8: -1- AC_CANONICAL_TARGET
+m4trace:configure.in:8: -1- AC_CANONICAL_HOST
+m4trace:configure.in:8: -1- AC_CANONICAL_BUILD
+m4trace:configure.in:8: -1- AC_REQUIRE_AUX_FILE([config.sub])
+m4trace:configure.in:8: -1- AC_REQUIRE_AUX_FILE([config.guess])
+m4trace:configure.in:8: -1- AC_SUBST([build], [$ac_cv_build])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build$])
+m4trace:configure.in:8: -1- AC_SUBST([build_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([build_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([build_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_os$])
+m4trace:configure.in:8: -1- AC_SUBST([host], [$ac_cv_host])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host$])
+m4trace:configure.in:8: -1- AC_SUBST([host_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([host_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([host_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_os$])
+m4trace:configure.in:8: -1- AC_SUBST([target], [$ac_cv_target])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target$])
+m4trace:configure.in:8: -1- AC_SUBST([target_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([target_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([target_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_os$])
+m4trace:configure.in:9: -1- _m4_warn([obsolete], [The macro `AC_ISC_POSIX' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/specific.m4:464: AC_ISC_POSIX is expanded from...
+configure.in:9: the top level])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([LIBS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:9: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([ac_ct_CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([ac_ct_CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^ac_ct_CC$])
+m4trace:configure.in:9: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([EXEEXT])
+m4trace:configure.in:9: -1- m4_pattern_allow([^EXEEXT$])
+m4trace:configure.in:9: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([OBJEXT])
+m4trace:configure.in:9: -1- m4_pattern_allow([^OBJEXT$])
+m4trace:configure.in:11: -1- AM_INIT_AUTOMAKE([bfd], [2.20])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
+m4trace:configure.in:11: -1- AM_AUTOMAKE_VERSION([1.11])
+m4trace:configure.in:11: -1- AC_REQUIRE_AUX_FILE([install-sh])
+m4trace:configure.in:11: -1- AC_SUBST([INSTALL_PROGRAM])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([INSTALL_PROGRAM])
+m4trace:configure.in:11: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
+m4trace:configure.in:11: -1- AC_SUBST([INSTALL_SCRIPT])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([INSTALL_SCRIPT])
+m4trace:configure.in:11: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
+m4trace:configure.in:11: -1- AC_SUBST([INSTALL_DATA])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([INSTALL_DATA])
+m4trace:configure.in:11: -1- m4_pattern_allow([^INSTALL_DATA$])
+m4trace:configure.in:11: -1- AC_SUBST([am__isrc], [' -I$(srcdir)'])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__isrc])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__isrc$])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([am__isrc])
+m4trace:configure.in:11: -1- AC_SUBST([CYGPATH_W])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([CYGPATH_W])
+m4trace:configure.in:11: -1- m4_pattern_allow([^CYGPATH_W$])
+m4trace:configure.in:11: -1- AC_SUBST([PACKAGE], [bfd])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([PACKAGE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^PACKAGE$])
+m4trace:configure.in:11: -1- AC_SUBST([VERSION], [2.20])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([VERSION])
+m4trace:configure.in:11: -1- m4_pattern_allow([^VERSION$])
+m4trace:configure.in:11: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^PACKAGE$])
+m4trace:configure.in:11: -1- AH_OUTPUT([PACKAGE], [/* Name of package */
+@%:@undef PACKAGE])
+m4trace:configure.in:11: -1- AC_DEFINE_TRACE_LITERAL([VERSION])
+m4trace:configure.in:11: -1- m4_pattern_allow([^VERSION$])
+m4trace:configure.in:11: -1- AH_OUTPUT([VERSION], [/* Version number of package */
+@%:@undef VERSION])
+m4trace:configure.in:11: -1- AC_REQUIRE_AUX_FILE([missing])
+m4trace:configure.in:11: -1- AC_SUBST([ACLOCAL])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([ACLOCAL])
+m4trace:configure.in:11: -1- m4_pattern_allow([^ACLOCAL$])
+m4trace:configure.in:11: -1- AC_SUBST([AUTOCONF])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AUTOCONF])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AUTOCONF$])
+m4trace:configure.in:11: -1- AC_SUBST([AUTOMAKE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AUTOMAKE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AUTOMAKE$])
+m4trace:configure.in:11: -1- AC_SUBST([AUTOHEADER])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AUTOHEADER])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AUTOHEADER$])
+m4trace:configure.in:11: -1- AC_SUBST([MAKEINFO])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([MAKEINFO])
+m4trace:configure.in:11: -1- m4_pattern_allow([^MAKEINFO$])
+m4trace:configure.in:11: -1- AC_SUBST([install_sh])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([install_sh])
+m4trace:configure.in:11: -1- m4_pattern_allow([^install_sh$])
+m4trace:configure.in:11: -1- AC_SUBST([STRIP])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.in:11: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.in:11: -1- AC_SUBST([INSTALL_STRIP_PROGRAM])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([INSTALL_STRIP_PROGRAM])
+m4trace:configure.in:11: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
+m4trace:configure.in:11: -1- AC_REQUIRE_AUX_FILE([install-sh])
+m4trace:configure.in:11: -1- AC_SUBST([MKDIR_P])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([MKDIR_P])
+m4trace:configure.in:11: -1- m4_pattern_allow([^MKDIR_P$])
+m4trace:configure.in:11: -1- AC_SUBST([mkdir_p], ["$MKDIR_P"])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([mkdir_p])
+m4trace:configure.in:11: -1- m4_pattern_allow([^mkdir_p$])
+m4trace:configure.in:11: -1- AC_SUBST([AWK])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AWK])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AWK$])
+m4trace:configure.in:11: -1- AC_SUBST([SET_MAKE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([SET_MAKE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^SET_MAKE$])
+m4trace:configure.in:11: -1- AC_SUBST([am__leading_dot])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__leading_dot])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__leading_dot$])
+m4trace:configure.in:11: -1- AC_SUBST([AMTAR])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AMTAR])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AMTAR$])
+m4trace:configure.in:11: -1- AC_SUBST([am__tar])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__tar])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__tar$])
+m4trace:configure.in:11: -1- AC_SUBST([am__untar])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__untar])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__untar$])
+m4trace:configure.in:11: -1- AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([DEPDIR])
+m4trace:configure.in:11: -1- m4_pattern_allow([^DEPDIR$])
+m4trace:configure.in:11: -1- AC_SUBST([am__include])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__include])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__include$])
+m4trace:configure.in:11: -1- AC_SUBST([am__quote])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__quote])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__quote$])
+m4trace:configure.in:11: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
+m4trace:configure.in:11: -1- AC_SUBST([AMDEP_TRUE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AMDEP_TRUE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AMDEP_TRUE$])
+m4trace:configure.in:11: -1- AC_SUBST([AMDEP_FALSE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AMDEP_FALSE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AMDEP_FALSE$])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
+m4trace:configure.in:11: -1- AC_SUBST([AMDEPBACKSLASH])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([AMDEPBACKSLASH])
+m4trace:configure.in:11: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
+m4trace:configure.in:11: -1- AC_SUBST([CCDEPMODE], [depmode=$am_cv_CC_dependencies_compiler_type])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([CCDEPMODE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^CCDEPMODE$])
+m4trace:configure.in:11: -1- AM_CONDITIONAL([am__fastdepCC], [
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
+m4trace:configure.in:11: -1- AC_SUBST([am__fastdepCC_TRUE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__fastdepCC_TRUE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
+m4trace:configure.in:11: -1- AC_SUBST([am__fastdepCC_FALSE])
+m4trace:configure.in:11: -1- AC_SUBST_TRACE([am__fastdepCC_FALSE])
+m4trace:configure.in:11: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
+m4trace:configure.in:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
+m4trace:configure.in:15: -1- AC_SUBST([AR])
+m4trace:configure.in:15: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.in:15: -1- m4_pattern_allow([^AR$])
+m4trace:configure.in:16: -1- AC_SUBST([RANLIB])
+m4trace:configure.in:16: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.in:16: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.in:22: -1- AC_SUBST([CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:22: -1- AC_SUBST([CFLAGS])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.in:22: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.in:22: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.in:22: -1- AC_SUBST([LIBS])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:22: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:22: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:22: -1- AC_SUBST([CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:22: -1- AC_SUBST([CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:22: -1- AC_SUBST([CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:22: -1- AC_SUBST([CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:22: -1- AC_SUBST([ac_ct_CC])
+m4trace:configure.in:22: -1- AC_SUBST_TRACE([ac_ct_CC])
+m4trace:configure.in:22: -1- m4_pattern_allow([^ac_ct_CC$])
+m4trace:configure.in:23: -1- _m4_warn([obsolete], [The macro `AC_GNU_SOURCE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/specific.m4:332: AC_GNU_SOURCE is expanded from...
+configure.in:23: the top level])
+m4trace:configure.in:23: -1- AC_SUBST([CPP])
+m4trace:configure.in:23: -1- AC_SUBST_TRACE([CPP])
+m4trace:configure.in:23: -1- m4_pattern_allow([^CPP$])
+m4trace:configure.in:23: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:23: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:23: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:23: -1- AC_SUBST([CPP])
+m4trace:configure.in:23: -1- AC_SUBST_TRACE([CPP])
+m4trace:configure.in:23: -1- m4_pattern_allow([^CPP$])
+m4trace:configure.in:23: -1- AC_SUBST([GREP])
+m4trace:configure.in:23: -1- AC_SUBST_TRACE([GREP])
+m4trace:configure.in:23: -1- m4_pattern_allow([^GREP$])
+m4trace:configure.in:23: -1- AC_SUBST([EGREP])
+m4trace:configure.in:23: -1- AC_SUBST_TRACE([EGREP])
+m4trace:configure.in:23: -1- m4_pattern_allow([^EGREP$])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
+m4trace:configure.in:23: -1- m4_pattern_allow([^STDC_HEADERS$])
+m4trace:configure.in:23: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
+@%:@undef STDC_HEADERS])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
+@%:@undef HAVE_SYS_TYPES_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
+@%:@undef HAVE_SYS_STAT_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
+@%:@undef HAVE_STDLIB_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
+@%:@undef HAVE_STRING_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_MEMORY_H], [/* Define to 1 if you have the <memory.h> header file. */
+@%:@undef HAVE_MEMORY_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
+@%:@undef HAVE_STRINGS_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
+@%:@undef HAVE_INTTYPES_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
+@%:@undef HAVE_STDINT_H])
+m4trace:configure.in:23: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
+@%:@undef HAVE_UNISTD_H])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_SOURCE])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_POSIX_SOURCE$])
+m4trace:configure.in:23: -1- AH_OUTPUT([_POSIX_SOURCE], [/* Define to 1 if you need to in order for `stat\' and other things to work. */
+@%:@undef _POSIX_SOURCE])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_1_SOURCE])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
+m4trace:configure.in:23: -1- AH_OUTPUT([_POSIX_1_SOURCE], [/* Define to 2 if the system does not provide POSIX.1 features except with
+   this defined. */
+@%:@undef _POSIX_1_SOURCE])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_MINIX])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_MINIX$])
+m4trace:configure.in:23: -1- AH_OUTPUT([_MINIX], [/* Define to 1 if on MINIX. */
+@%:@undef _MINIX])
+m4trace:configure.in:23: -1- AH_OUTPUT([USE_SYSTEM_EXTENSIONS], [/* Enable extensions on AIX 3, Interix.  */
+#ifndef _ALL_SOURCE
+# undef _ALL_SOURCE
+#endif
+/* Enable GNU extensions on systems that have them.  */
+#ifndef _GNU_SOURCE
+# undef _GNU_SOURCE
+#endif
+/* Enable threading extensions on Solaris.  */
+#ifndef _POSIX_PTHREAD_SEMANTICS
+# undef _POSIX_PTHREAD_SEMANTICS
+#endif
+/* Enable extensions on HP NonStop.  */
+#ifndef _TANDEM_SOURCE
+# undef _TANDEM_SOURCE
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# undef __EXTENSIONS__
+#endif
+])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([__EXTENSIONS__])
+m4trace:configure.in:23: -1- m4_pattern_allow([^__EXTENSIONS__$])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_ALL_SOURCE])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_ALL_SOURCE$])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_GNU_SOURCE])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_GNU_SOURCE$])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_PTHREAD_SEMANTICS])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
+m4trace:configure.in:23: -1- AC_DEFINE_TRACE_LITERAL([_TANDEM_SOURCE])
+m4trace:configure.in:23: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
+m4trace:configure.in:26: -1- LT_INIT([dlopen])
+m4trace:configure.in:26: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
+m4trace:configure.in:26: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
+m4trace:configure.in:26: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
+m4trace:configure.in:26: -1- AC_SUBST([LIBTOOL])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([LIBTOOL])
+m4trace:configure.in:26: -1- m4_pattern_allow([^LIBTOOL$])
+m4trace:configure.in:26: -1- AC_SUBST([SED])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([SED])
+m4trace:configure.in:26: -1- m4_pattern_allow([^SED$])
+m4trace:configure.in:26: -1- AC_SUBST([FGREP])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([FGREP])
+m4trace:configure.in:26: -1- m4_pattern_allow([^FGREP$])
+m4trace:configure.in:26: -1- AC_SUBST([GREP])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([GREP])
+m4trace:configure.in:26: -1- m4_pattern_allow([^GREP$])
+m4trace:configure.in:26: -1- AC_SUBST([LD])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.in:26: -1- m4_pattern_allow([^LD$])
+m4trace:configure.in:26: -1- AC_SUBST([DUMPBIN])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([DUMPBIN])
+m4trace:configure.in:26: -1- m4_pattern_allow([^DUMPBIN$])
+m4trace:configure.in:26: -1- AC_SUBST([ac_ct_DUMPBIN])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([ac_ct_DUMPBIN])
+m4trace:configure.in:26: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
+m4trace:configure.in:26: -1- AC_SUBST([DUMPBIN])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([DUMPBIN])
+m4trace:configure.in:26: -1- m4_pattern_allow([^DUMPBIN$])
+m4trace:configure.in:26: -1- AC_SUBST([NM])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.in:26: -1- m4_pattern_allow([^NM$])
+m4trace:configure.in:26: -1- AC_SUBST([LN_S], [$as_ln_s])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([LN_S])
+m4trace:configure.in:26: -1- m4_pattern_allow([^LN_S$])
+m4trace:configure.in:26: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.in:26: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.in:26: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.in:26: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.in:26: -1- AC_SUBST([AR])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.in:26: -1- m4_pattern_allow([^AR$])
+m4trace:configure.in:26: -1- AC_SUBST([STRIP])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.in:26: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.in:26: -1- AC_SUBST([RANLIB])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.in:26: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.in:26: -1- m4_pattern_allow([LT_OBJDIR])
+m4trace:configure.in:26: -1- AC_DEFINE_TRACE_LITERAL([LT_OBJDIR])
+m4trace:configure.in:26: -1- m4_pattern_allow([^LT_OBJDIR$])
+m4trace:configure.in:26: -1- AH_OUTPUT([LT_OBJDIR], [/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+@%:@undef LT_OBJDIR])
+m4trace:configure.in:26: -1- AC_SUBST([lt_ECHO])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([lt_ECHO])
+m4trace:configure.in:26: -1- m4_pattern_allow([^lt_ECHO$])
+m4trace:configure.in:26: -1- LT_SUPPORTED_TAG([CC])
+m4trace:configure.in:26: -1- AC_SUBST([DSYMUTIL])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([DSYMUTIL])
+m4trace:configure.in:26: -1- m4_pattern_allow([^DSYMUTIL$])
+m4trace:configure.in:26: -1- AC_SUBST([NMEDIT])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([NMEDIT])
+m4trace:configure.in:26: -1- m4_pattern_allow([^NMEDIT$])
+m4trace:configure.in:26: -1- AC_SUBST([LIPO])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.in:26: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.in:26: -1- AC_SUBST([OTOOL])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([OTOOL])
+m4trace:configure.in:26: -1- m4_pattern_allow([^OTOOL$])
+m4trace:configure.in:26: -1- AC_SUBST([OTOOL64])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([OTOOL64])
+m4trace:configure.in:26: -1- m4_pattern_allow([^OTOOL64$])
+m4trace:configure.in:26: -1- AH_OUTPUT([HAVE_DLFCN_H], [/* Define to 1 if you have the <dlfcn.h> header file. */
+@%:@undef HAVE_DLFCN_H])
+m4trace:configure.in:26: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLFCN_H])
+m4trace:configure.in:26: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
+m4trace:configure.in:30: -1- AM_CONDITIONAL([PLUGINS], [test "$plugins" = "yes"])
+m4trace:configure.in:30: -1- AC_SUBST([PLUGINS_TRUE])
+m4trace:configure.in:30: -1- AC_SUBST_TRACE([PLUGINS_TRUE])
+m4trace:configure.in:30: -1- m4_pattern_allow([^PLUGINS_TRUE$])
+m4trace:configure.in:30: -1- AC_SUBST([PLUGINS_FALSE])
+m4trace:configure.in:30: -1- AC_SUBST_TRACE([PLUGINS_FALSE])
+m4trace:configure.in:30: -1- m4_pattern_allow([^PLUGINS_FALSE$])
+m4trace:configure.in:30: -1- _AM_SUBST_NOTMAKE([PLUGINS_TRUE])
+m4trace:configure.in:30: -1- _AM_SUBST_NOTMAKE([PLUGINS_FALSE])
+m4trace:configure.in:58: -1- AC_DEFINE_TRACE_LITERAL([_FILE_OFFSET_BITS])
+m4trace:configure.in:58: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
+m4trace:configure.in:58: -1- AH_OUTPUT([_FILE_OFFSET_BITS], [/* Number of bits in a file offset, on hosts where this is settable. */
+@%:@undef _FILE_OFFSET_BITS])
+m4trace:configure.in:58: -1- AC_DEFINE_TRACE_LITERAL([_LARGE_FILES])
+m4trace:configure.in:58: -1- m4_pattern_allow([^_LARGE_FILES$])
+m4trace:configure.in:58: -1- AH_OUTPUT([_LARGE_FILES], [/* Define for large files, on AIX-style hosts. */
+@%:@undef _LARGE_FILES])
+m4trace:configure.in:93: -1- AC_DEFINE_TRACE_LITERAL([USE_SECUREPLT])
+m4trace:configure.in:93: -1- m4_pattern_allow([^USE_SECUREPLT$])
+m4trace:configure.in:93: -1- AH_OUTPUT([USE_SECUREPLT], [/* Define if we should default to creating read-only plt entries */
+@%:@undef USE_SECUREPLT])
+m4trace:configure.in:102: -1- AC_SUBST([DEBUGDIR])
+m4trace:configure.in:102: -1- AC_SUBST_TRACE([DEBUGDIR])
+m4trace:configure.in:102: -1- m4_pattern_allow([^DEBUGDIR$])
+m4trace:configure.in:120: -1- AC_DEFINE_TRACE_LITERAL([USE_STT_COMMON])
+m4trace:configure.in:120: -1- m4_pattern_allow([^USE_STT_COMMON$])
+m4trace:configure.in:120: -1- AH_OUTPUT([USE_STT_COMMON], [/* Define if we may generate symbols with ELF\'s STT_COMMON type */
+@%:@undef USE_STT_COMMON])
+m4trace:configure.in:124: -1- AC_SUBST([PKGVERSION])
+m4trace:configure.in:124: -1- AC_SUBST_TRACE([PKGVERSION])
+m4trace:configure.in:124: -1- m4_pattern_allow([^PKGVERSION$])
+m4trace:configure.in:125: -1- AC_SUBST([REPORT_BUGS_TO])
+m4trace:configure.in:125: -1- AC_SUBST_TRACE([REPORT_BUGS_TO])
+m4trace:configure.in:125: -1- m4_pattern_allow([^REPORT_BUGS_TO$])
+m4trace:configure.in:125: -1- AC_SUBST([REPORT_BUGS_TEXI])
+m4trace:configure.in:125: -1- AC_SUBST_TRACE([REPORT_BUGS_TEXI])
+m4trace:configure.in:125: -1- m4_pattern_allow([^REPORT_BUGS_TEXI$])
+m4trace:configure.in:127: -1- AC_SUBST([WARN_CFLAGS])
+m4trace:configure.in:127: -1- AC_SUBST_TRACE([WARN_CFLAGS])
+m4trace:configure.in:127: -1- m4_pattern_allow([^WARN_CFLAGS$])
+m4trace:configure.in:127: -1- AC_SUBST([NO_WERROR])
+m4trace:configure.in:127: -1- AC_SUBST_TRACE([NO_WERROR])
+m4trace:configure.in:127: -1- m4_pattern_allow([^NO_WERROR$])
+m4trace:configure.in:129: -1- AC_CONFIG_HEADERS([config.h:config.in])
+m4trace:configure.in:135: -1- AM_MAINTAINER_MODE
+m4trace:configure.in:135: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
+m4trace:configure.in:135: -1- AC_SUBST([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:135: -1- AC_SUBST_TRACE([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:135: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
+m4trace:configure.in:135: -1- AC_SUBST([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:135: -1- AC_SUBST_TRACE([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:135: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
+m4trace:configure.in:135: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:135: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:135: -1- AC_SUBST([MAINT])
+m4trace:configure.in:135: -1- AC_SUBST_TRACE([MAINT])
+m4trace:configure.in:135: -1- m4_pattern_allow([^MAINT$])
+m4trace:configure.in:136: -1- AM_CONDITIONAL([GENINSRC_NEVER], [false])
+m4trace:configure.in:136: -1- AC_SUBST([GENINSRC_NEVER_TRUE])
+m4trace:configure.in:136: -1- AC_SUBST_TRACE([GENINSRC_NEVER_TRUE])
+m4trace:configure.in:136: -1- m4_pattern_allow([^GENINSRC_NEVER_TRUE$])
+m4trace:configure.in:136: -1- AC_SUBST([GENINSRC_NEVER_FALSE])
+m4trace:configure.in:136: -1- AC_SUBST_TRACE([GENINSRC_NEVER_FALSE])
+m4trace:configure.in:136: -1- m4_pattern_allow([^GENINSRC_NEVER_FALSE$])
+m4trace:configure.in:136: -1- _AM_SUBST_NOTMAKE([GENINSRC_NEVER_TRUE])
+m4trace:configure.in:136: -1- _AM_SUBST_NOTMAKE([GENINSRC_NEVER_FALSE])
+m4trace:configure.in:137: -1- AM_CONDITIONAL([INSTALL_LIBBFD], [test $install_libbfd_p = yes])
+m4trace:configure.in:137: -1- AC_SUBST([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:137: -1- m4_pattern_allow([^INSTALL_LIBBFD_TRUE$])
+m4trace:configure.in:137: -1- AC_SUBST([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:137: -1- m4_pattern_allow([^INSTALL_LIBBFD_FALSE$])
+m4trace:configure.in:137: -1- _AM_SUBST_NOTMAKE([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:137: -1- _AM_SUBST_NOTMAKE([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:137: -1- AC_SUBST([host_noncanonical])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([host_noncanonical])
+m4trace:configure.in:137: -1- m4_pattern_allow([^host_noncanonical$])
+m4trace:configure.in:137: -1- AC_SUBST([target_noncanonical])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([target_noncanonical])
+m4trace:configure.in:137: -1- m4_pattern_allow([^target_noncanonical$])
+m4trace:configure.in:137: -1- AC_SUBST([bfdlibdir])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([bfdlibdir])
+m4trace:configure.in:137: -1- m4_pattern_allow([^bfdlibdir$])
+m4trace:configure.in:137: -1- _AM_SUBST_NOTMAKE([bfdlibdir])
+m4trace:configure.in:137: -1- AC_SUBST([bfdincludedir])
+m4trace:configure.in:137: -1- AC_SUBST_TRACE([bfdincludedir])
+m4trace:configure.in:137: -1- m4_pattern_allow([^bfdincludedir$])
+m4trace:configure.in:137: -1- _AM_SUBST_NOTMAKE([bfdincludedir])
+m4trace:configure.in:147: -1- AC_SUBST([USE_NLS])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([USE_NLS])
+m4trace:configure.in:147: -1- m4_pattern_allow([^USE_NLS$])
+m4trace:configure.in:147: -1- AC_SUBST([LIBINTL])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([LIBINTL])
+m4trace:configure.in:147: -1- m4_pattern_allow([^LIBINTL$])
+m4trace:configure.in:147: -1- AC_SUBST([LIBINTL_DEP])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([LIBINTL_DEP])
+m4trace:configure.in:147: -1- m4_pattern_allow([^LIBINTL_DEP$])
+m4trace:configure.in:147: -1- AC_SUBST([INCINTL])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([INCINTL])
+m4trace:configure.in:147: -1- m4_pattern_allow([^INCINTL$])
+m4trace:configure.in:147: -1- AC_SUBST([XGETTEXT])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([XGETTEXT])
+m4trace:configure.in:147: -1- m4_pattern_allow([^XGETTEXT$])
+m4trace:configure.in:147: -1- AC_SUBST([GMSGFMT])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([GMSGFMT])
+m4trace:configure.in:147: -1- m4_pattern_allow([^GMSGFMT$])
+m4trace:configure.in:147: -1- AC_SUBST([POSUB])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([POSUB])
+m4trace:configure.in:147: -1- m4_pattern_allow([^POSUB$])
+m4trace:configure.in:147: -1- AC_DEFINE_TRACE_LITERAL([ENABLE_NLS])
+m4trace:configure.in:147: -1- m4_pattern_allow([^ENABLE_NLS$])
+m4trace:configure.in:147: -1- AH_OUTPUT([ENABLE_NLS], [/* Define to 1 if translation of program messages to the user\'s native
+   language is requested. */
+@%:@undef ENABLE_NLS])
+m4trace:configure.in:147: -1- AC_SUBST([CATALOGS])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([CATALOGS])
+m4trace:configure.in:147: -1- m4_pattern_allow([^CATALOGS$])
+m4trace:configure.in:147: -1- AC_SUBST([DATADIRNAME])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([DATADIRNAME])
+m4trace:configure.in:147: -1- m4_pattern_allow([^DATADIRNAME$])
+m4trace:configure.in:147: -1- AC_SUBST([INSTOBJEXT])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([INSTOBJEXT])
+m4trace:configure.in:147: -1- m4_pattern_allow([^INSTOBJEXT$])
+m4trace:configure.in:147: -1- AC_SUBST([GENCAT])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([GENCAT])
+m4trace:configure.in:147: -1- m4_pattern_allow([^GENCAT$])
+m4trace:configure.in:147: -1- AC_SUBST([CATOBJEXT])
+m4trace:configure.in:147: -1- AC_SUBST_TRACE([CATOBJEXT])
+m4trace:configure.in:147: -1- m4_pattern_allow([^CATOBJEXT$])
+m4trace:configure.in:148: -1- AC_SUBST([MKINSTALLDIRS])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([MKINSTALLDIRS])
+m4trace:configure.in:148: -1- m4_pattern_allow([^MKINSTALLDIRS$])
+m4trace:configure.in:148: -1- AC_SUBST([USE_NLS])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([USE_NLS])
+m4trace:configure.in:148: -1- m4_pattern_allow([^USE_NLS$])
+m4trace:configure.in:148: -1- AC_SUBST([MSGFMT])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([MSGFMT])
+m4trace:configure.in:148: -1- m4_pattern_allow([^MSGFMT$])
+m4trace:configure.in:148: -1- AC_SUBST([GMSGFMT])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([GMSGFMT])
+m4trace:configure.in:148: -1- m4_pattern_allow([^GMSGFMT$])
+m4trace:configure.in:148: -1- AC_SUBST([XGETTEXT])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([XGETTEXT])
+m4trace:configure.in:148: -1- m4_pattern_allow([^XGETTEXT$])
+m4trace:configure.in:148: -1- AC_SUBST([MSGMERGE])
+m4trace:configure.in:148: -1- AC_SUBST_TRACE([MSGMERGE])
+m4trace:configure.in:148: -1- m4_pattern_allow([^MSGMERGE$])
+m4trace:configure.in:148: -1- _m4_warn([obsolete], [The macro `AC_OUTPUT_COMMANDS' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/status.m4:1040: AC_OUTPUT_COMMANDS is expanded from...
+../config/po.m4:23: AM_PO_SUBDIRS is expanded from...
+configure.in:148: the top level])
+m4trace:configure.in:153: -1- AC_SUBST([HDEFINES])
+m4trace:configure.in:153: -1- AC_SUBST_TRACE([HDEFINES])
+m4trace:configure.in:153: -1- m4_pattern_allow([^HDEFINES$])
+m4trace:configure.in:163: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG_LONG])
+m4trace:configure.in:163: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
+m4trace:configure.in:163: -1- AH_OUTPUT([SIZEOF_LONG_LONG], [/* The size of `long long\', as computed by sizeof. */
+@%:@undef SIZEOF_LONG_LONG])
+m4trace:configure.in:164: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_VOID_P])
+m4trace:configure.in:164: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
+m4trace:configure.in:164: -1- AH_OUTPUT([SIZEOF_VOID_P], [/* The size of `void *\', as computed by sizeof. */
+@%:@undef SIZEOF_VOID_P])
+m4trace:configure.in:165: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG])
+m4trace:configure.in:165: -1- m4_pattern_allow([^SIZEOF_LONG$])
+m4trace:configure.in:165: -1- AH_OUTPUT([SIZEOF_LONG], [/* The size of `long\', as computed by sizeof. */
+@%:@undef SIZEOF_LONG])
+m4trace:configure.in:190: -1- AC_SUBST([BFD_HOST_64BIT_LONG])
+m4trace:configure.in:190: -1- AC_SUBST_TRACE([BFD_HOST_64BIT_LONG])
+m4trace:configure.in:190: -1- m4_pattern_allow([^BFD_HOST_64BIT_LONG$])
+m4trace:configure.in:191: -1- AC_SUBST([BFD_HOST_64BIT_LONG_LONG])
+m4trace:configure.in:191: -1- AC_SUBST_TRACE([BFD_HOST_64BIT_LONG_LONG])
+m4trace:configure.in:191: -1- m4_pattern_allow([^BFD_HOST_64BIT_LONG_LONG$])
+m4trace:configure.in:192: -1- AC_SUBST([BFD_HOST_64_BIT_DEFINED])
+m4trace:configure.in:192: -1- AC_SUBST_TRACE([BFD_HOST_64_BIT_DEFINED])
+m4trace:configure.in:192: -1- m4_pattern_allow([^BFD_HOST_64_BIT_DEFINED$])
+m4trace:configure.in:193: -1- AC_SUBST([BFD_HOST_64_BIT])
+m4trace:configure.in:193: -1- AC_SUBST_TRACE([BFD_HOST_64_BIT])
+m4trace:configure.in:193: -1- m4_pattern_allow([^BFD_HOST_64_BIT$])
+m4trace:configure.in:194: -1- AC_SUBST([BFD_HOST_U_64_BIT])
+m4trace:configure.in:194: -1- AC_SUBST_TRACE([BFD_HOST_U_64_BIT])
+m4trace:configure.in:194: -1- m4_pattern_allow([^BFD_HOST_U_64_BIT$])
+m4trace:configure.in:195: -1- AC_SUBST([BFD_HOSTPTR_T])
+m4trace:configure.in:195: -1- AC_SUBST_TRACE([BFD_HOSTPTR_T])
+m4trace:configure.in:195: -1- m4_pattern_allow([^BFD_HOSTPTR_T$])
+m4trace:configure.in:197: -1- AC_SUBST([CC_FOR_BUILD])
+m4trace:configure.in:197: -1- AC_SUBST_TRACE([CC_FOR_BUILD])
+m4trace:configure.in:197: -1- m4_pattern_allow([^CC_FOR_BUILD$])
+m4trace:configure.in:197: -1- AC_SUBST([EXEEXT_FOR_BUILD])
+m4trace:configure.in:197: -1- AC_SUBST_TRACE([EXEEXT_FOR_BUILD])
+m4trace:configure.in:197: -1- m4_pattern_allow([^EXEEXT_FOR_BUILD$])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_ALLOCA_H], [/* Define to 1 if you have the <alloca.h> header file. */
+@%:@undef HAVE_ALLOCA_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_STDDEF_H], [/* Define to 1 if you have the <stddef.h> header file. */
+@%:@undef HAVE_STDDEF_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
+@%:@undef HAVE_STRING_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
+@%:@undef HAVE_STRINGS_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
+@%:@undef HAVE_STDLIB_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_TIME_H], [/* Define to 1 if you have the <time.h> header file. */
+@%:@undef HAVE_TIME_H])
+m4trace:configure.in:199: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
+@%:@undef HAVE_UNISTD_H])
+m4trace:configure.in:200: -1- AH_OUTPUT([HAVE_FCNTL_H], [/* Define to 1 if you have the <fcntl.h> header file. */
+@%:@undef HAVE_FCNTL_H])
+m4trace:configure.in:200: -1- AH_OUTPUT([HAVE_SYS_FILE_H], [/* Define to 1 if you have the <sys/file.h> header file. */
+@%:@undef HAVE_SYS_FILE_H])
+m4trace:configure.in:200: -1- AH_OUTPUT([HAVE_SYS_TIME_H], [/* Define to 1 if you have the <sys/time.h> header file. */
+@%:@undef HAVE_SYS_TIME_H])
+m4trace:configure.in:200: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
+@%:@undef HAVE_SYS_STAT_H])
+m4trace:configure.in:201: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_VOID_P])
+m4trace:configure.in:201: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
+m4trace:configure.in:201: -1- AH_OUTPUT([SIZEOF_VOID_P], [/* The size of `void *\', as computed by sizeof. */
+@%:@undef SIZEOF_VOID_P])
+m4trace:configure.in:201: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_LONG])
+m4trace:configure.in:201: -1- m4_pattern_allow([^SIZEOF_LONG$])
+m4trace:configure.in:201: -1- AH_OUTPUT([SIZEOF_LONG], [/* The size of `long\', as computed by sizeof. */
+@%:@undef SIZEOF_LONG])
+m4trace:configure.in:201: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_INT])
+m4trace:configure.in:201: -1- m4_pattern_allow([^SIZEOF_INT$])
+m4trace:configure.in:201: -1- AH_OUTPUT([SIZEOF_INT], [/* The size of `int\', as computed by sizeof. */
+@%:@undef SIZEOF_INT])
+m4trace:configure.in:201: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_SHORT])
+m4trace:configure.in:201: -1- m4_pattern_allow([^SIZEOF_SHORT$])
+m4trace:configure.in:201: -1- AH_OUTPUT([SIZEOF_SHORT], [/* The size of `short\', as computed by sizeof. */
+@%:@undef SIZEOF_SHORT])
+m4trace:configure.in:201: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_CHAR])
+m4trace:configure.in:201: -1- m4_pattern_allow([^SIZEOF_CHAR$])
+m4trace:configure.in:201: -1- AH_OUTPUT([SIZEOF_CHAR], [/* The size of `char\', as computed by sizeof. */
+@%:@undef SIZEOF_CHAR])
+m4trace:configure.in:202: -1- AC_DEFINE_TRACE_LITERAL([TIME_WITH_SYS_TIME])
+m4trace:configure.in:202: -1- m4_pattern_allow([^TIME_WITH_SYS_TIME$])
+m4trace:configure.in:202: -1- AH_OUTPUT([TIME_WITH_SYS_TIME], [/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+@%:@undef TIME_WITH_SYS_TIME])
+m4trace:configure.in:203: -1- AH_OUTPUT([HAVE_DIRENT_H], [/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR\'.
+   */
+@%:@undef HAVE_DIRENT_H])
+m4trace:configure.in:203: -1- AH_OUTPUT([HAVE_SYS_NDIR_H], [/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR\'.
+   */
+@%:@undef HAVE_SYS_NDIR_H])
+m4trace:configure.in:203: -1- AH_OUTPUT([HAVE_SYS_DIR_H], [/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR\'.
+   */
+@%:@undef HAVE_SYS_DIR_H])
+m4trace:configure.in:203: -1- AH_OUTPUT([HAVE_NDIR_H], [/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR\'. */
+@%:@undef HAVE_NDIR_H])
+m4trace:configure.in:204: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+../../lib/autoconf/general.m4:2039: AC_CACHE_CHECK is expanded from...
+../config/acx.m4:429: ACX_HEADER_STRING is expanded from...
+configure.in:204: the top level])
+m4trace:configure.in:204: -1- AC_DEFINE_TRACE_LITERAL([STRING_WITH_STRINGS])
+m4trace:configure.in:204: -1- m4_pattern_allow([^STRING_WITH_STRINGS$])
+m4trace:configure.in:204: -1- AH_OUTPUT([STRING_WITH_STRINGS], [/* Define if you can safely include both <string.h> and <strings.h>. */
+@%:@undef STRING_WITH_STRINGS])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_FCNTL], [/* Define to 1 if you have the `fcntl\' function. */
+@%:@undef HAVE_FCNTL])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_GETPAGESIZE], [/* Define to 1 if you have the `getpagesize\' function. */
+@%:@undef HAVE_GETPAGESIZE])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_SETITIMER], [/* Define to 1 if you have the `setitimer\' function. */
+@%:@undef HAVE_SETITIMER])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_SYSCONF], [/* Define to 1 if you have the `sysconf\' function. */
+@%:@undef HAVE_SYSCONF])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_FDOPEN], [/* Define to 1 if you have the `fdopen\' function. */
+@%:@undef HAVE_FDOPEN])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_GETUID], [/* Define to 1 if you have the `getuid\' function. */
+@%:@undef HAVE_GETUID])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_GETGID], [/* Define to 1 if you have the `getgid\' function. */
+@%:@undef HAVE_GETGID])
+m4trace:configure.in:205: -1- AH_OUTPUT([HAVE_FILENO], [/* Define to 1 if you have the `fileno\' function. */
+@%:@undef HAVE_FILENO])
+m4trace:configure.in:206: -1- AH_OUTPUT([HAVE_STRTOULL], [/* Define to 1 if you have the `strtoull\' function. */
+@%:@undef HAVE_STRTOULL])
+m4trace:configure.in:206: -1- AC_DEFINE_TRACE_LITERAL([HAVE_STRTOULL])
+m4trace:configure.in:206: -1- m4_pattern_allow([^HAVE_STRTOULL$])
+m4trace:configure.in:208: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_BASENAME])
+m4trace:configure.in:208: -1- m4_pattern_allow([^HAVE_DECL_BASENAME$])
+m4trace:configure.in:208: -1- AH_OUTPUT([HAVE_DECL_BASENAME], [/* Define to 1 if you have the declaration of `basename\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_BASENAME])
+m4trace:configure.in:209: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FTELLO])
+m4trace:configure.in:209: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
+m4trace:configure.in:209: -1- AH_OUTPUT([HAVE_DECL_FTELLO], [/* Define to 1 if you have the declaration of `ftello\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_FTELLO])
+m4trace:configure.in:210: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FTELLO64])
+m4trace:configure.in:210: -1- m4_pattern_allow([^HAVE_DECL_FTELLO64$])
+m4trace:configure.in:210: -1- AH_OUTPUT([HAVE_DECL_FTELLO64], [/* Define to 1 if you have the declaration of `ftello64\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_FTELLO64])
+m4trace:configure.in:211: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FSEEKO])
+m4trace:configure.in:211: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
+m4trace:configure.in:211: -1- AH_OUTPUT([HAVE_DECL_FSEEKO], [/* Define to 1 if you have the declaration of `fseeko\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_FSEEKO])
+m4trace:configure.in:212: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FSEEKO64])
+m4trace:configure.in:212: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO64$])
+m4trace:configure.in:212: -1- AH_OUTPUT([HAVE_DECL_FSEEKO64], [/* Define to 1 if you have the declaration of `fseeko64\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_FSEEKO64])
+m4trace:configure.in:214: -1- AC_DEFINE_TRACE_LITERAL([USE_BINARY_FOPEN])
+m4trace:configure.in:214: -1- m4_pattern_allow([^USE_BINARY_FOPEN$])
+m4trace:configure.in:214: -1- AH_OUTPUT([USE_BINARY_FOPEN], [/* Use b modifier when opening binary files? */
+@%:@undef USE_BINARY_FOPEN])
+m4trace:configure.in:216: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FFS])
+m4trace:configure.in:216: -1- m4_pattern_allow([^HAVE_DECL_FFS$])
+m4trace:configure.in:216: -1- AH_OUTPUT([HAVE_DECL_FFS], [/* Define to 1 if you have the declaration of `ffs\', and to 0 if you don\'t. */
+@%:@undef HAVE_DECL_FFS])
+m4trace:configure.in:217: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_FREE])
+m4trace:configure.in:217: -1- m4_pattern_allow([^HAVE_DECL_FREE$])
+m4trace:configure.in:217: -1- AH_OUTPUT([HAVE_DECL_FREE], [/* Define to 1 if you have the declaration of `free\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_FREE])
+m4trace:configure.in:218: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_GETENV])
+m4trace:configure.in:218: -1- m4_pattern_allow([^HAVE_DECL_GETENV$])
+m4trace:configure.in:218: -1- AH_OUTPUT([HAVE_DECL_GETENV], [/* Define to 1 if you have the declaration of `getenv\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_GETENV])
+m4trace:configure.in:219: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_MALLOC])
+m4trace:configure.in:219: -1- m4_pattern_allow([^HAVE_DECL_MALLOC$])
+m4trace:configure.in:219: -1- AH_OUTPUT([HAVE_DECL_MALLOC], [/* Define to 1 if you have the declaration of `malloc\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_MALLOC])
+m4trace:configure.in:220: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_REALLOC])
+m4trace:configure.in:220: -1- m4_pattern_allow([^HAVE_DECL_REALLOC$])
+m4trace:configure.in:220: -1- AH_OUTPUT([HAVE_DECL_REALLOC], [/* Define to 1 if you have the declaration of `realloc\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_REALLOC])
+m4trace:configure.in:221: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STPCPY])
+m4trace:configure.in:221: -1- m4_pattern_allow([^HAVE_DECL_STPCPY$])
+m4trace:configure.in:221: -1- AH_OUTPUT([HAVE_DECL_STPCPY], [/* Define to 1 if you have the declaration of `stpcpy\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_STPCPY])
+m4trace:configure.in:222: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STRSTR])
+m4trace:configure.in:222: -1- m4_pattern_allow([^HAVE_DECL_STRSTR$])
+m4trace:configure.in:222: -1- AH_OUTPUT([HAVE_DECL_STRSTR], [/* Define to 1 if you have the declaration of `strstr\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_STRSTR])
+m4trace:configure.in:223: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_SNPRINTF])
+m4trace:configure.in:223: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
+m4trace:configure.in:223: -1- AH_OUTPUT([HAVE_DECL_SNPRINTF], [/* Define to 1 if you have the declaration of `snprintf\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_SNPRINTF])
+m4trace:configure.in:224: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_VSNPRINTF])
+m4trace:configure.in:224: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
+m4trace:configure.in:224: -1- AH_OUTPUT([HAVE_DECL_VSNPRINTF], [/* Define to 1 if you have the declaration of `vsnprintf\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_VSNPRINTF])
+m4trace:configure.in:228: -1- AH_OUTPUT([HAVE_ZLIB_H], [/* Define to 1 if you have the <zlib.h> header file. */
+@%:@undef HAVE_ZLIB_H])
+m4trace:configure.in:228: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ZLIB_H])
+m4trace:configure.in:228: -1- m4_pattern_allow([^HAVE_ZLIB_H$])
+m4trace:configure.in:422: -1- AC_DEFINE_TRACE_LITERAL([HAVE_ST_C_IMPL])
+m4trace:configure.in:422: -1- m4_pattern_allow([^HAVE_ST_C_IMPL$])
+m4trace:configure.in:422: -1- AH_OUTPUT([HAVE_ST_C_IMPL], [/* Define if struct core_dumpx has member c_impl */
+@%:@undef HAVE_ST_C_IMPL])
+m4trace:configure.in:486: -1- AH_OUTPUT([HAVE_SYS_PROCFS_H], [/* Define to 1 if you have the <sys/procfs.h> header file. */
+@%:@undef HAVE_SYS_PROCFS_H])
+m4trace:configure.in:486: -1- AC_DEFINE_TRACE_LITERAL([HAVE_SYS_PROCFS_H])
+m4trace:configure.in:486: -1- m4_pattern_allow([^HAVE_SYS_PROCFS_H$])
+m4trace:configure.in:488: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:488: the top level])
+m4trace:configure.in:488: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRSTATUS_T])
+m4trace:configure.in:488: -1- m4_pattern_allow([^HAVE_PRSTATUS_T$])
+m4trace:configure.in:488: -1- AH_OUTPUT([HAVE_PRSTATUS_T], [/* Define if <sys/procfs.h> has prstatus_t. */
+@%:@undef HAVE_PRSTATUS_T])
+m4trace:configure.in:489: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:489: the top level])
+m4trace:configure.in:489: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRSTATUS32_T])
+m4trace:configure.in:489: -1- m4_pattern_allow([^HAVE_PRSTATUS32_T$])
+m4trace:configure.in:489: -1- AH_OUTPUT([HAVE_PRSTATUS32_T], [/* Define if <sys/procfs.h> has prstatus32_t. */
+@%:@undef HAVE_PRSTATUS32_T])
+m4trace:configure.in:490: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:25: BFD_HAVE_SYS_PROCFS_TYPE_MEMBER is expanded from...
+configure.in:490: the top level])
+m4trace:configure.in:490: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRSTATUS_T_PR_WHO])
+m4trace:configure.in:490: -1- m4_pattern_allow([^HAVE_PRSTATUS_T_PR_WHO$])
+m4trace:configure.in:490: -1- AH_OUTPUT([HAVE_PRSTATUS_T_PR_WHO], [/* Define if <sys/procfs.h> has prstatus_t.pr_who. */
+@%:@undef HAVE_PRSTATUS_T_PR_WHO])
+m4trace:configure.in:491: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:25: BFD_HAVE_SYS_PROCFS_TYPE_MEMBER is expanded from...
+configure.in:491: the top level])
+m4trace:configure.in:491: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRSTATUS32_T_PR_WHO])
+m4trace:configure.in:491: -1- m4_pattern_allow([^HAVE_PRSTATUS32_T_PR_WHO$])
+m4trace:configure.in:491: -1- AH_OUTPUT([HAVE_PRSTATUS32_T_PR_WHO], [/* Define if <sys/procfs.h> has prstatus32_t.pr_who. */
+@%:@undef HAVE_PRSTATUS32_T_PR_WHO])
+m4trace:configure.in:492: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:492: the top level])
+m4trace:configure.in:492: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PSTATUS_T])
+m4trace:configure.in:492: -1- m4_pattern_allow([^HAVE_PSTATUS_T$])
+m4trace:configure.in:492: -1- AH_OUTPUT([HAVE_PSTATUS_T], [/* Define if <sys/procfs.h> has pstatus_t. */
+@%:@undef HAVE_PSTATUS_T])
+m4trace:configure.in:493: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:493: the top level])
+m4trace:configure.in:493: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PXSTATUS_T])
+m4trace:configure.in:493: -1- m4_pattern_allow([^HAVE_PXSTATUS_T$])
+m4trace:configure.in:493: -1- AH_OUTPUT([HAVE_PXSTATUS_T], [/* Define if <sys/procfs.h> has pxstatus_t. */
+@%:@undef HAVE_PXSTATUS_T])
+m4trace:configure.in:494: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:494: the top level])
+m4trace:configure.in:494: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PSTATUS32_T])
+m4trace:configure.in:494: -1- m4_pattern_allow([^HAVE_PSTATUS32_T$])
+m4trace:configure.in:494: -1- AH_OUTPUT([HAVE_PSTATUS32_T], [/* Define if <sys/procfs.h> has pstatus32_t. */
+@%:@undef HAVE_PSTATUS32_T])
+m4trace:configure.in:495: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:495: the top level])
+m4trace:configure.in:495: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRPSINFO_T])
+m4trace:configure.in:495: -1- m4_pattern_allow([^HAVE_PRPSINFO_T$])
+m4trace:configure.in:495: -1- AH_OUTPUT([HAVE_PRPSINFO_T], [/* Define if <sys/procfs.h> has prpsinfo_t. */
+@%:@undef HAVE_PRPSINFO_T])
+m4trace:configure.in:496: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:496: the top level])
+m4trace:configure.in:496: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PRPSINFO32_T])
+m4trace:configure.in:496: -1- m4_pattern_allow([^HAVE_PRPSINFO32_T$])
+m4trace:configure.in:496: -1- AH_OUTPUT([HAVE_PRPSINFO32_T], [/* Define if <sys/procfs.h> has prpsinfo32_t. */
+@%:@undef HAVE_PRPSINFO32_T])
+m4trace:configure.in:497: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:497: the top level])
+m4trace:configure.in:497: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PSINFO_T])
+m4trace:configure.in:497: -1- m4_pattern_allow([^HAVE_PSINFO_T$])
+m4trace:configure.in:497: -1- AH_OUTPUT([HAVE_PSINFO_T], [/* Define if <sys/procfs.h> has psinfo_t. */
+@%:@undef HAVE_PSINFO_T])
+m4trace:configure.in:498: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:498: the top level])
+m4trace:configure.in:498: -1- AC_DEFINE_TRACE_LITERAL([HAVE_PSINFO32_T])
+m4trace:configure.in:498: -1- m4_pattern_allow([^HAVE_PSINFO32_T$])
+m4trace:configure.in:498: -1- AH_OUTPUT([HAVE_PSINFO32_T], [/* Define if <sys/procfs.h> has psinfo32_t. */
+@%:@undef HAVE_PSINFO32_T])
+m4trace:configure.in:499: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:499: the top level])
+m4trace:configure.in:499: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LWPSTATUS_T])
+m4trace:configure.in:499: -1- m4_pattern_allow([^HAVE_LWPSTATUS_T$])
+m4trace:configure.in:499: -1- AH_OUTPUT([HAVE_LWPSTATUS_T], [/* Define if <sys/procfs.h> has lwpstatus_t. */
+@%:@undef HAVE_LWPSTATUS_T])
+m4trace:configure.in:500: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:500: the top level])
+m4trace:configure.in:500: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LWPXSTATUS_T])
+m4trace:configure.in:500: -1- m4_pattern_allow([^HAVE_LWPXSTATUS_T$])
+m4trace:configure.in:500: -1- AH_OUTPUT([HAVE_LWPXSTATUS_T], [/* Define if <sys/procfs.h> has lwpxstatus_t. */
+@%:@undef HAVE_LWPXSTATUS_T])
+m4trace:configure.in:501: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:25: BFD_HAVE_SYS_PROCFS_TYPE_MEMBER is expanded from...
+configure.in:501: the top level])
+m4trace:configure.in:501: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LWPSTATUS_T_PR_CONTEXT])
+m4trace:configure.in:501: -1- m4_pattern_allow([^HAVE_LWPSTATUS_T_PR_CONTEXT$])
+m4trace:configure.in:501: -1- AH_OUTPUT([HAVE_LWPSTATUS_T_PR_CONTEXT], [/* Define if <sys/procfs.h> has lwpstatus_t.pr_context. */
+@%:@undef HAVE_LWPSTATUS_T_PR_CONTEXT])
+m4trace:configure.in:502: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:25: BFD_HAVE_SYS_PROCFS_TYPE_MEMBER is expanded from...
+configure.in:502: the top level])
+m4trace:configure.in:502: -1- AC_DEFINE_TRACE_LITERAL([HAVE_LWPSTATUS_T_PR_REG])
+m4trace:configure.in:502: -1- m4_pattern_allow([^HAVE_LWPSTATUS_T_PR_REG$])
+m4trace:configure.in:502: -1- AH_OUTPUT([HAVE_LWPSTATUS_T_PR_REG], [/* Define if <sys/procfs.h> has lwpstatus_t.pr_reg. */
+@%:@undef HAVE_LWPSTATUS_T_PR_REG])
+m4trace:configure.in:503: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/general.m4:2601: AC_TRY_COMPILE is expanded from...
+../../lib/m4sugar/m4sh.m4:620: AS_IF is expanded from...
+../../lib/autoconf/general.m4:2018: AC_CACHE_VAL is expanded from...
+bfd.m4:6: BFD_HAVE_SYS_PROCFS_TYPE is expanded from...
+configure.in:503: the top level])
+m4trace:configure.in:503: -1- AC_DEFINE_TRACE_LITERAL([HAVE_WIN32_PSTATUS_T])
+m4trace:configure.in:503: -1- m4_pattern_allow([^HAVE_WIN32_PSTATUS_T$])
+m4trace:configure.in:503: -1- AH_OUTPUT([HAVE_WIN32_PSTATUS_T], [/* Define if <sys/procfs.h> has win32_pstatus_t. */
+@%:@undef HAVE_WIN32_PSTATUS_T])
+m4trace:configure.in:506: -1- AC_SUBST([COREFILE])
+m4trace:configure.in:506: -1- AC_SUBST_TRACE([COREFILE])
+m4trace:configure.in:506: -1- m4_pattern_allow([^COREFILE$])
+m4trace:configure.in:507: -1- AC_SUBST([COREFLAG])
+m4trace:configure.in:507: -1- AC_SUBST_TRACE([COREFLAG])
+m4trace:configure.in:507: -1- m4_pattern_allow([^COREFLAG$])
+m4trace:configure.in:509: -1- AC_DEFINE_TRACE_LITERAL([TRAD_HEADER])
+m4trace:configure.in:509: -1- m4_pattern_allow([^TRAD_HEADER$])
+m4trace:configure.in:509: -1- AH_OUTPUT([TRAD_HEADER], [/* Name of host specific header file to include in trad-core.c. */
+@%:@undef TRAD_HEADER])
+m4trace:configure.in:521: -1- AC_SUBST([LIBM])
+m4trace:configure.in:521: -1- AC_SUBST_TRACE([LIBM])
+m4trace:configure.in:521: -1- m4_pattern_allow([^LIBM$])
+m4trace:configure.in:558: -1- AC_SUBST([SHARED_LDFLAGS])
+m4trace:configure.in:558: -1- AC_SUBST_TRACE([SHARED_LDFLAGS])
+m4trace:configure.in:558: -1- m4_pattern_allow([^SHARED_LDFLAGS$])
+m4trace:configure.in:559: -1- AC_SUBST([SHARED_LIBADD])
+m4trace:configure.in:559: -1- AC_SUBST_TRACE([SHARED_LIBADD])
+m4trace:configure.in:559: -1- m4_pattern_allow([^SHARED_LIBADD$])
+m4trace:configure.in:598: -1- AC_SUBST([TDEFINES])
+m4trace:configure.in:598: -1- AC_SUBST_TRACE([TDEFINES])
+m4trace:configure.in:598: -1- m4_pattern_allow([^TDEFINES$])
+m4trace:configure.in:1036: -1- AC_SUBST([wordsize])
+m4trace:configure.in:1036: -1- AC_SUBST_TRACE([wordsize])
+m4trace:configure.in:1036: -1- m4_pattern_allow([^wordsize$])
+m4trace:configure.in:1037: -1- AC_SUBST([bfd64_libs])
+m4trace:configure.in:1037: -1- AC_SUBST_TRACE([bfd64_libs])
+m4trace:configure.in:1037: -1- m4_pattern_allow([^bfd64_libs$])
+m4trace:configure.in:1038: -1- AC_SUBST([all_backends])
+m4trace:configure.in:1038: -1- AC_SUBST_TRACE([all_backends])
+m4trace:configure.in:1038: -1- m4_pattern_allow([^all_backends$])
+m4trace:configure.in:1039: -1- AC_SUBST([bfd_backends])
+m4trace:configure.in:1039: -1- AC_SUBST_TRACE([bfd_backends])
+m4trace:configure.in:1039: -1- m4_pattern_allow([^bfd_backends$])
+m4trace:configure.in:1040: -1- AC_SUBST([bfd_machines])
+m4trace:configure.in:1040: -1- AC_SUBST_TRACE([bfd_machines])
+m4trace:configure.in:1040: -1- m4_pattern_allow([^bfd_machines$])
+m4trace:configure.in:1041: -1- AC_SUBST([bfd_default_target_size])
+m4trace:configure.in:1041: -1- AC_SUBST_TRACE([bfd_default_target_size])
+m4trace:configure.in:1041: -1- m4_pattern_allow([^bfd_default_target_size$])
+m4trace:configure.in:1048: -1- AC_SUBST([supports_plugins])
+m4trace:configure.in:1048: -1- AC_SUBST_TRACE([supports_plugins])
+m4trace:configure.in:1048: -1- m4_pattern_allow([^supports_plugins$])
+m4trace:configure.in:1055: -1- AH_OUTPUT([HAVE_FTELLO], [/* Define to 1 if you have the `ftello\' function. */
+@%:@undef HAVE_FTELLO])
+m4trace:configure.in:1055: -1- AH_OUTPUT([HAVE_FTELLO64], [/* Define to 1 if you have the `ftello64\' function. */
+@%:@undef HAVE_FTELLO64])
+m4trace:configure.in:1055: -1- AH_OUTPUT([HAVE_FSEEKO], [/* Define to 1 if you have the `fseeko\' function. */
+@%:@undef HAVE_FSEEKO])
+m4trace:configure.in:1055: -1- AH_OUTPUT([HAVE_FSEEKO64], [/* Define to 1 if you have the `fseeko64\' function. */
+@%:@undef HAVE_FSEEKO64])
+m4trace:configure.in:1055: -1- AH_OUTPUT([HAVE_FOPEN64], [/* Define to 1 if you have the `fopen64\' function. */
+@%:@undef HAVE_FOPEN64])
+m4trace:configure.in:1057: -1- AC_DEFINE_TRACE_LITERAL([SIZEOF_OFF_T])
+m4trace:configure.in:1057: -1- m4_pattern_allow([^SIZEOF_OFF_T$])
+m4trace:configure.in:1057: -1- AH_OUTPUT([SIZEOF_OFF_T], [/* The size of `off_t\', as computed by sizeof. */
+@%:@undef SIZEOF_OFF_T])
+m4trace:configure.in:1068: -1- AC_SUBST([bfd_file_ptr])
+m4trace:configure.in:1068: -1- AC_SUBST_TRACE([bfd_file_ptr])
+m4trace:configure.in:1068: -1- m4_pattern_allow([^bfd_file_ptr$])
+m4trace:configure.in:1069: -1- AC_SUBST([bfd_ufile_ptr])
+m4trace:configure.in:1069: -1- AC_SUBST_TRACE([bfd_ufile_ptr])
+m4trace:configure.in:1069: -1- m4_pattern_allow([^bfd_ufile_ptr$])
+m4trace:configure.in:1078: -1- AC_SUBST([tdefaults])
+m4trace:configure.in:1078: -1- AC_SUBST_TRACE([tdefaults])
+m4trace:configure.in:1078: -1- m4_pattern_allow([^tdefaults$])
+m4trace:configure.in:1081: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
+@%:@undef HAVE_STDLIB_H])
+m4trace:configure.in:1081: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
+@%:@undef HAVE_UNISTD_H])
+m4trace:configure.in:1081: -1- AH_OUTPUT([HAVE_GETPAGESIZE], [/* Define to 1 if you have the `getpagesize\' function. */
+@%:@undef HAVE_GETPAGESIZE])
+m4trace:configure.in:1081: -1- AC_DEFINE_TRACE_LITERAL([HAVE_GETPAGESIZE])
+m4trace:configure.in:1081: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
+m4trace:configure.in:1081: -1- AC_DEFINE_TRACE_LITERAL([HAVE_MMAP])
+m4trace:configure.in:1081: -1- m4_pattern_allow([^HAVE_MMAP$])
+m4trace:configure.in:1081: -1- AH_OUTPUT([HAVE_MMAP], [/* Define to 1 if you have a working `mmap\' system call. */
+@%:@undef HAVE_MMAP])
+m4trace:configure.in:1082: -1- AH_OUTPUT([HAVE_MADVISE], [/* Define to 1 if you have the `madvise\' function. */
+@%:@undef HAVE_MADVISE])
+m4trace:configure.in:1082: -1- AH_OUTPUT([HAVE_MPROTECT], [/* Define to 1 if you have the `mprotect\' function. */
+@%:@undef HAVE_MPROTECT])
+m4trace:configure.in:1084: -1- AC_DEFINE_TRACE_LITERAL([USE_MMAP])
+m4trace:configure.in:1084: -1- m4_pattern_allow([^USE_MMAP$])
+m4trace:configure.in:1084: -1- AH_OUTPUT([USE_MMAP], [/* Use mmap if it\'s available? */
+@%:@undef USE_MMAP])
+m4trace:configure.in:1088: -1- AC_CONFIG_FILES([Makefile doc/Makefile bfd-in3.h:bfd-in2.h po/Makefile.in:po/Make-in])
+m4trace:configure.in:1113: -1- AC_SUBST([datarootdir])
+m4trace:configure.in:1113: -1- AC_SUBST_TRACE([datarootdir])
+m4trace:configure.in:1113: -1- m4_pattern_allow([^datarootdir$])
+m4trace:configure.in:1114: -1- AC_SUBST([docdir])
+m4trace:configure.in:1114: -1- AC_SUBST_TRACE([docdir])
+m4trace:configure.in:1114: -1- m4_pattern_allow([^docdir$])
+m4trace:configure.in:1115: -1- AC_SUBST([htmldir])
+m4trace:configure.in:1115: -1- AC_SUBST_TRACE([htmldir])
+m4trace:configure.in:1115: -1- m4_pattern_allow([^htmldir$])
+m4trace:configure.in:1116: -1- AC_SUBST([pdfdir])
+m4trace:configure.in:1116: -1- AC_SUBST_TRACE([pdfdir])
+m4trace:configure.in:1116: -1- m4_pattern_allow([^pdfdir$])
+m4trace:configure.in:1118: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
+m4trace:configure.in:1118: -1- m4_pattern_allow([^LIB@&t@OBJS$])
+m4trace:configure.in:1118: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([LTLIBOBJS])
+m4trace:configure.in:1118: -1- m4_pattern_allow([^LTLIBOBJS$])
+m4trace:configure.in:1118: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
+m4trace:configure.in:1118: -1- AC_SUBST([am__EXEEXT_TRUE])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([am__EXEEXT_TRUE])
+m4trace:configure.in:1118: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
+m4trace:configure.in:1118: -1- AC_SUBST([am__EXEEXT_FALSE])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([am__EXEEXT_FALSE])
+m4trace:configure.in:1118: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
+m4trace:configure.in:1118: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
+m4trace:configure.in:1118: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([top_builddir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([top_build_prefix])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([srcdir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([abs_srcdir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([top_srcdir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([abs_top_srcdir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([builddir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([abs_builddir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([abs_top_builddir])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([INSTALL])
+m4trace:configure.in:1118: -1- AC_SUBST_TRACE([MKDIR_P])
+m4trace:configure.in:1118: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
diff -rupN binutils-2.20/bfd/bfd-in2.h binutils-2.20-sean/bfd/bfd-in2.h
--- binutils-2.20/bfd/bfd-in2.h	2009-09-10 05:47:11.000000000 -0600
+++ binutils-2.20-sean/bfd/bfd-in2.h	2010-10-01 14:37:28.000000000 -0600
@@ -1918,6 +1918,8 @@ enum bfd_architecture
 #define bfd_mach_m6812_default 0
 #define bfd_mach_m6812         1
 #define bfd_mach_m6812s        2
+  bfd_arch_mc9xgate,   /* Motorola S12XGATE */
+#define bfd_mach_mc9xgate      0
   bfd_arch_z8k,       /* Zilog Z8000 */
 #define bfd_mach_z8001         1
 #define bfd_mach_z8002         2
@@ -4164,6 +4166,136 @@ to follow the 16K memory bank of 68HC12 
 This is the 5 bits of a value.  */
   BFD_RELOC_M68HC12_5B,
 
+/* Motorola MC9S12X reloc.
+This is the 8 bit high part of an absolute address.  */
+  BFD_RELOC_MC9S12X_HI8,
+
+/* Motorola MC9S12X reloc.
+This is the 8 bit low part of an absolute address.  */
+  BFD_RELOC_MC9S12X_LO8,
+
+/* Motorola MC9S12X reloc.
+This is the 3 bit of a value.  */
+  BFD_RELOC_MC9S12X_3B,
+
+/* Motorola MC9S12X reloc.
+This reloc marks the beginning of a jump/call instruction.
+It is used for linker relaxation to correctly identify beginning
+of instruction and change some branches to use PC-relative
+addressing mode.  */
+  BFD_RELOC_MC9S12X_RL_JUMP,
+
+/* Motorola MC9S12X reloc.
+This reloc marks a group of several instructions that gcc generates
+and for which the linker relaxation pass can modify and/or remove
+some of them.  */
+  BFD_RELOC_MC9S12X_RL_GROUP,
+
+/* Motorola MC9S12X reloc.
+This is the 16-bit lower part of an address.  It is used for 'call'
+instruction to specify the symbol address without any special
+transformation (due to memory bank window).  */
+  BFD_RELOC_MC9S12X_LO16,
+
+/* Motorola MC9S12X reloc.
+This is a 8-bit reloc that specifies the page number of an address.
+It is used by 'call' instruction to specify the page number of
+the symbol.  */
+  BFD_RELOC_MC9S12X_PAGE,
+
+/* Motorola MC9S12X reloc.
+This is a 24-bit reloc that represents the address with a 16-bit
+value and a 8-bit page number.  The symbol address is transformed
+to follow the 16K memory bank of MC9S12X (seen as mapped in the window).  */
+  BFD_RELOC_MC9S12X_24,
+
+/* Motorola MC9S12X reloc.
+This is the 5 bits of a value.  */
+  BFD_RELOC_MC9S12X_5B,
+
+/*   */
+  BFD_RELOC_MC9S12X_PCREL_9,
+
+/*   */
+  BFD_RELOC_MC9S12X_PCREL_10,
+
+/*   */
+  BFD_RELOC_MC9S12X_IMM8_LO,
+
+/*   */
+  BFD_RELOC_MC9S12X_IMM8_HI,
+
+/*   */
+  BFD_RELOC_MC9S12X_IMM3,
+
+/*   */
+  BFD_RELOC_MC9S12X_IMM4,
+
+/* Motorola MC9XGATE reloc.
+This is the 8 bit high part of an absolute address.  */
+  BFD_RELOC_MC9XGATE_HI8,
+
+/* Motorola MC9XGATE reloc.
+This is the 8 bit low part of an absolute address.  */
+  BFD_RELOC_MC9XGATE_LO8,
+
+/* Motorola MC9XGATE reloc.
+This is the 3 bit of a value.  */
+  BFD_RELOC_MC9XGATE_3B,
+
+/* Motorola MC9XGATE reloc.
+This reloc marks the beginning of a jump/call instruction.
+It is used for linker relaxation to correctly identify beginning
+of instruction and change some branches to use PC-relative
+addressing mode.  */
+  BFD_RELOC_MC9XGATE_RL_JUMP,
+
+/* Motorola MC9XGATE reloc.
+This reloc marks a group of several instructions that gcc generates
+and for which the linker relaxation pass can modify and/or remove
+some of them.  */
+  BFD_RELOC_MC9XGATE_RL_GROUP,
+
+/* Motorola MC9XGATE reloc.
+This is the 16-bit lower part of an address.  It is used for 'call'
+instruction to specify the symbol address without any special
+transformation (due to memory bank window).  */
+  BFD_RELOC_MC9XGATE_LO16,
+
+/* Motorola MC9XGATE reloc.
+This is a 8-bit reloc that specifies the page number of an address.
+It is used by 'call' instruction to specify the page number of
+the symbol.  */
+  BFD_RELOC_MC9XGATE_PAGE,
+
+/* Motorola MC9XGATE reloc.
+This is a 24-bit reloc that represents the address with a 16-bit
+value and a 8-bit page number.  The symbol address is transformed
+to follow the 16K memory bank of MC9S12X (seen as mapped in the window).  */
+  BFD_RELOC_MC9XGATE_24,
+
+/* Motorola MC9XGATE reloc.
+This is the 5 bits of a value.  */
+  BFD_RELOC_MC9XGATE_5B,
+
+/*   */
+  BFD_RELOC_MC9XGATE_PCREL_9,
+
+/*   */
+  BFD_RELOC_MC9XGATE_PCREL_10,
+
+/*   */
+  BFD_RELOC_MC9XGATE_IMM8_LO,
+
+/*   */
+  BFD_RELOC_MC9XGATE_IMM8_HI,
+
+/*   */
+  BFD_RELOC_MC9XGATE_IMM3,
+
+/*   */
+  BFD_RELOC_MC9XGATE_IMM4,
+
 /* NS CR16C Relocations.  */
   BFD_RELOC_16C_NUM08,
   BFD_RELOC_16C_NUM08_C,
diff -rupN binutils-2.20/bfd/config.bfd binutils-2.20-sean/bfd/config.bfd
--- binutils-2.20/bfd/config.bfd	2009-08-06 11:38:00.000000000 -0600
+++ binutils-2.20-sean/bfd/config.bfd	2010-10-01 14:37:28.000000000 -0600
@@ -88,6 +88,8 @@ i370)		 targ_archs=bfd_i370_arch ;;
 lm32)	         targ_archs=bfd_lm32_arch ;;
 m6811*|m68hc11*) targ_archs="bfd_m68hc11_arch bfd_m68hc12_arch" ;;
 m6812*|m68hc12*) targ_archs="bfd_m68hc12_arch bfd_m68hc11_arch" ;;
+mc9s12x) targ_archs="bfd_mc9s12x_arch" ;;
+mc9xgate) targ_archs="bfd_mc9xgate_arch" ;;
 m68*)		 targ_archs=bfd_m68k_arch ;;
 m88*)		 targ_archs=bfd_m88k_arch ;;
 maxq*)		 targ_archs=bfd_maxq_arch ;;
@@ -771,7 +773,6 @@ case "${targ}" in
   m32r-*-*)
     targ_defvec=bfd_elf32_m32r_vec
     ;;
-
   m68hc11-*-* | m6811-*-*)
     targ_defvec=bfd_elf32_m68hc11_vec
     targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
@@ -780,7 +781,14 @@ case "${targ}" in
     targ_defvec=bfd_elf32_m68hc12_vec
     targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
     ;;
-
+  mc9s12x-*-*)
+    targ_defvec=bfd_elf32_mc9s12x_vec
+    targ_selvecs="bfd_elf32_mc9s12x_vec"
+    ;;
+  mc9xgate-*-*)
+    targ_defvec=bfd_elf32_mc9xgate_vec
+    targ_selvecs="bfd_elf32_mc9xgate_vec"
+    ;;
   m68*-motorola-sysv*)
     targ_defvec=m68ksysvcoff_vec
     ;;
diff -rupN binutils-2.20/bfd/configure binutils-2.20-sean/bfd/configure
--- binutils-2.20/bfd/configure	2009-10-16 05:47:47.000000000 -0600
+++ binutils-2.20-sean/bfd/configure	2010-10-01 14:37:28.000000000 -0600
@@ -14846,6 +14846,8 @@ do
     bfd_elf32_m32rlelin_vec)    tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
     bfd_elf32_m68hc11_vec)	tb="$tb elf32-m68hc11.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
     bfd_elf32_m68hc12_vec)	tb="$tb elf32-m68hc12.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9s12x_vec)	tb="$tb elf32-mc9s12x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9xgate_vec)	tb="$tb elf32-mc9xgate.lo elf32.lo $elf" ;;
     bfd_elf32_m68k_vec)		tb="$tb elf32-m68k.lo elf32.lo $elf" ;;
     bfd_elf32_m88k_vec)		tb="$tb elf32-m88k.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_big_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
diff -rupN binutils-2.20/bfd/configure.in binutils-2.20-sean/bfd/configure.in
--- binutils-2.20/bfd/configure.in	2009-10-16 05:47:44.000000000 -0600
+++ binutils-2.20-sean/bfd/configure.in	2010-10-01 14:37:28.000000000 -0600
@@ -734,6 +734,8 @@ do
     bfd_elf32_m32rlelin_vec)    tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
     bfd_elf32_m68hc11_vec)	tb="$tb elf32-m68hc11.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
     bfd_elf32_m68hc12_vec)	tb="$tb elf32-m68hc12.lo elf32-m68hc1x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9s12x_vec)	tb="$tb elf32-mc9s12x.lo elf32.lo $elf" ;;
+    bfd_elf32_mc9xgate_vec)	tb="$tb elf32-mc9xgate.lo elf32.lo $elf" ;;
     bfd_elf32_m68k_vec)		tb="$tb elf32-m68k.lo elf32.lo $elf" ;;
     bfd_elf32_m88k_vec)		tb="$tb elf32-m88k.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_big_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
diff -rupN binutils-2.20/bfd/cpu-mc9s12x.c binutils-2.20-sean/bfd/cpu-mc9s12x.c
--- binutils-2.20/bfd/cpu-mc9s12x.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/cpu-mc9s12x.c	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,56 @@
+/* BFD support for the Motorola 68HC12 processor
+   Copyright 1999, 2000, 2002, 2003, 2005, 2007 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include "sysdep.h"
+#include "bfd.h"
+#include "libbfd.h"
+
+
+const bfd_arch_info_type bfd_mc9xgate_info =
+{
+    16, /* 16 bits in a word */
+    32, /* 16 bits in an address */
+    8,  /* 8 bits in a byte */
+    bfd_arch_mc9xgate,
+    bfd_mach_mc9xgate, /* TODO figure out if this should be 0 */
+    "mc9xgate:mc9s12x",
+    "mc9xgate:mc9s12x",
+    4, /* section alignment power */
+    TRUE,
+    bfd_default_compatible,
+    bfd_default_scan,
+    0,
+};
+
+const bfd_arch_info_type bfd_mc9s12x_arch =
+{
+    16, /* 16 bits in a word */
+    32, /* 16 bits in an address */
+    8,  /* 8 bits in a byte */
+    bfd_arch_mc9s12x,
+    bfd_mach_mc9s12x, /* TODO figure out if this should be 0 */
+    "mc9s12x:mc9xgate",
+    "mc9s12x:mc9xgate",
+    4, /* section alignment power */
+    TRUE,
+    bfd_default_compatible,
+    bfd_default_scan,
+    &bfd_mc9xgate_info,
+};
diff -rupN binutils-2.20/bfd/cpu-mc9xgate.c binutils-2.20-sean/bfd/cpu-mc9xgate.c
--- binutils-2.20/bfd/cpu-mc9xgate.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/cpu-mc9xgate.c	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,56 @@
+/* BFD support for the Motorola 68HC12 processor
+   Copyright 1999, 2000, 2002, 2003, 2005, 2007 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include "sysdep.h"
+#include "bfd.h"
+#include "libbfd.h"
+
+
+//const bfd_arch_info_type bfd_mc9s12x_info =
+//{
+//    16, /* 16 bits in a word */
+//    32, /* 16 bits in an address */
+//    8,  /* 8 bits in a byte */
+//    bfd_arch_mc9s12x,
+//    bfd_mach_mc9s12x, /* TODO figure out if this should be 0 */
+//    "mc9s12x",
+//    "mc9s12x:mc9xgate",
+//    4, /* section alignment power */
+//   TRUE,
+//   bfd_default_compatible,
+//    bfd_default_scan,
+//    0,
+//};
+
+const bfd_arch_info_type bfd_mc9xgate_arch =
+{
+    16, /* 16 bits in a word */
+    32, /* 16 bits in an address */
+    8,  /* 8 bits in a byte */
+    bfd_arch_mc9xgate, //bfd_arch_mc9xgate,
+    bfd_mach_mc9xgate, /* TODO figure out if this should be 0 */
+    "mc9xgate",
+    "mc9xgate",
+    4, /* section alignment power */
+    TRUE,
+    bfd_default_compatible,
+    bfd_default_scan,
+    0,
+};
diff -rupN binutils-2.20/bfd/elf32-mc9s12x.c binutils-2.20-sean/bfd/elf32-mc9s12x.c
--- binutils-2.20/bfd/elf32-mc9s12x.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/elf32-mc9s12x.c	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,2089 @@
+/* Motorola 68HC12-specific support for 32-bit ELF
+   Copyright 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+   (Heavily copied from the D10V port by Martin Hunt (hunt@cygnus.com))
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.
+   */
+
+#include "sysdep.h"
+#include "bfd.h"
+#include "bfdlink.h"
+#include "libbfd.h"
+#include "elf-bfd.h"
+#include "elf32-mc9s12x.h"
+#include "elf/mc9s12x.h"
+#include "opcode/mc9s12x.h"
+
+/* Relocation functions.  */
+static reloc_howto_type *bfd_elf32_bfd_reloc_type_lookup
+  (bfd *, bfd_reloc_code_real_type);
+static void mc9s12x_info_to_howto_rel
+  (bfd *, arelent *, Elf_Internal_Rela *);
+
+/* Trampoline generation.  */
+static bfd_boolean mc9s12x_elf_size_one_stub
+  (struct bfd_hash_entry *gen_entry, void *in_arg);
+static bfd_boolean mc9s12x_elf_build_one_stub
+  (struct bfd_hash_entry *gen_entry, void *in_arg);
+static struct bfd_link_hash_table* mc9s12x_elf_bfd_link_hash_table_create
+  (bfd*);
+
+static bfd_boolean mc9s12x_elf_set_mach_from_flags PARAMS ((bfd *));
+
+/* Use REL instead of RELA to save space */
+#define USE_REL	1
+
+/* The 68HC12 microcontroler has a memory bank switching system
+   with a 16Kb window in the 64Kb address space.  The extended memory
+   is mapped in the 16Kb window (at 0x8000).  The page register controls
+   which 16Kb bank is mapped.  The call/rtc instructions take care of
+   bank switching in function calls/returns.
+
+   For GNU Binutils to work, we consider there is a physical memory
+   at 0..0x0ffff and a kind of virtual memory above that.  Symbols
+   in virtual memory have their addresses treated in a special way
+   when disassembling and when linking.
+
+   For the linker to work properly, we must always relocate the virtual
+   memory as if it is mapped at 0x8000.  When a 16-bit relocation is
+   made in the virtual memory, we check that it does not cross the
+   memory bank where it is used.  This would involve a page change
+   which would be wrong.  The 24-bit relocation is for that and it
+   treats the address as a physical address + page number.
+
+
+					Banked
+					Address Space
+                                        |               |       Page n
+					+---------------+ 0x1010000
+                                        |               |
+                                        | jsr _foo      |
+                                        | ..            |       Page 3
+                                        | _foo:         |
+					+---------------+ 0x100C000
+					|	        |
+                                        | call _bar     |
+					| ..	        |	Page 2
+					| _bar:	        |
+					+---------------+ 0x1008000
+				/------>|	        |
+				|	| call _foo     |	Page 1
+				|	|       	|
+				|	+---------------+ 0x1004000
+      Physical			|	|	        |
+      Address Space		|	|	        |	Page 0
+				|	|	        |
+    +-----------+ 0x00FFFF	|	+---------------+ 0x1000000
+    |		|		|
+    | call _foo	|		|
+    |		|		|
+    +-----------+ 0x00BFFF -+---/
+    |		|           |
+    |		|	    |
+    |		| 16K	    |
+    |		|	    |
+    +-----------+ 0x008000 -+
+    |		|
+    |		|
+    =		=
+    |		|
+    |		|
+    +-----------+ 0000
+
+
+   The 'call _foo' must be relocated with page 3 and 16-bit address
+   mapped at 0x8000.
+
+   The 3-bit and 16-bit PC rel relocation is only used by 68HC12.  */
+static reloc_howto_type elf_mc9s12x_howto_table[] = {
+  /* This reloc does nothing.  */
+  HOWTO (R_MC9S12X_NONE,	/* type */
+	 0,			/* rightshift */
+	 2,			/* size (0 = byte, 1 = short, 2 = long) */
+	 32,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_NONE",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0,			/* src_mask */
+	 0,			/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 8 bit absolute relocation */
+  HOWTO (R_MC9S12X_8,		/* type */
+	 0,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 8,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_bitfield,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_8",		/* name */
+	 FALSE,			/* partial_inplace */
+	 0x00ff,		/* src_mask */
+	 0x00ff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 8 bit absolute relocation (upper address) */
+  HOWTO (R_MC9S12X_HI8,		/* type */
+	 8,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 8,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_bitfield,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12Xi_HI8",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0x00ff,		/* src_mask */
+	 0x00ff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 8 bit absolute relocation (upper address) */
+  HOWTO (R_MC9S12X_LO8,		/* type */
+	 0,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 8,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_LO8",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0x00ff,		/* src_mask */
+	 0x00ff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 8 bit PC-rel relocation */
+  HOWTO (R_MC9S12X_PCREL_8,	/* type */
+	 0,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 8,			/* bitsize */
+	 TRUE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_bitfield,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_PCREL_8",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0x00ff,		/* src_mask */
+	 0x00ff,		/* dst_mask */
+	 TRUE),                 /* pcrel_offset */
+
+  /* A 16 bit absolute relocation */
+  HOWTO (R_MC9S12X_16,		/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 16,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont /*bitfield */ ,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_16",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0xffff,		/* src_mask */
+	 0xffff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 32 bit absolute relocation.  This one is never used for the
+     code relocation.  It's used by gas for -gstabs generation.  */
+  HOWTO (R_MC9S12X_32,		/* type */
+	 0,			/* rightshift */
+	 2,			/* size (0 = byte, 1 = short, 2 = long) */
+	 32,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_bitfield,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_32",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0xffffffff,		/* src_mask */
+	 0xffffffff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 3 bit absolute relocation */
+  HOWTO (R_MC9S12X_3B,		/* type */
+	 0,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 3,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_bitfield,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_4B",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0x003,			/* src_mask */
+	 0x003,			/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 16 bit PC-rel relocation */
+  HOWTO (R_MC9S12X_PCREL_16,	/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 16,			/* bitsize */
+	 TRUE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 bfd_elf_generic_reloc,	/* special_function */
+	 "R_MC9S12X_PCREL_16",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0xffff,		/* src_mask */
+	 0xffff,		/* dst_mask */
+	 TRUE),                 /* pcrel_offset */
+
+  /* GNU extension to record C++ vtable hierarchy */
+  HOWTO (R_MC9S12X_GNU_VTINHERIT,	/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 0,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 NULL,			/* special_function */
+	 "R_MC9S12X_GNU_VTINHERIT",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0,			/* src_mask */
+	 0,			/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* GNU extension to record C++ vtable member usage */
+  HOWTO (R_MC9S12X_GNU_VTENTRY,	/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 0,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 _bfd_elf_rel_vtable_reloc_fn,	/* special_function */
+	 "R_MC9S12X_GNU_VTENTRY",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0,			/* src_mask */
+	 0,			/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 24 bit relocation */
+  HOWTO (R_MC9S12X_24,	        /* type */
+	 0,			/* rightshift */
+	 2,			/* size (0 = byte, 1 = short, 2 = long) */
+	 24,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 mc9s12x_elf_special_reloc,	/* special_function */
+	 "R_MC9S12X_24",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0xffffff,		/* src_mask */
+	 0xffffff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A 16-bit low relocation */
+  HOWTO (R_MC9S12X_LO16,        /* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 16,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 mc9s12x_elf_special_reloc,/* special_function */
+	 "R_MC9S12X_LO16",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0xffff,		/* src_mask */
+	 0xffff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+
+  /* A page relocation */
+  HOWTO (R_MC9S12X_PAGE,        /* type */
+	 0,			/* rightshift */
+	 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 8,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 mc9s12x_elf_special_reloc,/* special_function */
+	 "R_MC9S12X_PAGE",	/* name */
+	 FALSE,			/* partial_inplace */
+	 0x00ff,		/* src_mask */
+	 0x00ff,		/* dst_mask */
+	 FALSE),		/* pcrel_offset */
+	 /* A 9 bit absolute relocation  */
+	 		  HOWTO (R_MC9XGATE_PCREL_9,		/* type */
+	 			 0,			/* rightshift */
+	 			 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 9,			/* bitsize */
+	 			 TRUE,			/* pc_relative */
+	 			 0,			/* bitpos */
+	 			 complain_overflow_bitfield,	/* complain_on_overflow */
+	 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 "R_MC9XGATE_PCREL_9",	/* name */
+	 			 FALSE,			/* partial_inplace */
+	 			 0xffff,		/* src_mask */
+	 			 0xffff,		/* dst_mask */
+	 			 TRUE),		/* pcrel_offset */
+
+	 		  /* A 8 bit absolute relocation (upper address) */
+	 		  HOWTO (R_MC9XGATE_PCREL_10,		/* type */
+	 			 8,			/* rightshift */
+	 			 0,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 10,			/* bitsize */
+	 			 TRUE,			/* pc_relative */
+	 			 0,			/* bitpos */
+	 			 complain_overflow_dont,	/* complain_on_overflow */
+	 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 "R_MC9XGATE_PCREL_10",	/* name */
+	 			 FALSE,			/* partial_inplace */
+	 			 0x00ff,		/* src_mask */
+	 			 0x00ff,		/* dst_mask */
+	 			 TRUE),		/* pcrel_offset */
+
+
+	 			 /* A 8 bit absolute relocation  */
+	 			 		  HOWTO (R_MC9XGATE_IMM8_LO,		/* type */
+	 			 			 0,			/* rightshift */
+	 			 			 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 			 16,			/* bitsize */
+	 			 			 FALSE,			/* pc_relative */
+	 			 			 0,			/* bitpos */
+	 			 			 complain_overflow_bitfield,	/* complain_on_overflow */
+	 			 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 			 "R_MC9XGATE_IMM8_LO",	/* name */
+	 			 			 FALSE,			/* partial_inplace */
+	 			 			 0x00ff,		/* src_mask */
+	 			 			 0x00ff,		/* dst_mask */
+	 			 			 FALSE),		/* pcrel_offset */
+
+	 			 		  /* A 16 bit absolute relocation (upper address) */
+	 			 		  HOWTO (R_MC9XGATE_IMM8_HI,		/* type */
+	 			 			 8,			/* rightshift */
+	 			 			 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 			 16,			/* bitsize */
+	 			 			 FALSE,			/* pc_relative */
+	 			 			 0,			/* bitpos */
+	 			 			 complain_overflow_dont,	/* complain_on_overflow */
+	 			 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 			 "R_MC9XGATE_IMM8_HI",	/* name */
+	 			 			 FALSE,			/* partial_inplace */
+	 			 			 0x00ff,		/* src_mask */
+	 			 			 0x00ff,		/* dst_mask */
+	 			 			 FALSE),		/* pcrel_offset */
+	 			 	 		  /* A 3 bit absolute relocation */
+	 			 				 		  HOWTO (R_MC9XGATE_IMM3,		/* type */
+	 			 				 			 8,			/* rightshift */
+	 			 				 			 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 				 			 16,			/* bitsize */
+	 			 				 			 FALSE,			/* pc_relative */
+	 			 				 			 0,			/* bitpos */
+	 			 				 			 complain_overflow_dont,	/* complain_on_overflow */
+	 			 				 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 				 			 "R_MC9XGATE_IMM3",	/* name */
+	 			 				 			 FALSE,			/* partial_inplace */
+	 			 				 			 0x00ff,		/* src_mask */
+	 			 				 			 0x00ff,		/* dst_mask */
+	 			 				 			 FALSE),		/* pcrel_offset */
+	 			 				 	 		  /* A 4 bit absolute relocation  */
+	 			 				 				 		  HOWTO (R_MC9XGATE_IMM4,		/* type */
+	 			 				 				 			 8,			/* rightshift */
+	 			 				 				 			 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 			 				 				 			 16,			/* bitsize */
+	 			 				 				 			 FALSE,			/* pc_relative */
+	 			 				 				 			 0,			/* bitpos */
+	 			 				 				 			 complain_overflow_dont,	/* complain_on_overflow */
+	 			 				 				 			 bfd_elf_generic_reloc,	/* special_function */
+	 			 				 				 			 "R_MC9XGATE_IMM4",	/* name */
+	 			 				 				 			 FALSE,			/* partial_inplace */
+	 			 				 				 			 0x00ff,		/* src_mask */
+	 			 				 				 			 0x00ff,		/* dst_mask */
+	 			 				 				 			 FALSE),		/* pcrel_offset */
+
+  //EMPTY_HOWTO (14),
+  //EMPTY_HOWTO (15),
+  //EMPTY_HOWTO (16),
+  //EMPTY_HOWTO (17),
+  //EMPTY_HOWTO (18),
+  //EMPTY_HOWTO (19),
+
+  /* Mark beginning of a jump instruction (any form).  */
+  HOWTO (R_MC9S12X_RL_JUMP,	/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 0,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 mc9s12x_elf_ignore_reloc,	/* special_function */
+	 "R_MC9S12X_RL_JUMP",	/* name */
+	 TRUE,			/* partial_inplace */
+	 0,			/* src_mask */
+	 0,			/* dst_mask */
+	 TRUE),                 /* pcrel_offset */
+
+  /* Mark beginning of Gcc relaxation group instruction.  */
+  HOWTO (R_MC9S12X_RL_GROUP,	/* type */
+	 0,			/* rightshift */
+	 1,			/* size (0 = byte, 1 = short, 2 = long) */
+	 0,			/* bitsize */
+	 FALSE,			/* pc_relative */
+	 0,			/* bitpos */
+	 complain_overflow_dont,	/* complain_on_overflow */
+	 mc9s12x_elf_ignore_reloc,	/* special_function */
+	 "R_MC9S12X_RL_GROUP",	/* name */
+	 TRUE,			/* partial_inplace */
+	 0,			/* src_mask */
+	 0,			/* dst_mask */
+	 TRUE),                 /* pcrel_offset */
+};
+
+/* Map BFD reloc types to M68HC11 ELF reloc types.  */
+
+struct mc9s12x_reloc_map
+{
+  bfd_reloc_code_real_type bfd_reloc_val;
+  unsigned char elf_reloc_val;
+};
+
+static const struct mc9s12x_reloc_map mc9s12x_reloc_map[] = {
+  {BFD_RELOC_NONE, R_MC9S12X_NONE,},
+  {BFD_RELOC_8, R_MC9S12X_8},
+  {BFD_RELOC_MC9S12X_HI8, R_MC9S12X_HI8},
+  {BFD_RELOC_MC9S12X_LO8, R_MC9S12X_LO8},
+  {BFD_RELOC_8_PCREL, R_MC9S12X_PCREL_8},
+  {BFD_RELOC_16_PCREL, R_MC9S12X_PCREL_16},
+  {BFD_RELOC_16, R_MC9S12X_16},
+  {BFD_RELOC_32, R_MC9S12X_32},
+  {BFD_RELOC_MC9S12X_3B, R_MC9S12X_3B},
+
+  {BFD_RELOC_VTABLE_INHERIT, R_MC9S12X_GNU_VTINHERIT},
+  {BFD_RELOC_VTABLE_ENTRY, R_MC9S12X_GNU_VTENTRY},
+
+  {BFD_RELOC_MC9S12X_LO16, R_MC9S12X_LO16},
+  {BFD_RELOC_MC9S12X_PAGE, R_MC9S12X_PAGE},
+  {BFD_RELOC_MC9S12X_24, R_MC9S12X_24},
+  {BFD_RELOC_MC9XGATE_PCREL_9, R_MC9XGATE_PCREL_9},
+  {BFD_RELOC_MC9XGATE_PCREL_10,  R_MC9XGATE_PCREL_10},
+  {BFD_RELOC_MC9XGATE_IMM8_LO, R_MC9XGATE_IMM8_LO},
+  {BFD_RELOC_MC9XGATE_IMM8_HI, R_MC9XGATE_IMM8_HI},
+  {BFD_RELOC_MC9XGATE_IMM3, R_MC9XGATE_IMM3},
+  {BFD_RELOC_MC9XGATE_IMM4, R_MC9XGATE_IMM4},
+
+  {BFD_RELOC_MC9S12X_RL_JUMP, R_MC9S12X_RL_JUMP},
+  {BFD_RELOC_MC9S12X_RL_GROUP, R_MC9S12X_RL_GROUP},
+};
+
+static reloc_howto_type *
+bfd_elf32_bfd_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,
+                                 bfd_reloc_code_real_type code)
+{
+  //printf("\n in bfd_elf32_bfd_reloc_type_lookup--line 398\n");
+  unsigned int i;
+
+  for (i = 0;
+       i < sizeof (mc9s12x_reloc_map) / sizeof (struct mc9s12x_reloc_map);
+       i++)
+    {
+      if (mc9s12x_reloc_map[i].bfd_reloc_val == code){
+    	  //printf("\n found reloc by type %s", &elf_mc9s12x_howto_table[mc9s12x_reloc_map[i].bfd_reloc_val ]);
+	return &elf_mc9s12x_howto_table[mc9s12x_reloc_map[i].elf_reloc_val];
+      }
+    }
+
+  return NULL;
+}
+
+static reloc_howto_type *
+bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,
+				 const char *r_name)
+{
+  //printf("\n in bfd_elf32_bfd_reloc_name_lookup--line 416\n");
+  unsigned int i;
+
+  for (i = 0;
+       i < (sizeof (elf_mc9s12x_howto_table)
+	    / sizeof (elf_mc9s12x_howto_table[0]));
+       i++)
+    if (elf_mc9s12x_howto_table[i].name != NULL
+	&& strcasecmp (elf_mc9s12x_howto_table[i].name, r_name) == 0)
+      return &elf_mc9s12x_howto_table[i];
+
+  return NULL;
+}
+
+/* Set the howto pointer for an M68HC11 ELF reloc.  */
+
+static void
+mc9s12x_info_to_howto_rel (bfd *abfd ATTRIBUTE_UNUSED,
+                           arelent *cache_ptr, Elf_Internal_Rela *dst)
+{
+  unsigned int r_type;
+
+  r_type = ELF32_R_TYPE (dst->r_info);
+  BFD_ASSERT (r_type < (unsigned int) R_MC9S12X_max);
+  cache_ptr->howto = &elf_mc9s12x_howto_table[r_type];
+}
+
+
+/* Far trampoline generation.  */
+
+/* Build a 68HC12 trampoline stub.  */
+static bfd_boolean
+mc9s12x_elf_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)
+{
+  struct elf32_mc9s12x_stub_hash_entry *stub_entry;
+  struct bfd_link_info *info;
+  struct mc9s12x_elf_link_hash_table *htab;
+  asection *stub_sec;
+  bfd *stub_bfd;
+  bfd_byte *loc;
+  bfd_vma sym_value, phys_page, phys_addr;
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9s12x_stub_hash_entry *) gen_entry;
+  info = (struct bfd_link_info *) in_arg;
+
+  htab = mc9s12x_elf_hash_table (info);
+
+  stub_sec = stub_entry->stub_sec;
+
+  /* Make a note of the offset within the stubs for this entry.  */
+  stub_entry->stub_offset = stub_sec->size;
+  stub_sec->size += 7;
+  loc = stub_sec->contents + stub_entry->stub_offset;
+
+  stub_bfd = stub_sec->owner;
+
+  /* Create the trampoline call stub:
+
+     ldy #%addr(symbol)
+     call %page(symbol), __trampoline
+
+  */
+  sym_value = (stub_entry->target_value
+               + stub_entry->target_section->output_offset
+               + stub_entry->target_section->output_section->vma);
+  phys_addr = mc9s12x_phys_addr (&htab->pinfo, sym_value);
+  phys_page = mc9s12x_phys_page (&htab->pinfo, sym_value);
+
+  /* ldy #%page(sym) */
+  bfd_put_8 (stub_bfd, 0xCD, loc);
+  bfd_put_16 (stub_bfd, phys_addr, loc + 1);
+  loc += 3;
+
+  /* call %page(sym), __trampoline  */
+  bfd_put_8 (stub_bfd, 0x4a, loc);
+  bfd_put_16 (stub_bfd, htab->pinfo.trampoline_addr, loc + 1);
+  bfd_put_8 (stub_bfd, phys_page, loc + 3);
+
+  return TRUE;
+}
+
+/* As above, but don't actually build the stub.  Just bump offset so
+   we know stub section sizes.  */
+
+static bfd_boolean
+mc9s12x_elf_size_one_stub (struct bfd_hash_entry *gen_entry,
+                           void *in_arg ATTRIBUTE_UNUSED)
+{
+  struct elf32_mc9s12x_stub_hash_entry *stub_entry;
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9s12x_stub_hash_entry *) gen_entry;
+
+  stub_entry->stub_sec->size += 7;
+  return TRUE;
+}
+
+/* Create a 68HC12 ELF linker hash table.  */
+
+static struct bfd_link_hash_table *
+mc9s12x_elf_bfd_link_hash_table_create (bfd *abfd)
+{
+  struct mc9s12x_elf_link_hash_table *ret;
+
+  ret = mc9s12x_elf_hash_table_create (abfd);
+  if (ret == (struct mc9s12x_elf_link_hash_table *) NULL)
+    return NULL;
+
+  ret->size_one_stub = mc9s12x_elf_size_one_stub;
+  ret->build_one_stub = mc9s12x_elf_build_one_stub;
+
+  return &ret->root.root;
+}
+
+static bfd_boolean
+mc9s12x_elf_set_mach_from_flags (bfd *abfd)
+{
+  flagword flags = elf_elfheader (abfd)->e_flags;
+
+  switch (flags & EF_MC9S12X_MACH_MASK)
+    {
+    case EF_MC9S12X_MACH:
+      bfd_default_set_arch_mach (abfd, bfd_arch_mc9s12x, bfd_mach_mc9s12x);
+      /* TODO bfd_mach_mc9s12x does not work as a parameter(0 instead) re-make headers maybe....
+       * UPDATE SEEMS TO WORK NOW */
+
+
+   // 	 bfd_default_set_arch_mach (abfd, bfd_arch_m68hc12, bfd_mach_m6812s);  /* for testing */
+      break;
+ //   case EF_MC9S12X_MACH:
+ //     bfd_default_set_arch_mach (abfd, bfd_arch_mc9s12x, bfd_mach_mc9s12x);
+ //     break;
+ //   case EF_MC9S12X_GENERIC:
+ //    bfd_default_set_arch_mach (abfd, bfd_arch_mc9s12x,
+ //                                bfd_mach_mc9s12x_default);
+ //     break;
+    default:
+      return FALSE;
+    }
+  return TRUE;
+}
+
+/* Specific sections:
+   - The .page0 is a data section that is mapped in [0x0000..0x00FF].
+     Page0 accesses are faster on the M68HC12.
+   - The .vectors is the section that represents the interrupt
+     vectors.  */
+static const struct bfd_elf_special_section elf32_mc9s12x_special_sections[] =
+{
+  { STRING_COMMA_LEN (".eeprom"),   0, SHT_PROGBITS, SHF_ALLOC + SHF_WRITE },
+  { STRING_COMMA_LEN (".page0"),    0, SHT_PROGBITS, SHF_ALLOC + SHF_WRITE },
+  { STRING_COMMA_LEN (".softregs"), 0, SHT_NOBITS,   SHF_ALLOC + SHF_WRITE },
+  { STRING_COMMA_LEN (".vectors"),  0, SHT_PROGBITS, SHF_ALLOC },
+  { NULL,                       0,  0, 0,            0 }
+};
+
+#define ELF_ARCH		bfd_arch_mc9s12x
+#define ELF_MACHINE_CODE	EM_MC9S12X
+
+//#define ELF_MACHINE_CODE	EM_68HC12 /* testing value */
+#define ELF_MAXPAGESIZE		0x1000
+
+#define TARGET_BIG_SYM          bfd_elf32_mc9s12x_vec
+#define TARGET_BIG_NAME		"elf32-mc9s12x"
+
+#define elf_info_to_howto	0
+#define elf_info_to_howto_rel	     mc9s12x_info_to_howto_rel  /* TODO figure out why this has to be here */
+#define elf_backend_check_relocs     elf32_mc9s12x_check_relocs
+#define elf_backend_relocate_section elf32_mc9s12x_relocate_section
+#define elf_backend_object_p		mc9s12x_elf_set_mach_from_flags
+#define elf_backend_final_write_processing	0
+#define elf_backend_can_gc_sections		1
+#define elf_backend_special_sections elf32_mc9s12x_special_sections
+#define elf_backend_post_process_headers     elf32_mc9s12x_post_process_headers
+#define elf_backend_add_symbol_hook  elf32_mc9s12x_add_symbol_hook
+
+#define bfd_elf32_bfd_link_hash_table_create \
+		mc9s12x_elf_bfd_link_hash_table_create
+#define bfd_elf32_bfd_link_hash_table_free \
+		mc9s12x_elf_bfd_link_hash_table_free
+#define bfd_elf32_bfd_merge_private_bfd_data \
+					_bfd_mc9s12x_elf_merge_private_bfd_data
+#define bfd_elf32_bfd_set_private_flags	_bfd_mc9s12x_elf_set_private_flags
+#define bfd_elf32_bfd_print_private_bfd_data \
+					_bfd_mc9s12x_elf_print_private_bfd_data
+
+#include "elf32-target.h"
+/* TODO
+ * I dont think you can.
+ *  make sure commenting out the above is OK  the elf32-target file ends up in the build directory*/
+
+/* ############################################################################################################################################
+ * included from hc1x.c ??????
+
+ Motorola 68HC11/HC12-specific support for 32-bit ELF
+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
+   2009 Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#define mc9s12x_stub_hash_lookup(table, string, create, copy) \
+  ((struct elf32_mc9s12x_stub_hash_entry *) \
+   bfd_hash_lookup ((table), (string), (create), (copy)))
+
+static struct elf32_mc9s12x_stub_hash_entry* mc9s12x_add_stub
+  (const char *stub_name,
+   asection *section,
+   struct mc9s12x_elf_link_hash_table *htab);
+
+static struct bfd_hash_entry *stub_hash_newfunc
+  (struct bfd_hash_entry *, struct bfd_hash_table *, const char *);
+
+static void mc9s12x_elf_set_symbol (bfd* abfd, struct bfd_link_info *info,
+                                    const char* name, bfd_vma value,
+                                    asection* sec);
+
+static bfd_boolean mc9s12x_elf_export_one_stub
+  (struct bfd_hash_entry *gen_entry, void *in_arg);
+
+static void scan_sections_for_abi (bfd*, asection*, PTR);
+
+struct mc9s12x_scan_param
+{
+   struct mc9s12x_page_info* pinfo;
+   bfd_boolean use_memory_banks;
+};
+
+
+/* Create a 68HC11/68HC12 ELF linker hash table.  */
+
+struct mc9s12x_elf_link_hash_table*
+mc9s12x_elf_hash_table_create (bfd *abfd)
+{
+  struct mc9s12x_elf_link_hash_table *ret;
+  bfd_size_type amt = sizeof (struct mc9s12x_elf_link_hash_table);
+
+  ret = (struct mc9s12x_elf_link_hash_table *) bfd_malloc (amt);
+  if (ret == (struct mc9s12x_elf_link_hash_table *) NULL)
+    return NULL;
+
+  memset (ret, 0, amt);
+  if (!_bfd_elf_link_hash_table_init (&ret->root, abfd,
+				      _bfd_elf_link_hash_newfunc,
+				      sizeof (struct elf_link_hash_entry)))
+    {
+      free (ret);
+      return NULL;
+    }
+
+  /* Init the stub hash table too.  */
+  amt = sizeof (struct bfd_hash_table);
+  ret->stub_hash_table = (struct bfd_hash_table*) bfd_malloc (amt);
+  if (ret->stub_hash_table == NULL)
+    {
+      free (ret);
+      return NULL;
+    }
+  if (!bfd_hash_table_init (ret->stub_hash_table, stub_hash_newfunc,
+			    sizeof (struct elf32_mc9s12x_stub_hash_entry)))
+    return NULL;
+
+  ret->stub_bfd = NULL;
+  ret->stub_section = 0;
+  ret->add_stub_section = NULL;
+  ret->sym_cache.abfd = NULL;
+
+  return ret;
+}
+
+/* Free the derived linker hash table.  */
+
+void
+mc9s12x_elf_bfd_link_hash_table_free (struct bfd_link_hash_table *hash)
+{
+  struct mc9s12x_elf_link_hash_table *ret
+    = (struct mc9s12x_elf_link_hash_table *) hash;
+
+  bfd_hash_table_free (ret->stub_hash_table);
+  free (ret->stub_hash_table);
+  _bfd_generic_link_hash_table_free (hash);
+}
+
+/* Assorted hash table functions.  */
+
+/* Initialize an entry in the stub hash table.  */
+
+static struct bfd_hash_entry *
+stub_hash_newfunc (struct bfd_hash_entry *entry, struct bfd_hash_table *table,
+                   const char *string)
+{
+  /* Allocate the structure if it has not already been allocated by a
+     subclass.  */
+  if (entry == NULL)
+    {
+      entry = bfd_hash_allocate (table,
+				 sizeof (struct elf32_mc9s12x_stub_hash_entry));
+      if (entry == NULL)
+	return entry;
+    }
+
+  /* Call the allocation method of the superclass.  */
+  entry = bfd_hash_newfunc (entry, table, string);
+  if (entry != NULL)
+    {
+      struct elf32_mc9s12x_stub_hash_entry *eh;
+
+      /* Initialize the local fields.  */
+      eh = (struct elf32_mc9s12x_stub_hash_entry *) entry;
+      eh->stub_sec = NULL;
+      eh->stub_offset = 0;
+      eh->target_value = 0;
+      eh->target_section = NULL;
+    }
+
+  return entry;
+}
+
+/* Add a new stub entry to the stub hash.  Not all fields of the new
+   stub entry are initialised.  */
+
+static struct elf32_mc9s12x_stub_hash_entry *
+mc9s12x_add_stub (const char *stub_name, asection *section,
+                  struct mc9s12x_elf_link_hash_table *htab)
+{
+  struct elf32_mc9s12x_stub_hash_entry *stub_entry;
+
+  /* Enter this entry into the linker stub hash table.  */
+  stub_entry = mc9s12x_stub_hash_lookup (htab->stub_hash_table, stub_name,
+                                         TRUE, FALSE);
+  if (stub_entry == NULL)
+    {
+      (*_bfd_error_handler) (_("%B: cannot create stub entry %s"),
+			     section->owner, stub_name);
+      return NULL;
+    }
+
+  if (htab->stub_section == 0)
+    {
+      htab->stub_section = (*htab->add_stub_section) (".tramp",
+                                                      htab->tramp_section);
+    }
+
+  stub_entry->stub_sec = htab->stub_section;
+  stub_entry->stub_offset = 0;
+  return stub_entry;
+}
+
+/* Hook called by the linker routine which adds symbols from an object
+   file.  We use it for identify far symbols and force a loading of
+   the trampoline handler.  */
+
+bfd_boolean
+elf32_mc9s12x_add_symbol_hook (bfd *abfd, struct bfd_link_info *info,
+                               Elf_Internal_Sym *sym,
+                               const char **namep ATTRIBUTE_UNUSED,
+                               flagword *flagsp ATTRIBUTE_UNUSED,
+                               asection **secp ATTRIBUTE_UNUSED,
+                               bfd_vma *valp ATTRIBUTE_UNUSED)
+{
+  if (sym->st_other & STO_MC9S12X_FAR)
+    {
+      struct elf_link_hash_entry *h;
+
+      h = (struct elf_link_hash_entry *)
+	bfd_link_hash_lookup (info->hash, "__far_trampoline",
+                              FALSE, FALSE, FALSE);
+      if (h == NULL)
+        {
+          struct bfd_link_hash_entry* entry = NULL;
+
+          _bfd_generic_link_add_one_symbol (info, abfd,
+                                            "__far_trampoline",
+                                            BSF_GLOBAL,
+                                            bfd_und_section_ptr,
+                                            (bfd_vma) 0, (const char*) NULL,
+                                            FALSE, FALSE, &entry);
+        }
+
+    }
+  return TRUE;
+}
+
+/* External entry points for sizing and building linker stubs.  */
+
+/* Set up various things so that we can make a list of input sections
+   for each output section included in the link.  Returns -1 on error,
+   0 when no stubs will be needed, and 1 on success.  */
+
+int
+elf32_mc9s12x_setup_section_lists (bfd *output_bfd, struct bfd_link_info *info)
+{
+  bfd *input_bfd;
+  unsigned int bfd_count;
+  int top_id, top_index;
+  asection *section;
+  asection **input_list, **list;
+  bfd_size_type amt;
+  asection *text_section;
+  struct mc9s12x_elf_link_hash_table *htab;
+
+  htab = mc9s12x_elf_hash_table (info);
+
+  if (bfd_get_flavour (info->output_bfd) != bfd_target_elf_flavour)
+    return 0;
+
+  /* Count the number of input BFDs and find the top input section id.
+     Also search for an existing ".tramp" section so that we know
+     where generated trampolines must go.  Default to ".text" if we
+     can't find it.  */
+  htab->tramp_section = 0;
+  text_section = 0;
+  for (input_bfd = info->input_bfds, bfd_count = 0, top_id = 0;
+       input_bfd != NULL;
+       input_bfd = input_bfd->link_next)
+    {
+      bfd_count += 1;
+      for (section = input_bfd->sections;
+	   section != NULL;
+	   section = section->next)
+	{
+          const char* name = bfd_get_section_name (input_bfd, section);
+
+          if (!strcmp (name, ".tramp"))
+            htab->tramp_section = section;
+
+          if (!strcmp (name, ".text"))
+            text_section = section;
+
+	  if (top_id < section->id)
+	    top_id = section->id;
+	}
+    }
+  htab->bfd_count = bfd_count;
+  if (htab->tramp_section == 0)
+    htab->tramp_section = text_section;
+
+  /* We can't use output_bfd->section_count here to find the top output
+     section index as some sections may have been removed, and
+     strip_excluded_output_sections doesn't renumber the indices.  */
+  for (section = output_bfd->sections, top_index = 0;
+       section != NULL;
+       section = section->next)
+    {
+      if (top_index < section->index)
+	top_index = section->index;
+    }
+
+  htab->top_index = top_index;
+  amt = sizeof (asection *) * (top_index + 1);
+  input_list = (asection **) bfd_malloc (amt);
+  htab->input_list = input_list;
+  if (input_list == NULL)
+    return -1;
+
+  /* For sections we aren't interested in, mark their entries with a
+     value we can check later.  */
+  list = input_list + top_index;
+  do
+    *list = bfd_abs_section_ptr;
+  while (list-- != input_list);
+
+  for (section = output_bfd->sections;
+       section != NULL;
+       section = section->next)
+    {
+      if ((section->flags & SEC_CODE) != 0)
+	input_list[section->index] = NULL;
+    }
+
+  return 1;
+}
+
+/* Determine and set the size of the stub section for a final link.
+
+   The basic idea here is to examine all the relocations looking for
+   PC-relative calls to a target that is unreachable with a "bl"
+   instruction.  */
+
+bfd_boolean
+elf32_mc9s12x_size_stubs (bfd *output_bfd, bfd *stub_bfd,
+                          struct bfd_link_info *info,
+                          asection * (*add_stub_section) (const char*, asection*))
+{
+  bfd *input_bfd;
+  asection *section;
+  Elf_Internal_Sym *local_syms, **all_local_syms;
+  unsigned int bfd_indx, bfd_count;
+  bfd_size_type amt;
+  asection *stub_sec;
+
+  struct mc9s12x_elf_link_hash_table *htab = mc9s12x_elf_hash_table (info);
+
+  /* Stash our params away.  */
+  htab->stub_bfd = stub_bfd;
+  htab->add_stub_section = add_stub_section;
+
+  /* Count the number of input BFDs and find the top input section id.  */
+  for (input_bfd = info->input_bfds, bfd_count = 0;
+       input_bfd != NULL;
+       input_bfd = input_bfd->link_next)
+    {
+      bfd_count += 1;
+    }
+
+  /* We want to read in symbol extension records only once.  To do this
+     we need to read in the local symbols in parallel and save them for
+     later use; so hold pointers to the local symbols in an array.  */
+  amt = sizeof (Elf_Internal_Sym *) * bfd_count;
+  all_local_syms = (Elf_Internal_Sym **) bfd_zmalloc (amt);
+  if (all_local_syms == NULL)
+    return FALSE;
+
+  /* Walk over all the input BFDs, swapping in local symbols.  */
+  for (input_bfd = info->input_bfds, bfd_indx = 0;
+       input_bfd != NULL;
+       input_bfd = input_bfd->link_next, bfd_indx++)
+    {
+      Elf_Internal_Shdr *symtab_hdr;
+
+      /* We'll need the symbol table in a second.  */
+      symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+      if (symtab_hdr->sh_info == 0)
+	continue;
+
+      /* We need an array of the local symbols attached to the input bfd.  */
+      local_syms = (Elf_Internal_Sym *) symtab_hdr->contents;
+      if (local_syms == NULL)
+	{
+	  local_syms = bfd_elf_get_elf_syms (input_bfd, symtab_hdr,
+					     symtab_hdr->sh_info, 0,
+					     NULL, NULL, NULL);
+	  /* Cache them for elf_link_input_bfd.  */
+	  symtab_hdr->contents = (unsigned char *) local_syms;
+	}
+      if (local_syms == NULL)
+        {
+          free (all_local_syms);
+	  return FALSE;
+        }
+
+      all_local_syms[bfd_indx] = local_syms;
+    }
+
+  for (input_bfd = info->input_bfds, bfd_indx = 0;
+       input_bfd != NULL;
+       input_bfd = input_bfd->link_next, bfd_indx++)
+    {
+      Elf_Internal_Shdr *symtab_hdr;
+      Elf_Internal_Sym *local_syms;
+      struct elf_link_hash_entry ** sym_hashes;
+
+      sym_hashes = elf_sym_hashes (input_bfd);
+
+      /* We'll need the symbol table in a second.  */
+      symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+      if (symtab_hdr->sh_info == 0)
+        continue;
+
+      local_syms = all_local_syms[bfd_indx];
+
+      /* Walk over each section attached to the input bfd.  */
+      for (section = input_bfd->sections;
+           section != NULL;
+           section = section->next)
+        {
+          Elf_Internal_Rela *internal_relocs, *irelaend, *irela;
+
+          /* If there aren't any relocs, then there's nothing more
+             to do.  */
+          if ((section->flags & SEC_RELOC) == 0
+              || section->reloc_count == 0)
+            continue;
+
+          /* If this section is a link-once section that will be
+             discarded, then don't create any stubs.  */
+          if (section->output_section == NULL
+              || section->output_section->owner != output_bfd)
+            continue;
+
+          /* Get the relocs.  */
+          internal_relocs
+            = _bfd_elf_link_read_relocs (input_bfd, section, NULL,
+					 (Elf_Internal_Rela *) NULL,
+					 info->keep_memory);
+          if (internal_relocs == NULL)
+            goto error_ret_free_local;
+
+          /* Now examine each relocation.  */
+          irela = internal_relocs;
+          irelaend = irela + section->reloc_count;
+          for (; irela < irelaend; irela++)
+            {
+              unsigned int r_type, r_indx;
+              struct elf32_mc9s12x_stub_hash_entry *stub_entry;
+              asection *sym_sec;
+              bfd_vma sym_value;
+              struct elf_link_hash_entry *hash;
+              const char *stub_name;
+              Elf_Internal_Sym *sym;
+
+              r_type = ELF32_R_TYPE (irela->r_info);
+
+              /* Only look at 16-bit relocs.  */
+              if (r_type != (unsigned int) R_MC9S12X_16)
+                continue;
+
+              /* Now determine the call target, its name, value,
+                 section.  */
+              r_indx = ELF32_R_SYM (irela->r_info);
+              if (r_indx < symtab_hdr->sh_info)
+                {
+                  /* It's a local symbol.  */
+                  Elf_Internal_Shdr *hdr;
+                  bfd_boolean is_far;
+
+                  sym = local_syms + r_indx;
+                  is_far = (sym && (sym->st_other & STO_MC9S12X_FAR));
+                  if (!is_far)
+                    continue;
+
+		  if (sym->st_shndx >= elf_numsections (input_bfd))
+		    sym_sec = NULL;
+		  else
+		    {
+		      hdr = elf_elfsections (input_bfd)[sym->st_shndx];
+		      sym_sec = hdr->bfd_section;
+		    }
+                  stub_name = (bfd_elf_string_from_elf_section
+                               (input_bfd, symtab_hdr->sh_link,
+                                sym->st_name));
+                  sym_value = sym->st_value;
+                  hash = NULL;
+                }
+              else
+                {
+                  /* It's an external symbol.  */
+                  int e_indx;
+
+                  e_indx = r_indx - symtab_hdr->sh_info;
+                  hash = (struct elf_link_hash_entry *)
+                    (sym_hashes[e_indx]);
+
+                  while (hash->root.type == bfd_link_hash_indirect
+                         || hash->root.type == bfd_link_hash_warning)
+                    hash = ((struct elf_link_hash_entry *)
+                            hash->root.u.i.link);
+
+                  if (hash->root.type == bfd_link_hash_defined
+                      || hash->root.type == bfd_link_hash_defweak
+                      || hash->root.type == bfd_link_hash_new)
+                    {
+                      if (!(hash->other & STO_MC9S12X_FAR))
+                        continue;
+                    }
+                  else if (hash->root.type == bfd_link_hash_undefweak)
+                    {
+                      continue;
+                    }
+                  else if (hash->root.type == bfd_link_hash_undefined)
+                    {
+                      continue;
+                    }
+                  else
+                    {
+                      bfd_set_error (bfd_error_bad_value);
+                      goto error_ret_free_internal;
+                    }
+                  sym_sec = hash->root.u.def.section;
+                  sym_value = hash->root.u.def.value;
+                  stub_name = hash->root.root.string;
+                }
+
+              if (!stub_name)
+                goto error_ret_free_internal;
+
+              stub_entry = mc9s12x_stub_hash_lookup
+                (htab->stub_hash_table,
+                 stub_name,
+                 FALSE, FALSE);
+              if (stub_entry == NULL)
+                {
+                  if (add_stub_section == 0)
+                    continue;
+
+                  stub_entry = mc9s12x_add_stub (stub_name, section, htab);
+                  if (stub_entry == NULL)
+                    {
+                    error_ret_free_internal:
+                      if (elf_section_data (section)->relocs == NULL)
+                        free (internal_relocs);
+                      goto error_ret_free_local;
+                    }
+                }
+
+              stub_entry->target_value = sym_value;
+              stub_entry->target_section = sym_sec;
+            }
+
+          /* We're done with the internal relocs, free them.  */
+          if (elf_section_data (section)->relocs == NULL)
+            free (internal_relocs);
+        }
+    }
+
+  if (add_stub_section)
+    {
+      /* OK, we've added some stubs.  Find out the new size of the
+         stub sections.  */
+      for (stub_sec = htab->stub_bfd->sections;
+           stub_sec != NULL;
+           stub_sec = stub_sec->next)
+        {
+          stub_sec->size = 0;
+        }
+
+      bfd_hash_traverse (htab->stub_hash_table, htab->size_one_stub, htab);
+    }
+  free (all_local_syms);
+  return TRUE;
+
+ error_ret_free_local:
+  free (all_local_syms);
+  return FALSE;
+}
+
+/* Export the trampoline addresses in the symbol table.  */
+static bfd_boolean
+mc9s12x_elf_export_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)
+{
+  struct bfd_link_info *info;
+  struct mc9s12x_elf_link_hash_table *htab;
+  struct elf32_mc9s12x_stub_hash_entry *stub_entry;
+  char* name;
+  bfd_boolean result;
+
+  info = (struct bfd_link_info *) in_arg;
+  htab = mc9s12x_elf_hash_table (info);
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9s12x_stub_hash_entry *) gen_entry;
+
+  /* Generate the trampoline according to HC11 or HC12.  */
+  result = (* htab->build_one_stub) (gen_entry, in_arg);
+
+  /* Make a printable name that does not conflict with the real function.  */
+  name = alloca (strlen (stub_entry->root.string) + 16);
+  sprintf (name, "tramp.%s", stub_entry->root.string);
+
+  /* Export the symbol for debugging/disassembling.  */
+  mc9s12x_elf_set_symbol (htab->stub_bfd, info, name,
+                          stub_entry->stub_offset,
+                          stub_entry->stub_sec);
+  return result;
+}
+
+/* Export a symbol or set its value and section.  */
+static void
+mc9s12x_elf_set_symbol (bfd *abfd, struct bfd_link_info *info,
+                        const char *name, bfd_vma value, asection *sec)
+{
+  struct elf_link_hash_entry *h;
+
+  h = (struct elf_link_hash_entry *)
+    bfd_link_hash_lookup (info->hash, name, FALSE, FALSE, FALSE);
+  if (h == NULL)
+    {
+      _bfd_generic_link_add_one_symbol (info, abfd,
+                                        name,
+                                        BSF_GLOBAL,
+                                        sec,
+                                        value,
+                                        (const char*) NULL,
+                                        TRUE, FALSE, NULL);
+    }
+  else
+    {
+      h->root.type = bfd_link_hash_defined;
+      h->root.u.def.value = value;
+      h->root.u.def.section = sec;
+    }
+}
+
+
+/* Build all the stubs associated with the current output file.  The
+   stubs are kept in a hash table attached to the main linker hash
+   table.  This function is called via m68hc12elf_finish in the
+   linker.  */
+
+bfd_boolean
+elf32_mc9s12x_build_stubs (bfd *abfd, struct bfd_link_info *info)
+{
+  asection *stub_sec;
+  struct bfd_hash_table *table;
+  struct mc9s12x_elf_link_hash_table *htab;
+  struct mc9s12x_scan_param param;
+
+  mc9s12x_elf_get_bank_parameters (info);
+  htab = mc9s12x_elf_hash_table (info);
+
+  for (stub_sec = htab->stub_bfd->sections;
+       stub_sec != NULL;
+       stub_sec = stub_sec->next)
+    {
+      bfd_size_type size;
+
+      /* Allocate memory to hold the linker stubs.  */
+      size = stub_sec->size;
+      stub_sec->contents = (unsigned char *) bfd_zalloc (htab->stub_bfd, size);
+      if (stub_sec->contents == NULL && size != 0)
+	return FALSE;
+      stub_sec->size = 0;
+    }
+
+  /* Build the stubs as directed by the stub hash table.  */
+  table = htab->stub_hash_table;
+  bfd_hash_traverse (table, mc9s12x_elf_export_one_stub, info);
+
+  /* Scan the output sections to see if we use the memory banks.
+     If so, export the symbols that define how the memory banks
+     are mapped.  This is used by gdb and the simulator to obtain
+     the information.  It can be used by programs to burn the eprom
+     at the good addresses.  */
+  param.use_memory_banks = FALSE;
+  param.pinfo = &htab->pinfo;
+  bfd_map_over_sections (abfd, scan_sections_for_abi, &param);
+  if (param.use_memory_banks)
+    {
+      mc9s12x_elf_set_symbol (abfd, info, BFD_MC9S12X_BANK_START_NAME,
+                              htab->pinfo.bank_physical,
+                              bfd_abs_section_ptr);
+      mc9s12x_elf_set_symbol (abfd, info, BFD_MC9S12X_BANK_VIRTUAL_NAME,
+                              htab->pinfo.bank_virtual,
+                              bfd_abs_section_ptr);
+      mc9s12x_elf_set_symbol (abfd, info, BFD_MC9S12X_BANK_SIZE_NAME,
+                              htab->pinfo.bank_size,
+                              bfd_abs_section_ptr);
+    }
+
+  return TRUE;
+}
+
+void
+mc9s12x_elf_get_bank_parameters (struct bfd_link_info *info)
+{
+  unsigned i;
+  struct mc9s12x_page_info *pinfo;
+  struct bfd_link_hash_entry *h;
+
+  pinfo = &mc9s12x_elf_hash_table (info)->pinfo;
+  if (pinfo->bank_param_initialized)
+    return;
+
+  pinfo->bank_virtual = MC9S12X_BANK_VIRT;
+  pinfo->bank_mask = MC9S12X_BANK_MASK;
+  pinfo->bank_physical = MC9S12X_BANK_BASE;
+  pinfo->bank_shift = MC9S12X_BANK_SHIFT;
+  pinfo->bank_size = 1 << MC9S12X_BANK_SHIFT;
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9S12X_BANK_START_NAME,
+                            FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_physical = (h->u.def.value
+                            + h->u.def.section->output_section->vma
+                            + h->u.def.section->output_offset);
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9S12X_BANK_VIRTUAL_NAME,
+                            FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_virtual = (h->u.def.value
+                           + h->u.def.section->output_section->vma
+                           + h->u.def.section->output_offset);
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9S12X_BANK_SIZE_NAME,
+                            FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_size = (h->u.def.value
+                        + h->u.def.section->output_section->vma
+                        + h->u.def.section->output_offset);
+
+  pinfo->bank_shift = 0;
+  for (i = pinfo->bank_size; i != 0; i >>= 1)
+    pinfo->bank_shift++;
+  pinfo->bank_shift--;
+  pinfo->bank_mask = (1 << pinfo->bank_shift) - 1;
+  pinfo->bank_physical_end = pinfo->bank_physical + pinfo->bank_size;
+  pinfo->bank_param_initialized = 1;
+
+  h = bfd_link_hash_lookup (info->hash, "__far_trampoline", FALSE,
+                            FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->trampoline_addr = (h->u.def.value
+                              + h->u.def.section->output_section->vma
+                              + h->u.def.section->output_offset);
+}
+
+/* Return 1 if the address is in banked memory.
+   This can be applied to a virtual address and to a physical address.  */
+int
+mc9s12x_addr_is_banked (struct mc9s12x_page_info *pinfo, bfd_vma addr)
+{
+  if (addr >= pinfo->bank_virtual)
+    return 1;
+
+  if (addr >= pinfo->bank_physical && addr <= pinfo->bank_physical_end)
+    return 1;
+
+  return 0;
+}
+
+/* Return the physical address seen by the processor, taking
+   into account banked memory.  */
+bfd_vma
+mc9s12x_phys_addr (struct mc9s12x_page_info *pinfo, bfd_vma addr)
+{
+  if (addr < pinfo->bank_virtual)
+    return addr;
+
+  /* Map the address to the memory bank.  */
+  addr -= pinfo->bank_virtual;
+  addr &= pinfo->bank_mask;
+  addr += pinfo->bank_physical;
+  return addr;
+}
+
+/* Return the page number corresponding to an address in banked memory.  */
+bfd_vma
+mc9s12x_phys_page (struct mc9s12x_page_info *pinfo, bfd_vma addr)
+{
+  if (addr < pinfo->bank_virtual)
+    return 0;
+
+  /* Map the address to the memory bank.  */
+  addr -= pinfo->bank_virtual;
+  addr >>= pinfo->bank_shift;
+  addr &= 0x0ff;
+  return addr;
+}
+
+/* This function is used for relocs which are only used for relaxing,
+   which the linker should otherwise ignore.  */
+
+bfd_reloc_status_type
+mc9s12x_elf_ignore_reloc (bfd *abfd ATTRIBUTE_UNUSED,
+                          arelent *reloc_entry,
+                          asymbol *symbol ATTRIBUTE_UNUSED,
+                          void *data ATTRIBUTE_UNUSED,
+                          asection *input_section,
+                          bfd *output_bfd,
+                          char **error_message ATTRIBUTE_UNUSED)
+{
+  if (output_bfd != NULL)
+    reloc_entry->address += input_section->output_offset;
+  return bfd_reloc_ok;
+}
+
+bfd_reloc_status_type
+mc9s12x_elf_special_reloc (bfd *abfd ATTRIBUTE_UNUSED,
+                           arelent *reloc_entry,
+                           asymbol *symbol,
+                           void *data ATTRIBUTE_UNUSED,
+                           asection *input_section,
+                           bfd *output_bfd,
+                           char **error_message ATTRIBUTE_UNUSED)
+{
+  if (output_bfd != (bfd *) NULL
+      && (symbol->flags & BSF_SECTION_SYM) == 0
+      && (! reloc_entry->howto->partial_inplace
+	  || reloc_entry->addend == 0))
+    {
+      reloc_entry->address += input_section->output_offset;
+      return bfd_reloc_ok;
+    }
+
+  if (output_bfd != NULL)
+    return bfd_reloc_continue;
+
+  if (reloc_entry->address > bfd_get_section_limit (abfd, input_section))
+    return bfd_reloc_outofrange;
+
+  abort();
+}
+
+/* Look through the relocs for a section during the first phase.
+   Since we don't do .gots or .plts, we just need to consider the
+   virtual table relocs for gc.  */
+
+bfd_boolean
+elf32_mc9s12x_check_relocs (bfd *abfd, struct bfd_link_info *info,
+                            asection *sec, const Elf_Internal_Rela *relocs)
+{
+  Elf_Internal_Shdr *           symtab_hdr;
+  struct elf_link_hash_entry ** sym_hashes;
+  const Elf_Internal_Rela *     rel;
+  const Elf_Internal_Rela *     rel_end;
+
+  if (info->relocatable)
+    return TRUE;
+
+  symtab_hdr = & elf_tdata (abfd)->symtab_hdr;
+  sym_hashes = elf_sym_hashes (abfd);
+  rel_end = relocs + sec->reloc_count;
+
+  for (rel = relocs; rel < rel_end; rel++)
+    {
+      struct elf_link_hash_entry * h;
+      unsigned long r_symndx;
+
+      r_symndx = ELF32_R_SYM (rel->r_info);
+
+      if (r_symndx < symtab_hdr->sh_info)
+        h = NULL;
+      else
+	{
+	  h = sym_hashes [r_symndx - symtab_hdr->sh_info];
+	  while (h->root.type == bfd_link_hash_indirect
+		 || h->root.type == bfd_link_hash_warning)
+	    h = (struct elf_link_hash_entry *) h->root.u.i.link;
+	}
+
+      switch (ELF32_R_TYPE (rel->r_info))
+        {
+        /* This relocation describes the C++ object vtable hierarchy.
+           Reconstruct it for later use during GC.  */
+        case R_MC9S12X_GNU_VTINHERIT:
+          if (!bfd_elf_gc_record_vtinherit (abfd, sec, h, rel->r_offset))
+            return FALSE;
+          break;
+
+        /* This relocation describes which C++ vtable entries are actually
+           used.  Record for later use during GC.  */
+        case R_MC9S12X_GNU_VTENTRY:
+          BFD_ASSERT (h != NULL);
+          if (h != NULL
+              && !bfd_elf_gc_record_vtentry (abfd, sec, h, rel->r_addend))
+            return FALSE;
+          break;
+        }
+    }
+
+  return TRUE;
+}
+
+/* Relocate a 68hc11/68hc12 ELF section.  */
+bfd_boolean
+elf32_mc9s12x_relocate_section (bfd *output_bfd ATTRIBUTE_UNUSED,
+                                struct bfd_link_info *info,
+                                bfd *input_bfd, asection *input_section,
+                                bfd_byte *contents, Elf_Internal_Rela *relocs,
+                                Elf_Internal_Sym *local_syms,
+                                asection **local_sections)
+{
+  Elf_Internal_Shdr *symtab_hdr;
+  struct elf_link_hash_entry **sym_hashes;
+  Elf_Internal_Rela *rel, *relend;
+  const char *name = NULL;
+  struct mc9s12x_page_info *pinfo;
+  const struct elf_backend_data * const ebd = get_elf_backend_data (input_bfd);
+
+  symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+  sym_hashes = elf_sym_hashes (input_bfd);
+
+  /* Get memory bank parameters.  */
+  mc9s12x_elf_get_bank_parameters (info);
+  pinfo = &mc9s12x_elf_hash_table (info)->pinfo;
+
+  rel = relocs;
+  relend = relocs + input_section->reloc_count;
+  for (; rel < relend; rel++)
+    {
+      int r_type;
+      arelent arel;
+      reloc_howto_type *howto;
+      unsigned long r_symndx;
+      Elf_Internal_Sym *sym;
+      asection *sec;
+      bfd_vma relocation = 0;
+      bfd_reloc_status_type r = bfd_reloc_undefined;
+      bfd_vma phys_page;
+      bfd_vma phys_addr;
+      bfd_vma insn_addr;
+      bfd_vma insn_page;
+      bfd_boolean is_far = FALSE;
+      struct elf_link_hash_entry *h;
+      const char* stub_name = 0;
+
+      r_symndx = ELF32_R_SYM (rel->r_info);
+      r_type = ELF32_R_TYPE (rel->r_info);
+
+      if (r_type == R_MC9S12X_GNU_VTENTRY
+          || r_type == R_MC9S12X_GNU_VTINHERIT )
+        continue;
+
+      #undef elf_info_to_howto_rel  /* TODO fix so this is not necessary */
+      (*ebd->elf_info_to_howto_rel) (input_bfd, &arel, rel);
+      howto = arel.howto;
+
+      h = NULL;
+      sym = NULL;
+      sec = NULL;
+      if (r_symndx < symtab_hdr->sh_info)
+	{
+	  sym = local_syms + r_symndx;
+	  sec = local_sections[r_symndx];
+	  relocation = (sec->output_section->vma
+			+ sec->output_offset
+			+ sym->st_value);
+	  is_far = (sym && (sym->st_other & STO_MC9S12X_FAR));
+	  if (is_far)
+	    stub_name = (bfd_elf_string_from_elf_section
+			 (input_bfd, symtab_hdr->sh_link,
+			  sym->st_name));
+	}
+      else
+	{
+	  bfd_boolean unresolved_reloc, warned;
+
+	  RELOC_FOR_GLOBAL_SYMBOL (info, input_bfd, input_section, rel,
+				   r_symndx, symtab_hdr, sym_hashes,
+				   h, sec, relocation, unresolved_reloc,
+				   warned);
+
+	  is_far = (h && (h->other & STO_MC9S12X_FAR));
+	  stub_name = h->root.root.string;
+	}
+
+      if (sec != NULL && elf_discarded_section (sec))
+	{
+	  /* For relocs against symbols from removed linkonce sections,
+	     or sections discarded by a linker script, we just want the
+	     section contents zeroed.  Avoid any special processing.  */
+	  _bfd_clear_contents (howto, input_bfd, contents + rel->r_offset);
+	  rel->r_info = 0;
+	  rel->r_addend = 0;
+	  continue;
+	}
+
+      if (info->relocatable)
+	{
+	  /* This is a relocatable link.  We don't have to change
+	     anything, unless the reloc is against a section symbol,
+	     in which case we have to adjust according to where the
+	     section symbol winds up in the output section.  */
+	  if (sym != NULL && ELF_ST_TYPE (sym->st_info) == STT_SECTION)
+	    rel->r_addend += sec->output_offset;
+	  continue;
+	}
+
+      if (h != NULL)
+	name = h->root.root.string;
+      else
+	{
+	  name = (bfd_elf_string_from_elf_section
+		  (input_bfd, symtab_hdr->sh_link, sym->st_name));
+	  if (name == NULL || *name == '\0')
+	    name = bfd_section_name (input_bfd, sec);
+	}
+
+      if (is_far && ELF32_R_TYPE (rel->r_info) == R_MC9S12X_16)
+	{
+    	  //printf("\n is far and rinfo is r_mc9s12x_16");
+	  struct elf32_mc9s12x_stub_hash_entry* stub;
+	  struct mc9s12x_elf_link_hash_table *htab;
+
+	  htab = mc9s12x_elf_hash_table (info);
+	  stub = mc9s12x_stub_hash_lookup (htab->stub_hash_table,
+					   name, FALSE, FALSE);
+	  if (stub)
+	    {
+	      relocation = stub->stub_offset
+		+ stub->stub_sec->output_section->vma
+		+ stub->stub_sec->output_offset;
+	      is_far = FALSE;
+	    }
+	}
+
+      /* Do the memory bank mapping.  */
+      phys_addr = mc9s12x_phys_addr (pinfo, relocation + rel->r_addend);
+      phys_page = mc9s12x_phys_page (pinfo, relocation + rel->r_addend);
+      switch (r_type)
+        {
+      case	R_MC9XGATE_IMM8_LO:
+         	  //printf("\n relocation is %lu", relocation);
+         	  /* relocation is already set to physical address at this point */
+
+         	//  break;
+       case	R_MC9XGATE_IMM8_HI:
+               //printf("\n case  elf32 relocate IMM16");
+               break;
+        case R_MC9S12X_24:
+          /* Reloc used by 68HC12 call instruction.  */
+          bfd_put_16 (input_bfd, phys_addr,
+                      (bfd_byte*) contents + rel->r_offset);
+          bfd_put_8 (input_bfd, phys_page,
+                     (bfd_byte*) contents + rel->r_offset + 2);
+          r = bfd_reloc_ok;
+          r_type = R_MC9S12X_NONE;
+          break;
+
+        case R_MC9S12X_NONE:
+          r = bfd_reloc_ok;
+          break;
+
+        case R_MC9S12X_LO16:
+          /* Reloc generated by %addr(expr) gas to obtain the
+             address as mapped in the memory bank window.  */
+          relocation = phys_addr;
+          break;
+
+        case R_MC9S12X_PAGE:
+          /* Reloc generated by %page(expr) gas to obtain the
+             page number associated with the address.  */
+          relocation = phys_page;
+          break;
+
+        case R_MC9S12X_16:
+          /* Get virtual address of instruction having the relocation.  */
+          if (is_far)
+            {
+              const char* msg;
+              char* buf;
+              msg = _("Reference to the far symbol `%s' using a wrong "
+                      "relocation may result in incorrect execution");
+              buf = alloca (strlen (msg) + strlen (name) + 10);
+              sprintf (buf, msg, name);
+
+              (* info->callbacks->warning)
+                (info, buf, name, input_bfd, NULL, rel->r_offset);
+            }
+
+          /* Get virtual address of instruction having the relocation.  */
+          insn_addr = input_section->output_section->vma
+            + input_section->output_offset
+            + rel->r_offset;
+
+          insn_page = mc9s12x_phys_page (pinfo, insn_addr);
+
+          if (mc9s12x_addr_is_banked (pinfo, relocation + rel->r_addend)
+              && mc9s12x_addr_is_banked (pinfo, insn_addr)
+              && phys_page != insn_page)
+            {
+              const char* msg;
+              char* buf;
+
+              msg = _("banked address [%lx:%04lx] (%lx) is not in the same bank "
+                      "as current banked address [%lx:%04lx] (%lx)");
+
+              buf = alloca (strlen (msg) + 128);
+              sprintf (buf, msg, phys_page, phys_addr,
+                       (long) (relocation + rel->r_addend),
+                       insn_page, mc9s12x_phys_addr (pinfo, insn_addr),
+                       (long) (insn_addr));
+              if (!((*info->callbacks->warning)
+                    (info, buf, name, input_bfd, input_section,
+                     rel->r_offset)))
+                return FALSE;
+              break;
+            }
+          if (phys_page != 0 && insn_page == 0)
+            {
+              const char* msg;
+              char* buf;
+
+              msg = _("reference to a banked address [%lx:%04lx] in the "
+                      "normal address space at %04lx");
+
+              buf = alloca (strlen (msg) + 128);
+              sprintf (buf, msg, phys_page, phys_addr, insn_addr);
+              if (!((*info->callbacks->warning)
+                    (info, buf, name, input_bfd, input_section,
+                     insn_addr)))
+                return FALSE;
+
+              relocation = phys_addr;
+              break;
+            }
+
+          /* If this is a banked address use the phys_addr so that
+             we stay in the banked window.  */
+          if (mc9s12x_addr_is_banked (pinfo, relocation + rel->r_addend))
+            relocation = phys_addr;
+          break;
+        }
+      if (r_type != R_MC9S12X_NONE)
+        r = _bfd_final_link_relocate (howto, input_bfd, input_section,
+                                      contents, rel->r_offset,
+                                      relocation, rel->r_addend);
+
+      if (r != bfd_reloc_ok)
+	{
+	  const char * msg = (const char *) 0;
+
+	  switch (r)
+	    {
+	    case bfd_reloc_overflow:
+	      if (!((*info->callbacks->reloc_overflow)
+		    (info, NULL, name, howto->name, (bfd_vma) 0,
+		     input_bfd, input_section, rel->r_offset)))
+		return FALSE;
+	      break;
+
+	    case bfd_reloc_undefined:
+	      if (!((*info->callbacks->undefined_symbol)
+		    (info, name, input_bfd, input_section,
+		     rel->r_offset, TRUE)))
+		return FALSE;
+	      break;
+
+	    case bfd_reloc_outofrange:
+	      msg = _ ("internal error: out of range error");
+	      goto common_error;
+
+	    case bfd_reloc_notsupported:
+	      msg = _ ("internal error: unsupported relocation error");
+	      goto common_error;
+
+	    case bfd_reloc_dangerous:
+	      msg = _ ("internal error: dangerous error");
+	      goto common_error;
+
+	    default:
+	      msg = _ ("internal error: unknown error");
+	      /* fall through */
+
+	    common_error:
+	      if (!((*info->callbacks->warning)
+		    (info, msg, name, input_bfd, input_section,
+		     rel->r_offset)))
+		return FALSE;
+	      break;
+	    }
+	}
+    }
+
+  return TRUE;
+}
+
+
+
+/* Set and control ELF flags in ELF header.  */
+
+bfd_boolean
+_bfd_mc9s12x_elf_set_private_flags (bfd *abfd, flagword flags)
+{
+  BFD_ASSERT (!elf_flags_init (abfd)
+	      || elf_elfheader (abfd)->e_flags == flags);
+
+  elf_elfheader (abfd)->e_flags = flags;
+  elf_flags_init (abfd) = TRUE;
+  return TRUE;
+}
+
+/* Merge backend specific data from an object file to the output
+   object file when linking.  */
+
+bfd_boolean
+_bfd_mc9s12x_elf_merge_private_bfd_data (bfd *ibfd, bfd *obfd)
+{
+  flagword old_flags;
+  flagword new_flags;
+  bfd_boolean ok = TRUE;
+  printf("\n in merge private bfd data");
+  /* Check if we have the same endianess */
+  if (!_bfd_generic_verify_endian_match (ibfd, obfd)){
+    printf("\n abou to return FALSE verify endian");
+    return FALSE;
+  }
+
+  if (bfd_get_flavour (ibfd) != bfd_target_elf_flavour
+      || bfd_get_flavour (obfd) != bfd_target_elf_flavour){
+    printf("\n about to return FALSE ");
+    return TRUE;
+  }
+
+
+  new_flags = elf_elfheader (ibfd)->e_flags;
+  elf_elfheader (obfd)->e_flags |= new_flags & EF_MC9S12X_ABI;
+  old_flags = elf_elfheader (obfd)->e_flags;
+
+  if (! elf_flags_init (obfd))
+    {
+      elf_flags_init (obfd) = TRUE;
+      elf_elfheader (obfd)->e_flags = new_flags;
+      elf_elfheader (obfd)->e_ident[EI_CLASS]
+	= elf_elfheader (ibfd)->e_ident[EI_CLASS];
+
+      if (bfd_get_arch (obfd) == bfd_get_arch (ibfd)
+	  && bfd_get_arch_info (obfd)->the_default)
+	{
+	  if (! bfd_set_arch_mach (obfd, bfd_get_arch (ibfd),
+				   bfd_get_mach (ibfd)))
+	    return FALSE;
+	}
+
+      return TRUE;
+    }
+
+  /* Check ABI compatibility.  */
+  if ((new_flags & E_MC9S12X_I32) != (old_flags & E_MC9S12X_I32))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 16-bit integers (-mshort) "
+           "and others for 32-bit integers"), ibfd);
+      ok = FALSE;
+    }
+  if ((new_flags & E_MC9S12X_F64) != (old_flags & E_MC9S12X_F64))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 32-bit double (-fshort-double) "
+           "and others for 64-bit double"), ibfd);
+      ok = FALSE;
+    }
+
+
+
+/*   Check ABI compatibility.
+  if ((new_flags & E_MC9S12X_I32) != (old_flags & E_MC9S12X_I32))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 16-bit integers (-mshort) "
+           "and others for 32-bit integers"), ibfd);
+      ok = FALSE;
+    }
+  if ((new_flags & E_MMC9S12X_F64) != (old_flags & E_MC9S12X_F64))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 32-bit double (-fshort-double) "
+           "and others for 64-bit double"), ibfd);
+      ok = FALSE;
+    }
+
+  Processor compatibility.
+  if (!EF_M68HC11_CAN_MERGE_MACH (new_flags, old_flags))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for HCS12 with "
+           "others compiled for HC12"), ibfd);
+      ok = FALSE;
+    }
+  new_flags = ((new_flags & ~EF_M68HC11_MACH_MASK)
+               | (EF_M68HC11_MERGE_MACH (new_flags, old_flags)));
+
+  elf_elfheader (obfd)->e_flags = new_flags;
+
+  new_flags &= ~(EF_M68HC11_ABI | EF_M68HC11_MACH_MASK);
+  old_flags &= ~(EF_M68HC11_ABI | EF_M68HC11_MACH_MASK);
+ */
+
+
+  /* Processor compatibility.  */
+  /* TODO eliminate compat mode mabye have a mode MUST BE REFACTORED */
+//  if (!EF_MC9S12X_CAN_MERGE_MACH (new_flags, old_flags))
+//    {
+//      (*_bfd_error_handler)
+//	(_("%B: linking files compiled for HCS12 with "
+//           "others compiled for HC12"), ibfd);
+//      ok = FALSE;
+//    }
+//  new_flags = ((new_flags & ~EF_MC9S12X_MACH_MASK)
+//               | (EF_MC9S12X_MERGE_MACH (new_flags, old_flags)));
+
+  elf_elfheader (obfd)->e_flags = new_flags;
+
+  new_flags &= ~(EF_MC9S12X_ABI | EF_MC9S12X_MACH_MASK);
+  old_flags &= ~(EF_MC9S12X_ABI | EF_MC9S12X_MACH_MASK);
+
+  /* Warn about any other mismatches */
+  if (new_flags != old_flags)
+    {
+      (*_bfd_error_handler)
+	(_("%B: uses different e_flags (0x%lx) fields than previous modules (0x%lx)"),
+	 ibfd, (unsigned long) new_flags, (unsigned long) old_flags);
+      ok = FALSE;
+    }
+
+  if (! ok)
+    {
+      bfd_set_error (bfd_error_bad_value);
+      return FALSE;
+    }
+
+  return TRUE;
+}
+
+bfd_boolean
+_bfd_mc9s12x_elf_print_private_bfd_data (bfd *abfd, void *ptr)
+{
+  FILE *file = (FILE *) ptr;
+
+  BFD_ASSERT (abfd != NULL && ptr != NULL);
+
+  /* Print normal ELF private data.  */
+  _bfd_elf_print_private_bfd_data (abfd, ptr);
+
+  /* xgettext:c-format */
+  fprintf (file, _("private flags = %lx:"), elf_elfheader (abfd)->e_flags);
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9S12X_I32)
+    fprintf (file, _("[abi=32-bit int, "));
+  else
+    fprintf (file, _("[abi=16-bit int, "));
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9S12X_F64)
+    fprintf (file, _("64-bit double, "));
+  else
+    fprintf (file, _("32-bit double, "));
+/* TODO reduce to 1 target */
+  if (strcmp (bfd_get_target (abfd), "elf32-mc9s12X") == 0)
+    fprintf (file, _("cpu=MC9S12X]"));
+  else if (elf_elfheader (abfd)->e_flags & EF_MC9S12X_MACH)
+    fprintf (file, _("cpu=MC9S12X]"));
+  else
+    fprintf (file, _("cpu=MC9S12X]"));
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9S12X_BANKS)
+    fprintf (file, _(" [memory=bank-model]"));
+  else
+    fprintf (file, _(" [memory=flat]"));
+
+  fputc ('\n', file);
+
+  return TRUE;
+}
+
+static void scan_sections_for_abi (bfd *abfd ATTRIBUTE_UNUSED,
+                                   asection *asect, void *arg)
+{
+  struct mc9s12x_scan_param* p = (struct mc9s12x_scan_param*) arg;
+
+  if (asect->vma >= p->pinfo->bank_virtual)
+    p->use_memory_banks = TRUE;
+}
+
+/* Tweak the OSABI field of the elf header.  */
+
+void
+elf32_mc9s12x_post_process_headers (bfd *abfd, struct bfd_link_info *link_info)
+{
+  struct mc9s12x_scan_param param;
+
+  if (link_info == 0)
+    return;
+
+  mc9s12x_elf_get_bank_parameters (link_info);
+
+  param.use_memory_banks = FALSE;
+  param.pinfo = &mc9s12x_elf_hash_table (link_info)->pinfo;
+  bfd_map_over_sections (abfd, scan_sections_for_abi, &param);
+  if (param.use_memory_banks)
+    {
+      Elf_Internal_Ehdr * i_ehdrp;
+
+      i_ehdrp = elf_elfheader (abfd);
+      i_ehdrp->e_flags |= E_MC9S12X_BANKS;
+    }
+}
+
diff -rupN binutils-2.20/bfd/elf32-mc9s12x.h binutils-2.20-sean/bfd/elf32-mc9s12x.h
--- binutils-2.20/bfd/elf32-mc9s12x.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/elf32-mc9s12x.h	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,189 @@
+/* Motorola 68HC11/68HC12-specific support for 32-bit ELF
+   Copyright 2003, 2004, 2005, 2006, 2007, 2009 Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#ifndef _ELF32_MC9S12X_H
+#define _ELF32_MC9S12X_H
+
+#include "elf-bfd.h"
+#include "bfdlink.h"
+#include "elf/mc9s12x.h"
+
+/* Name of symbols exported by MC9S12X linker when there is a memory
+   bank window.  */
+#define BFD_MC9S12X_BANK_START_NAME   "__bank_start"
+#define BFD_MC9S12X_BANK_SIZE_NAME    "__bank_size"
+#define BFD_MC9S12X_BANK_VIRTUAL_NAME "__bank_virtual"
+
+/* Set and control ELF flags in ELF header.  */
+extern bfd_boolean _bfd_mc9s12x_elf_merge_private_bfd_data (bfd*,bfd*);
+extern bfd_boolean _bfd_mc9s12x_elf_set_private_flags (bfd*,flagword);
+extern bfd_boolean _bfd_mc9s12x_elf_print_private_bfd_data (bfd*, void*);
+
+/* This hash entry is used to record a trampoline that must be generated
+   to call a far function using a normal calling convention ('jsr').
+   The trampoline is used when a pointer to a far function is used.
+   It takes care of installing the proper memory bank as well as creating
+   the 'call/rtc' calling convention.  */
+struct elf32_mc9s12x_stub_hash_entry {
+
+  /* Base hash table entry structure.  */
+  struct bfd_hash_entry root;
+
+  /* The stub section.  */
+  asection *stub_sec;
+
+  /* Offset within stub_sec of the beginning of this stub.  */
+  bfd_vma stub_offset;
+
+  /* Given the symbol's value and its section we can determine its final
+     value when building the stubs (so the stub knows where to jump.  */
+  bfd_vma target_value;
+  asection *target_section;
+};
+
+/* Placeholder for the parameters to compute memory page and physical address.
+   The following formulas are used:
+
+   sym > bank_virtual =>
+     %addr(sym) = (((sym - bank_virtual) & bank_mask) + bank_physical
+     %page(sym) = (((sym - bank_virtual) >> bank_shift) % 256
+
+   sym < bank_virtual =>
+     %addr(sym) = sym
+     %page(sym) = 0
+
+
+   These parameters are obtained from the symbol table by looking
+   at the following:
+
+   __bank_start         Symbol marking the start of memory bank window
+                        (bank_physical)
+   __bank_virtual       Logical address of symbols for which the transformation
+                        must be computed
+   __bank_page_size     Size in bytes of page size (this is *NOT* the memory
+                        bank window size and the window size is always
+                        less or equal to the page size)
+
+   For 68HC12, the window is at 0x8000 and the page size is 16K (full window).
+   For 68HC11 this is board specific (implemented by external hardware).
+
+*/
+struct mc9s12x_page_info
+{
+  bfd_vma bank_virtual;
+  bfd_vma bank_physical;
+  bfd_vma bank_physical_end;
+  bfd_vma bank_mask;
+  bfd_vma bank_size;
+  int bank_shift;
+  int bank_param_initialized;
+  bfd_vma trampoline_addr;
+};
+
+struct mc9s12x_elf_link_hash_table
+{
+  struct elf_link_hash_table root;
+  struct mc9s12x_page_info pinfo;
+
+  /* The stub hash table.  */
+  struct bfd_hash_table* stub_hash_table;
+
+  /* Linker stub bfd.  */
+  bfd *stub_bfd;
+
+  asection* stub_section;
+  asection* tramp_section;
+
+  /* Linker call-backs.  */
+  asection * (*add_stub_section) PARAMS ((const char *, asection *));
+
+  /* Assorted information used by elf32_hppa_size_stubs.  */
+  unsigned int bfd_count;
+  int top_index;
+  asection **input_list;
+
+  /* Small local sym cache.  */
+  struct sym_cache sym_cache;
+
+  bfd_boolean (* size_one_stub) PARAMS((struct bfd_hash_entry*, void*));
+  bfd_boolean (* build_one_stub) PARAMS((struct bfd_hash_entry*, void*));
+};
+
+/* Get the Sparc64 ELF linker hash table from a link_info structure.  */
+
+#define mc9s12x_elf_hash_table(p) \
+  ((struct mc9s12x_elf_link_hash_table *) ((p)->hash))
+
+/* Create a 68HC11/68HC12 ELF linker hash table.  */
+
+extern struct mc9s12x_elf_link_hash_table* mc9s12x_elf_hash_table_create
+  (bfd*);
+extern void mc9s12x_elf_bfd_link_hash_table_free (struct bfd_link_hash_table*);
+
+extern void mc9s12x_elf_get_bank_parameters (struct bfd_link_info*);
+
+/* Return 1 if the address is in banked memory.
+   This can be applied to a virtual address and to a physical address.  */
+extern int mc9s12x_addr_is_banked (struct mc9s12x_page_info*, bfd_vma);
+
+/* Return the physical address seen by the processor, taking
+   into account banked memory.  */
+extern bfd_vma mc9s12x_phys_addr (struct mc9s12x_page_info*, bfd_vma);
+
+/* Return the page number corresponding to an address in banked memory.  */
+extern bfd_vma mc9s12x_phys_page (struct mc9s12x_page_info*, bfd_vma);
+
+bfd_reloc_status_type mc9s12x_elf_ignore_reloc
+  (bfd *abfd, arelent *reloc_entry,
+   asymbol *symbol, void *data, asection *input_section,
+   bfd *output_bfd, char **error_message);
+bfd_reloc_status_type mc9s12x_elf_special_reloc
+  (bfd *abfd, arelent *reloc_entry,
+    asymbol *symbol, void *data, asection *input_section,
+    bfd *output_bfd, char **error_message);
+
+bfd_boolean elf32_mc9s12x_check_relocs
+  (bfd * abfd, struct bfd_link_info * info,
+   asection * sec, const Elf_Internal_Rela * relocs);
+bfd_boolean elf32_mc9s12x_relocate_section
+  (bfd *output_bfd, struct bfd_link_info *info,
+   bfd *input_bfd, asection *input_section,
+   bfd_byte *contents, Elf_Internal_Rela *relocs,
+   Elf_Internal_Sym *local_syms, asection **local_sections);
+
+bfd_boolean elf32_mc9s12x_add_symbol_hook
+  (bfd *abfd, struct bfd_link_info *info,
+   Elf_Internal_Sym *sym, const char **namep,
+   flagword *flagsp, asection **secp,
+   bfd_vma *valp);
+
+/* Tweak the OSABI field of the elf header.  */
+
+extern void elf32_mc9s12x_post_process_headers (bfd*, struct bfd_link_info*);
+
+int elf32_mc9s12x_setup_section_lists (bfd *, struct bfd_link_info *);
+
+bfd_boolean elf32_mc9s12x_size_stubs
+  (bfd *, bfd *, struct bfd_link_info *,
+   asection * (*) (const char *, asection *));
+
+bfd_boolean elf32_mc9s12x_build_stubs (bfd* abfd, struct bfd_link_info *);
+#endif
diff -rupN binutils-2.20/bfd/elf32-mc9xgate.c binutils-2.20-sean/bfd/elf32-mc9xgate.c
--- binutils-2.20/bfd/elf32-mc9xgate.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/elf32-mc9xgate.c	2010-10-01 18:47:43.000000000 -0600
@@ -0,0 +1,2157 @@
+/* Motorola 68HC12-specific support for 32-bit ELF
+   Copyright 1999, 2000, 2002, 2003, 2004, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+   (Heavily copied from the D10V port by Martin Hunt (hunt@cygnus.com))
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.
+   Can't disassemble for architecture
+   in elf_set_mach_from_flags
+   */
+
+#include <malloc/malloc.h>
+#include "sysdep.h"
+#include "bfd.h"
+#include "bfdlink.h"
+#include "libbfd.h"
+#include "elf-bfd.h"
+#include "elf32-mc9xgate.h"
+#include "elf/mc9xgate.h"
+#include "opcode/mc9xgate.h"
+
+/* Relocation functions.  */
+static reloc_howto_type *bfd_elf32_bfd_reloc_type_lookup
+(bfd *, bfd_reloc_code_real_type);
+static void mc9xgate_info_to_howto_rel
+(bfd *, arelent *, Elf_Internal_Rela *);
+
+/* Trampoline generation.  */
+static bfd_boolean mc9xgate_elf_size_one_stub
+(struct bfd_hash_entry *gen_entry, void *in_arg);
+static bfd_boolean mc9xgate_elf_build_one_stub
+(struct bfd_hash_entry *gen_entry, void *in_arg);
+static struct bfd_link_hash_table* mc9xgate_elf_bfd_link_hash_table_create
+(bfd*);
+
+static bfd_boolean mc9xgate_elf_set_mach_from_flags PARAMS ((bfd *));
+
+/* Use REL instead of RELA to save space */
+#define USE_REL	1
+
+/* The 68HC12 microcontroler has a memory bank switching system
+   with a 16Kb window in the 64Kb address space.  The extended memory
+   is mapped in the 16Kb window (at 0x8000).  The page register controls
+   which 16Kb bank is mapped.  The call/rtc instructions take care of
+   bank switching in function calls/returns.
+
+   For GNU Binutils to work, we consider there is a physical memory
+   at 0..0x0ffff and a kind of virtual memory above that.  Symbols
+   in virtual memory have their addresses treated in a special way
+   when disassembling and when linking.
+
+   For the linker to work properly, we must always relocate the virtual
+   memory as if it is mapped at 0x8000.  When a 16-bit relocation is
+   made in the virtual memory, we check that it does not cross the
+   memory bank where it is used.  This would involve a page change
+   which would be wrong.  The 24-bit relocation is for that and it
+   treats the address as a physical address + page number.
+
+
+					Banked
+					Address Space
+                                        |               |       Page n
+					+---------------+ 0x1010000
+                                        |               |
+                                        | jsr _foo      |
+                                        | ..            |       Page 3
+                                        | _foo:         |
+					+---------------+ 0x100C000
+					|	        |
+                                        | call _bar     |
+					| ..	        |	Page 2
+					| _bar:	        |
+					+---------------+ 0x1008000
+				/------>|	        |
+				|	| call _foo     |	Page 1
+				|	|       	|
+				|	+---------------+ 0x1004000
+      Physical			|	|	        |
+      Address Space		|	|	        |	Page 0
+				|	|	        |
+    +-----------+ 0x00FFFF	|	+---------------+ 0x1000000
+    |		|		|
+    | call _foo	|		|
+    |		|		|
+    +-----------+ 0x00BFFF -+---/
+    |		|           |
+    |		|	    |
+    |		| 16K	    |
+    |		|	    |
+    +-----------+ 0x008000 -+
+    |		|
+    |		|
+    =		=
+    |		|
+    |		|
+    +-----------+ 0000
+
+
+   The 'call _foo' must be relocated with page 3 and 16-bit address
+   mapped at 0x8000.
+
+   The 3-bit and 16-bit PC rel relocation is only used by 68HC12.  */
+
+static reloc_howto_type elf_mc9xgate_howto_table[] = {
+    /* This reloc does nothing.  */
+    HOWTO (R_MC9XGATE_NONE,	/* type */
+        0,			/* rightshift */
+        2,			/* size (0 = byte, 1 = short, 2 = long) */
+        32,			/* bitsize */
+        FALSE,			/* pc_relative */
+        0,			/* bitpos */
+        complain_overflow_dont,/* complain_on_overflow */
+        bfd_elf_generic_reloc,	/* special_function */
+        "R_MC9XGATE_NONE",	/* name */
+        FALSE,			/* partial_inplace */
+        0,			/* src_mask */
+        0,			/* dst_mask */
+        FALSE),		/* pcrel_offset */
+
+        /* A 8 bit absolute relocation */
+        HOWTO (R_MC9XGATE_8,		/* type */
+            0,			/* rightshift */
+            0,			/* size (0 = byte, 1 = short, 2 = long) */
+            8,			/* bitsize */
+            FALSE,			/* pc_relative */
+            0,			/* bitpos */
+            complain_overflow_bitfield,	/* complain_on_overflow */
+            bfd_elf_generic_reloc,	/* special_function */
+            "R_MC9XGATE_8",		/* name */
+            FALSE,			/* partial_inplace */
+            0x00ff,		/* src_mask */
+            0x00ff,		/* dst_mask */
+            FALSE),		/* pcrel_offset */
+
+            /* A 8 bit absolute relocation (upper address) */
+            HOWTO (R_MC9XGATE_HI8,		/* type */
+                8,			/* rightshift */
+                0,			/* size (0 = byte, 1 = short, 2 = long) */
+                8,			/* bitsize */
+                FALSE,			/* pc_relative */
+                0,			/* bitpos */
+                complain_overflow_bitfield,	/* complain_on_overflow */
+                bfd_elf_generic_reloc,	/* special_function */
+                "R_MC9XGATEi_HI8",	/* name */
+                FALSE,			/* partial_inplace */
+                0x00ff,		/* src_mask */
+                0x00ff,		/* dst_mask */
+                FALSE),		/* pcrel_offset */
+
+                /* A 8 bit absolute relocation (upper address) */
+                HOWTO (R_MC9XGATE_LO8,		/* type */
+                    0,			/* rightshift */
+                    0,			/* size (0 = byte, 1 = short, 2 = long) */
+                    8,			/* bitsize */
+                    FALSE,			/* pc_relative */
+                    0,			/* bitpos */
+                    complain_overflow_dont,	/* complain_on_overflow */
+                    bfd_elf_generic_reloc,	/* special_function */
+                    "R_MC9XGATE_LO8",	/* name */
+                    FALSE,			/* partial_inplace */
+                    0x00ff,		/* src_mask */
+                    0x00ff,		/* dst_mask */
+                    FALSE),		/* pcrel_offset */
+
+                    /* A 8 bit PC-rel relocation */
+                    HOWTO (R_MC9XGATE_PCREL_8,	/* type */
+                        0,			/* rightshift */
+                        0,			/* size (0 = byte, 1 = short, 2 = long) */
+                        8,			/* bitsize */
+                        TRUE,			/* pc_relative */
+                        0,			/* bitpos */
+                        complain_overflow_bitfield,	/* complain_on_overflow */
+                        bfd_elf_generic_reloc,	/* special_function */
+                        "R_MC9XGATE_PCREL_8",	/* name */
+                        FALSE,			/* partial_inplace */
+                        0x00ff,		/* src_mask */
+                        0x00ff,		/* dst_mask */
+                        TRUE),                 /* pcrel_offset */
+
+                        /* A 16 bit absolute relocation */
+                        HOWTO (R_MC9XGATE_16,		/* type */
+                            0,			/* rightshift */
+                            1,			/* size (0 = byte, 1 = short, 2 = long) */
+                            16,			/* bitsize */
+                            FALSE,			/* pc_relative */
+                            0,			/* bitpos */
+                            complain_overflow_dont /*bitfield */ ,	/* complain_on_overflow */
+                            bfd_elf_generic_reloc,	/* special_function */
+                            "R_MC9XGATE_16",	/* name */
+                            FALSE,			/* partial_inplace */
+                            0xffff,		/* src_mask */
+                            0xffff,		/* dst_mask */
+                            FALSE),		/* pcrel_offset */
+
+                            /* A 32 bit absolute relocation.  This one is never used for the
+     code relocation.  It's used by gas for -gstabs generation.  */
+                            HOWTO (R_MC9XGATE_32,		/* type */
+                                0,			/* rightshift */
+                                2,			/* size (0 = byte, 1 = short, 2 = long) */
+                                32,			/* bitsize */
+                                FALSE,			/* pc_relative */
+                                0,			/* bitpos */
+                                complain_overflow_bitfield,	/* complain_on_overflow */
+                                bfd_elf_generic_reloc,	/* special_function */
+                                "R_MC9XGATE_32",	/* name */
+                                FALSE,			/* partial_inplace */
+                                0xffffffff,		/* src_mask */
+                                0xffffffff,		/* dst_mask */
+                                FALSE),		/* pcrel_offset */
+
+                                /* A 3 bit absolute relocation */
+                                HOWTO (R_MC9XGATE_3B,		/* type */
+                                    0,			/* rightshift */
+                                    0,			/* size (0 = byte, 1 = short, 2 = long) */
+                                    3,			/* bitsize */
+                                    FALSE,			/* pc_relative */
+                                    0,			/* bitpos */
+                                    complain_overflow_bitfield,	/* complain_on_overflow */
+                                    bfd_elf_generic_reloc,	/* special_function */
+                                    "R_MC9XGATE_4B",	/* name */
+                                    FALSE,			/* partial_inplace */
+                                    0x003,			/* src_mask */
+                                    0x003,			/* dst_mask */
+                                    FALSE),		/* pcrel_offset */
+
+                                    /* A 16 bit PC-rel relocation */
+                                    HOWTO (R_MC9XGATE_PCREL_16,	/* type */
+                                        0,			/* rightshift */
+                                        1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                        16,			/* bitsize */
+                                        TRUE,			/* pc_relative */
+                                        0,			/* bitpos */
+                                        complain_overflow_dont,	/* complain_on_overflow */
+                                        bfd_elf_generic_reloc,	/* special_function */
+                                        "R_MC9XGATE_PCREL_16",	/* name */
+                                        FALSE,			/* partial_inplace */
+                                        0xffff,		/* src_mask */
+                                        0xffff,		/* dst_mask */
+                                        TRUE),                 /* pcrel_offset */
+
+                                        /* GNU extension to record C++ vtable hierarchy */
+                                        HOWTO (R_MC9XGATE_GNU_VTINHERIT,	/* type */
+                                            0,			/* rightshift */
+                                            1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                            0,			/* bitsize */
+                                            FALSE,			/* pc_relative */
+                                            0,			/* bitpos */
+                                            complain_overflow_dont,	/* complain_on_overflow */
+                                            NULL,			/* special_function */
+                                            "R_MC9XGATE_GNU_VTINHERIT",	/* name */
+                                            FALSE,			/* partial_inplace */
+                                            0,			/* src_mask */
+                                            0,			/* dst_mask */
+                                            FALSE),		/* pcrel_offset */
+
+                                            /* GNU extension to record C++ vtable member usage */
+                                            HOWTO (R_MC9XGATE_GNU_VTENTRY,	/* type */
+                                                0,			/* rightshift */
+                                                1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                0,			/* bitsize */
+                                                FALSE,			/* pc_relative */
+                                                0,			/* bitpos */
+                                                complain_overflow_dont,	/* complain_on_overflow */
+                                                _bfd_elf_rel_vtable_reloc_fn,	/* special_function */
+                                                "R_MC9XGATE_GNU_VTENTRY",	/* name */
+                                                FALSE,			/* partial_inplace */
+                                                0,			/* src_mask */
+                                                0,			/* dst_mask */
+                                                FALSE),		/* pcrel_offset */
+
+                                                /* A 24 bit relocation */
+                                                HOWTO (R_MC9XGATE_24,	        /* type */
+                                                    0,			/* rightshift */
+                                                    2,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                    24,			/* bitsize */
+                                                    FALSE,			/* pc_relative */
+                                                    0,			/* bitpos */
+                                                    complain_overflow_dont,	/* complain_on_overflow */
+                                                    mc9xgate_elf_special_reloc,	/* special_function */
+                                                    "R_MC9XGATE_24",	/* name */
+                                                    FALSE,			/* partial_inplace */
+                                                    0xffffff,		/* src_mask */
+                                                    0xffffff,		/* dst_mask */
+                                                    FALSE),		/* pcrel_offset */
+
+                                                    /* A 16-bit low relocation */
+                                                    HOWTO (R_MC9XGATE_LO16,        /* type */
+                                                        0,			/* rightshift */
+                                                        1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                        16,			/* bitsize */
+                                                        FALSE,			/* pc_relative */
+                                                        0,			/* bitpos */
+                                                        complain_overflow_dont,	/* complain_on_overflow */
+                                                        mc9xgate_elf_special_reloc,/* special_function */
+                                                        "R_MC9XGATE_LO16",	/* name */
+                                                        FALSE,			/* partial_inplace */
+                                                        0xffff,		/* src_mask */
+                                                        0xffff,		/* dst_mask */
+                                                        FALSE),		/* pcrel_offset */
+
+                                                        /* A page relocation */
+                                                        HOWTO (R_MC9XGATE_PAGE,        /* type */
+                                                            0,			/* rightshift */
+                                                            0,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                            8,			/* bitsize */
+                                                            FALSE,			/* pc_relative */
+                                                            0,			/* bitpos */
+                                                            complain_overflow_dont,	/* complain_on_overflow */
+                                                            mc9xgate_elf_special_reloc,/* special_function */
+                                                            "R_MC9XGATE_PAGE",	/* name */
+                                                            FALSE,			/* partial_inplace */
+                                                            0x00ff,		/* src_mask */
+                                                            0x00ff,		/* dst_mask */
+                                                            FALSE),		/* pcrel_offset */
+                                                            /* A 9 bit absolute relocation  */
+                                                            HOWTO (R_MC9XGATE_PCREL_9,		/* type */
+                                                                0,			/* rightshift */
+                                                                1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                9,			/* bitsize */
+                                                                TRUE,			/* pc_relative */
+                                                                0,			/* bitpos */
+                                                                complain_overflow_bitfield,	/* complain_on_overflow */
+                                                                bfd_elf_generic_reloc,	/* special_function */
+                                                                "R_MC9XGATE_PCREL_9",	/* name */
+                                                                FALSE,			/* partial_inplace */
+                                                                0xffff,		/* src_mask */
+                                                                0xffff,		/* dst_mask */
+                                                                TRUE),		/* pcrel_offset */
+
+                                                                /* A 8 bit absolute relocation (upper address) */
+                                                                HOWTO (R_MC9XGATE_PCREL_10,		/* type */
+                                                                    8,			/* rightshift */
+                                                                    0,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                    10,			/* bitsize */
+                                                                    TRUE,			/* pc_relative */
+                                                                    0,			/* bitpos */
+                                                                    complain_overflow_dont,	/* complain_on_overflow */
+                                                                    bfd_elf_generic_reloc,	/* special_function */
+                                                                    "R_MC9XGATE_PCREL_10",	/* name */
+                                                                    FALSE,			/* partial_inplace */
+                                                                    0x00ff,		/* src_mask */
+                                                                    0x00ff,		/* dst_mask */
+                                                                    TRUE),		/* pcrel_offset */
+
+
+                                                                    /* A 8 bit absolute relocation  */
+                                                                    HOWTO (R_MC9XGATE_IMM8_LO,		/* type */
+                                                                        0,			/* rightshift */
+                                                                        1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                        16,			/* bitsize */
+                                                                        FALSE,			/* pc_relative */
+                                                                        0,			/* bitpos */
+                                                                        complain_overflow_bitfield,	/* complain_on_overflow */
+                                                                        bfd_elf_generic_reloc,	/* special_function */
+                                                                        "R_MC9XGATE_IMM8_LO",	/* name */
+                                                                        FALSE,			/* partial_inplace */
+                                                                        0x00ff,		/* src_mask */
+                                                                        0x00ff,		/* dst_mask */
+                                                                        FALSE),		/* pcrel_offset */
+
+                                                                        /* A 16 bit absolute relocation (upper address) */
+                                                                        HOWTO (R_MC9XGATE_IMM8_HI,		/* type */
+                                                                            8,			/* rightshift */
+                                                                            1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                            16,			/* bitsize */
+                                                                            FALSE,			/* pc_relative */
+                                                                            0,			/* bitpos */
+                                                                            complain_overflow_dont,	/* complain_on_overflow */
+                                                                            bfd_elf_generic_reloc,	/* special_function */
+                                                                            "R_MC9XGATE_IMM8_HI",	/* name */
+                                                                            FALSE,			/* partial_inplace */
+                                                                            0x00ff,		/* src_mask */
+                                                                            0x00ff,		/* dst_mask */
+                                                                            FALSE),		/* pcrel_offset */
+                                                                            /* A 3 bit absolute relocation */
+                                                                            HOWTO (R_MC9XGATE_IMM3,		/* type */
+                                                                                8,			/* rightshift */
+                                                                                1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                                16,			/* bitsize */
+                                                                                FALSE,			/* pc_relative */
+                                                                                0,			/* bitpos */
+                                                                                complain_overflow_dont,	/* complain_on_overflow */
+                                                                                bfd_elf_generic_reloc,	/* special_function */
+                                                                                "R_MC9XGATE_IMM3",	/* name */
+                                                                                FALSE,			/* partial_inplace */
+                                                                                0x00ff,		/* src_mask */
+                                                                                0x00ff,		/* dst_mask */
+                                                                                FALSE),		/* pcrel_offset */
+                                                                                /* A 4 bit absolute relocation  */
+                                                                                HOWTO (R_MC9XGATE_IMM4,		/* type */
+                                                                                    8,			/* rightshift */
+                                                                                    1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                                    16,			/* bitsize */
+                                                                                    FALSE,			/* pc_relative */
+                                                                                    0,			/* bitpos */
+                                                                                    complain_overflow_dont,	/* complain_on_overflow */
+                                                                                    bfd_elf_generic_reloc,	/* special_function */
+                                                                                    "R_MC9XGATE_IMM4",	/* name */
+                                                                                    FALSE,			/* partial_inplace */
+                                                                                    0x00ff,		/* src_mask */
+                                                                                    0x00ff,		/* dst_mask */
+                                                                                    FALSE),		/* pcrel_offset */
+                                                                                    //EMPTY_HOWTO (14),
+                                                                                    //EMPTY_HOWTO (15),
+                                                                                    //EMPTY_HOWTO (16),
+                                                                                    //EMPTY_HOWTO (17),
+                                                                                    //EMPTY_HOWTO (18),
+                                                                                    //EMPTY_HOWTO (19),
+
+                                                                                    /* Mark beginning of a jump instruction (any form).  */
+                                                                                    HOWTO (R_MC9XGATE_RL_JUMP,	/* type */
+                                                                                        0,			/* rightshift */
+                                                                                        1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                                        0,			/* bitsize */
+                                                                                        FALSE,			/* pc_relative */
+                                                                                        0,			/* bitpos */
+                                                                                        complain_overflow_dont,	/* complain_on_overflow */
+                                                                                        mc9xgate_elf_ignore_reloc,	/* special_function */
+                                                                                        "R_MC9XGATE_RL_JUMP",	/* name */
+                                                                                        TRUE,			/* partial_inplace */
+                                                                                        0,			/* src_mask */
+                                                                                        0,			/* dst_mask */
+                                                                                        TRUE),                 /* pcrel_offset */
+
+                                                                                        /* Mark beginning of Gcc relaxation group instruction.  */
+                                                                                        HOWTO (R_MC9XGATE_RL_GROUP,	/* type */
+                                                                                            0,			/* rightshift */
+                                                                                            1,			/* size (0 = byte, 1 = short, 2 = long) */
+                                                                                            0,			/* bitsize */
+                                                                                            FALSE,			/* pc_relative */
+                                                                                            0,			/* bitpos */
+                                                                                            complain_overflow_dont,	/* complain_on_overflow */
+                                                                                            mc9xgate_elf_ignore_reloc,	/* special_function */
+                                                                                            "R_MC9XGATE_RL_GROUP",	/* name */
+                                                                                            TRUE,			/* partial_inplace */
+                                                                                            0,			/* src_mask */
+                                                                                            0,			/* dst_mask */
+                                                                                            TRUE),                 /* pcrel_offset */
+};
+
+
+
+
+
+/* Map BFD reloc types to M68HC11 ELF reloc types.  */
+
+struct mc9xgate_reloc_map
+{
+  bfd_reloc_code_real_type bfd_reloc_val;
+  unsigned char elf_reloc_val;
+};
+
+static const struct mc9xgate_reloc_map mc9xgate_reloc_map[] = {
+    {BFD_RELOC_NONE, R_MC9XGATE_NONE,},
+    {BFD_RELOC_8, R_MC9XGATE_8},
+    {BFD_RELOC_MC9XGATE_HI8, R_MC9XGATE_HI8},
+    {BFD_RELOC_MC9XGATE_LO8, R_MC9XGATE_LO8},
+    {BFD_RELOC_8_PCREL, R_MC9XGATE_PCREL_8},
+    {BFD_RELOC_16_PCREL, R_MC9XGATE_PCREL_16},
+    {BFD_RELOC_16, R_MC9XGATE_16},
+    {BFD_RELOC_32, R_MC9XGATE_32},
+    {BFD_RELOC_MC9XGATE_3B, R_MC9XGATE_3B},
+
+    {BFD_RELOC_VTABLE_INHERIT, R_MC9XGATE_GNU_VTINHERIT},
+    {BFD_RELOC_VTABLE_ENTRY, R_MC9XGATE_GNU_VTENTRY},
+
+    {BFD_RELOC_MC9XGATE_LO16, R_MC9XGATE_LO16},
+    {BFD_RELOC_MC9XGATE_PAGE, R_MC9XGATE_PAGE},
+    {BFD_RELOC_MC9XGATE_24, R_MC9XGATE_24},
+    {BFD_RELOC_MC9XGATE_PCREL_9, R_MC9XGATE_PCREL_9},
+    {BFD_RELOC_MC9XGATE_PCREL_10,  R_MC9XGATE_PCREL_10},
+    {BFD_RELOC_MC9XGATE_IMM8_LO, R_MC9XGATE_IMM8_LO},
+    {BFD_RELOC_MC9XGATE_IMM8_HI, R_MC9XGATE_IMM8_HI},
+    {BFD_RELOC_MC9XGATE_IMM3, R_MC9XGATE_IMM3},
+    {BFD_RELOC_MC9XGATE_IMM4, R_MC9XGATE_IMM4},
+
+    {BFD_RELOC_MC9XGATE_RL_JUMP, R_MC9XGATE_RL_JUMP},
+    {BFD_RELOC_MC9XGATE_RL_GROUP, R_MC9XGATE_RL_GROUP},
+
+
+
+
+};
+
+static reloc_howto_type *
+bfd_elf32_bfd_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,
+    bfd_reloc_code_real_type code)
+    {
+  //printf("\n in bfd_elf32_bfd_reloc_type_lookup");
+  unsigned int i;
+
+  for (i = 0;
+      i < sizeof (mc9xgate_reloc_map) / sizeof (struct mc9xgate_reloc_map);
+      i++)
+    {
+    // printf("\n about to compare %d and %d", (int)code, (int) mc9xgate_reloc_map[i].bfd_reloc_val);
+    if (mc9xgate_reloc_map[i].bfd_reloc_val == code){
+
+      return &elf_mc9xgate_howto_table[mc9xgate_reloc_map[i].elf_reloc_val];
+    }
+    }
+  //printf("\n about to return null");
+  return NULL;
+    }
+
+static reloc_howto_type *
+bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,
+    const char *r_name)
+    {
+  //printf("\n in bfd_elf32_bfd_reloc_name_lookup");
+  unsigned int i;
+
+  for (i = 0;
+      i < (sizeof (elf_mc9xgate_howto_table)
+          / sizeof (elf_mc9xgate_howto_table[0]));
+      i++)
+    if (elf_mc9xgate_howto_table[i].name != NULL
+        && strcasecmp (elf_mc9xgate_howto_table[i].name, r_name) == 0){
+      //printf("\n returning howto %s", elf_mc9xgate_howto_table[i].name);
+      return &elf_mc9xgate_howto_table[i];
+    }
+
+  return NULL;
+    }
+
+/* Set the howto pointer for an M68HC11 ELF reloc.  */
+
+static void
+mc9xgate_info_to_howto_rel (bfd *abfd ATTRIBUTE_UNUSED,
+    arelent *cache_ptr, Elf_Internal_Rela *dst)
+{
+ // //printf("\n in info_to_howto_rel");
+  unsigned int r_type;
+
+  r_type = ELF32_R_TYPE (dst->r_info);
+  BFD_ASSERT (r_type < (unsigned int) R_MC9XGATE_max);
+  cache_ptr->howto = &elf_mc9xgate_howto_table[r_type];
+ // //printf("\n in info_to_howto_rel howto is %s", cache_ptr->howto->name);
+}
+
+
+/* Far trampoline generation.  */
+
+/* Build a 68HC12 trampoline stub.  */
+static bfd_boolean
+mc9xgate_elf_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)
+{
+  //printf("\n in elf_build_one_stub");
+  struct elf32_mc9xgate_stub_hash_entry *stub_entry;
+  struct bfd_link_info *info;
+  struct mc9xgate_elf_link_hash_table *htab;
+  asection *stub_sec;
+  bfd *stub_bfd;
+  bfd_byte *loc;
+  bfd_vma sym_value, phys_page, phys_addr;
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9xgate_stub_hash_entry *) gen_entry;
+  info = (struct bfd_link_info *) in_arg;
+
+  htab = mc9xgate_elf_hash_table (info);
+
+  stub_sec = stub_entry->stub_sec;
+
+  /* Make a note of the offset within the stubs for this entry.  */
+  stub_entry->stub_offset = stub_sec->size;
+  stub_sec->size += 7;
+  loc = stub_sec->contents + stub_entry->stub_offset;
+
+  stub_bfd = stub_sec->owner;
+
+  /* Create the trampoline call stub:
+
+     ldy #%addr(symbol)
+     call %page(symbol), __trampoline
+
+   */
+  sym_value = (stub_entry->target_value
+      + stub_entry->target_section->output_offset
+      + stub_entry->target_section->output_section->vma);
+  phys_addr = mc9xgate_phys_addr (&htab->pinfo, sym_value);
+  phys_page = mc9xgate_phys_page (&htab->pinfo, sym_value);
+
+  /* ldy #%page(sym) */
+  bfd_put_8 (stub_bfd, 0xCD, loc);
+  bfd_put_16 (stub_bfd, phys_addr, loc + 1);
+  loc += 3;
+
+  /* call %page(sym), __trampoline  */
+  bfd_put_8 (stub_bfd, 0x4a, loc);
+  bfd_put_16 (stub_bfd, htab->pinfo.trampoline_addr, loc + 1);
+  bfd_put_8 (stub_bfd, phys_page, loc + 3);
+
+  return TRUE;
+}
+
+/* As above, but don't actually build the stub.  Just bump offset so
+   we know stub section sizes.  */
+
+static bfd_boolean
+mc9xgate_elf_size_one_stub (struct bfd_hash_entry *gen_entry,
+    void *in_arg ATTRIBUTE_UNUSED)
+{
+  //printf("\n in elf_size_one_stub");
+  struct elf32_mc9xgate_stub_hash_entry *stub_entry;
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9xgate_stub_hash_entry *) gen_entry;
+
+  stub_entry->stub_sec->size += 7;
+  return TRUE;
+}
+
+/* Create a 68HC12 ELF linker hash table.  */
+
+static struct bfd_link_hash_table *
+mc9xgate_elf_bfd_link_hash_table_create (bfd *abfd)
+{
+  //printf("\n in elf_bfd_link_hash_table_create");
+  struct mc9xgate_elf_link_hash_table *ret;
+
+  ret = mc9xgate_elf_hash_table_create (abfd);
+  if (ret == (struct mc9xgate_elf_link_hash_table *) NULL)
+    return NULL;
+
+  ret->size_one_stub = mc9xgate_elf_size_one_stub;
+  ret->build_one_stub = mc9xgate_elf_build_one_stub;
+
+  return &ret->root.root;
+}
+
+static bfd_boolean
+mc9xgate_elf_set_mach_from_flags (bfd *abfd)
+{
+  //printf("\n in elf_set_mach_from_flags");
+  flagword flags = elf_elfheader (abfd)->e_flags;
+
+  switch (flags & EF_MC9XGATE_MACH_MASK)
+  {
+  case EF_MC9XGATE_MACH:
+    bfd_default_set_arch_mach (abfd, bfd_arch_mc9xgate, bfd_mach_mc9xgate);
+    /* TODO bfd_mach_mc9s12x does not work as a parameter(0 instead) re-make headers maybe....
+     * UPDATE SEEMS TO WORK NOW */
+
+
+    // 	 bfd_default_set_arch_mach (abfd, bfd_arch_m68hc12, bfd_mach_m6812s);  /* for testing */
+    break;
+    //   case EF_MC9XGATE_MACH:
+    //     bfd_default_set_arch_mach (abfd, bfd_arch_mc9s12x, bfd_mach_mc9s12x);
+    //     break;
+    //   case EF_MC9XGATE_GENERIC:
+    //    bfd_default_set_arch_mach (abfd, bfd_arch_mc9s12x,
+    //                                bfd_mach_mc9s12x_default);
+    //     break;
+  default:
+    return FALSE;
+  }
+  return TRUE;
+}
+
+/* Specific sections:
+   - The .page0 is a data section that is mapped in [0x0000..0x00FF].
+     Page0 accesses are faster on the M68HC12.
+   - The .vectors is the section that represents the interrupt
+     vectors.
+   - The .xgate section is starts in 0xE08800 or as xgate sees it 0x0800
+ */
+static const struct bfd_elf_special_section elf32_mc9xgate_special_sections[] =
+    {
+        { STRING_COMMA_LEN (".eeprom"),   0, SHT_PROGBITS, SHF_ALLOC + SHF_WRITE },
+        { STRING_COMMA_LEN (".page0"),    0, SHT_PROGBITS, SHF_ALLOC + SHF_WRITE },
+        { STRING_COMMA_LEN (".softregs"), 0, SHT_NOBITS,   SHF_ALLOC + SHF_WRITE },
+        { STRING_COMMA_LEN (".vectors"),  0, SHT_PROGBITS, SHF_ALLOC },
+        //  { STRING_COMMA_LEN (".xgate"),    0, SHT_PROGBITS, SHF_ALLOC + SHF_WRITE },
+        { NULL,                       0,  0, 0,            0 }
+    };
+
+#define ELF_ARCH		bfd_arch_mc9xgate
+//#define ELF_ARCH                bfd_arch_mc9s12x
+#define ELF_MACHINE_CODE	EM_MC9XGATE
+
+//#define ELF_MACHINE_CODE	EM_68HC12 /* testing value */
+#define ELF_MAXPAGESIZE		0x1000
+
+#define TARGET_BIG_SYM          bfd_elf32_mc9xgate_vec
+#define TARGET_BIG_NAME		"elf32-mc9xgate"
+
+#define elf_info_to_howto	0
+#define elf_info_to_howto_rel	     mc9xgate_info_to_howto_rel  /* TODO figure out why this has to be here */
+#define elf_backend_check_relocs     elf32_mc9xgate_check_relocs
+#define elf_backend_relocate_section elf32_mc9xgate_relocate_section
+#define elf_backend_object_p		mc9xgate_elf_set_mach_from_flags
+#define elf_backend_final_write_processing	0
+#define elf_backend_can_gc_sections		1
+#define elf_backend_special_sections elf32_mc9xgate_special_sections
+#define elf_backend_post_process_headers     elf32_mc9xgate_post_process_headers
+#define elf_backend_add_symbol_hook  elf32_mc9xgate_add_symbol_hook
+
+#define bfd_elf32_bfd_link_hash_table_create \
+    mc9xgate_elf_bfd_link_hash_table_create
+#define bfd_elf32_bfd_link_hash_table_free \
+    mc9xgate_elf_bfd_link_hash_table_free
+#define bfd_elf32_bfd_merge_private_bfd_data \
+    _bfd_mc9xgate_elf_merge_private_bfd_data
+#define bfd_elf32_bfd_set_private_flags	_bfd_mc9xgate_elf_set_private_flags
+#define bfd_elf32_bfd_print_private_bfd_data \
+    _bfd_mc9xgate_elf_print_private_bfd_data
+
+#include "elf32-target.h"
+/* TODO
+ * I dont think you can.
+ *  make sure commenting out the above is OK  the elf32-target file ends up in the build directory*/
+
+/* ############################################################################################################################################
+ * included from hc1x.c ??????
+
+ Motorola 68HC11/HC12-specific support for 32-bit ELF
+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
+   2009 Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#define mc9xgate_stub_hash_lookup(table, string, create, copy) \
+    ((struct elf32_mc9xgate_stub_hash_entry *) \
+        bfd_hash_lookup ((table), (string), (create), (copy)))
+
+static struct elf32_mc9xgate_stub_hash_entry* mc9xgate_add_stub
+(const char *stub_name,
+    asection *section,
+    struct mc9xgate_elf_link_hash_table *htab);
+
+static struct bfd_hash_entry *stub_hash_newfunc
+(struct bfd_hash_entry *, struct bfd_hash_table *, const char *);
+
+static void mc9xgate_elf_set_symbol (bfd* abfd, struct bfd_link_info *info,
+    const char* name, bfd_vma value,
+    asection* sec);
+
+static bfd_boolean mc9xgate_elf_export_one_stub
+(struct bfd_hash_entry *gen_entry, void *in_arg);
+
+static void scan_sections_for_abi (bfd*, asection*, PTR);
+
+struct mc9xgate_scan_param
+{
+  struct mc9xgate_page_info* pinfo;
+  bfd_boolean use_memory_banks;
+};
+
+
+/* Create a 68HC11/68HC12 ELF linker hash table.  */
+
+struct mc9xgate_elf_link_hash_table*
+mc9xgate_elf_hash_table_create (bfd *abfd)
+{
+  //printf("\n in elf_hash_table_create");
+  struct mc9xgate_elf_link_hash_table *ret;
+  bfd_size_type amt = sizeof (struct mc9xgate_elf_link_hash_table);
+
+  ret = (struct mc9xgate_elf_link_hash_table *) bfd_malloc (amt);
+  if (ret == (struct mc9xgate_elf_link_hash_table *) NULL)
+    return NULL;
+
+  memset (ret, 0, amt);
+  if (!_bfd_elf_link_hash_table_init (&ret->root, abfd,
+      _bfd_elf_link_hash_newfunc,
+      sizeof (struct elf_link_hash_entry)))
+    {
+    free (ret);
+    return NULL;
+    }
+
+  /* Init the stub hash table too.  */
+  amt = sizeof (struct bfd_hash_table);
+  ret->stub_hash_table = (struct bfd_hash_table*) bfd_malloc (amt);
+  if (ret->stub_hash_table == NULL)
+    {
+    free (ret);
+    return NULL;
+    }
+  if (!bfd_hash_table_init (ret->stub_hash_table, stub_hash_newfunc,
+      sizeof (struct elf32_mc9xgate_stub_hash_entry)))
+    return NULL;
+
+  ret->stub_bfd = NULL;
+  ret->stub_section = 0;
+  ret->add_stub_section = NULL;
+  ret->sym_cache.abfd = NULL;
+
+  return ret;
+}
+
+/* Free the derived linker hash table.  */
+
+void
+mc9xgate_elf_bfd_link_hash_table_free (struct bfd_link_hash_table *hash)
+{
+  //printf("\n in elf_bfd_link_hash_table_free");
+  struct mc9xgate_elf_link_hash_table *ret
+  = (struct mc9xgate_elf_link_hash_table *) hash;
+
+  bfd_hash_table_free (ret->stub_hash_table);
+  free (ret->stub_hash_table);
+  _bfd_generic_link_hash_table_free (hash);
+}
+
+/* Assorted hash table functions.  */
+
+/* Initialize an entry in the stub hash table.  */
+
+static struct bfd_hash_entry *
+stub_hash_newfunc (struct bfd_hash_entry *entry, struct bfd_hash_table *table,
+    const char *string)
+    {
+  //printf("\n in stub_has_newfunc");
+  /* Allocate the structure if it has not already been allocated by a
+     subclass.  */
+  if (entry == NULL)
+    {
+    entry = bfd_hash_allocate (table,
+        sizeof (struct elf32_mc9xgate_stub_hash_entry));
+    if (entry == NULL)
+      return entry;
+    }
+
+  /* Call the allocation method of the superclass.  */
+  entry = bfd_hash_newfunc (entry, table, string);
+  if (entry != NULL)
+    {
+    struct elf32_mc9xgate_stub_hash_entry *eh;
+
+    /* Initialize the local fields.  */
+    eh = (struct elf32_mc9xgate_stub_hash_entry *) entry;
+    eh->stub_sec = NULL;
+    eh->stub_offset = 0;
+    eh->target_value = 0;
+    eh->target_section = NULL;
+    }
+
+  return entry;
+    }
+
+/* Add a new stub entry to the stub hash.  Not all fields of the new
+   stub entry are initialised.  */
+
+static struct elf32_mc9xgate_stub_hash_entry *
+mc9xgate_add_stub (const char *stub_name, asection *section,
+    struct mc9xgate_elf_link_hash_table *htab)
+    {
+  //printf("\n in add_stub");
+  struct elf32_mc9xgate_stub_hash_entry *stub_entry;
+
+  /* Enter this entry into the linker stub hash table.  */
+  stub_entry = mc9xgate_stub_hash_lookup (htab->stub_hash_table, stub_name,
+      TRUE, FALSE);
+  if (stub_entry == NULL)
+    {
+    (*_bfd_error_handler) (_("%B: cannot create stub entry %s"),
+        section->owner, stub_name);
+    return NULL;
+    }
+
+  if (htab->stub_section == 0)
+    {
+    htab->stub_section = (*htab->add_stub_section) (".tramp",
+        htab->tramp_section);
+    }
+
+  stub_entry->stub_sec = htab->stub_section;
+  stub_entry->stub_offset = 0;
+  return stub_entry;
+    }
+
+/* Hook called by the linker routine which adds symbols from an object
+   file.  We use it for identify far symbols and force a loading of
+   the trampoline handler.  */
+
+bfd_boolean
+elf32_mc9xgate_add_symbol_hook (bfd *abfd, struct bfd_link_info *info,
+    Elf_Internal_Sym *sym,
+    const char **namep ATTRIBUTE_UNUSED,
+    flagword *flagsp ATTRIBUTE_UNUSED,
+    asection **secp ATTRIBUTE_UNUSED,
+    bfd_vma *valp ATTRIBUTE_UNUSED)
+{
+  //printf("\n in mc9xgate_add_symbol_hook");
+  if (sym->st_other & STO_MC9XGATE_FAR)
+    {
+    struct elf_link_hash_entry *h;
+
+    h = (struct elf_link_hash_entry *)
+	    bfd_link_hash_lookup (info->hash, "__far_trampoline",
+	        FALSE, FALSE, FALSE);
+    if (h == NULL)
+      {
+      struct bfd_link_hash_entry* entry = NULL;
+
+      _bfd_generic_link_add_one_symbol (info, abfd,
+          "__far_trampoline",
+          BSF_GLOBAL,
+          bfd_und_section_ptr,
+          (bfd_vma) 0, (const char*) NULL,
+          FALSE, FALSE, &entry);
+      }
+
+    }
+  return TRUE;
+}
+
+/* External entry points for sizing and building linker stubs.  */
+
+/* Set up various things so that we can make a list of input sections
+   for each output section included in the link.  Returns -1 on error,
+   0 when no stubs will be needed, and 1 on success.  */
+
+int
+elf32_mc9xgate_setup_section_lists (bfd *output_bfd, struct bfd_link_info *info)
+{
+  //printf("\n in setup_section_lists");
+  bfd *input_bfd;
+  unsigned int bfd_count;
+  int top_id, top_index;
+  asection *section;
+  asection **input_list, **list;
+  bfd_size_type amt;
+  asection *text_section;
+  struct mc9xgate_elf_link_hash_table *htab;
+
+  htab = mc9xgate_elf_hash_table (info);
+
+  if (bfd_get_flavour (info->output_bfd) != bfd_target_elf_flavour)
+    return 0;
+
+  /* Count the number of input BFDs and find the top input section id.
+     Also search for an existing ".tramp" section so that we know
+     where generated trampolines must go.  Default to ".text" if we
+     can't find it.  */
+  htab->tramp_section = 0;
+  text_section = 0;
+  for (input_bfd = info->input_bfds, bfd_count = 0, top_id = 0;
+      input_bfd != NULL;
+      input_bfd = input_bfd->link_next)
+    {
+    bfd_count += 1;
+    for (section = input_bfd->sections;
+        section != NULL;
+        section = section->next)
+      {
+      const char* name = bfd_get_section_name (input_bfd, section);
+
+      if (!strcmp (name, ".tramp"))
+        htab->tramp_section = section;
+
+      if (!strcmp (name, ".text"))
+        text_section = section;
+
+      if (top_id < section->id)
+        top_id = section->id;
+      }
+    }
+  htab->bfd_count = bfd_count;
+  if (htab->tramp_section == 0)
+    htab->tramp_section = text_section;
+
+  /* We can't use output_bfd->section_count here to find the top output
+     section index as some sections may have been removed, and
+     strip_excluded_output_sections doesn't renumber the indices.  */
+  for (section = output_bfd->sections, top_index = 0;
+      section != NULL;
+      section = section->next)
+    {
+    if (top_index < section->index)
+      top_index = section->index;
+    }
+
+  htab->top_index = top_index;
+  amt = sizeof (asection *) * (top_index + 1);
+  input_list = (asection **) bfd_malloc (amt);
+  htab->input_list = input_list;
+  if (input_list == NULL)
+    return -1;
+
+  /* For sections we aren't interested in, mark their entries with a
+     value we can check later.  */
+  list = input_list + top_index;
+  do
+    *list = bfd_abs_section_ptr;
+  while (list-- != input_list);
+
+  for (section = output_bfd->sections;
+      section != NULL;
+      section = section->next)
+    {
+    if ((section->flags & SEC_CODE) != 0)
+      input_list[section->index] = NULL;
+    }
+
+  return 1;
+}
+
+/* Determine and set the size of the stub section for a final link.
+
+   The basic idea here is to examine all the relocations looking for
+   PC-relative calls to a target that is unreachable with a "bl"
+   instruction.  */
+
+bfd_boolean
+elf32_mc9xgate_size_stubs (bfd *output_bfd, bfd *stub_bfd,
+    struct bfd_link_info *info,
+    asection * (*add_stub_section) (const char*, asection*))
+{
+  //printf("\n in size stubs");
+  bfd *input_bfd;
+  asection *section;
+  Elf_Internal_Sym *local_syms, **all_local_syms;
+  unsigned int bfd_indx, bfd_count;
+  bfd_size_type amt;
+  asection *stub_sec;
+
+  struct mc9xgate_elf_link_hash_table *htab = mc9xgate_elf_hash_table (info);
+
+  /* Stash our params away.  */
+  htab->stub_bfd = stub_bfd;
+  htab->add_stub_section = add_stub_section;
+
+  /* Count the number of input BFDs and find the top input section id.  */
+  for (input_bfd = info->input_bfds, bfd_count = 0;
+      input_bfd != NULL;
+      input_bfd = input_bfd->link_next)
+    {
+    bfd_count += 1;
+    }
+
+  /* We want to read in symbol extension records only once.  To do this
+     we need to read in the local symbols in parallel and save them for
+     later use; so hold pointers to the local symbols in an array.  */
+  amt = sizeof (Elf_Internal_Sym *) * bfd_count;
+  all_local_syms = (Elf_Internal_Sym **) bfd_zmalloc (amt);
+  if (all_local_syms == NULL)
+    return FALSE;
+
+  /* Walk over all the input BFDs, swapping in local symbols.  */
+  for (input_bfd = info->input_bfds, bfd_indx = 0;
+      input_bfd != NULL;
+      input_bfd = input_bfd->link_next, bfd_indx++)
+    {
+    Elf_Internal_Shdr *symtab_hdr;
+
+    /* We'll need the symbol table in a second.  */
+    symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+    if (symtab_hdr->sh_info == 0)
+      continue;
+
+    /* We need an array of the local symbols attached to the input bfd.  */
+    local_syms = (Elf_Internal_Sym *) symtab_hdr->contents;
+    if (local_syms == NULL)
+      {
+      local_syms = bfd_elf_get_elf_syms (input_bfd, symtab_hdr,
+          symtab_hdr->sh_info, 0,
+          NULL, NULL, NULL);
+      /* Cache them for elf_link_input_bfd.  */
+      symtab_hdr->contents = (unsigned char *) local_syms;
+      }
+    if (local_syms == NULL)
+      {
+      free (all_local_syms);
+      return FALSE;
+      }
+
+    all_local_syms[bfd_indx] = local_syms;
+    }
+
+  for (input_bfd = info->input_bfds, bfd_indx = 0;
+      input_bfd != NULL;
+      input_bfd = input_bfd->link_next, bfd_indx++)
+    {
+    Elf_Internal_Shdr *symtab_hdr;
+    Elf_Internal_Sym *local_syms;
+    struct elf_link_hash_entry ** sym_hashes;
+
+    sym_hashes = elf_sym_hashes (input_bfd);
+
+    /* We'll need the symbol table in a second.  */
+    symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+    if (symtab_hdr->sh_info == 0)
+      continue;
+
+    local_syms = all_local_syms[bfd_indx];
+
+    /* Walk over each section attached to the input bfd.  */
+    for (section = input_bfd->sections;
+        section != NULL;
+        section = section->next)
+      {
+      Elf_Internal_Rela *internal_relocs, *irelaend, *irela;
+
+      /* If there aren't any relocs, then there's nothing more
+             to do.  */
+      if ((section->flags & SEC_RELOC) == 0
+          || section->reloc_count == 0)
+        continue;
+
+      /* If this section is a link-once section that will be
+             discarded, then don't create any stubs.  */
+      if (section->output_section == NULL
+          || section->output_section->owner != output_bfd)
+        continue;
+
+      /* Get the relocs.  */
+      internal_relocs
+      = _bfd_elf_link_read_relocs (input_bfd, section, NULL,
+          (Elf_Internal_Rela *) NULL,
+          info->keep_memory);
+      if (internal_relocs == NULL)
+        goto error_ret_free_local;
+
+      /* Now examine each relocation.  */
+      irela = internal_relocs;
+      irelaend = irela + section->reloc_count;
+      for (; irela < irelaend; irela++)
+        {
+        unsigned int r_type, r_indx;
+        struct elf32_mc9xgate_stub_hash_entry *stub_entry;
+        asection *sym_sec;
+        bfd_vma sym_value;
+        struct elf_link_hash_entry *hash;
+        const char *stub_name;
+        Elf_Internal_Sym *sym;
+
+        r_type = ELF32_R_TYPE (irela->r_info);
+
+        /* Only look at 16-bit relocs.  */
+        if (r_type != (unsigned int) R_MC9XGATE_16)
+          continue;
+
+        /* Now determine the call target, its name, value,
+                 section.  */
+        r_indx = ELF32_R_SYM (irela->r_info);
+        if (r_indx < symtab_hdr->sh_info)
+          {
+          /* It's a local symbol.  */
+          Elf_Internal_Shdr *hdr;
+          bfd_boolean is_far;
+
+          sym = local_syms + r_indx;
+          is_far = (sym && (sym->st_other & STO_MC9XGATE_FAR));
+          if (!is_far)
+            continue;
+
+          if (sym->st_shndx >= elf_numsections (input_bfd))
+            sym_sec = NULL;
+          else
+            {
+            hdr = elf_elfsections (input_bfd)[sym->st_shndx];
+            sym_sec = hdr->bfd_section;
+            }
+          stub_name = (bfd_elf_string_from_elf_section
+              (input_bfd, symtab_hdr->sh_link,
+                  sym->st_name));
+          sym_value = sym->st_value;
+          hash = NULL;
+          }
+        else
+          {
+          /* It's an external symbol.  */
+          int e_indx;
+
+          e_indx = r_indx - symtab_hdr->sh_info;
+          hash = (struct elf_link_hash_entry *)
+                        (sym_hashes[e_indx]);
+
+          while (hash->root.type == bfd_link_hash_indirect
+              || hash->root.type == bfd_link_hash_warning)
+            hash = ((struct elf_link_hash_entry *)
+                hash->root.u.i.link);
+
+          if (hash->root.type == bfd_link_hash_defined
+              || hash->root.type == bfd_link_hash_defweak
+              || hash->root.type == bfd_link_hash_new)
+            {
+            if (!(hash->other & STO_MC9XGATE_FAR))
+              continue;
+            }
+          else if (hash->root.type == bfd_link_hash_undefweak)
+            {
+            continue;
+            }
+          else if (hash->root.type == bfd_link_hash_undefined)
+            {
+            continue;
+            }
+          else
+            {
+            bfd_set_error (bfd_error_bad_value);
+            goto error_ret_free_internal;
+            }
+          sym_sec = hash->root.u.def.section;
+          sym_value = hash->root.u.def.value;
+          stub_name = hash->root.root.string;
+          }
+
+        if (!stub_name)
+          goto error_ret_free_internal;
+
+        stub_entry = mc9xgate_stub_hash_lookup
+            (htab->stub_hash_table,
+                stub_name,
+                FALSE, FALSE);
+        if (stub_entry == NULL)
+          {
+          if (add_stub_section == 0)
+            continue;
+
+          stub_entry = mc9xgate_add_stub (stub_name, section, htab);
+          if (stub_entry == NULL)
+            {
+            error_ret_free_internal:
+            if (elf_section_data (section)->relocs == NULL)
+              free (internal_relocs);
+            goto error_ret_free_local;
+            }
+          }
+
+        stub_entry->target_value = sym_value;
+        stub_entry->target_section = sym_sec;
+        }
+
+      /* We're done with the internal relocs, free them.  */
+      if (elf_section_data (section)->relocs == NULL)
+        free (internal_relocs);
+      }
+    }
+
+  if (add_stub_section)
+    {
+    /* OK, we've added some stubs.  Find out the new size of the
+         stub sections.  */
+    for (stub_sec = htab->stub_bfd->sections;
+        stub_sec != NULL;
+        stub_sec = stub_sec->next)
+      {
+      stub_sec->size = 0;
+      }
+
+    bfd_hash_traverse (htab->stub_hash_table, htab->size_one_stub, htab);
+    }
+  free (all_local_syms);
+  return TRUE;
+
+  error_ret_free_local:
+  free (all_local_syms);
+  return FALSE;
+}
+
+/* Export the trampoline addresses in the symbol table.  */
+static bfd_boolean
+mc9xgate_elf_export_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)
+{
+  //printf("\n in export_one_stub");
+  struct bfd_link_info *info;
+  struct mc9xgate_elf_link_hash_table *htab;
+  struct elf32_mc9xgate_stub_hash_entry *stub_entry;
+  char* name;
+  bfd_boolean result;
+
+  info = (struct bfd_link_info *) in_arg;
+  htab = mc9xgate_elf_hash_table (info);
+
+  /* Massage our args to the form they really have.  */
+  stub_entry = (struct elf32_mc9xgate_stub_hash_entry *) gen_entry;
+
+  /* Generate the trampoline according to HC11 or HC12.  */
+  result = (* htab->build_one_stub) (gen_entry, in_arg);
+
+  /* Make a printable name that does not conflict with the real function.  */
+  name = alloca (strlen (stub_entry->root.string) + 16);
+  sprintf (name, "tramp.%s", stub_entry->root.string);
+
+  /* Export the symbol for debugging/disassembling.  */
+  mc9xgate_elf_set_symbol (htab->stub_bfd, info, name,
+      stub_entry->stub_offset,
+      stub_entry->stub_sec);
+  return result;
+}
+
+/* Export a symbol or set its value and section.  */
+static void
+mc9xgate_elf_set_symbol (bfd *abfd, struct bfd_link_info *info,
+    const char *name, bfd_vma value, asection *sec)
+{
+  //printf("\n in set_symbol");
+  struct elf_link_hash_entry *h;
+
+  h = (struct elf_link_hash_entry *)
+        bfd_link_hash_lookup (info->hash, name, FALSE, FALSE, FALSE);
+  if (h == NULL)
+    {
+    _bfd_generic_link_add_one_symbol (info, abfd,
+        name,
+        BSF_GLOBAL,
+        sec,
+        value,
+        (const char*) NULL,
+        TRUE, FALSE, NULL);
+    }
+  else
+    {
+    h->root.type = bfd_link_hash_defined;
+    h->root.u.def.value = value;
+    h->root.u.def.section = sec;
+    }
+}
+
+
+/* Build all the stubs associated with the current output file.  The
+   stubs are kept in a hash table attached to the main linker hash
+   table.  This function is called via m68hc12elf_finish in the
+   linker.  */
+
+bfd_boolean
+elf32_mc9xgate_build_stubs (bfd *abfd, struct bfd_link_info *info)
+{
+  //printf("\n in build_stubs");
+  asection *stub_sec;
+  struct bfd_hash_table *table;
+  struct mc9xgate_elf_link_hash_table *htab;
+  struct mc9xgate_scan_param param;
+
+  mc9xgate_elf_get_bank_parameters (info);
+  htab = mc9xgate_elf_hash_table (info);
+
+  for (stub_sec = htab->stub_bfd->sections;
+      stub_sec != NULL;
+      stub_sec = stub_sec->next)
+    {
+    bfd_size_type size;
+
+    /* Allocate memory to hold the linker stubs.  */
+    size = stub_sec->size;
+    stub_sec->contents = (unsigned char *) bfd_zalloc (htab->stub_bfd, size);
+    if (stub_sec->contents == NULL && size != 0)
+      return FALSE;
+    stub_sec->size = 0;
+    }
+
+  /* Build the stubs as directed by the stub hash table.  */
+  table = htab->stub_hash_table;
+  bfd_hash_traverse (table, mc9xgate_elf_export_one_stub, info);
+
+  /* Scan the output sections to see if we use the memory banks.
+     If so, export the symbols that define how the memory banks
+     are mapped.  This is used by gdb and the simulator to obtain
+     the information.  It can be used by programs to burn the eprom
+     at the good addresses.  */
+  param.use_memory_banks = FALSE;
+  param.pinfo = &htab->pinfo;
+  bfd_map_over_sections (abfd, scan_sections_for_abi, &param);
+  if (param.use_memory_banks)
+    {
+    mc9xgate_elf_set_symbol (abfd, info, BFD_MC9XGATE_BANK_START_NAME,
+        htab->pinfo.bank_physical,
+        bfd_abs_section_ptr);
+    mc9xgate_elf_set_symbol (abfd, info, BFD_MC9XGATE_BANK_VIRTUAL_NAME,
+        htab->pinfo.bank_virtual,
+        bfd_abs_section_ptr);
+    mc9xgate_elf_set_symbol (abfd, info, BFD_MC9XGATE_BANK_SIZE_NAME,
+        htab->pinfo.bank_size,
+        bfd_abs_section_ptr);
+    }
+
+  return TRUE;
+}
+
+void
+mc9xgate_elf_get_bank_parameters (struct bfd_link_info *info)
+{
+  //printf("\n in get bank parameters");
+  unsigned i;
+  struct mc9xgate_page_info *pinfo;
+  struct bfd_link_hash_entry *h;
+
+  pinfo = &mc9xgate_elf_hash_table (info)->pinfo;
+  if (pinfo->bank_param_initialized)
+    return;
+
+  pinfo->bank_virtual = MC9XGATE_BANK_VIRT;
+  pinfo->bank_mask = MC9XGATE_BANK_MASK;
+  pinfo->bank_physical = MC9XGATE_BANK_BASE;
+  pinfo->bank_shift = MC9XGATE_BANK_SHIFT;
+  pinfo->bank_size = 1 << MC9XGATE_BANK_SHIFT;
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9XGATE_BANK_START_NAME,
+      FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_physical = (h->u.def.value
+        + h->u.def.section->output_section->vma
+        + h->u.def.section->output_offset);
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9XGATE_BANK_VIRTUAL_NAME,
+      FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_virtual = (h->u.def.value
+        + h->u.def.section->output_section->vma
+        + h->u.def.section->output_offset);
+
+  h = bfd_link_hash_lookup (info->hash, BFD_MC9XGATE_BANK_SIZE_NAME,
+      FALSE, FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->bank_size = (h->u.def.value
+        + h->u.def.section->output_section->vma
+        + h->u.def.section->output_offset);
+
+  pinfo->bank_shift = 0;
+  for (i = pinfo->bank_size; i != 0; i >>= 1)
+    pinfo->bank_shift++;
+  pinfo->bank_shift--;
+  pinfo->bank_mask = (1 << pinfo->bank_shift) - 1;
+  pinfo->bank_physical_end = pinfo->bank_physical + pinfo->bank_size;
+  pinfo->bank_param_initialized = 1;
+
+  h = bfd_link_hash_lookup (info->hash, "__far_trampoline", FALSE,
+      FALSE, TRUE);
+  if (h != (struct bfd_link_hash_entry*) NULL
+      && h->type == bfd_link_hash_defined)
+    pinfo->trampoline_addr = (h->u.def.value
+        + h->u.def.section->output_section->vma
+        + h->u.def.section->output_offset);
+}
+
+/* Return 1 if the address is in banked memory.
+   This can be applied to a virtual address and to a physical address.  */
+int
+mc9xgate_addr_is_banked (struct mc9xgate_page_info *pinfo, bfd_vma addr)
+{
+  //printf("\n in addr_is_banked");
+  if (addr >= pinfo->bank_virtual)
+    return 1;
+
+  if (addr >= pinfo->bank_physical && addr <= pinfo->bank_physical_end)
+    return 1;
+
+  return 0;
+}
+
+/* Return the physical address seen by the processor, taking
+   into account banked memory.  */
+bfd_vma
+mc9xgate_phys_addr (struct mc9xgate_page_info *pinfo, bfd_vma addr)
+{
+  //printf("\n in phys addr");
+  if (addr < pinfo->bank_virtual)
+    return addr;
+
+  /* Map the address to the memory bank.  */
+  addr -= pinfo->bank_virtual;
+  addr &= pinfo->bank_mask;
+  addr += pinfo->bank_physical;
+  return addr;
+}
+
+/* Return the page number corresponding to an address in banked memory.  */
+bfd_vma
+mc9xgate_phys_page (struct mc9xgate_page_info *pinfo, bfd_vma addr)
+{
+  //printf("\n in phys_page");
+  if (addr < pinfo->bank_virtual)
+    return 0;
+
+  /* Map the address to the memory bank.  */
+  addr -= pinfo->bank_virtual;
+  addr >>= pinfo->bank_shift;
+  addr &= 0x0ff;
+  return addr;
+}
+
+/* This function is used for relocs which are only used for relaxing,
+   which the linker should otherwise ignore.  */
+
+bfd_reloc_status_type
+mc9xgate_elf_ignore_reloc (bfd *abfd ATTRIBUTE_UNUSED,
+    arelent *reloc_entry,
+    asymbol *symbol ATTRIBUTE_UNUSED,
+    void *data ATTRIBUTE_UNUSED,
+    asection *input_section,
+    bfd *output_bfd,
+    char **error_message ATTRIBUTE_UNUSED)
+{
+  //printf("\n in elf ignore reloc");
+  if (output_bfd != NULL)
+    reloc_entry->address += input_section->output_offset;
+  return bfd_reloc_ok;
+}
+
+bfd_reloc_status_type
+mc9xgate_elf_special_reloc (bfd *abfd ATTRIBUTE_UNUSED,
+    arelent *reloc_entry,
+    asymbol *symbol,
+    void *data ATTRIBUTE_UNUSED,
+    asection *input_section,
+    bfd *output_bfd,
+    char **error_message ATTRIBUTE_UNUSED)
+{
+  //printf("\n in elf special reloc");
+  if (output_bfd != (bfd *) NULL
+      && (symbol->flags & BSF_SECTION_SYM) == 0
+      && (! reloc_entry->howto->partial_inplace
+          || reloc_entry->addend == 0))
+    {
+    reloc_entry->address += input_section->output_offset;
+    return bfd_reloc_ok;
+    }
+
+  if (output_bfd != NULL)
+    return bfd_reloc_continue;
+
+  if (reloc_entry->address > bfd_get_section_limit (abfd, input_section))
+    return bfd_reloc_outofrange;
+
+  abort();
+}
+
+/* Look through the relocs for a section during the first phase.
+   Since we don't do .gots or .plts, we just need to consider the
+   virtual table relocs for gc.  */
+
+bfd_boolean
+elf32_mc9xgate_check_relocs (bfd *abfd, struct bfd_link_info *info,
+    asection *sec, const Elf_Internal_Rela *relocs)
+{
+  //printf("\n in mc9xgate check relocs");
+
+  Elf_Internal_Shdr *           symtab_hdr;
+  struct elf_link_hash_entry ** sym_hashes;
+  const Elf_Internal_Rela *     rel;
+  const Elf_Internal_Rela *     rel_end;
+
+  if (info->relocatable){
+    //printf("\n info relocatable-%d", info->relocatable);
+    return TRUE;
+  }
+
+
+  symtab_hdr = & elf_tdata (abfd)->symtab_hdr;
+  sym_hashes = elf_sym_hashes (abfd);
+  rel_end = relocs + sec->reloc_count;
+
+  for (rel = relocs; rel < rel_end; rel++)
+    {
+    struct elf_link_hash_entry * h;
+    unsigned long r_symndx;
+
+    r_symndx = ELF32_R_SYM (rel->r_info);
+
+    if (r_symndx < symtab_hdr->sh_info)
+      h = NULL;
+    else
+      {
+      h = sym_hashes [r_symndx - symtab_hdr->sh_info];
+      while (h->root.type == bfd_link_hash_indirect
+          || h->root.type == bfd_link_hash_warning)
+        h = (struct elf_link_hash_entry *) h->root.u.i.link;
+      }
+
+    switch (ELF32_R_TYPE (rel->r_info))
+    {
+    /* This relocation describes the C++ object vtable hierarchy.
+           Reconstruct it for later use during GC.  */
+    case R_MC9XGATE_GNU_VTINHERIT:
+      if (!bfd_elf_gc_record_vtinherit (abfd, sec, h, rel->r_offset))
+        return FALSE;
+      break;
+
+      /* This relocation describes which C++ vtable entries are actually
+           used.  Record for later use during GC.  */
+    case R_MC9XGATE_GNU_VTENTRY:
+      BFD_ASSERT (h != NULL);
+      if (h != NULL
+          && !bfd_elf_gc_record_vtentry (abfd, sec, h, rel->r_addend))
+        return FALSE;
+      break;
+    }
+    }
+
+  return TRUE;
+}
+
+/* Relocate a 68hc11/68hc12 ELF section.  */
+bfd_boolean
+elf32_mc9xgate_relocate_section (bfd *output_bfd ATTRIBUTE_UNUSED,
+    struct bfd_link_info *info,
+    bfd *input_bfd, asection *input_section,
+    bfd_byte *contents, Elf_Internal_Rela *relocs,
+    Elf_Internal_Sym *local_syms,
+    asection **local_sections)
+{
+  //printf("\n in mc9xgate_relocate_section");
+  Elf_Internal_Shdr *symtab_hdr;
+  struct elf_link_hash_entry **sym_hashes;
+  Elf_Internal_Rela *rel, *relend;
+  const char *name = NULL;
+  struct mc9xgate_page_info *pinfo;
+  const struct elf_backend_data * const ebd = get_elf_backend_data (input_bfd);
+
+  symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
+  sym_hashes = elf_sym_hashes (input_bfd);
+
+  /* Get memory bank parameters.  */
+  mc9xgate_elf_get_bank_parameters (info);
+  pinfo = &mc9xgate_elf_hash_table (info)->pinfo;
+
+  rel = relocs;
+  relend = relocs + input_section->reloc_count;
+  for (; rel < relend; rel++)
+    {
+    int r_type;
+    arelent arel;
+    reloc_howto_type *howto;
+    unsigned long r_symndx;
+    Elf_Internal_Sym *sym;
+    asection *sec;
+    bfd_vma relocation = 0;
+    bfd_reloc_status_type r = bfd_reloc_undefined;
+    bfd_vma phys_page;
+    bfd_vma phys_addr;
+    bfd_vma insn_addr;
+    bfd_vma insn_page;
+    bfd_boolean is_far = FALSE;
+    struct elf_link_hash_entry *h;
+    const char* stub_name = 0;
+
+    r_symndx = ELF32_R_SYM (rel->r_info);
+    r_type = ELF32_R_TYPE (rel->r_info);
+
+    if (r_type == R_MC9XGATE_GNU_VTENTRY
+        || r_type == R_MC9XGATE_GNU_VTINHERIT )
+      continue;
+
+#undef elf_info_to_howto_rel  /* TODO fix so this is not necessary */
+    (*ebd->elf_info_to_howto_rel) (input_bfd, &arel, rel);
+    howto = arel.howto;
+
+    h = NULL;
+    sym = NULL;
+    sec = NULL;
+    if (r_symndx < symtab_hdr->sh_info)
+      {
+      //printf("\n r_symndx is less than symtab sh_info");
+      sym = local_syms + r_symndx;
+      sec = local_sections[r_symndx];
+      relocation = (sec->output_section->vma
+          + sec->output_offset
+          + sym->st_value);
+
+      //printf("\n user set debug value %d", sec->user_set_vma);
+
+      //printf("\n values output_sectoin->%lu output_offset->%lu st_value%lu test-value-%lu", sec->output_section->vma, sec->output_offset, sym->st_value, sec->vma);
+
+      is_far = (sym && (sym->st_other & STO_MC9XGATE_FAR));
+      //printf("\n relocation is->%lu before processing reloc code", (unsigned long int)relocation );
+      if (is_far)
+        stub_name = (bfd_elf_string_from_elf_section
+            (input_bfd, symtab_hdr->sh_link,
+                sym->st_name));
+      }
+    else
+      {
+      bfd_boolean unresolved_reloc, warned;
+
+      RELOC_FOR_GLOBAL_SYMBOL (info, input_bfd, input_section, rel,
+          r_symndx, symtab_hdr, sym_hashes,
+          h, sec, relocation, unresolved_reloc,
+          warned);
+
+      is_far = (h && (h->other & STO_MC9XGATE_FAR));
+      stub_name = h->root.root.string;
+      }
+
+    if (sec != NULL && elf_discarded_section (sec))
+      {
+      //printf("\n zeroing contenst section");
+      /* For relocs against symbols from removed linkonce sections,
+	     or sections discarded by a linker script, we just want the
+	     section contents zeroed.  Avoid any special processing.  */
+      _bfd_clear_contents (howto, input_bfd, contents + rel->r_offset);
+      rel->r_info = 0;
+      rel->r_addend = 0;
+      continue;
+      }
+
+    if (info->relocatable)
+      {
+      //printf("\n this is a relocatable link");
+      /* This is a relocatable link.  We don't have to change
+	     anything, unless the reloc is against a section symbol,
+	     in which case we have to adjust according to where the
+	     section symbol winds up in the output section.  */
+      if (sym != NULL && ELF_ST_TYPE (sym->st_info) == STT_SECTION)
+        rel->r_addend += sec->output_offset;
+      continue;
+      }
+
+    if (h != NULL)
+      name = h->root.root.string;
+    else
+      {
+      name = (bfd_elf_string_from_elf_section
+          (input_bfd, symtab_hdr->sh_link, sym->st_name));
+      if (name == NULL || *name == '\0')
+        name = bfd_section_name (input_bfd, sec);
+      }
+
+    if (is_far && ELF32_R_TYPE (rel->r_info) == R_MC9XGATE_16)
+      {
+      //printf("\n ELF32_R_TYPE is == R_MC9XGATE");
+
+      struct elf32_mc9xgate_stub_hash_entry* stub;
+      struct mc9xgate_elf_link_hash_table *htab;
+
+      htab = mc9xgate_elf_hash_table (info);
+      stub = mc9xgate_stub_hash_lookup (htab->stub_hash_table,
+          name, FALSE, FALSE);
+      if (stub)
+        {
+        relocation = stub->stub_offset
+            + stub->stub_sec->output_section->vma
+            + stub->stub_sec->output_offset;
+        is_far = FALSE;
+        }
+      }
+
+
+
+    /* Do the memory bank mapping.  */
+    ////printf("\n about to do relocation bank mapping relocation-%ld ammend-%ld",(long int) relocation,(long int) rel->r_addend);
+    phys_addr = mc9xgate_phys_addr (pinfo, relocation + rel->r_addend);
+    phys_page = mc9xgate_phys_page (pinfo, relocation + rel->r_addend);
+
+
+    switch (r_type)
+    {
+    case	R_MC9XGATE_IMM8_LO:
+      //printf("\n relocation is %lu", relocation);
+      /* relocation is already set to physical address at this point */
+
+      //  break;
+    case	R_MC9XGATE_IMM8_HI:
+      //printf("\n case  elf32 relocate IMM16");
+      break;
+    case R_MC9XGATE_24:
+      /* Reloc used by 68HC12 call instruction.  */
+      bfd_put_16 (input_bfd, phys_addr,
+          (bfd_byte*) contents + rel->r_offset);
+      bfd_put_8 (input_bfd, phys_page,
+          (bfd_byte*) contents + rel->r_offset + 2);
+      r = bfd_reloc_ok;
+      r_type = R_MC9XGATE_NONE;
+      break;
+
+    case R_MC9XGATE_NONE:
+      r = bfd_reloc_ok;
+      break;
+
+    case R_MC9XGATE_LO16:
+      /* Reloc generated by %addr(expr) gas to obtain the
+             address as mapped in the memory bank window.  */
+      relocation = phys_addr;
+      break;
+
+    case R_MC9XGATE_PAGE:
+      /* Reloc generated by %page(expr) gas to obtain the
+             page number associated with the address.  */
+      relocation = phys_page;
+      break;
+
+    case R_MC9XGATE_16:
+      /* Get virtual address of instruction having the relocation.  */
+      if (is_far)
+        {
+        //printf("\n yes is_far");
+        const char* msg;
+        char* buf;
+        msg = _("Reference to the far symbol `%s' using a wrong "
+            "relocation may result in incorrect execution");
+        buf = alloca (strlen (msg) + strlen (name) + 10);
+        sprintf (buf, msg, name);
+
+        (* info->callbacks->warning)
+                    (info, buf, name, input_bfd, NULL, rel->r_offset);
+        }
+
+      /* Get virtual address of instruction having the relocation.  */
+      insn_addr = input_section->output_section->vma
+          + input_section->output_offset
+          + rel->r_offset;
+
+      insn_page = mc9xgate_phys_page (pinfo, insn_addr);
+
+      if (mc9xgate_addr_is_banked (pinfo, relocation + rel->r_addend)
+          && mc9xgate_addr_is_banked (pinfo, insn_addr)
+          && phys_page != insn_page)
+        {
+        //printf("\n is banked");
+        const char* msg;
+        char* buf;
+
+        msg = _("banked address [%lx:%04lx] (%lx) is not in the same bank "
+            "as current banked address [%lx:%04lx] (%lx)");
+
+        buf = alloca (strlen (msg) + 128);
+        sprintf (buf, msg, phys_page, phys_addr,
+            (long) (relocation + rel->r_addend),
+            insn_page, mc9xgate_phys_addr (pinfo, insn_addr),
+            (long) (insn_addr));
+        if (!((*info->callbacks->warning)
+            (info, buf, name, input_bfd, input_section,
+                rel->r_offset)))
+          return FALSE;
+        break;
+        }
+      if (phys_page != 0 && insn_page == 0)
+        {
+        //printf("\n physical page is not zero");
+        const char* msg;
+        char* buf;
+
+        msg = _("reference to a banked address [%lx:%04lx] in the "
+            "normal address space at %04lx");
+
+        buf = alloca (strlen (msg) + 128);
+        sprintf (buf, msg, phys_page, phys_addr, insn_addr);
+        if (!((*info->callbacks->warning)
+            (info, buf, name, input_bfd, input_section,
+                insn_addr)))
+          return FALSE;
+
+        relocation = phys_addr;
+        break;
+        }
+
+      /* If this is a banked address use the phys_addr so that
+             we stay in the banked window.  */
+      if (mc9xgate_addr_is_banked (pinfo, relocation + rel->r_addend))
+        relocation = phys_addr;
+      break;
+    }
+    if (r_type != R_MC9XGATE_NONE){
+      //printf("\n type is not R_MC9XGATE_NONE r= bfd final link relocate");
+      r = _bfd_final_link_relocate (howto, input_bfd, input_section,
+          contents, rel->r_offset,
+          relocation, rel->r_addend);
+    }
+    if (r != bfd_reloc_ok)
+      {
+      const char * msg = (const char *) 0;
+
+      switch (r)
+      {
+      case bfd_reloc_overflow:
+        if (!((*info->callbacks->reloc_overflow)
+            (info, NULL, name, howto->name, (bfd_vma) 0,
+                input_bfd, input_section, rel->r_offset)))
+          return FALSE;
+        break;
+
+      case bfd_reloc_undefined:
+        if (!((*info->callbacks->undefined_symbol)
+            (info, name, input_bfd, input_section,
+                rel->r_offset, TRUE)))
+          return FALSE;
+        break;
+
+      case bfd_reloc_outofrange:
+        msg = _ ("internal error: out of range error");
+        goto common_error;
+
+      case bfd_reloc_notsupported:
+        msg = _ ("internal error: unsupported relocation error");
+        goto common_error;
+
+      case bfd_reloc_dangerous:
+        msg = _ ("internal error: dangerous error");
+        goto common_error;
+
+      default:
+        msg = _ ("internal error: unknown error");
+        /* fall through */
+
+        common_error:
+        if (!((*info->callbacks->warning)
+            (info, msg, name, input_bfd, input_section,
+                rel->r_offset)))
+          return FALSE;
+        break;
+      }
+      }
+    }
+
+  return TRUE;
+}
+
+
+
+/* Set and control ELF flags in ELF header.  */
+
+bfd_boolean
+_bfd_mc9xgate_elf_set_private_flags (bfd *abfd, flagword flags)
+{
+  //printf("\n in elf_set_private_flags");
+  BFD_ASSERT (!elf_flags_init (abfd)
+      || elf_elfheader (abfd)->e_flags == flags);
+
+  elf_elfheader (abfd)->e_flags = flags;
+  elf_flags_init (abfd) = TRUE;
+  return TRUE;
+}
+
+/* Merge backend specific data from an object file to the output
+   object file when linking.  */
+
+bfd_boolean
+_bfd_mc9xgate_elf_merge_private_bfd_data (bfd *ibfd, bfd *obfd)
+{
+  //printf("\n in elf_merge_private_bfd_data");
+  flagword old_flags;
+  flagword new_flags;
+  bfd_boolean ok = TRUE;
+
+  /* Check if we have the same endianess */
+  if (!_bfd_generic_verify_endian_match (ibfd, obfd)){
+    //printf("\n failed to verify endianness ");
+    return FALSE;
+  }
+
+
+  if (bfd_get_flavour (ibfd) != bfd_target_elf_flavour
+      || bfd_get_flavour (obfd) != bfd_target_elf_flavour)
+    return TRUE;
+
+  new_flags = elf_elfheader (ibfd)->e_flags;
+  elf_elfheader (obfd)->e_flags |= new_flags & EF_MC9XGATE_ABI;
+  old_flags = elf_elfheader (obfd)->e_flags;
+
+  if (! elf_flags_init (obfd))
+    {
+    elf_flags_init (obfd) = TRUE;
+    elf_elfheader (obfd)->e_flags = new_flags;
+    elf_elfheader (obfd)->e_ident[EI_CLASS]
+                                  = elf_elfheader (ibfd)->e_ident[EI_CLASS];
+
+    if (bfd_get_arch (obfd) == bfd_get_arch (ibfd)
+        && bfd_get_arch_info (obfd)->the_default)
+      {
+      if (! bfd_set_arch_mach (obfd, bfd_get_arch (ibfd),
+          bfd_get_mach (ibfd)))
+        return FALSE;
+      }
+
+    return TRUE;
+    }
+
+  /* Check ABI compatibility.  */
+  if ((new_flags & E_MC9XGATE_I32) != (old_flags & E_MC9XGATE_I32))
+    {
+    (*_bfd_error_handler)
+	    (_("%B: linking files compiled for 16-bit integers (-mshort) "
+	        "and others for 32-bit integers"), ibfd);
+    ok = FALSE;
+    }
+  if ((new_flags & E_MC9XGATE_F64) != (old_flags & E_MC9XGATE_F64))
+    {
+    (*_bfd_error_handler)
+	    (_("%B: linking files compiled for 32-bit double (-fshort-double) "
+	        "and others for 64-bit double"), ibfd);
+    ok = FALSE;
+    }
+  /*
+   *
+   *
+   Check ABI compatibility.
+  if ((new_flags & E_M68HC11_I32) != (old_flags & E_M68HC11_I32))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 16-bit integers (-mshort) "
+           "and others for 32-bit integers"), ibfd);
+      ok = FALSE;
+    }
+  if ((new_flags & E_M68HC11_F64) != (old_flags & E_M68HC11_F64))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for 32-bit double (-fshort-double) "
+           "and others for 64-bit double"), ibfd);
+      ok = FALSE;
+    }
+
+  Processor compatibility.
+  if (!EF_M68HC11_CAN_MERGE_MACH (new_flags, old_flags))
+    {
+      (*_bfd_error_handler)
+	(_("%B: linking files compiled for HCS12 with "
+           "others compiled for HC12"), ibfd);
+      ok = FALSE;
+    }
+  new_flags = ((new_flags & ~EF_M68HC11_MACH_MASK)
+               | (EF_M68HC11_MERGE_MACH (new_flags, old_flags)));
+
+  elf_elfheader (obfd)->e_flags = new_flags;
+
+  new_flags &= ~(EF_M68HC11_ABI | EF_M68HC11_MACH_MASK);
+  old_flags &= ~(EF_M68HC11_ABI | EF_M68HC11_MACH_MASK);
+   */
+
+
+  /* Processor compatibility.  */
+  /* TODO eliminate compat mode mabye have a mode MUST BE REFACTORED */
+  //  if (!EF_MC9XGATE_CAN_MERGE_MACH (new_flags, old_flags))
+  //    {
+  //      (*_bfd_error_handler)
+  //	(_("%B: linking files compiled for HCS12 with "
+  //           "others compiled for HC12"), ibfd);
+  // ok = FALSE;
+  //    }
+  //  new_flags = ((new_flags & ~EF_MC9XGATE_MACH_MASK)
+  //               | (EF_MC9XGATE_MERGE_MACH (new_flags, old_flags)));
+
+  elf_elfheader (obfd)->e_flags = new_flags;
+
+  new_flags &= ~(EF_MC9XGATE_ABI | EF_MC9XGATE_MACH_MASK);
+  old_flags &= ~(EF_MC9XGATE_ABI | EF_MC9XGATE_MACH_MASK);
+
+  /* Warn about any other mismatches */
+  if (new_flags != old_flags)
+    {
+    (*_bfd_error_handler)
+	    (_("%B: uses different e_flags (0x%lx) fields than previous modules (0x%lx)"),
+	        ibfd, (unsigned long) new_flags, (unsigned long) old_flags);
+    ok = FALSE;
+    }
+
+  if (! ok)
+    {
+    bfd_set_error (bfd_error_bad_value);
+    return FALSE;
+    }
+
+  return TRUE;
+}
+
+bfd_boolean
+_bfd_mc9xgate_elf_print_private_bfd_data (bfd *abfd, void *ptr)
+{
+  //printf("\n in elf_print_private_bfd_data");
+  FILE *file = (FILE *) ptr;
+
+  BFD_ASSERT (abfd != NULL && ptr != NULL);
+
+  /* Print normal ELF private data.  */
+  _bfd_elf_print_private_bfd_data (abfd, ptr);
+
+  /* xgettext:c-format */
+  fprintf (file, _("private flags = %lx:"), elf_elfheader (abfd)->e_flags);
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9XGATE_I32)
+    fprintf (file, _("[abi=32-bit int, "));
+  else
+    fprintf (file, _("[abi=16-bit int, "));
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9XGATE_F64)
+    fprintf (file, _("64-bit double, "));
+  else
+    fprintf (file, _("32-bit double, "));
+  /* TODO reduce to 1 target */
+  if (strcmp (bfd_get_target (abfd), "elf32-mc9s12X") == 0)
+    fprintf (file, _("cpu=MC9XGATE]"));
+  else if (elf_elfheader (abfd)->e_flags & EF_MC9XGATE_MACH)
+    fprintf (file, _("cpu=MC9XGATE]"));
+  else
+    fprintf (file, _("cpu=MC9XGATE]"));
+
+  if (elf_elfheader (abfd)->e_flags & E_MC9XGATE_BANKS)
+    fprintf (file, _(" [memory=bank-model]"));
+  else
+    fprintf (file, _(" [memory=flat]"));
+
+  fputc ('\n', file);
+
+  return TRUE;
+}
+
+static void scan_sections_for_abi (bfd *abfd ATTRIBUTE_UNUSED,
+    asection *asect, void *arg)
+{
+  //printf("\n in scan_sections_for_abi");
+  struct mc9xgate_scan_param* p = (struct mc9xgate_scan_param*) arg;
+
+  if (asect->vma >= p->pinfo->bank_virtual)
+    p->use_memory_banks = TRUE;
+}
+
+/* Tweak the OSABI field of the elf header.  */
+
+void
+elf32_mc9xgate_post_process_headers (bfd *abfd, struct bfd_link_info *link_info)
+{
+  //printf("\n in mc9xgate_post_process_headers");
+  struct mc9xgate_scan_param param;
+
+  if (link_info == 0)
+    return;
+
+  mc9xgate_elf_get_bank_parameters (link_info);
+
+  param.use_memory_banks = FALSE;
+  param.pinfo = &mc9xgate_elf_hash_table (link_info)->pinfo;
+  bfd_map_over_sections (abfd, scan_sections_for_abi, &param);
+  if (param.use_memory_banks)
+    {
+    Elf_Internal_Ehdr * i_ehdrp;
+
+    i_ehdrp = elf_elfheader (abfd);
+    i_ehdrp->e_flags |= E_MC9XGATE_BANKS;
+    }
+}
+
diff -rupN binutils-2.20/bfd/elf32-mc9xgate.h binutils-2.20-sean/bfd/elf32-mc9xgate.h
--- binutils-2.20/bfd/elf32-mc9xgate.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/bfd/elf32-mc9xgate.h	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,189 @@
+/* Motorola 68HC11/68HC12-specific support for 32-bit ELF
+   Copyright 2003, 2004, 2005, 2006, 2007, 2009 Free Software Foundation, Inc.
+   Contributed by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#ifndef _ELF32_MC9XGATE_H
+#define _ELF32_MC9XGATE_H
+
+#include "elf-bfd.h"
+#include "bfdlink.h"
+#include "elf/mc9xgate.h"
+
+/* Name of symbols exported by MC9S12X linker when there is a memory
+   bank window.  */
+#define BFD_MC9XGATE_BANK_START_NAME   "__bank_start"
+#define BFD_MC9XGATE_BANK_SIZE_NAME    "__bank_size"
+#define BFD_MC9XGATE_BANK_VIRTUAL_NAME "__bank_virtual"
+
+/* Set and control ELF flags in ELF header.  */
+extern bfd_boolean _bfd_mc9xgate_elf_merge_private_bfd_data (bfd*,bfd*);
+extern bfd_boolean _bfd_mc9xgate_elf_set_private_flags (bfd*,flagword);
+extern bfd_boolean _bfd_mc9xgate_elf_print_private_bfd_data (bfd*, void*);
+
+/* This hash entry is used to record a trampoline that must be generated
+   to call a far function using a normal calling convention ('jsr').
+   The trampoline is used when a pointer to a far function is used.
+   It takes care of installing the proper memory bank as well as creating
+   the 'call/rtc' calling convention.  */
+struct elf32_mc9xgate_stub_hash_entry {
+
+  /* Base hash table entry structure.  */
+  struct bfd_hash_entry root;
+
+  /* The stub section.  */
+  asection *stub_sec;
+
+  /* Offset within stub_sec of the beginning of this stub.  */
+  bfd_vma stub_offset;
+
+  /* Given the symbol's value and its section we can determine its final
+     value when building the stubs (so the stub knows where to jump.  */
+  bfd_vma target_value;
+  asection *target_section;
+};
+
+/* Placeholder for the parameters to compute memory page and physical address.
+   The following formulas are used:
+
+   sym > bank_virtual =>
+     %addr(sym) = (((sym - bank_virtual) & bank_mask) + bank_physical
+     %page(sym) = (((sym - bank_virtual) >> bank_shift) % 256
+
+   sym < bank_virtual =>
+     %addr(sym) = sym
+     %page(sym) = 0
+
+
+   These parameters are obtained from the symbol table by looking
+   at the following:
+
+   __bank_start         Symbol marking the start of memory bank window
+                        (bank_physical)
+   __bank_virtual       Logical address of symbols for which the transformation
+                        must be computed
+   __bank_page_size     Size in bytes of page size (this is *NOT* the memory
+                        bank window size and the window size is always
+                        less or equal to the page size)
+
+   For 68HC12, the window is at 0x8000 and the page size is 16K (full window).
+   For 68HC11 this is board specific (implemented by external hardware).
+
+*/
+struct mc9xgate_page_info
+{
+  bfd_vma bank_virtual;
+  bfd_vma bank_physical;
+  bfd_vma bank_physical_end;
+  bfd_vma bank_mask;
+  bfd_vma bank_size;
+  int bank_shift;
+  int bank_param_initialized;
+  bfd_vma trampoline_addr;
+};
+
+struct mc9xgate_elf_link_hash_table
+{
+  struct elf_link_hash_table root;
+  struct mc9xgate_page_info pinfo;
+
+  /* The stub hash table.  */
+  struct bfd_hash_table* stub_hash_table;
+
+  /* Linker stub bfd.  */
+  bfd *stub_bfd;
+
+  asection* stub_section;
+  asection* tramp_section;
+
+  /* Linker call-backs.  */
+  asection * (*add_stub_section) PARAMS ((const char *, asection *));
+
+  /* Assorted information used by elf32_hppa_size_stubs.  */
+  unsigned int bfd_count;
+  int top_index;
+  asection **input_list;
+
+  /* Small local sym cache.  */
+  struct sym_cache sym_cache;
+
+  bfd_boolean (* size_one_stub) PARAMS((struct bfd_hash_entry*, void*));
+  bfd_boolean (* build_one_stub) PARAMS((struct bfd_hash_entry*, void*));
+};
+
+/* Get the Sparc64 ELF linker hash table from a link_info structure.  */
+
+#define mc9xgate_elf_hash_table(p) \
+  ((struct mc9xgate_elf_link_hash_table *) ((p)->hash))
+
+/* Create a 68HC11/68HC12 ELF linker hash table.  */
+
+extern struct mc9xgate_elf_link_hash_table* mc9xgate_elf_hash_table_create
+  (bfd*);
+extern void mc9xgate_elf_bfd_link_hash_table_free (struct bfd_link_hash_table*);
+
+extern void mc9xgate_elf_get_bank_parameters (struct bfd_link_info*);
+
+/* Return 1 if the address is in banked memory.
+   This can be applied to a virtual address and to a physical address.  */
+extern int mc9xgate_addr_is_banked (struct mc9xgate_page_info*, bfd_vma);
+
+/* Return the physical address seen by the processor, taking
+   into account banked memory.  */
+extern bfd_vma mc9xgate_phys_addr (struct mc9xgate_page_info*, bfd_vma);
+
+/* Return the page number corresponding to an address in banked memory.  */
+extern bfd_vma mc9xgate_phys_page (struct mc9xgate_page_info*, bfd_vma);
+
+bfd_reloc_status_type mc9xgate_elf_ignore_reloc
+  (bfd *abfd, arelent *reloc_entry,
+   asymbol *symbol, void *data, asection *input_section,
+   bfd *output_bfd, char **error_message);
+bfd_reloc_status_type mc9xgate_elf_special_reloc
+  (bfd *abfd, arelent *reloc_entry,
+    asymbol *symbol, void *data, asection *input_section,
+    bfd *output_bfd, char **error_message);
+
+bfd_boolean elf32_mc9xgate_check_relocs
+  (bfd * abfd, struct bfd_link_info * info,
+   asection * sec, const Elf_Internal_Rela * relocs);
+bfd_boolean elf32_mc9xgate_relocate_section
+  (bfd *output_bfd, struct bfd_link_info *info,
+   bfd *input_bfd, asection *input_section,
+   bfd_byte *contents, Elf_Internal_Rela *relocs,
+   Elf_Internal_Sym *local_syms, asection **local_sections);
+
+bfd_boolean elf32_mc9xgate_add_symbol_hook
+  (bfd *abfd, struct bfd_link_info *info,
+   Elf_Internal_Sym *sym, const char **namep,
+   flagword *flagsp, asection **secp,
+   bfd_vma *valp);
+
+/* Tweak the OSABI field of the elf header.  */
+
+extern void elf32_mc9xgate_post_process_headers (bfd*, struct bfd_link_info*);
+
+int elf32_mc9xgate_setup_section_lists (bfd *, struct bfd_link_info *);
+
+bfd_boolean elf32_mc9xgate_size_stubs
+  (bfd *, bfd *, struct bfd_link_info *,
+   asection * (*) (const char *, asection *));
+
+bfd_boolean elf32_mc9xgate_build_stubs (bfd* abfd, struct bfd_link_info *);
+#endif
diff -rupN binutils-2.20/bfd/libbfd.h binutils-2.20-sean/bfd/libbfd.h
--- binutils-2.20/bfd/libbfd.h	2009-09-02 02:10:55.000000000 -0600
+++ binutils-2.20-sean/bfd/libbfd.h	2010-10-01 14:37:28.000000000 -0600
@@ -1813,6 +1813,36 @@ static const char *const bfd_reloc_code_
   "BFD_RELOC_M68HC11_PAGE",
   "BFD_RELOC_M68HC11_24",
   "BFD_RELOC_M68HC12_5B",
+  "BFD_RELOC_MC9S12X_HI8",
+  "BFD_RELOC_MC9S12X_LO8",
+  "BFD_RELOC_MC9S12X_3B",
+  "BFD_RELOC_MC9S12X_RL_JUMP",
+  "BFD_RELOC_MC9S12X_RL_GROUP",
+  "BFD_RELOC_MC9S12X_LO16",
+  "BFD_RELOC_MC9S12X_PAGE",
+  "BFD_RELOC_MC9S12X_24",
+  "BFD_RELOC_MC9S12X_5B",
+  "BFD_RELOC_MC9S12X_PCREL_9",
+  "BFD_RELOC_MC9S12X_PCREL_10",
+  "BFD_RELOC_MC9S12X_IMM8_LO",
+  "BFD_RELOC_MC9S12X_IMM8_HI",
+  "BFD_RELOC_MC9S12X_IMM3",
+  "BFD_RELOC_MC9S12X_IMM4",
+  "BFD_RELOC_MC9XGATE_HI8",
+  "BFD_RELOC_MC9XGATE_LO8",
+  "BFD_RELOC_MC9XGATE_3B",
+  "BFD_RELOC_MC9XGATE_RL_JUMP",
+  "BFD_RELOC_MC9XGATE_RL_GROUP",
+  "BFD_RELOC_MC9XGATE_LO16",
+  "BFD_RELOC_MC9XGATE_PAGE",
+  "BFD_RELOC_MC9XGATE_24",
+  "BFD_RELOC_MC9XGATE_5B",
+  "BFD_RELOC_MC9XGATE_PCREL_9",
+  "BFD_RELOC_MC9XGATE_PCREL_10",
+  "BFD_RELOC_MC9XGATE_IMM8_LO",
+  "BFD_RELOC_MC9XGATE_IMM8_HI",
+  "BFD_RELOC_MC9XGATE_IMM3",
+  "BFD_RELOC_MC9XGATE_IMM4",
   "BFD_RELOC_16C_NUM08",
   "BFD_RELOC_16C_NUM08_C",
   "BFD_RELOC_16C_NUM16",
diff -rupN binutils-2.20/bfd/reloc.c binutils-2.20-sean/bfd/reloc.c
--- binutils-2.20/bfd/reloc.c	2009-09-10 05:47:13.000000000 -0600
+++ binutils-2.20-sean/bfd/reloc.c	2010-10-01 14:37:28.000000000 -0600
@@ -4547,6 +4547,175 @@ ENUMDOC
   This is the 5 bits of a value.
 
 ENUM
+  BFD_RELOC_MC9S12X_HI8
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is the 8 bit high part of an absolute address.
+ENUM
+  BFD_RELOC_MC9S12X_LO8
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is the 8 bit low part of an absolute address.
+ENUM
+  BFD_RELOC_MC9S12X_3B
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is the 3 bit of a value.
+ENUM
+  BFD_RELOC_MC9S12X_RL_JUMP
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This reloc marks the beginning of a jump/call instruction.
+  It is used for linker relaxation to correctly identify beginning
+  of instruction and change some branches to use PC-relative
+  addressing mode.
+ENUM
+  BFD_RELOC_MC9S12X_RL_GROUP
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This reloc marks a group of several instructions that gcc generates
+  and for which the linker relaxation pass can modify and/or remove
+  some of them.
+ENUM
+  BFD_RELOC_MC9S12X_LO16
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is the 16-bit lower part of an address.  It is used for 'call'
+  instruction to specify the symbol address without any special
+  transformation (due to memory bank window).
+ENUM
+  BFD_RELOC_MC9S12X_PAGE
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is a 8-bit reloc that specifies the page number of an address.
+  It is used by 'call' instruction to specify the page number of
+  the symbol.
+ENUM
+  BFD_RELOC_MC9S12X_24
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is a 24-bit reloc that represents the address with a 16-bit
+  value and a 8-bit page number.  The symbol address is transformed
+  to follow the 16K memory bank of MC9S12X (seen as mapped in the window).
+ENUM
+  BFD_RELOC_MC9S12X_5B
+ENUMDOC
+  Motorola MC9S12X reloc.
+  This is the 5 bits of a value.
+
+ENUM
+  BFD_RELOC_MC9S12X_PCREL_9
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9S12X_PCREL_10
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9S12X_IMM8_LO
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9S12X_IMM8_HI
+ENUMDOC
+	TEXT HERE
+ENUM
+  BFD_RELOC_MC9S12X_IMM3
+ENUMDOC
+	TEXT HERE
+ENUM
+  BFD_RELOC_MC9S12X_IMM4
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9XGATE_HI8
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is the 8 bit high part of an absolute address.
+ENUM
+  BFD_RELOC_MC9XGATE_LO8
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is the 8 bit low part of an absolute address.
+ENUM
+  BFD_RELOC_MC9XGATE_3B
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is the 3 bit of a value.
+ENUM
+  BFD_RELOC_MC9XGATE_RL_JUMP
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This reloc marks the beginning of a jump/call instruction.
+  It is used for linker relaxation to correctly identify beginning
+  of instruction and change some branches to use PC-relative
+  addressing mode.
+ENUM
+  BFD_RELOC_MC9XGATE_RL_GROUP
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This reloc marks a group of several instructions that gcc generates
+  and for which the linker relaxation pass can modify and/or remove
+  some of them.
+ENUM
+  BFD_RELOC_MC9XGATE_LO16
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is the 16-bit lower part of an address.  It is used for 'call'
+  instruction to specify the symbol address without any special
+  transformation (due to memory bank window).
+ENUM
+  BFD_RELOC_MC9XGATE_PAGE
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is a 8-bit reloc that specifies the page number of an address.
+  It is used by 'call' instruction to specify the page number of
+  the symbol.
+ENUM
+  BFD_RELOC_MC9XGATE_24
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is a 24-bit reloc that represents the address with a 16-bit
+  value and a 8-bit page number.  The symbol address is transformed
+  to follow the 16K memory bank of MC9S12X (seen as mapped in the window).
+ENUM
+  BFD_RELOC_MC9XGATE_5B
+ENUMDOC
+  Motorola MC9XGATE reloc.
+  This is the 5 bits of a value.
+
+ENUM
+  BFD_RELOC_MC9XGATE_PCREL_9
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9XGATE_PCREL_10
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9XGATE_IMM8_LO
+ENUMDOC
+	TEXT HERE
+
+ENUM
+  BFD_RELOC_MC9XGATE_IMM8_HI
+ENUMDOC
+	TEXT HERE
+ENUM
+  BFD_RELOC_MC9XGATE_IMM3
+ENUMDOC
+	TEXT HERE
+ENUM
+  BFD_RELOC_MC9XGATE_IMM4
+ENUMDOC
+	TEXT HERE
+ENUM
   BFD_RELOC_16C_NUM08
 ENUMX
   BFD_RELOC_16C_NUM08_C
diff -rupN binutils-2.20/bfd/targets.c binutils-2.20-sean/bfd/targets.c
--- binutils-2.20/bfd/targets.c	2009-09-10 05:47:13.000000000 -0600
+++ binutils-2.20-sean/bfd/targets.c	2010-10-01 14:37:28.000000000 -0600
@@ -619,6 +619,8 @@ extern const bfd_target bfd_elf32_m32rli
 extern const bfd_target bfd_elf32_m32rlelin_vec;
 extern const bfd_target bfd_elf32_m68hc11_vec;
 extern const bfd_target bfd_elf32_m68hc12_vec;
+extern const bfd_target bfd_elf32_mc9s12x_vec;
+extern const bfd_target bfd_elf32_mc9xgate_vec;
 extern const bfd_target bfd_elf32_m68k_vec;
 extern const bfd_target bfd_elf32_m88k_vec;
 extern const bfd_target bfd_elf32_mcore_big_vec;
@@ -955,6 +957,8 @@ static const bfd_target * const _bfd_tar
         &bfd_elf32_m32rlelin_vec,
 	&bfd_elf32_m68hc11_vec,
 	&bfd_elf32_m68hc12_vec,
+	&bfd_elf32_mc9s12x_vec,
+	&bfd_elf32_mc9xgate_vec,
 	&bfd_elf32_m68k_vec,
 	&bfd_elf32_m88k_vec,
 	&bfd_elf32_mcore_big_vec,
diff -rupN binutils-2.20/binutil-porting-adding-hosts-targets.txt binutils-2.20-sean/binutil-porting-adding-hosts-targets.txt
--- binutils-2.20/binutil-porting-adding-hosts-targets.txt	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/binutil-porting-adding-hosts-targets.txt	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,83 @@
+        Preliminary Notes on Porting BFD
+        --------------------------------
+
+The 'host' is the system a tool runs *on*.
+The 'target' is the system a tool runs *for*, i.e.
+a tool can read/write the binaries of the target.
+
+Porting to a new host
+---------------------
+Pick a name for your host. Call that <host>.
+(<host> might be sun4, ...)
+Create a file hosts/<host>.mh.
+
+Porting to a new target
+-----------------------
+Pick a name for your target. Call that <target>.
+Call the name for your CPU architecture <cpu>.
+You need to create <target>.c and config/<target>.mt,
+and add a case for it to a case statements in bfd/configure.host and
+bfd/config.bfd, which associates each canonical host type with a BFD
+host type (used as the base of the makefile fragment names), and to the
+table in bfd/configure.in which associates each target vector with
+the .o files it uses.
+
+config/<target>.mt is a Makefile fragment.
+The following is usually enough:
+DEFAULT_VECTOR=<target>_vec
+SELECT_ARCHITECTURES=bfd_<cpu>_arch
+
+See the list of cpu types in archures.c, or "ls cpu-*.c".
+If your architecture is new, you need to add it to the tables
+in bfd/archures.c, opcodes/configure.in, and binutils/objdump.c.
+
+For more information about .mt and .mh files, see config/README.
+
+The file <target>.c is the hard part.  It implements the
+bfd_target <target>_vec, which includes pointers to
+functions that do the actual <target>-specific methods.
+
+Porting to a <target> that uses the a.out binary format
+-------------------------------------------------------
+
+In this case, the include file aout-target.h probaby does most
+of what you need. The program gen-aout generates <target>.c for
+you automatically for many a.out systems.  Do:
+        make gen-aout
+        ./gen-aout <target> > <target>.c
+(This only works if you are building on the target ("native").
+If you must make a cross-port from scratch, copy the most
+similar existing file that includes aout-target.h, and fix what is wrong.)
+
+Check the parameters in <target>.c, and fix anything that is wrong.
+(Also let us know about it; perhaps we can improve gen-aout.c.)
+
+TARGET_IS_BIG_ENDIAN_P
+        Should be defined if <target> is big-endian.
+
+N_HEADER_IN_TEXT(x)
+        See discussion in ../include/aout/aout64.h.
+
+BYTES_IN_WORD
+        Number of bytes per word. (Usually 4 but can be 8.)
+
+ARCH
+        Number of bits per word.  (Usually 32, but can be 64.)
+
+ENTRY_CAN_BE_ZERO
+        Define if the extry point (start address of an
+        executable program) can be 0x0.
+
+TEXT_START_ADDR
+        The address of the start of the text segemnt in
+        virtual memory.  Normally, the same as the entry point.
+
+TARGET_PAGE_SIZE
+
+SEGMENT_SIZE
+        Usually, the same as the TARGET_PAGE_SIZE.
+        Alignment needed for the data segment.
+
+TARGETNAME
+        The name of the target, for run-time lookups.
+        Usually "a.out-<target>"
diff -rupN binutils-2.20/binutils/readelf.c binutils-2.20-sean/binutils/readelf.c
--- binutils-2.20/binutils/readelf.c	2009-09-22 09:40:59.000000000 -0600
+++ binutils-2.20-sean/binutils/readelf.c	2010-10-01 14:37:28.000000000 -0600
@@ -117,6 +117,8 @@
 #include "elf/m32r.h"
 #include "elf/m68k.h"
 #include "elf/m68hc11.h"
+#include "elf/mc9s12x.h"
+#include "elf/mc9xgate.h"
 #include "elf/mcore.h"
 #include "elf/mep.h"
 #include "elf/microblaze.h"
@@ -1007,6 +1009,14 @@ dump_relocations (FILE * file,
 	  rtype = elf_m68hc11_reloc_type (type);
 	  break;
 
+	case EM_MC9S12X:
+	  rtype = elf_mc9s12x_reloc_type (type);
+	  break;
+
+	case EM_MC9XGATE:
+	  rtype = elf_mc9xgate_reloc_type (type);
+	  break;
+
 	case EM_68K:
 	  rtype = elf_m68k_reloc_type (type);
 	  break;
@@ -1815,6 +1825,8 @@ get_machine_name (unsigned e_machine)
     case EM_MIPS_X:		return "Stanford MIPS-X";
     case EM_COLDFIRE:		return "Motorola Coldfire";
     case EM_68HC12:		return "Motorola M68HC12";
+    case EM_MC9S12X:	return "Freescale S12X";
+    case EM_MC9XGATE:	return "Freescale MC9-XGATE CoProcessor";
     case EM_ALPHA:		return "Alpha";
     case EM_CYGNUS_D10V:
     case EM_D10V:		return "d10v";
diff -rupN binutils-2.20/config.sub binutils-2.20-sean/config.sub
--- binutils-2.20/config.sub	2009-08-16 22:10:29.000000000 -0600
+++ binutils-2.20-sean/config.sub	2010-10-01 14:37:28.000000000 -0600
@@ -302,6 +302,16 @@ case $basic_machine in
 		basic_machine=$basic_machine-unknown
 		os=-none
 		;;
+        mc9s12x)
+		# FreeScale s12x.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	mc9xgate)
+		# FreeScale s12xgate.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
 	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
 		;;
 	ms1)
diff -rupN binutils-2.20/config.sub~ binutils-2.20-sean/config.sub~
--- binutils-2.20/config.sub~	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/config.sub~	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,1701 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
+#   Free Software Foundation, Inc.
+
+timestamp='2009-08-17'
+
+# This file is (in principle) common to ALL GNU software.
+# The presence of a machine in this file suggests that SOME GNU software
+# can handle that machine.  It does not imply ALL GNU software can.
+#
+# This file is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
+2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
+# Here we must recognize all the valid KERNEL-OS combinations.
+maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
+case $maybe_os in
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-newlib* | linux-uclibc* | \
+  uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | \
+  kopensolaris*-gnu* | \
+  storm-chaos* | os2-emx* | rtmk-nova*)
+    os=-$maybe_os
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
+    ;;
+  *)
+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
+    if [ $basic_machine != $1 ]
+    then os=`echo $1 | sed 's/.*-/-/'`
+    else os=; fi
+    ;;
+esac
+
+### Let's recognize common machines as not being operating systems so
+### that things like config.sub decstation-3100 work.  We also
+### recognize some manufacturers as not being operating systems, so we
+### can provide default operating systems below.
+case $os in
+	-sun*os*)
+		# Prevent following clause from handling this invalid input.
+		;;
+	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
+	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
+	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
+	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
+	-apple | -axis | -knuth | -cray | -microblaze)
+		os=
+		basic_machine=$1
+		;;
+        -bluegene*)
+	        os=-cnk
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+ 	-chorusrdb)
+ 		os=-chorusrdb
+		basic_machine=$1
+ 		;;
+	-hiux*)
+		os=-hiuxwe2
+		;;
+	-sco6)
+		os=-sco5v6
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5)
+		os=-sco3.2v5
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco4)
+		os=-sco3.2v4
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2v[4-9]*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco*)
+		os=-sco3.2v2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-isc)
+		os=-isc2.2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-clix*)
+		basic_machine=clipper-intergraph
+		;;
+	-isc*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-lynx*)
+		os=-lynxos
+		;;
+	-ptx*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+		;;
+	-windowsnt*)
+		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+		;;
+	-psos*)
+		os=-psos
+		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+esac
+
+# Decode aliases for certain CPU-COMPANY combinations.
+case $basic_machine in
+	# Recognize the basic CPU types without company name.
+	# Some are omitted here because they have special meanings below.
+	1750a | 580 \
+	| a29k \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr | avr32 \
+	| bfin \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| fido | fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| lm32 \
+	| m32c | m32r | m32rle | m68000 | m68k | m88k \
+	| maxq | mb | microblaze | mcore | mep | metag \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64octeon | mips64octeonel \
+	| mips64orion | mips64orionel \
+	| mips64r5900 | mips64r5900el \
+	| mips64vr | mips64vrel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| moxie \
+	| mt \
+	| msp430 \
+	| nios | nios2 \
+	| ns16k | ns32k \
+	| or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \
+	| pyramid \
+	| score \
+	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
+	| spu | strongarm \
+	| tahoe | thumb | tic4x | tic80 | tron \
+	| v850 | v850e \
+	| we32k \
+	| x86 | xc16x | xscale | xscalee[bl] | xstormy16 | xtensa \
+	| z8k | z80)
+		basic_machine=$basic_machine-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12)
+		# Motorola 68HC11/12.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+        mc9s12x)
+		# FreeScale 12x.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+	ms1)
+		basic_machine=mt-unknown
+		;;
+
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+	  basic_machine=$basic_machine-pc
+	  ;;
+	# Object if more than one company name word.
+	*-*-*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+	# Recognize the basic CPU types with company name.
+	580-* \
+	| a29k-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* | avr32-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
+	| clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| lm32-* \
+	| m32c-* | m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* | metag-* | microblaze-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64octeon-* | mips64octeonel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64r5900-* | mips64r5900el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| mt-* \
+	| msp430-* \
+	| nios-* | nios2-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \
+	| pyramid-* \
+	| romp-* | rs6000-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | strongarm-* | sv1-* | sx?-* \
+	| tahoe-* | thumb-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* | tile-* \
+	| tron-* \
+	| v850-* | v850e-* | vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xc16x-* | xps100-* | xscale-* | xscalee[bl]-* \
+	| xstormy16-* | xtensa*-* \
+	| ymp-* \
+	| z8k-* | z80-*)
+		;;
+	# Recognize the basic CPU types without company name, with glob match.
+	xtensa*)
+		basic_machine=$basic_machine-unknown
+		;;
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		basic_machine=m68000-att
+		;;
+	3b*)
+		basic_machine=we32k-att
+		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+    	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
+	alliant | fx80)
+		basic_machine=fx80-alliant
+		;;
+	altos | altos3068)
+		basic_machine=m68k-altos
+		;;
+	am29k)
+		basic_machine=a29k-none
+		os=-bsd
+		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	amdahl)
+		basic_machine=580-amdahl
+		os=-sysv
+		;;
+	amiga | amiga-*)
+		basic_machine=m68k-unknown
+		;;
+	amigaos | amigados)
+		basic_machine=m68k-unknown
+		os=-amigaos
+		;;
+	amigaunix | amix)
+		basic_machine=m68k-unknown
+		os=-sysv4
+		;;
+	apollo68)
+		basic_machine=m68k-apollo
+		os=-sysv
+		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aros)
+		basic_machine=i386-pc
+		os=-aros
+		;;
+	aux)
+		basic_machine=m68k-apple
+		os=-aux
+		;;
+	balance)
+		basic_machine=ns32k-sequent
+		os=-dynix
+		;;
+	blackfin)
+		basic_machine=bfin-unknown
+		os=-linux
+		;;
+	blackfin-*)
+		basic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	bluegene*)
+		basic_machine=powerpc-ibm
+		os=-cnk
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+        cegcc)
+		basic_machine=arm-unknown
+		os=-cegcc
+		;;
+	convex-c1)
+		basic_machine=c1-convex
+		os=-bsd
+		;;
+	convex-c2)
+		basic_machine=c2-convex
+		os=-bsd
+		;;
+	convex-c32)
+		basic_machine=c32-convex
+		os=-bsd
+		;;
+	convex-c34)
+		basic_machine=c34-convex
+		os=-bsd
+		;;
+	convex-c38)
+		basic_machine=c38-convex
+		os=-bsd
+		;;
+	cray | j90)
+		basic_machine=j90-cray
+		os=-unicos
+		;;
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
+		;;
+	cr16)
+		basic_machine=cr16-unknown
+		os=-elf
+		;;
+	crds | unos)
+		basic_machine=m68k-crds
+		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
+	da30 | da30-*)
+		basic_machine=m68k-da30
+		;;
+	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
+		basic_machine=mips-dec
+		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		basic_machine=m68k-motorola
+		;;
+	delta88)
+		basic_machine=m88k-motorola
+		os=-sysv3
+		;;
+	dicos)
+		basic_machine=i686-pc
+		os=-dicos
+		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
+	dpx20 | dpx20-*)
+		basic_machine=rs6000-bull
+		os=-bosx
+		;;
+	dpx2* | dpx2*-bull)
+		basic_machine=m68k-bull
+		os=-sysv3
+		;;
+	ebmon29k)
+		basic_machine=a29k-amd
+		os=-ebmon
+		;;
+	elxsi)
+		basic_machine=elxsi-elxsi
+		os=-bsd
+		;;
+	encore | umax | mmax)
+		basic_machine=ns32k-encore
+		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
+	fx2800)
+		basic_machine=i860-alliant
+		;;
+	genix)
+		basic_machine=ns32k-ns
+		;;
+	gmicro)
+		basic_machine=tron-gmicro
+		os=-sysv
+		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
+	h3050r* | hiux*)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	h8300hms)
+		basic_machine=h8300-hitachi
+		os=-hms
+		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
+	harris)
+		basic_machine=m88k-harris
+		os=-sysv3
+		;;
+	hp300-*)
+		basic_machine=m68k-hp
+		;;
+	hp300bsd)
+		basic_machine=m68k-hp
+		os=-bsd
+		;;
+	hp300hpux)
+		basic_machine=m68k-hp
+		os=-hpux
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		basic_machine=m68000-hp
+		;;
+	hp9k3[2-9][0-9])
+		basic_machine=m68k-hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hppa-next)
+		os=-nextstep3
+		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
+	i370-ibm* | ibm*)
+		basic_machine=i370-ibm
+		;;
+# I'm not sure what "Sysv32" means.  Should this be sysv3.2?
+	i*86v32)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv32
+		;;
+	i*86v4*)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv4
+		;;
+	i*86v)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv
+		;;
+	i*86sol2)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-solaris2
+		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
+	iris | iris4d)
+		basic_machine=mips-sgi
+		case $os in
+		    -irix*)
+			;;
+		    *)
+			os=-irix4
+			;;
+		esac
+		;;
+	isi68 | isi)
+		basic_machine=m68k-isi
+		os=-sysv
+		;;
+	m68knommu)
+		basic_machine=m68k-unknown
+		os=-linux
+		;;
+	m68knommu-*)
+		basic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	m88k-omron*)
+		basic_machine=m88k-omron
+		;;
+	magnum | m3230)
+		basic_machine=mips-mips
+		os=-sysv
+		;;
+	merlin)
+		basic_machine=ns32k-utek
+		os=-sysv
+		;;
+        microblaze)
+		basic_machine=microblaze-xilinx
+		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
+	mingw32ce)
+		basic_machine=arm-unknown
+		os=-mingw32ce
+		;;
+	miniframe)
+		basic_machine=m68000-convergent
+		;;
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+	mips3*-*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
+		;;
+	mips3*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
+		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	ms1-*)
+		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	ncr3000)
+		basic_machine=i486-ncr
+		os=-sysv4
+		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
+	news | news700 | news800 | news900)
+		basic_machine=m68k-sony
+		os=-newsos
+		;;
+	news1000)
+		basic_machine=m68030-sony
+		os=-newsos
+		;;
+	news-3600 | risc-news)
+		basic_machine=mips-sony
+		os=-newsos
+		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
+	next | m*-next )
+		basic_machine=m68k-next
+		case $os in
+		    -nextstep* )
+			;;
+		    -ns2*)
+		      os=-nextstep2
+			;;
+		    *)
+		      os=-nextstep3
+			;;
+		esac
+		;;
+	nh3000)
+		basic_machine=m68k-harris
+		os=-cxux
+		;;
+	nh[45]000)
+		basic_machine=m88k-harris
+		os=-cxux
+		;;
+	nindy960)
+		basic_machine=i960-intel
+		os=-nindy
+		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
+	np1)
+		basic_machine=np1-gould
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
+	pa-hitachi)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	paragon)
+		basic_machine=i860-intel
+		os=-osf
+		;;
+	parisc)
+		basic_machine=hppa-unknown
+		os=-linux
+		;;
+	parisc-*)
+		basic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	pbd)
+		basic_machine=sparc-tti
+		;;
+	pbb)
+		basic_machine=m68k-tti
+		;;
+	pc532 | pc532-*)
+		basic_machine=ns32k-pc532
+		;;
+	pc98)
+		basic_machine=i386-pc
+		;;
+	pc98-*)
+		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
+		;;
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pn)
+		basic_machine=pn-gould
+		;;
+	power)	basic_machine=power-ibm
+		;;
+	ppc)	basic_machine=powerpc-unknown
+		;;
+	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppcle | powerpclittle | ppc-le | powerpc-little)
+		basic_machine=powerpcle-unknown
+		;;
+	ppcle-* | powerpclittle-*)
+		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ps2)
+		basic_machine=i386-ibm
+		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rdos)
+		basic_machine=i386-pc
+		os=-rdos
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	rm[46]00)
+		basic_machine=mips-siemens
+		;;
+	rtpc | rtpc-*)
+		basic_machine=romp-ibm
+		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sde)
+		basic_machine=mipsisa32-sde
+		os=-elf
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
+	sequent)
+		basic_machine=i386-sequent
+		;;
+	sh)
+		basic_machine=sh-hitachi
+		os=-hms
+		;;
+	sh5el)
+		basic_machine=sh5le-unknown
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
+	sps7)
+		basic_machine=m68k-bull
+		os=-sysv2
+		;;
+	spur)
+		basic_machine=spur-unknown
+		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	sun2)
+		basic_machine=m68000-sun
+		;;
+	sun2os3)
+		basic_machine=m68000-sun
+		os=-sunos3
+		;;
+	sun2os4)
+		basic_machine=m68000-sun
+		os=-sunos4
+		;;
+	sun3os3)
+		basic_machine=m68k-sun
+		os=-sunos3
+		;;
+	sun3os4)
+		basic_machine=m68k-sun
+		os=-sunos4
+		;;
+	sun4os3)
+		basic_machine=sparc-sun
+		os=-sunos3
+		;;
+	sun4os4)
+		basic_machine=sparc-sun
+		os=-sunos4
+		;;
+	sun4sol2)
+		basic_machine=sparc-sun
+		os=-solaris2
+		;;
+	sun3 | sun3-*)
+		basic_machine=m68k-sun
+		;;
+	sun4)
+		basic_machine=sparc-sun
+		;;
+	sun386 | sun386i | roadrunner)
+		basic_machine=i386-sun
+		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
+	symmetry)
+		basic_machine=i386-sequent
+		os=-dynix
+		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tic54x | c54x*)
+		basic_machine=tic54x-unknown
+		os=-coff
+		;;
+	tic55x | c55x*)
+		basic_machine=tic55x-unknown
+		os=-coff
+		;;
+	tic6x | c6x*)
+		basic_machine=tic6x-unknown
+		os=-coff
+		;;
+	tile*)
+		basic_machine=tile-unknown
+		os=-linux-gnu
+		;;
+	tx39)
+		basic_machine=mipstx39-unknown
+		;;
+	tx39el)
+		basic_machine=mipstx39el-unknown
+		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
+	tower | tower-32)
+		basic_machine=m68k-ncr
+		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
+	udi29k)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	ultra3)
+		basic_machine=a29k-nyu
+		os=-sym1
+		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
+	vaxv)
+		basic_machine=vax-dec
+		os=-sysv
+		;;
+	vms)
+		basic_machine=vax-dec
+		os=-vms
+		;;
+	vpp*|vx|vx-*)
+		basic_machine=f301-fujitsu
+		;;
+	vxworks960)
+		basic_machine=i960-wrs
+		os=-vxworks
+		;;
+	vxworks68)
+		basic_machine=m68k-wrs
+		os=-vxworks
+		;;
+	vxworks29k)
+		basic_machine=a29k-wrs
+		os=-vxworks
+		;;
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
+		;;
+	xps | xps100)
+		basic_machine=xps100-honeywell
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	z80-*-coff)
+		basic_machine=z80-unknown
+		os=-sim
+		;;
+	none)
+		basic_machine=none-none
+		os=-none
+		;;
+
+# Here we handle the default manufacturer of certain CPU types.  It is in
+# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
+		;;
+	romp)
+		basic_machine=romp-ibm
+		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
+	rs6000)
+		basic_machine=rs6000-ibm
+		;;
+	vax)
+		basic_machine=vax-dec
+		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
+	pdp11)
+		basic_machine=pdp11-dec
+		;;
+	we32k)
+		basic_machine=we32k-att
+		;;
+	sh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
+		basic_machine=sparc-sun
+		;;
+	cydra)
+		basic_machine=cydra-cydrome
+		;;
+	orion)
+		basic_machine=orion-highlevel
+		;;
+	orion105)
+		basic_machine=clipper-highlevel
+		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
+	*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $basic_machine in
+	*-digital*)
+		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+		;;
+	*-commodore*)
+		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if [ x"$os" != x"" ]
+then
+case $os in
+        # First match some system type aliases
+        # that might get confused with valid system types.
+	# -solaris* is a basic system type, with this one exception.
+	-solaris1 | -solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+		;;
+	-solaris)
+		os=-solaris2
+		;;
+	-svr4*)
+		os=-sysv4
+		;;
+	-unixware*)
+		os=-sysv4.2uw
+		;;
+	-gnu/linux*)
+		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
+		;;
+	# First accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST END IN A *, to match a version number.
+	# -sysv* is not here because it comes later, after sysvr4.
+	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \
+	      | -kopensolaris* \
+	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
+	      | -aos* | -aros* \
+	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
+	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
+	      | -openbsd* | -solidbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
+	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* | -cegcc* \
+	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -mingw32* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \
+	      | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops*)
+	# Remember, each alternative MUST END IN *, to match a version number.
+		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
+	-linux*)
+		os=`echo $os | sed -e 's|linux|linux-gnu|'`
+		;;
+	-sunos5*)
+		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+		;;
+	-sunos6*)
+		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+		;;
+	-opened*)
+		os=-openedition
+		;;
+        -os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
+	-osfrose*)
+		os=-osfrose
+		;;
+	-osf*)
+		os=-osf
+		;;
+	-utek*)
+		os=-bsd
+		;;
+	-dynix*)
+		os=-bsd
+		;;
+	-acis*)
+		os=-aos
+		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
+	-ctix* | -uts*)
+		os=-sysv
+		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
+	-ns2 )
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
+		;;
+	# Preserve the version number of sinix5.
+	-sinix5.*)
+		os=`echo $os | sed -e 's|sinix|sysv|'`
+		;;
+	-sinix*)
+		os=-sysv4
+		;;
+        -tpf*)
+		os=-tpf
+		;;
+	-triton*)
+		os=-sysv3
+		;;
+	-oss*)
+		os=-sysv3
+		;;
+	-svr4)
+		os=-sysv4
+		;;
+	-svr3)
+		os=-sysv3
+		;;
+	-sysvr4)
+		os=-sysv4
+		;;
+	# This must come after -sysvr4.
+	-sysv*)
+		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
+	-xenix)
+		os=-xenix
+		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-zvmoe)
+		os=-zvmoe
+		;;
+	-dicos*)
+		os=-dicos
+		;;
+	-none)
+		;;
+	*)
+		# Get rid of the `-' at the beginning of $os.
+		os=`echo $os | sed 's/[^-]*-//'`
+		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		exit 1
+		;;
+esac
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+case $basic_machine in
+        score-*)
+		os=-elf
+		;;
+        spu-*)
+		os=-elf
+		;;
+	*-acorn)
+		os=-riscix1.2
+		;;
+	arm*-rebel)
+		os=-linux
+		;;
+	arm*-semi)
+		os=-aout
+		;;
+        c4x-* | tic4x-*)
+        	os=-coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
+		os=-none
+		;;
+	*-dec | vax-*)
+		os=-ultrix4.2
+		;;
+	m68*-apollo)
+		os=-domain
+		;;
+	i386-sun)
+		os=-sunos4.0.2
+		;;
+	m68000-sun)
+		os=-sunos3
+		# This also exists in the configure program, but was not the
+		# default.
+		# os=-sunos4
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+        mep-*)
+		os=-elf
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=-sysv3
+		;;
+	sparc-* | *-sun)
+		os=-sunos4.1.1
+		;;
+	*-be)
+		os=-beos
+		;;
+	*-haiku)
+		os=-haiku
+		;;
+	*-ibm)
+		os=-aix
+		;;
+    	*-knuth)
+		os=-mmixware
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
+	*-hp)
+		os=-hpux
+		;;
+	*-hitachi)
+		os=-hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=-sysv
+		;;
+	*-cbm)
+		os=-amigaos
+		;;
+	*-dg)
+		os=-dgux
+		;;
+	*-dolphin)
+		os=-sysv3
+		;;
+	m68k-ccur)
+		os=-rtu
+		;;
+	m88k-omron*)
+		os=-luna
+		;;
+	*-next )
+		os=-nextstep
+		;;
+	*-sequent)
+		os=-ptx
+		;;
+	*-crds)
+		os=-unos
+		;;
+	*-ns)
+		os=-genix
+		;;
+	i370-*)
+		os=-mvs
+		;;
+	*-next)
+		os=-nextstep3
+		;;
+	*-gould)
+		os=-sysv
+		;;
+	*-highlevel)
+		os=-bsd
+		;;
+	*-encore)
+		os=-bsd
+		;;
+	*-sgi)
+		os=-irix
+		;;
+	*-siemens)
+		os=-sysv4
+		;;
+	*-masscomp)
+		os=-rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=-uxpv
+		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
+	*)
+		os=-none
+		;;
+esac
+fi
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+vendor=unknown
+case $basic_machine in
+	*-unknown)
+		case $os in
+			-riscix*)
+				vendor=acorn
+				;;
+			-sunos*)
+				vendor=sun
+				;;
+			-cnk*|-aix*)
+				vendor=ibm
+				;;
+			-beos*)
+				vendor=be
+				;;
+			-hpux*)
+				vendor=hp
+				;;
+			-mpeix*)
+				vendor=hp
+				;;
+			-hiux*)
+				vendor=hitachi
+				;;
+			-unos*)
+				vendor=crds
+				;;
+			-dgux*)
+				vendor=dg
+				;;
+			-luna*)
+				vendor=omron
+				;;
+			-genix*)
+				vendor=ns
+				;;
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
+				vendor=ibm
+				;;
+			-ptx*)
+				vendor=sequent
+				;;
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
+				vendor=wrs
+				;;
+			-aux*)
+				vendor=apple
+				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
+		esac
+		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
+		;;
+esac
+
+echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff -rupN binutils-2.20/configure binutils-2.20-sean/configure
--- binutils-2.20/configure	2009-09-02 01:05:02.000000000 -0600
+++ binutils-2.20-sean/configure	2010-10-01 14:37:28.000000000 -0600
@@ -2646,7 +2646,7 @@ host_libs="intl mmalloc libiberty opcode
 # binutils, gas and ld appear in that order because it makes sense to run
 # "make check" in that particular order.
 # If --enable-gold is used, "gold" will replace "ld".
-host_tools="texinfo byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
+host_tools="byacc flex bison binutils gas ld fixincludes gcc cgen sid sim gdb make patch prms send-pr gprof etc expect dejagnu ash bash bzip2 m4 autoconf automake libtool diff rcs fileutils shellutils time textutils wdiff find uudecode hello tar gzip indent recode release sed utils guile perl gawk findutils gettext zip fastjar gnattools"
 
 # libgcj represents the runtime libraries only used by gcj.
 libgcj="target-libffi \
diff -rupN binutils-2.20/elfcpp/elfcpp.h binutils-2.20-sean/elfcpp/elfcpp.h
--- binutils-2.20/elfcpp/elfcpp.h	2009-10-16 01:42:24.000000000 -0600
+++ binutils-2.20-sean/elfcpp/elfcpp.h	2010-10-01 14:37:28.000000000 -0600
@@ -269,6 +269,8 @@ enum EM
   EM_UNICORE = 110,
   EM_ALTERA_NIOS2 = 113,
   EM_CRX = 114,
+  EM_MC9S12X = 190,
+  EM_MC9XGATE = 191,
   // The Morph MT.
   EM_MT = 0x2530,
   // DLX.
diff -rupN binutils-2.20/examples/xgate/Makefile binutils-2.20-sean/examples/xgate/Makefile
--- binutils-2.20/examples/xgate/Makefile	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/examples/xgate/Makefile	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,184 @@
+#!/usr/bin/make -f
+
+
+#
+# Project files
+#
+PROG = test
+SRCS = xgate.s
+OBJS = $(SRCS:.s=.o)
+
+# Assembler flags used by default to compile a program
+ASFLAGS = --gstabs
+
+#LDFLAGS = -m mc9xgateelfb --defsym _start=0
+LINKOPTS = -Wl,-defsym,vectors_addr=0xF710,-m,mc9xgateelfb,-T,hc9s12xdp512elfb.x
+#
+# Options to creates the .s19 or .b files from the elf
+#
+OBJCOPY_FLAGS_TEMP = --remove-section=page0 \
+#                --remove-section=.page0
+# If using the below option for paged flash, the ADDRESS_TYPE
+# field in the freeEMSloader script should be updated to match.
+
+# TODO figure out why it wont recognize any other sections besides .data and .text
+
+#	--change-section-lma .text+0xFEC000 \
+#       --change-section-lma .data+0xFEC000 \
+
+
+
+OBJCOPY_FLAGS  = --output-target=srec \
+		--change-section-lma .fixedconf1+0xFD4000 \
+		--change-section-lma .fixedconf2+0xFD4000 \
+		     --change-section-lma .text1+0xFD4000 \
+		      --change-section-lma .text=0xF70800 \
+		      --change-section-lma .data=0xF70800 \
+		   --change-section-lma .vectors+0xFEC000 \
+		    --change-section-lma .rodata+0xFEC000 \
+		--only-section=.fixedconf1 \
+		--only-section=.fixedconf2 \
+		--only-section=.text \
+		--only-section=.text1 \
+		--only-section=.data \
+		--only-section=.vectors \
+		--only-section=.rodata \
+		--change-section-lma .xgateF8=0xF80000 \
+		--change-section-lma .ppageF8=0xF88000 \
+		--change-section-lma .fpageF9=0xF98000 \
+		--change-section-lma .dpageF9=0xF9A000 \
+		--change-section-lma .ppageFE=0xFE8000 \
+		--only-section=.ppageF8 \
+		--only-section=.fpageF9 \
+		--only-section=.dpageF9 \
+		--only-section=.ppageFE \
+		--change-section-lma .fpageFA=0xFA8000 \
+		--change-section-lma .dpageFA=0xFAA000 \
+		--change-section-lma .fpageFB=0xFB8000 \
+		--change-section-lma .dpageFB1=0xFBA000 \
+		--change-section-lma .dpageFB2=0xFBA400 \
+		--change-section-lma .dpageFB3=0xFBA800 \
+		--change-section-lma .dpageFB4=0xFBAC00 \
+		--change-section-lma .dpageFB5=0xFBB000 \
+		--change-section-lma .dpageFB6=0xFBB400 \
+		--change-section-lma .dpageFB7=0xFBB800 \
+		--change-section-lma .dpageFB8=0xFBBC00 \
+		--change-section-lma .fpageFC=0xFC8000 \
+		--change-section-lma .dpageFC=0xFCA000 \
+		--only-section=.dpageFA \
+		--only-section=.fpageFA \
+		--only-section=.dpageFB1 \
+		--only-section=.dpageFB2 \
+		--only-section=.dpageFB3 \
+		--only-section=.dpageFB4 \
+		--only-section=.dpageFB5 \
+		--only-section=.dpageFB6 \
+		--only-section=.dpageFB7 \
+		--only-section=.dpageFB8 \
+		--only-section=.fpageFB \
+		--only-section=.dpageFC \
+		--only-section=.fpageFC
+#		--change-section-lma .ppageFD=0xFD8000 \
+#		--change-section-lma .ppageFF=0xFF8000 \
+#		--only-section=.ppageFD \	This is left here for clarity only (equivalent to text1 but paged)
+#		--only-section=.ppageFF		This is left here for clarity only (equivalent to text but paged)
+# Changes to the above options should be reflected in memory.x and memory.h also!
+
+# The following flash areas can only be used once Sean has written his loader app :
+#		--only-section=.ppageE0 \
+#		--only-section=.ppageE1 \
+#		--only-section=.ppageE2 \
+#		--only-section=.ppageE3 \
+#		--only-section=.ppageE4 \
+#		--only-section=.ppageE5 \
+#		--only-section=.ppageE6 \
+#		--only-section=.ppageE7 \
+#		--only-section=.ppageE8 \
+#		--only-section=.ppageE9 \
+#		--only-section=.ppageEA \
+#		--only-section=.ppageEB \
+#		--only-section=.ppageEC \
+#		--only-section=.ppageED \
+#		--only-section=.ppageEE \
+#		--only-section=.ppageEF \
+#		--only-section=.ppageF0 \
+#		--only-section=.ppageF1 \
+#		--only-section=.ppageF2 \
+#		--only-section=.ppageF3 \
+#		--only-section=.ppageF4 \
+#		--only-section=.ppageF5 \
+#		--only-section=.ppageF6 \
+#		--only-section=.ppageF7 \
+#		--change-section-lma .ppageE0=0xE08000 \
+#		--change-section-lma .ppageE1=0xE18000 \
+#		--change-section-lma .ppageE2=0xE28000 \
+#		--change-section-lma .ppageE3=0xE38000 \
+#		--change-section-lma .ppageE4=0xE48000 \
+#		--change-section-lma .ppageE5=0xE58000 \
+#		--change-section-lma .ppageE6=0xE68000 \
+#		--change-section-lma .ppageE7=0xE78000 \
+#		--change-section-lma .ppageE8=0xE88000 \
+#		--change-section-lma .ppageE9=0xE98000 \
+#		--change-section-lma .ppageEA=0xEA8000 \
+#		--change-section-lma .ppageEB=0xEB8000 \
+#		--change-section-lma .ppageEC=0xEC8000 \
+#		--change-section-lma .ppageED=0xED8000 \
+#		--change-section-lma .ppageEE=0xEE8000 \
+#		--change-section-lma .ppageEF=0xEF8000 \
+#		--change-section-lma .ppageF0=0xF08000 \
+#		--change-section-lma .ppageF1=0xF18000 \
+#		--change-section-lma .ppageF2=0xF28000 \
+#		--change-section-lma .ppageF3=0xF38000 \
+#		--change-section-lma .ppageF4=0xF48000 \
+#		--change-section-lma .ppageF5=0xF58000 \
+#		--change-section-lma .ppageF6=0xF68000 \
+#		--change-section-lma .ppageF7=0xF78000 \
+
+
+####################################
+# This part should not be modified #
+####################################
+#
+# Programs location
+#
+DEVC_PREFIX=mc9xgate-elf-
+AS=$(DEVC_PREFIX)as
+SIZE=$(DEVC_PREFIX)size
+OBJCOPY=$(DEVC_PREFIX)objcopy
+OBJDUMP=$(DEVC_PREFIX)objdump
+LD=$(DEVC_PREFIX)ld
+
+#
+# Main rules
+#
+all:	$(PROG).elf $(PROG).s19 $(PROG).b
+
+$(PROG).elf: $(OBJS) memory.x
+	$(LD) $(LDFLAGS) -o $(PROG).elf $(OBJS)
+
+clean:
+	rm -f *.o *.elf *.s19 *.b
+
+#
+# Some useful rules
+#
+dump:   $(PROG).elf
+	$(OBJDUMP) -d $(PROG).elf
+
+size:   $(PROG).s19
+	$(SIZE) $(PROG).s19
+
+#
+# Implicit rules
+#
+# .elf is for the simulator and gdb
+# .s19 is for some downloader and the simulator
+# .b   is a binary dump
+#
+.SUFFIXES: .elf .s19 .b
+
+.elf.s19:
+	$(OBJCOPY) --output-target=srec $(OBJCOPY_FLAGS) $< $*.s19
+
+.elf.b:
+	$(OBJCOPY) --output-target=binary --gap-fill=255 $(OBJCOPY_FLAGS) $< $*.b
diff -rupN binutils-2.20/examples/xgate/hc9s12xdp512elfb.x binutils-2.20-sean/examples/xgate/hc9s12xdp512elfb.x
--- binutils-2.20/examples/xgate/hc9s12xdp512elfb.x	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/examples/xgate/hc9s12xdp512elfb.x	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,350 @@
+/*	FreeEMS - the open source engine management system
+
+	Copyright 2008, 2009 Fred Cooke
+
+	This file is part of the FreeEMS project.
+
+	FreeEMS software is free software: you can redistribute it and/or modify
+	it under the terms of the GNU General Public License as published by
+	the Free Software Foundation, either version 3 of the License, or
+	(at your option) any later version.
+
+	FreeEMS software is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+	GNU General Public License for more details.
+
+	You should have received a copy of the GNU General Public License
+	along with any FreeEMS software.  If not, see http://www.gnu.org/licenses/
+
+	We ask that if you make any changes to this file you email them upstream to
+	us at admin(at)diyefi(dot)org or, even better, fork the code on github.com!
+
+	Thank you for choosing FreeEMS to run your engine! */
+
+
+/**	@file hc9s12xdp512elfb.x
+ *
+ * @brief The main linker script
+ *
+ * This is the linker script for hc9s12xdp512 executables. It takes the
+ * object files generated by the compiler and assembles (links) them
+ * together into one output file according to a set of rules within and
+ * provided by the other included files memory.x and regions.x
+ *
+ * A description of what some of this means can be found at the following URLs:
+ * - http://www.gnu.org/software/m68hc11/m68hc11_binutils.html
+ * - http://m68hc11.serveftp.org/wiki/index.php/FAQ:Link
+ *
+ * @cond linkerscript
+ */
+
+
+OUTPUT_FORMAT("elf32-mc9xgate", "elf32-mc9xgate",
+	      "elf32-mc9xgate")
+OUTPUT_ARCH(mc9xgate)
+ENTRY(_start)
+SEARCH_DIR("/usr/m68hc11/lib");
+/* Get memory banks definition from some user configuration file.
+   This file must be located in some linker directory (search path
+   with -L<dir>). See fixed memory banks emulation script.  */
+   
+INCLUDE memory.x;
+INCLUDE regions.x;
+
+SECTIONS
+{
+  .hash          : { *(.hash)		}
+  .dynsym        : { *(.dynsym)		}
+  .dynstr        : { *(.dynstr)		}
+  .gnu.version		  : { *(.gnu.version) }
+  .gnu.version_d	  : { *(.gnu.version_d) }
+  .gnu.version_r	  : { *(.gnu.version_r) }
+  .rel.text      :
+    {
+      *(.rel.text)
+      *(.rel.text.*)
+      *(.rel.gnu.linkonce.t.*)
+    }
+  .rela.text     :
+    {
+      *(.rela.text)
+      *(.rela.text.*)
+      *(.rela.gnu.linkonce.t.*)
+    }
+  .rel.data      :
+    {
+      *(.rel.data)
+      *(.rel.data.*)
+      *(.rel.gnu.linkonce.d.*)
+    }
+  .rela.data     :
+    {
+      *(.rela.data)
+      *(.rela.data.*)
+      *(.rela.gnu.linkonce.d.*)
+    }
+  .rel.rodata    :
+    {
+      *(.rel.rodata)
+      *(.rel.rodata.*)
+      *(.rel.gnu.linkonce.r.*)
+    }
+  .rela.rodata   :
+    {
+      *(.rela.rodata)
+      *(.rela.rodata.*)
+      *(.rela.gnu.linkonce.r.*)
+    }
+  .rel.sdata     :
+    {
+      *(.rel.sdata)
+      *(.rel.sdata.*)
+      *(.rel.gnu.linkonce.s.*)
+    }
+  .rela.sdata     :
+    {
+      *(.rela.sdata)
+      *(.rela.sdata.*)
+      *(.rela.gnu.linkonce.s.*)
+    }
+  .rel.sbss      :
+    {
+      *(.rel.sbss)
+      *(.rel.sbss.*)
+      *(.rel.gnu.linkonce.sb.*)
+    }
+  .rela.sbss     :
+    {
+      *(.rela.sbss)
+      *(.rela.sbss.*)
+      *(.rel.gnu.linkonce.sb.*)
+    }
+  .rel.bss       :
+    {
+      *(.rel.bss)
+      *(.rel.bss.*)
+      *(.rel.gnu.linkonce.b.*)
+    }
+  .rela.bss      :
+    {
+      *(.rela.bss)
+      *(.rela.bss.*)
+      *(.rela.gnu.linkonce.b.*)
+    }
+  .rel.stext		  : { *(.rel.stest) }
+  .rela.stext		  : { *(.rela.stest) }
+  .rel.etext		  : { *(.rel.etest) }
+  .rela.etext		  : { *(.rela.etest) }
+  .rel.sdata		  : { *(.rel.sdata) }
+  .rela.sdata		  : { *(.rela.sdata) }
+  .rel.edata		  : { *(.rel.edata) }
+  .rela.edata		  : { *(.rela.edata) }
+  .rel.eit_v		  : { *(.rel.eit_v) }
+  .rela.eit_v		  : { *(.rela.eit_v) }
+  .rel.ebss		  : { *(.rel.ebss) }
+  .rela.ebss		  : { *(.rela.ebss) }
+  .rel.srodata		  : { *(.rel.srodata) }
+  .rela.srodata		  : { *(.rela.srodata) }
+  .rel.erodata		  : { *(.rel.erodata) }
+  .rela.erodata		  : { *(.rela.erodata) }
+  .rel.got		  : { *(.rel.got) }
+  .rela.got		  : { *(.rela.got) }
+  .rel.ctors		  : { *(.rel.ctors) }
+  .rela.ctors		  : { *(.rela.ctors) }
+  .rel.dtors		  : { *(.rel.dtors) }
+  .rela.dtors		  : { *(.rela.dtors) }
+  .rel.init		  : { *(.rel.init) }
+  .rela.init		  : { *(.rela.init) }
+  .rel.fini		  : { *(.rel.fini) }
+  .rela.fini		  : { *(.rela.fini) }
+  .rel.plt		  : { *(.rel.plt) }
+  .rela.plt		  : { *(.rela.plt) }
+  /* Concatenate .page0 sections.  Put them in the page0 memory bank
+     unless we are creating a relocatable file.  */
+ /* Removed page0 from linker script and memory.x because A it shouldnt exceed 0xFF and B if it doesn't, it quickly fills up with virtually no code and complains.
+  .page0 :
+  {
+    *(.page0)
+  }  > page0 */
+  /* Start of text section.  */
+  .stext   :
+  {
+    *(.stext)
+  }  > text
+  .init	  :
+  {
+    *(.init)
+  } =0
+
+  .text  :
+  {
+    /* Put startup code at beginning so that _start keeps same address.  */
+    /* Startup code.  */
+    KEEP (*(.install0))	/* Section should setup the stack pointer.  */
+    KEEP (*(.install1))	/* Place holder for applications.  */
+    KEEP (*(.install2))	/* Optional installation of data sections in RAM.  */
+    KEEP (*(.install3))	/* Place holder for applications.  */
+    KEEP (*(.install4))	/* Section that calls the main.  */
+    *(.init)
+    *(.text)
+    *(.text.*)
+
+    /* .gnu.warning sections are handled specially by elf32.em.  */
+    *(.gnu.warning)
+    *(.gnu.linkonce.t.*)
+    *(.tramp)
+    *(.tramp.*)
+
+    /* Finish code.  */
+    KEEP (*(.fini0))	/* Beginning of finish code (_exit symbol).  */
+    KEEP (*(.fini1))	/* Place holder for applications.  */
+    KEEP (*(.fini2))	/* C++ destructors.  */
+    KEEP (*(.fini3))	/* Place holder for applications.  */
+    KEEP (*(.fini4))	/* Runtime exit.  */
+    _etext = .;
+    PROVIDE (etext = .);
+    . = ALIGN(2);
+  }  > text =0xa7a7a7a7
+  .eh_frame   :
+  {
+    KEEP (*(.eh_frame))
+  }  > text
+  .gcc_except_table   :
+  {
+    *(.gcc_except_table)
+  }  > text
+
+  .rodata    :
+  {
+    *(.rodata)
+    *(.rodata.*)
+    *(.gnu.linkonce.r*)
+    . = ALIGN(2);
+  }  > text =0xffffffff
+
+  .rodata1   :
+  {
+    *(.rodata1)
+    . = ALIGN(2);
+  }  > text =0xffffffff
+  /* Constructor and destructor tables are in ROM.  */
+
+  .ctors   :
+  {
+     PROVIDE (__CTOR_LIST__ = .);
+    KEEP (*(.ctors))
+     PROVIDE(__CTOR_END__ = .);
+  }  > text
+    .dtors	  :
+  {
+     PROVIDE(__DTOR_LIST__ = .);
+    KEEP (*(.dtors))
+     PROVIDE(__DTOR_END__ = .);
+  }  > text
+  .jcr   :
+  {
+    KEEP (*(.jcr))
+  }  > text
+  /* Start of the data section image in ROM.  */
+  __data_image = .;
+  PROVIDE (__data_image = .);
+  /* All read-only sections that normally go in PROM must be above.
+     We construct the DATA image section in PROM at end of all these
+     read-only sections.  The data image must be copied at init time.
+     Refer to GNU ld, Section 3.6.8.2 Output Section LMA.  */
+  .data    : AT (__data_image)
+  {
+    __data_section_start = .;
+    PROVIDE (__data_section_start = .);
+    *(.sdata)
+    *(.data)
+    *(.data.*)
+    *(.data1)
+    *(.gnu.linkonce.d.*)
+    CONSTRUCTORS
+    _edata  =  .;
+    PROVIDE (edata = .);
+    . = ALIGN(2);
+  }  > data =0xffffffff
+  __data_section_size = SIZEOF(.data);
+  PROVIDE (__data_section_size = SIZEOF(.data));
+  __data_image_end = __data_image + __data_section_size;
+
+/* SCz: this does not work yet... This is supposed to force the loading
+   of _map_data.o (from libgcc.a) when the .data section is not empty.
+   By doing so, this should bring the code that copies the .data section
+   from ROM to RAM at init time.
+  ___pre_comp_data_size = SIZEOF(.data);
+  __install_data_sections = ___pre_comp_data_size > 0 ?
+		__map_data_sections : 0;
+*/
+  /* .install  :
+  {
+    . = _data_image_end;
+  }  > text */
+  /* Relocation for some bss and data sections.  */
+  .bss   : AT (ADDR(.bss))
+  {
+    __bss_start = .;
+    *(.softregs)
+    *(.sbss)
+    *(.scommon)
+    *(.dynbss)
+    *(.bss)
+    *(.bss.*)
+    *(.gnu.linkonce.b.*)
+    *(COMMON)
+    PROVIDE (_end = .);
+  }  > data
+  __bss_size = SIZEOF(.bss);
+  PROVIDE (__bss_size = SIZEOF(.bss));
+  /* eeprom removed because hcs12mem doesnt seem to want to load it at the moment. maybe put it back later? */
+  /*.eeprom   :
+  {
+    *(.eeprom)
+    *(.eeprom.*)
+  }  > eeprom*/
+  /* I had removed this due to placing it explicitly in the memory.x file. However that didn't work, so I've put it back. */
+  /* Diff this with /usr/m68hc11/lib/ldscripts/m68hc12elfb.x to compare. */
+  PROVIDE (_vectors_addr = DEFINED (vectors_addr) ? vectors_addr : 0xffc0);
+  .vectors DEFINED (vectors_addr) ? vectors_addr : 0xffc0 :
+  {
+    KEEP (*(.vectors))
+  }
+  /* Stabs debugging sections.  */
+  .stab		 0 : { *(.stab) }
+  .stabstr	 0 : { *(.stabstr) }
+  .stab.excl	 0 : { *(.stab.excl) }
+  .stab.exclstr	 0 : { *(.stab.exclstr) }
+  .stab.index	 0 : { *(.stab.index) }
+  .stab.indexstr 0 : { *(.stab.indexstr) }
+  .comment	 0 : { *(.comment) }
+  /* DWARF debug sections.
+     Symbols in the DWARF debugging sections are relative to the beginning
+     of the section so we begin them at 0.
+     Treatment of DWARF debug section must be at end of the linker
+     script to avoid problems when there are undefined symbols. It's necessary
+     to avoid that the DWARF section is relocated before such undefined
+     symbols are found.  */
+  /* DWARF 1 */
+  .debug	 0 : { *(.debug) }
+  .line		 0 : { *(.line) }
+  /* GNU DWARF 1 extensions */
+  .debug_srcinfo 0 : { *(.debug_srcinfo) }
+  .debug_sfnames 0 : { *(.debug_sfnames) }
+  /* DWARF 1.1 and DWARF 2 */
+  .debug_aranges  0 : { *(.debug_aranges) }
+  .debug_pubnames 0 : { *(.debug_pubnames) }
+  /* DWARF 2 */
+  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
+  .debug_abbrev   0 : { *(.debug_abbrev) }
+  .debug_line     0 : { *(.debug_line) }
+  .debug_frame    0 : { *(.debug_frame) }
+  .debug_str      0 : { *(.debug_str) }
+  .debug_loc      0 : { *(.debug_loc) }
+  .debug_macinfo  0 : { *(.debug_macinfo) }
+}
+
+
+/** @endcond */
diff -rupN binutils-2.20/examples/xgate/memory.x binutils-2.20-sean/examples/xgate/memory.x
--- binutils-2.20/examples/xgate/memory.x	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/examples/xgate/memory.x	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,117 @@
+/*	FreeEMS - the open source engine management system
+
+	Copyright 2008, 2009 Fred Cooke
+	
+	This file is part of the FreeEMS project.
+
+	FreeEMS software is free software: you can redistribute it and/or modify
+	it under the terms of the GNU General Public License as published by
+	the Free Software Foundation, either version 3 of the License, or
+	(at your option) any later version.
+
+	FreeEMS software is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+	GNU General Public License for more details.
+
+	You should have received a copy of the GNU General Public License
+	along with any FreeEMS software.  If not, see http://www.gnu.org/licenses/
+
+	We ask that if you make any changes to this file you email them upstream to
+	us at admin(at)diyefi(dot)org or, even better, fork the code on github.com!
+
+	Thank you for choosing FreeEMS to run your engine! */
+
+
+/**	@file memory.x
+ *
+ * @brief Region definition linker script
+ *
+ * Memory region location definition file for inclusion into the linker
+ * script. It defines the names, types, start addresses and lengths of
+ * each memory region available for the linker to populate with code and
+ * data. See hc9s12xdp512elfb.x and regions.x for more information. 
+ *
+ * A description of what some of this means can be found at the following URLs:
+ * - http://www.gnu.org/software/m68hc11/m68hc11_binutils.html
+ * - http://m68hc11.serveftp.org/wiki/index.php/FAQ:Link
+ *
+ * @cond memoryscript
+ */
+
+
+  MEMORY
+  {
+/*	regs		(r) 	: ORIGIN = 0x0000, LENGTH = 0x0800 /*	2k register space DON'T use! */
+	eeprom		(r) 	: ORIGIN = 0x0800, LENGTH = 0x0800 /*	2K of eeprom for now, 4K requires paging */
+
+	/* RAM space split up for tuning and flash burning use as well as GP use */
+	rpage		(rw)	: ORIGIN = 0x1000, LENGTH = 0x1000 /*   4k WINDOW for large tables etc */
+	txbuf		(rw)	: ORIGIN = 0x2000, LENGTH = 0x0820 /*  ~2k FIXED transmission buffer */
+	rxbuf		(rw)	: ORIGIN = 0x2820, LENGTH = 0x0810 /*  ~2k FIXED reception buffer */
+	data		(rw)	: ORIGIN = 0x3030, LENGTH = 0x0FD0 /*  ~4k FIXED general purpose RAM */
+	/* The TX and RX buffers are slightly larger than 2k because the RX buffer */
+	/* needs to also receive a header, checksum and attributes for the data    */
+	/* involved and the TX buffer needs to handle all of those two fold.       */
+/**/
+	/* Flash space in linear space while using the page window (16k + 14k + 2k SM = 30k usable, 2k protected) */
+	text1		(rx)	: ORIGIN = 0x4000, LENGTH = 0x3800 /*	Unpaged 14k flash block before page window	*/
+	fixedconf1	(rx)	: ORIGIN = 0x7800, LENGTH = 0x0400 /*	Unpaged   1K flash block before page window */
+	fixedconf2	(rx)	: ORIGIN = 0x7C00, LENGTH = 0x0400 /*	Unpaged   1K flash block before page window */
+	/*ppaged	(rx)	: ORIGIN = 0x8000, LENGTH = 0x4000		16K flash page window, DO NOT USE */
+	text		(rx)	: ORIGIN = 0xC000, LENGTH = 0x3710 /*	Unpaged 14K flash block after page window minus serial monitor and vector space */
+	/* TODO split the above text and text1 regions into halves or similar to allow us to know how the linear space is being spent, eg perf/required/isr etc */
+
+	/* These are correct as of the 0.0.17 release */
+    ppageE0	(rx)	: ORIGIN = 0x390000, LENGTH = 0x4000
+    ppageE1	(rx)	: ORIGIN = 0x394000, LENGTH = 0x4000
+    ppageE2	(rx)	: ORIGIN = 0x398000, LENGTH = 0x4000
+    ppageE3	(rx)	: ORIGIN = 0x39C000, LENGTH = 0x4000
+    ppageE4	(rx)	: ORIGIN = 0x3A0000, LENGTH = 0x4000
+    ppageE5	(rx)	: ORIGIN = 0x3A4000, LENGTH = 0x4000
+    ppageE6	(rx)	: ORIGIN = 0x3A8000, LENGTH = 0x4000
+    ppageE7	(rx)	: ORIGIN = 0x3AC000, LENGTH = 0x4000
+    ppageE8	(rx)	: ORIGIN = 0x3B0000, LENGTH = 0x4000
+    ppageE9	(rx)	: ORIGIN = 0x3B4000, LENGTH = 0x4000
+    ppageEA	(rx)	: ORIGIN = 0x3B8000, LENGTH = 0x4000
+    ppageEB	(rx)	: ORIGIN = 0x3BC000, LENGTH = 0x4000
+    ppageEC	(rx)	: ORIGIN = 0x3C0000, LENGTH = 0x4000
+    ppageED	(rx)	: ORIGIN = 0x3C4000, LENGTH = 0x4000
+    ppageEE	(rx)	: ORIGIN = 0x3C8000, LENGTH = 0x4000
+    ppageEF	(rx)	: ORIGIN = 0x3CC000, LENGTH = 0x4000
+    ppageF0	(rx)	: ORIGIN = 0x3D0000, LENGTH = 0x4000
+    ppageF1	(rx)	: ORIGIN = 0x3D4000, LENGTH = 0x4000
+    ppageF2	(rx)	: ORIGIN = 0x3D8000, LENGTH = 0x4000
+    ppageF3	(rx)	: ORIGIN = 0x3DC000, LENGTH = 0x4000
+    ppageF4	(rx)	: ORIGIN = 0x3E0000, LENGTH = 0x4000
+    ppageF5	(rx)	: ORIGIN = 0x3E4000, LENGTH = 0x4000
+    ppageF6	(rx)	: ORIGIN = 0x3E8000, LENGTH = 0x4000
+    ppageF7	(rx)	: ORIGIN = 0x3EC000, LENGTH = 0x4000
+    ppageF8	(rx)	: ORIGIN = 0x3F0000, LENGTH = 0x4000
+    fpageF9	(rx)	: ORIGIN = 0x3F4000, LENGTH = 0x2000
+    dpageF9	(rx)	: ORIGIN = 0x3F6000, LENGTH = 0x2000
+    fpageFA	(rx)	: ORIGIN = 0x3F8000, LENGTH = 0x2000
+    dpageFA	(rx)	: ORIGIN = 0x3FA000, LENGTH = 0x2000
+    fpageFB	(rx)	: ORIGIN = 0x3FC000, LENGTH = 0x2000
+    dpageFB1	(rx)	: ORIGIN = 0x3FE000, LENGTH = 0x0400
+    dpageFB2	(rx)	: ORIGIN = 0x3FE400, LENGTH = 0x0400
+    dpageFB3	(rx)	: ORIGIN = 0x3FE800, LENGTH = 0x0400
+    dpageFB4	(rx)	: ORIGIN = 0x3FEC00, LENGTH = 0x0400
+    dpageFB5	(rx)	: ORIGIN = 0x3FF000, LENGTH = 0x0400
+    dpageFB6	(rx)	: ORIGIN = 0x3FF400, LENGTH = 0x0400
+    dpageFB7	(rx)	: ORIGIN = 0x3FF800, LENGTH = 0x0400
+    dpageFB8	(rx)	: ORIGIN = 0x3FFC00, LENGTH = 0x0400
+    fpageFC	(rx)	: ORIGIN = 0x400000, LENGTH = 0x2000
+    dpageFC	(rx)	: ORIGIN = 0x402000, LENGTH = 0x2000
+    ppageFE	(rx)	: ORIGIN = 0x408000, LENGTH = 0x4000 /* Represents 0x8000 - 0xC000 ("text2" paged) */
+/*  ppageFD	(rx)	: ORIGIN = 0x404000, LENGTH = 0x4000 ** Represents 0x4000 - 0x8000 ("text1" paged) */
+/*  ppageFF	(rx)	: ORIGIN = 0x40C000, LENGTH = 0x3710 ** Represents 0xC000 - 0xFFFF ("text" paged) */
+/*  The previous two lines are included for clarity only. */
+/*	Changes to this file should be reflected in memory.h and Makefile also */
+  }
+
+  PROVIDE (_stack = 0x4000-1); /* Start the stack immediately after ram */
+  /* Vectors are located via the linker command line, not here. */
+
+
+/** @endcond */
diff -rupN binutils-2.20/examples/xgate/regions.x binutils-2.20-sean/examples/xgate/regions.x
--- binutils-2.20/examples/xgate/regions.x	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/examples/xgate/regions.x	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,330 @@
+/*	FreeEMS - the open source engine management system
+
+	Copyright 2008, 2009 Fred Cooke
+
+	This file is part of the FreeEMS project.
+
+	FreeEMS software is free software: you can redistribute it and/or modify
+	it under the terms of the GNU General Public License as published by
+	the Free Software Foundation, either version 3 of the License, or
+	(at your option) any later version.
+
+	FreeEMS software is distributed in the hope that it will be useful,
+	but WITHOUT ANY WARRANTY; without even the implied warranty of
+	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+	GNU General Public License for more details.
+
+	You should have received a copy of the GNU General Public License
+	along with any FreeEMS software.  If not, see http://www.gnu.org/licenses/
+
+	We ask that if you make any changes to this file you email them upstream to
+	us at admin(at)diyefi(dot)org or, even better, fork the code on github.com!
+
+	Thank you for choosing FreeEMS to run your engine! */
+
+
+/**	@file regions.x
+ *
+ * @brief Region mapping linker script
+ *
+ * Code section to memory region mapping definition file for inclusion
+ * into the linker script. This file provides rules which map pieces of
+ * code and data from named sections into specific named memory regions.
+ * See memory.x and hc9s12xdp512elfb.x for more information.
+ *
+ * A description of what some of this means can be found at the following URLs:
+ * - http://www.gnu.org/software/m68hc11/m68hc11_binutils.html
+ * - http://m68hc11.serveftp.org/wiki/index.php/FAQ:Link
+ *
+ * @cond regionsscript
+ */
+
+
+SECTIONS
+{
+
+/*&&&&&&&&&&&&&& RAM Regions &&&&&&&&&&&&&&*/
+
+/* The main RAM region is called "data" and */
+/* can be found in the main linker script   */
+
+/* The RAM page window through which all tunable config is reached. */
+  .rpage :
+  {
+    *(.rpage)
+  } > rpage
+
+/* Comms transmission buffer */
+  .txbuf :
+  {
+    *(.txbuf)
+  } > txbuf
+
+/* Comms reception buffer */
+  .rxbuf :
+  {
+    *(.rxbuf)
+  } > rxbuf
+
+
+/*&&&&&&&&&&&&&& Linear Flash Regions &&&&&&&&&&&&&&*/
+
+/* Primary linear code and persistent data is called */
+/* "text" and can be found in the main linker script */
+
+/* Secondary linear code and persistent data */
+  .text1  :
+  {
+    *(.text1)
+  }  > text1
+
+/* This is the flash page window. */
+/* We use this as paged blocks not directly so it's commented out. */
+/*  .text2  :
+  {
+    *(.text2)
+  }  > text2 */
+
+/* Non live tunable configuration items 1 */
+  .fixedconf1  :
+  {
+    *(.fixedconf1)
+  }  > fixedconf1
+
+/* Non live tunable configuration items 1 */
+  .fixedconf2  :
+  {
+    *(.fixedconf2)
+  }  > fixedconf2
+
+
+/*&&&&&&&&&&&&&& Paged Flash Regions &&&&&&&&&&&&&&*/
+
+/* PPAGE FA is used for fuel tables and setup function */
+  .dpageFA  :
+  {
+    *(.dpageFA)
+  }  > dpageFA
+
+  .fpageFA  :
+  {
+    *(.fpageFA)
+  }  > fpageFA
+
+/* PPAGE FB is used for smaller tunables and setup function */
+  .fpageFB  :
+  {
+    *(.fpageFB)
+  }  > fpageFB
+
+/* Data split up into eight chunks to catch size mistakes better */
+  .dpageFB1 :
+  {
+    *(.dpageFB1)
+  }  > dpageFB1
+
+  .dpageFB2  :
+  {
+    *(.dpageFB2)
+  }  > dpageFB2
+
+  .dpageFB3  :
+  {
+    *(.dpageFB3)
+  }  > dpageFB3
+
+  .dpageFB4  :
+  {
+    *(.dpageFB4)
+  }  > dpageFB4
+
+  .dpageFB5  :
+  {
+    *(.dpageFB5)
+  }  > dpageFB5
+
+  .dpageFB6  :
+  {
+    *(.dpageFB6)
+  }  > dpageFB6
+
+  .dpageFB7  :
+  {
+    *(.dpageFB7)
+  }  > dpageFB7
+
+  .dpageFB8  :
+  {
+    *(.dpageFB8)
+  }  > dpageFB8
+
+/* PPAGE FC is used for timing tables and setup function */
+  .dpageFC  :
+  {
+    *(.dpageFC)
+  }  > dpageFC
+
+  .fpageFC  :
+  {
+    *(.fpageFC)
+  }  > fpageFC
+
+/* The rest from this 128k flash module for general code */
+  .ppageF8  :
+  {
+    *(.fpageF8)
+    *(.dpageF8)
+  }  > ppageF8
+
+  .fpageF9  :
+  {
+    *(.fpageF9)
+  }  > fpageF9
+
+  .dpageF9  :
+  {
+    *(.dpageF9)
+  }  > dpageF9
+
+  .ppageFE  :
+  {
+    *(.ppageFE)
+  }  > ppageFE
+
+/* The following two blocks are included just for clarity */
+/* and are the same as text1 and text when paged.         */
+/*  .ppageFD  : (text1 / 0x4000 - 0x7FFF)
+  {
+    *(.ppageFD)
+  }  > ppageFD
+
+  .ppageFF  : (text / 0xC000 - 0xFFFF)
+  {
+    *(.ppageFF)
+  } > ppageFF */
+
+
+/* The rest from the other 3 128k flash modules - can't use yet */
+  .ppageE0  :
+  {
+    *(.ppageE0)
+  }  > ppageE0
+
+  .ppageE1  :
+  {
+    *(.ppageE1)
+  }  > ppageE1
+
+  .ppageE2  :
+  {
+    *(.ppageE2)
+  }  > ppageE2
+
+  .ppageE3  :
+  {
+    *(.ppageE3)
+  }  > ppageE3
+
+  .ppageE4  :
+  {
+    *(.ppageE4)
+  }  > ppageE4
+
+  .ppageE5  :
+  {
+    *(.ppageE5)
+  }  > ppageE5
+
+  .ppageE6  :
+  {
+    *(.ppageE6)
+  }  > ppageE6
+
+  .ppageE7  :
+  {
+    *(.ppageE7)
+  }  > ppageE7
+
+  .ppageE8  :
+  {
+    *(.ppageE8)
+  }  > ppageE8
+
+  .ppageE9  :
+  {
+    *(.ppageE9)
+  }  > ppageE9
+
+  .ppageEA  :
+  {
+    *(.ppageEA)
+  }  > ppageEA
+
+  .ppageEB  :
+  {
+    *(.ppageEB)
+  }  > ppageEB
+
+  .ppageEC  :
+  {
+    *(.ppageEC)
+  }  > ppageEC
+
+  .ppageED  :
+  {
+    *(.ppageED)
+  }  > ppageED
+
+  .ppageEE  :
+  {
+    *(.ppageEE)
+  }  > ppageEE
+
+  .ppageEF  :
+  {
+    *(.ppageEF)
+  }  > ppageEF
+
+  .ppageF0  :
+  {
+    *(.ppageF0)
+  }  > ppageF0
+
+  .ppageF1  :
+  {
+    *(.ppageF1)
+  }  > ppageF1
+
+  .ppageF2  :
+  {
+    *(.ppageF2)
+  }  > ppageF2
+
+  .ppageF3  :
+  {
+    *(.ppageF3)
+  }  > ppageF3
+
+  .ppageF4  :
+  {
+    *(.ppageF4)
+  }  > ppageF4
+
+  .ppageF5  :
+  {
+    *(.ppageF5)
+  }  > ppageF5
+
+  .ppageF6  :
+  {
+    *(.ppageF6)
+  }  > ppageF6
+
+  .ppageF7  :
+  {
+    *(.ppageF7)
+  }  > ppageF7
+}
+
+
+/** @endcond */
diff -rupN binutils-2.20/examples/xgate/xgate.s binutils-2.20-sean/examples/xgate/xgate.s
--- binutils-2.20/examples/xgate/xgate.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/examples/xgate/xgate.s	2010-10-01 14:37:28.000000000 -0600
@@ -0,0 +1,145 @@
+; ----- main.s -----
+; (C) 2009-2010 Sean Keys <info@powerefi.com>
+
+; This program is free software; you can redistribute it and/or modify
+; it under the terms of the GNU General Public License as published by
+; the Free Software Foundation; either version 2 of the License, or
+; (at your option) any later version.
+
+; This program is distributed in the hope that it will be useful,
+; but WITHOUT ANY WARRANTY; without even the implied warranty of
+; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+; GNU General Public License for more details.
+
+; You should have received a copy of the GNU General Public License
+; along with this program; if not, write to the Free Software
+; Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+;.Ltext0:
+;        .globl  
+;        .section        .xgateF8,"aw",@progbits
+;        .type   xgateF8, @object
+;       .size   xgateF8, 1024
+; ****************************************************************************
+;
+;	REGISTERS
+;
+; ****************************************************************************
+
+PORTF   	=     	0x1005	; Port F register
+
+.equ	SOMEVALUE, 0x01
+.equ	AVALUE, 0x05
+
+; ****************************************************************************
+;
+;	VARIABLES
+;
+; ****************************************************************************
+	.sect .text
+    /* Put everything below in .data section */
+
+/***
+ * VARIABLES
+ * =========
+ *
+ * Declare three variables and initialize their contents.  Also make sure they
+ * are aligned properly (half-words should start at addresses that are
+ * multiples of 2, words should start at multiples of 4).
+ ***/
+
+;TODO verify
+mychar:
+;.byte  0x01                /* An 8-bit variable named mychar */
+
+;.align 1                   /* Align to a 2-byte (2^1) boundary */
+myshort:
+.hword 0x0123               /* A 16-bit variable named myshort */
+
+;TODO test
+;.align 2                    /* Align to a 4-byte (2^2) boundary */
+;myint:
+;.word  0x01234567           /* A 32-bit variable named myint */
+
+/***
+ * STRINGS
+ * =======
+ *
+ * Declare a label called "hellostring" which points to the zero-terminated
+ * string "Hello World"
+ ***/
+
+hellostring:
+.string "FreeEMS > MS"
+
+/***
+ * ARRAYS
+ * =======
+ *
+ * Declare "array_initialized" with 10 32-bit words, also declare an 
+ * uninitialized array called "array_uninitialized" with space for 10
+ * 32-bit words (40 bytes).
+ ***/
+
+.align 2
+array_initialized:
+.word 5,3,6,7,2,8,7,1,9,5
+array_uninitialized:
+.skip 40
+
+; ****************************************************************************
+;
+;	VECTORS
+;
+; ****************************************************************************
+
+	.sect .vectors
+	.globl vectors
+; Maybe change vectors targed to xgate interrupt vector table address
+;vectors:
+;	.word def		; ffc0
+
+; ****************************************************************************
+;
+;	CODE
+;
+; ****************************************************************************
+
+        .sect .text
+
+; ----------------------------------------------------------------------------
+;	Interrupts
+; ----------------------------------------------------------------------------
+
+;; Default interrupt handler.
+def:
+;        rts
+
+
+; ----------------------------------------------------------------------------
+;	Main subroutine
+; ----------------------------------------------------------------------------
+
+;xgate_thread0:
+xgateThread0:
+	nop
+	mov R1, R2
+	or  R1, R0, R2
+	com R4
+	com R1, R2
+
+loop:	
+	ADC R6,R2,R2
+	COM R1,R4
+	asr R2,#6
+	asr R3,#1
+	adc R0,R0,R0
+	
+on:	;bang an LED'd port for everification
+	nop
+	COM R1,R4
+	bcc 	loop
+
+xgateThread1:
+
+end
diff -rupN binutils-2.20/gas/Makefile.am binutils-2.20-sean/gas/Makefile.am
--- binutils-2.20/gas/Makefile.am	2009-09-07 03:16:06.000000000 -0600
+++ binutils-2.20-sean/gas/Makefile.am	2010-10-01 14:37:29.000000000 -0600
@@ -64,6 +64,8 @@ CPU_TYPES = \
 	m32c \
 	m32r \
 	m68hc11 \
+	mc9s12x \
+	mc9xgate \
 	m68k \
 	maxq \
 	mcore \
@@ -266,6 +268,8 @@ TARGET_CPU_CFILES = \
 	config/tc-m32c.c \
 	config/tc-m32r.c \
 	config/tc-m68hc11.c \
+	config/tc-mc9s12x.c \
+	config/tc-mc9xgate.c \
 	config/tc-m68k.c \
 	config/tc-maxq.c \
 	config/tc-mcore.c \
@@ -329,6 +333,8 @@ TARGET_CPU_HFILES = \
 	config/tc-m32c.h \
 	config/tc-m32r.h \
 	config/tc-m68hc11.h \
+	config/tc-mc9s12x.h \
+	config/tc-mc9xgate.h \
 	config/tc-m68k.h \
 	config/tc-maxq.h \
 	config/tc-mcore.h \
diff -rupN binutils-2.20/gas/Makefile.in binutils-2.20-sean/gas/Makefile.in
--- binutils-2.20/gas/Makefile.in	2009-09-07 06:09:27.000000000 -0600
+++ binutils-2.20-sean/gas/Makefile.in	2010-10-01 14:37:29.000000000 -0600
@@ -330,6 +330,8 @@ CPU_TYPES = \
 	m32c \
 	m32r \
 	m68hc11 \
+	mc9s12x	\
+	mc9xgate \
 	m68k \
 	maxq \
 	mcore \
@@ -530,6 +532,8 @@ TARGET_CPU_CFILES = \
 	config/tc-m32c.c \
 	config/tc-m32r.c \
 	config/tc-m68hc11.c \
+	config/tc-mc9s12x.c \
+	config/tc-mc9xgate.c \
 	config/tc-m68k.c \
 	config/tc-maxq.c \
 	config/tc-mcore.c \
@@ -593,6 +597,8 @@ TARGET_CPU_HFILES = \
 	config/tc-m32c.h \
 	config/tc-m32r.h \
 	config/tc-m68hc11.h \
+	config/tc-mc9s12x.h \
+	config/tc-mc9xgate.h \
 	config/tc-m68k.h \
 	config/tc-maxq.h \
 	config/tc-mcore.h \
@@ -971,6 +977,8 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-m32c.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-m32r.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-m68hc11.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-mc9s12x.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-mc9xgate.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-m68k.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-maxq.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tc-mcore.Po@am__quote@
@@ -1394,6 +1402,37 @@ tc-m68hc11.obj: config/tc-m68hc11.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc-m68hc11.obj `if test -f 'config/tc-m68hc11.c'; then $(CYGPATH_W) 'config/tc-m68hc11.c'; else $(CYGPATH_W) '$(srcdir)/config/tc-m68hc11.c'; fi`
 
+
+
+tc-mc9s12x.o: config/tc-mc9s12x.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc-mc9s12x.o -MD -MP -MF $(DEPDIR)/tc-mc9s12x.Tpo -c -o tc-mc9s12x.o `test -f 'config/tc-mc9s12x.c' || echo '$(srcdir)/'`config/tc-mc9s12x.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tc-mc9s12x.Tpo $(DEPDIR)/tc-mc9s12x.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='config/tc-mc9s12x.c' object='tc-mc9s12x.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc-mc9s12x.o `test -f 'config/tc-mc9s12x.c' || echo '$(srcdir)/'`config/tc-mc9s12x.c
+
+tc-mc9s12x.obj: config/tc-mc9s12x.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc-mc9s12x.obj -MD -MP -MF $(DEPDIR)/tc-mc9s12x.Tpo -c -o tc-mc9s12x.obj `if test -f 'config/tc-mc9s12x.c'; then $(CYGPATH_W) 'config/tc-mc9s12x.c'; else $(CYGPATH_W) '$(srcdir)/config/tc-mc9s12x.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tc-mc9s12x.Tpo $(DEPDIR)/tc-mc9s12x.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='config/tc-mc9s12x.c' object='tc-mc9s12x.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc-mc9s12x.obj `if test -f 'config/tc-mc9s12x.c'; then $(CYGPATH_W) 'config/tc-mc9s12x.c'; else $(CYGPATH_W) '$(srcdir)/config/tc-mc9s12x.c'; fi`
+
+tc-mc9xgate.o: config/tc-mc9xgate.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc-mc9xgate.o -MD -MP -MF $(DEPDIR)/tc-mc9xgate.Tpo -c -o tc-mc9xgate.o `test -f 'config/tc-mc9xgate.c' || echo '$(srcdir)/'`config/tc-mc9xgate.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tc-mc9xgate.Tpo $(DEPDIR)/tc-mc9xgate.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='config/tc-mc9xgate.c' object='tc-mc9xgate.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc-mc9xgate.o `test -f 'config/tc-mc9xgate.c' || echo '$(srcdir)/'`config/tc-mc9xgate.c
+
+tc-mc9xgate.obj: config/tc-mc9xgate.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc-mc9xgate.obj -MD -MP -MF $(DEPDIR)/tc-mc9xgate.Tpo -c -o tc-mc9xgate.obj `if test -f 'config/tc-mc9xgate.c'; then $(CYGPATH_W) 'config/tc-mc9xgate.c'; else $(CYGPATH_W) '$(srcdir)/config/tc-mc9xgate.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tc-mc9xgate.Tpo $(DEPDIR)/tc-mc9xgate.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='config/tc-mc9xgate.c' object='tc-mc9xgate.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc-mc9xgate.obj `if test -f 'config/tc-mc9xgate.c'; then $(CYGPATH_W) 'config/tc-mc9xgate.c'; else $(CYGPATH_W) '$(srcdir)/config/tc-mc9xgate.c'; fi`
+
+
 tc-m68k.o: config/tc-m68k.c
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc-m68k.o -MD -MP -MF $(DEPDIR)/tc-m68k.Tpo -c -o tc-m68k.o `test -f 'config/tc-m68k.c' || echo '$(srcdir)/'`config/tc-m68k.c
 @am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tc-m68k.Tpo $(DEPDIR)/tc-m68k.Po
diff -rupN binutils-2.20/gas/config/tc-m68hc11.c binutils-2.20-sean/gas/config/tc-m68hc11.c
--- binutils-2.20/gas/config/tc-m68hc11.c	2009-09-02 01:24:20.000000000 -0600
+++ binutils-2.20-sean/gas/config/tc-m68hc11.c	2010-10-01 14:37:29.000000000 -0600
@@ -558,6 +558,9 @@ md_begin (void)
 						       m68hc11_opcode));
   m68hc11_sorted_opcodes = opcodes;
   num_opcodes = 0;
+  //printf("\n seize of root structure %d",sizeof (struct m68hc11_opcode));
+  //printf("\n size of opcodes %d \n",m68hc11_num_opcodes);  //comes back as 775
+  //printf("\nCurrent arch is %d\n",current_architecture);  //returns 1
   for (i = 0; i < m68hc11_num_opcodes; i++)
     {
       if (m68hc11_opcodes[i].arch & current_architecture)
@@ -567,9 +570,10 @@ md_begin (void)
 	      && opcodes[num_opcodes].format & M6811_OP_JUMP_REL
 	      && !(opcodes[num_opcodes].format & M6811_OP_BITMASK))
 	    {
-	      num_opcodes++;
+
 	      opcodes[num_opcodes] = m68hc11_opcodes[i];
 	    }
+	//  //printf("\n current arch from structure is -> %c",opcodes[num_opcodes].arch);
 	  num_opcodes++;
 	  for (j = 0; alias_opcodes[j].name != 0; j++)
 	    if (strcmp (m68hc11_opcodes[i].name, alias_opcodes[j].name) == 0)
@@ -579,11 +583,18 @@ md_begin (void)
 		num_opcodes++;
 		break;
 	      }
-	}
+	 }
     }
+
+
+  //printf("\n number of OPcodes %d\n",num_opcodes);  //TODO remove this line when done!!!
+  //print_opcode_list();
+
   qsort (opcodes, num_opcodes, sizeof (struct m68hc11_opcode),
          (int (*) (const void*, const void*)) cmp_opcode);
 
+
+
   opc = (struct m68hc11_opcode_def *)
     xmalloc (num_opcodes * sizeof (struct m68hc11_opcode_def));
   m68hc11_opcode_defs = opc--;
diff -rupN binutils-2.20/gas/config/tc-mc9s12x.c binutils-2.20-sean/gas/config/tc-mc9s12x.c
--- binutils-2.20/gas/config/tc-mc9s12x.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9s12x.c	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,3361 @@
+/* tc-m68hc11.c -- Assembler code for the Motorola 68HC11 & 68HC12.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to
+   the Free Software Foundation, 51 Franklin Street - Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
+/*
+ * scratch data
+ * R_MC9S12X_16
+ * howto is
+ * Can't disassemble for architecture
+ * failed to merge target specific data of file
+ * Error 1
+ * not valid
+ * Indirect indexed addressing
+ * architecture of input file
+ * bfd_merge_private_bfd_data
+ * info_to_howto_rel
+ */
+#include "as.h"
+#include "safe-ctype.h"
+#include "subsegs.h"
+#include "opcode/mc9s12x.h"
+#include "dwarf2dbg.h"
+#include "elf/mc9s12x.h"
+#include "stdio.h" /* TODO only here for testing */
+
+const char comment_chars[] = ";!";
+const char line_comment_chars[] = "#*";
+const char line_separator_chars[] = "";
+
+const char EXP_CHARS[] = "eE";
+const char FLT_CHARS[] = "dD";
+
+#define STATE_CONDITIONAL_BRANCH	(1)
+#define STATE_PC_RELATIVE		(2)
+#define STATE_INDEXED_OFFSET            (3)
+#define STATE_INDEXED_PCREL             (4)
+#define STATE_XBCC_BRANCH               (5)
+#define STATE_CONDITIONAL_BRANCH_6812	(6)
+
+#define STATE_BYTE			(0)
+#define STATE_BITS5                     (0)
+#define STATE_WORD			(1)
+#define STATE_BITS9                     (1)
+#define STATE_LONG			(2)
+#define STATE_BITS16                    (2)
+#define STATE_UNDF			(3)	/* Symbol undefined in pass1 */
+
+/* This macro has no side-effects.  */
+#define ENCODE_RELAX(what,length) (((what) << 2) + (length))
+#define RELAX_STATE(s) ((s) >> 2)
+#define RELAX_LENGTH(s) ((s) & 3)
+
+#define IS_OPCODE(C1,C2)        (((C1) & 0x0FF) == ((C2) & 0x0FF))
+
+/* This table describes how you change sizes for the various types of variable
+   size expressions.  This version only supports two kinds.  */
+
+/* The fields are:
+   How far Forward this mode will reach.
+   How far Backward this mode will reach.
+   How many bytes this mode will add to the size of the frag.
+   Which mode to go to if the offset won't fit in this one.  */
+
+relax_typeS md_relax_table[] = {
+  {1, 1, 0, 0},			/* First entries aren't used.  */
+  {1, 1, 0, 0},			/* For no good reason except.  */
+  {1, 1, 0, 0},			/* that the VAX doesn't either.  */
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L>.
+     These insns are translated into b!cc +3 jmp L.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bsr <L> and bra <L>.
+     These insns are translated into jsr and jmp.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD)},
+  {0, 0, 1, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for indexed offset: 5-bits, 9-bits, 16-bits.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9)},
+  {(255), (-256), 1, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for PC relative offset: 5-bits, 9-bits, 16-bits.
+     For the 9-bit case, there will be a -1 correction to take into
+     account the new byte that's why the range is -255..256.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9)},
+  {(256), (-255), 1, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for dbeq/ibeq/tbeq r,<L>:
+     These insns are translated into db!cc +3 jmp L.  */
+  {(255), (-256), 0, ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L> on 68HC12.
+     These insns are translated into lbcc <L>.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+};
+
+/* 68HC11 and 68HC12 registers.  They are numbered according to the 68HC12.  */
+typedef enum register_id {
+  REG_NONE = -1,
+  REG_A = 0,
+  REG_B = 1,
+  REG_CCR = 2,
+  REG_D = 4,
+  REG_X = 5,
+  REG_Y = 6,
+  REG_SP = 7,
+  REG_PC = 8
+} register_id;
+
+typedef struct operand {
+  expressionS exp;
+  register_id reg1;
+  register_id reg2;
+  int mode;
+} operand;
+
+struct mc9s12x_opcode_def {
+  long format;
+  int min_operands;
+  int max_operands;
+  int nb_modes;
+  int used;
+  struct mc9s12x_opcode *opcode;
+};
+
+static struct mc9s12x_opcode_def *mc9s12x_opcode_defs = 0;
+static int mc9s12x_nb_opcode_defs = 0;
+/* disable since we are not using
+typedef struct alias {
+  const char *name;
+  const char *alias;
+} alias;
+
+static alias alias_opcodes[] = {
+  {"cpd", "cmpd"},
+  {"cpx", "cmpx"},
+  {"cpy", "cmpy"},
+  {0, 0}
+};
+*/
+/* Local functions.  */
+static register_id reg_name_search (char *);
+static register_id register_name (void);
+static int cmp_opcode (struct mc9s12x_opcode *, struct mc9s12x_opcode *);
+static char *print_opcode_format (struct mc9s12x_opcode *, int);
+static char *skip_whites (char *);
+static int check_range (long, int);
+static void print_opcode_list (void);
+static void get_default_target (void);
+static void print_insn_format (char *);
+static int get_operand (operand *, int, long);
+static void fixup8 (expressionS *, int, int);
+static void fixup16 (expressionS *, int, int);
+static void fixup24 (expressionS *, int, int);
+static unsigned char convert_branch (unsigned char);
+static char *mc9s12x_new_insn (int);
+static void build_dbranch_insn (struct mc9s12x_opcode *,
+                                operand *, int, int);
+static int build_indexed_byte (operand *, int, int);
+static int build_reg_mode (operand *, int);
+
+static struct mc9s12x_opcode *find (struct mc9s12x_opcode_def *,
+                                    operand *, int);
+static struct mc9s12x_opcode *find_opcode (struct mc9s12x_opcode_def *,
+                                           operand *, int *);
+static void build_jump_insn (struct mc9s12x_opcode *, operand *, int, int);
+static void build_insn (struct mc9s12x_opcode *, operand *, int);
+static int relaxable_symbol (symbolS *);
+
+/* Pseudo op to indicate a relax group.  */
+static void s_mc9s12x_relax (int);
+
+/* Pseudo op to control the ELF flags.  */
+static void s_mc9s12x_mode (int);
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void s_mc9s12x_mark_symbol (int);
+
+/* Controls whether relative branches can be turned into long branches.
+   When the relative offset is too large, the insn are changed:
+    bra -> jmp
+    bsr -> jsr
+    bcc -> b!cc +3
+           jmp L
+    dbcc -> db!cc +3
+            jmp L
+
+  Setting the flag forbidds this.  */
+static short flag_fixed_branches = 0;
+
+/* Force to use long jumps (absolute) instead of relative branches.  */
+static short flag_force_long_jumps = 0;
+
+/* Change the direct addressing mode into an absolute addressing mode
+   when the insn does not support direct addressing.
+   For example, "clr *ZD0" is normally not possible and is changed
+   into "clr ZDO".  */
+static short flag_strict_direct_addressing = 1;
+
+/* When an opcode has invalid operand, print out the syntax of the opcode
+   to stderr.  */
+static short flag_print_insn_syntax = 0;
+
+/* Dumps the list of instructions with syntax and then exit:
+   1 -> Only dumps the list (sorted by name)
+   2 -> Generate an example (or test) that can be compiled.  */
+static short flag_print_opcodes = 0;
+
+/* Opcode hash table.  */
+static struct hash_control *mc9s12x_hash;
+
+/* Current cpu (either cpu6811 or cpu6812).  This is determined automagically
+   by 'get_default_target' by looking at default BFD vector.  This is overridden
+   with the -m<cpu> option.  */
+static int current_architecture = 0;
+
+/* Default cpu determined by 'get_default_target'.  */
+static const char *default_cpu;
+
+/* Number of opcodes in the sorted table (filtered by current cpu).  */
+static int num_opcodes;
+
+/* The opcodes sorted by name and filtered by current cpu.  */
+static struct mc9s12x_opcode *mc9s12x_sorted_opcodes;
+
+/* ELF flags to set in the output file header.  */
+static int elf_flags = E_MC9S12X_F64;
+
+/* These are the machine dependent pseudo-ops.  These are included so
+   the assembler can work on the output from the SUN C compiler, which
+   generates these.  */
+
+/* This table describes all the machine specific pseudo-ops the assembler
+   has to support.  The fields are:
+   pseudo-op name without dot
+   function to call to execute this pseudo-op
+   Integer arg to pass to the function.  */
+const pseudo_typeS md_pseudo_table[] = {
+  /* The following pseudo-ops are supported for MRI compatibility.  */
+  {"fcb", cons, 1},
+  {"fdb", cons, 2},
+  {"fcc", stringer, 8 + 1},
+  {"rmb", s_space, 0},
+
+  /* Motorola ALIS.  */
+  {"xrefb", s_ignore, 0}, /* Same as xref  */
+
+  /* Gcc driven relaxation.  */
+  {"relax", s_mc9s12x_relax, 0},
+
+  /* .mode instruction (ala SH).  */
+  {"mode", s_mc9s12x_mode, 0},
+
+  /* .far instruction.  */
+  {"far", s_mc9s12x_mark_symbol, STO_MC9S12X_FAR},
+
+  /* .interrupt instruction.  */
+  {"interrupt", s_mc9s12x_mark_symbol, STO_MC9S12X_INTERRUPT},
+
+  {0, 0, 0}
+};
+
+/* Options and initialization.  */
+
+const char *md_shortopts = "Sm:";
+
+struct option md_longopts[] = {
+#define OPTION_FORCE_LONG_BRANCH (OPTION_MD_BASE)
+  {"force-long-branches", no_argument, NULL, OPTION_FORCE_LONG_BRANCH},
+  {"force-long-branchs", no_argument, NULL, OPTION_FORCE_LONG_BRANCH}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_SHORT_BRANCHES     (OPTION_MD_BASE + 1)
+  {"short-branches", no_argument, NULL, OPTION_SHORT_BRANCHES},
+  {"short-branchs", no_argument, NULL, OPTION_SHORT_BRANCHES}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_STRICT_DIRECT_MODE  (OPTION_MD_BASE + 2)
+  {"strict-direct-mode", no_argument, NULL, OPTION_STRICT_DIRECT_MODE},
+
+#define OPTION_PRINT_INSN_SYNTAX  (OPTION_MD_BASE + 3)
+  {"print-insn-syntax", no_argument, NULL, OPTION_PRINT_INSN_SYNTAX},
+
+#define OPTION_PRINT_OPCODES  (OPTION_MD_BASE + 4)
+  {"print-opcodes", no_argument, NULL, OPTION_PRINT_OPCODES},
+
+#define OPTION_GENERATE_EXAMPLE  (OPTION_MD_BASE + 5)
+  {"generate-example", no_argument, NULL, OPTION_GENERATE_EXAMPLE},
+
+#define OPTION_MSHORT  (OPTION_MD_BASE + 6)
+  {"mshort", no_argument, NULL, OPTION_MSHORT},
+
+#define OPTION_MLONG  (OPTION_MD_BASE + 7)
+  {"mlong", no_argument, NULL, OPTION_MLONG},
+
+#define OPTION_MSHORT_DOUBLE  (OPTION_MD_BASE + 8)
+  {"mshort-double", no_argument, NULL, OPTION_MSHORT_DOUBLE},
+
+#define OPTION_MLONG_DOUBLE  (OPTION_MD_BASE + 9)
+  {"mlong-double", no_argument, NULL, OPTION_MLONG_DOUBLE},
+
+  {NULL, no_argument, NULL, 0}
+};
+size_t md_longopts_size = sizeof (md_longopts);
+
+/* Get the target cpu for the assembler.  This is based on the configure
+   options and on the -m68hc11/-m68hc12 option.  If no option is specified,
+   we must get the default.  */
+const char *
+mc9s12x_arch_format (void)
+{
+  get_default_target ();
+  if (current_architecture & cpumc9s12x) /* TODO find 6811 and replace with s12x or refactor*/
+    return "elf32-mc9s12x";
+  else
+	//printf("\n error in tc-mc9s12x line 348\n");
+    return "error-line339";
+}
+
+enum bfd_architecture
+mc9s12x_arch (void)
+{
+  get_default_target ();
+  if (current_architecture & cpumc9s12x) /* TODO same as above todo */
+    return bfd_arch_mc9s12x;
+  else
+	//printf("\n error in tc-mc9s12x line 348\n");
+    return bfd_arch_mc9s12x;
+}
+
+int
+mc9s12x_mach (void)
+{
+  return 0;
+}
+
+/* Listing header selected according to cpu.  */
+const char *
+mc9s12x_listing_header (void)
+{
+  if (current_architecture & cpumc9s12x)
+    return "MC9S12X GAS "; /* TODO same as above */
+  else
+    return "ERROR MC9S12X GAS ";
+}
+
+void
+md_show_usage (FILE *stream)   /* TODO fix options below */
+{
+  get_default_target ();
+  fprintf (stream, _("\
+Motorola 68HC11/68HC12/68HCS12 options:\n\
+  -m68hc11 | -m68hc12 |\n\
+  -m68hcs12               specify the processor [default %s]\n\
+  -mshort                 use 16-bit int ABI (default)\n\
+  -mlong                  use 32-bit int ABI\n\
+  -mshort-double          use 32-bit double ABI\n\
+  -mlong-double           use 64-bit double ABI (default)\n\
+  --force-long-branches   always turn relative branches into absolute ones\n\
+  -S,--short-branches     do not turn relative branches into absolute ones\n\
+                          when the offset is out of range\n\
+  --strict-direct-mode    do not turn the direct mode into extended mode\n\
+                          when the instruction does not support direct mode\n\
+  --print-insn-syntax     print the syntax of instruction in case of error\n\
+  --print-opcodes         print the list of instructions with syntax\n\
+  --generate-example      generate an example of each instruction\n\
+                          (used for testing)\n"), default_cpu);
+
+}
+
+/* Try to identify the default target based on the BFD library.  */
+static void
+get_default_target (void)
+{
+  const bfd_target *target;
+  bfd abfd;
+
+  if (current_architecture != 0)
+    return;
+
+  default_cpu = "unknown";
+  target = bfd_find_target (0, &abfd);
+  if (target && target->name)
+    {
+      if (strcmp (target->name, "elf32-m68hc12") == 0)
+	{
+	  current_architecture = cpumc9s12x;
+	  default_cpu = "mc9s12x";
+	}
+      else if (strcmp (target->name, "elf32-mc9s12x") == 0)
+	{
+      current_architecture = cpumc9s12x;
+	  default_cpu = "mc9s12x";
+	}
+      else
+	{
+	  as_bad (_("Default target `%s' is not supported."), target->name);
+	}
+    }
+}
+
+void
+mc9s12x_print_statistics (FILE *file)
+{
+  int i;
+  struct mc9s12x_opcode_def *opc;
+
+  hash_print_statistics (file, "opcode table", mc9s12x_hash);
+
+  opc = mc9s12x_opcode_defs;
+  if (opc == 0 || mc9s12x_nb_opcode_defs == 0)
+    return;
+
+  /* Dump the opcode statistics table.  */
+  fprintf (file, _("Name   # Modes  Min ops  Max ops  Modes mask  # Used\n"));
+  for (i = 0; i < mc9s12x_nb_opcode_defs; i++, opc++)
+    {
+      fprintf (file, "%-7.7s  %5d  %7d  %7d  0x%08lx  %7d\n",
+	       opc->opcode->name,
+	       opc->nb_modes,
+	       opc->min_operands, opc->max_operands, opc->format, opc->used);
+    }
+}
+
+int
+md_parse_option (int c, char *arg)
+{
+  get_default_target ();
+  current_architecture = cpumc9s12x;
+  switch (c)
+    {
+      /* -S means keep external to 2 bit offset rather than 16 bit one.  */
+    case OPTION_SHORT_BRANCHES:
+    case 'S':
+      flag_fixed_branches = 1;
+      break;
+
+    case OPTION_FORCE_LONG_BRANCH:
+      flag_force_long_jumps = 1;
+      break;
+
+    case OPTION_PRINT_INSN_SYNTAX:
+      flag_print_insn_syntax = 1;
+      break;
+
+    case OPTION_PRINT_OPCODES:
+      flag_print_opcodes = 1;
+      break;
+
+    case OPTION_STRICT_DIRECT_MODE:
+      flag_strict_direct_addressing = 0;
+      break;
+
+    case OPTION_GENERATE_EXAMPLE:
+      flag_print_opcodes = 2;
+      break;
+
+    case OPTION_MSHORT:
+      elf_flags &= ~E_MC9S12X_I32;
+      break;
+
+    case OPTION_MLONG:
+      elf_flags |= E_MC9S12X_I32;
+      break;
+
+    case OPTION_MSHORT_DOUBLE:
+      elf_flags &= ~E_MC9S12X_F64;
+      break;
+
+    case OPTION_MLONG_DOUBLE:
+      elf_flags |= E_MC9S12X_F64;
+      break;
+
+    case 'm':
+      if (strcasecmp (arg, "MC9S12X") == 0)
+	current_architecture = cpumc9s12x;
+      else if (strcasecmp (arg, "MC9S12X") == 0)
+	current_architecture = cpumc9s12x;
+      else if (strcasecmp (arg, "68hcs12") == 0)
+	current_architecture = cpumc9s12x | cpumc9s12x;
+      /* TODO fix hack for gcc*/
+      else if (strcasecmp (arg, "68hc11") == 0)
+              current_architecture = cpumc9s12x | cpumc9s12x;
+      else if (strcasecmp (arg, "c9s12x") == 0)
+                    current_architecture = cpumc9s12x | cpumc9s12x;
+      else if (strcasecmp (arg, "68hc12") == 0)
+                          current_architecture = cpumc9s12x | cpumc9s12x;
+      else
+	as_bad (_("Option `%s' is not recognized."), arg);
+      break;
+
+    default:
+      return 0;
+    }
+
+  return 1;
+}
+
+symbolS *
+md_undefined_symbol (char *name ATTRIBUTE_UNUSED)
+{
+  return 0;
+}
+
+char *
+md_atof (int type, char *litP, int *sizeP)
+{
+  return ieee_md_atof (type, litP, sizeP, TRUE);
+}
+
+valueT
+md_section_align (asection *seg, valueT addr)
+{
+  int align = bfd_get_section_alignment (stdoutput, seg);
+  return ((addr + (1 << align) - 1) & (-1 << align));
+}
+
+static int
+cmp_opcode (struct mc9s12x_opcode *op1, struct mc9s12x_opcode *op2)
+{
+  return strcmp (op1->name, op2->name);
+}
+
+#define IS_CALL_SYMBOL(MODE) \
+(((MODE) & (MC9S12X_OP_PAGE|MC9S12X_OP_IND16)) \
+  == ((MC9S12X_OP_PAGE|MC9S12X_OP_IND16)))
+
+/* Initialize the assembler.  Create the opcode hash table
+   (sorted on the names) with the M6811 opcode table
+   (from opcode library).  */
+void
+md_begin (void)
+{
+ // printf("\n IN MD_BEGIN\n"); /* TODO FOR TESTING */
+  char *prev_name = "";
+  struct mc9s12x_opcode *opcodes;
+  struct mc9s12x_opcode_def *opc = 0;
+  int i;  /* removed j */
+
+  get_default_target ();
+
+  mc9s12x_hash = hash_new ();
+
+  opcodes = (struct mc9s12x_opcode *) xmalloc (mc9s12x_num_opcodes *
+					       sizeof (struct
+						       mc9s12x_opcode));
+  mc9s12x_sorted_opcodes = opcodes;
+  num_opcodes = 0;
+  //printf("\n seize of root structure %d",sizeof (struct mc9s12x_opcode)); //returns 16 SAME AS ORIGI code
+  //printf("\n size of opcodes %d \n",mc9s12x_num_opcodes);  //origional code returns 775  this returns 575 since we are dropping hc11 codes
+  //printf("\nCurrent arch is %d\n",current_architecture);  // this code returns 4 orig returns 4
+
+  for (i = 0; i < mc9s12x_num_opcodes; i++)
+    {
+      if (mc9s12x_opcodes[i].arch & current_architecture)
+      {
+      opcodes[num_opcodes] = mc9s12x_opcodes[i];
+	  if (opcodes[num_opcodes].name[0] == 'b'   /* get the first letter of the name */
+	      && opcodes[num_opcodes].format & MC9S12X_OP_JUMP_REL
+	      && !(opcodes[num_opcodes].format & MC9S12X_OP_BITMASK))
+	    {
+		//  printf("\n num_opcodes++ %s",opcodes[num_opcodes].name);  //should return 618
+	      opcodes[num_opcodes] = mc9s12x_opcodes[i];
+	    }
+	  num_opcodes++;
+	  /*
+	   * since we are dropping hc11 the code below will be dropped, if this code is to be renabled mc9s12x_num_opcodes must be added to the size
+	   * of the alias table or qsort will segfault  or something like that
+	   */
+
+	  /*for (j = 0; alias_opcodes[j].name != 0; j++)
+	    if (strcmp (mc9s12x_opcodes[i].name, alias_opcodes[j].name) == 0)
+	      {
+		opcodes[num_opcodes] = mc9s12x_opcodes[i];
+		opcodes[num_opcodes].name = alias_opcodes[j].alias;
+		num_opcodes++;
+		break;
+	      }
+	      */
+	}
+    }
+  //print_opcode_list();
+  //printf("\n number of OPcodes %d",num_opcodes);  //should be 599
+  //printf("\n done building table\n");
+  qsort (opcodes, num_opcodes, sizeof (struct mc9s12x_opcode),
+         (int (*) (const void*, const void*)) cmp_opcode);
+
+  //print_opcode_list();
+  //printf("\n done sorting \n");
+
+  opc = (struct mc9s12x_opcode_def *)
+    xmalloc (num_opcodes * sizeof (struct mc9s12x_opcode_def));
+  mc9s12x_opcode_defs = opc--;
+
+  /* Insert unique names into hash table.  The M6811 instruction set
+     has several identical opcode names that have different opcodes based
+     on the operands.  This hash table then provides a quick index to
+     the first opcode with a particular name in the opcode table.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      int expect;
+
+      if (strcmp (prev_name, opcodes->name))
+	{
+	  prev_name = (char *) opcodes->name;
+
+	  opc++;
+	  opc->format = 0;
+	  opc->min_operands = 100;
+	  opc->max_operands = 0;
+	  opc->nb_modes = 0;
+	  opc->opcode = opcodes;
+	  opc->used = 0;
+	  hash_insert (mc9s12x_hash, opcodes->name, opc);
+	}
+      opc->nb_modes++;
+      opc->format |= opcodes->format;
+
+      /* See how many operands this opcode needs.  */
+      expect = 0;
+      if (opcodes->format & MC9S12X_OP_MASK)
+	expect++;
+      if (opcodes->format & MC9S12X_OP_BITMASK)
+	expect++;
+      if (opcodes->format & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	expect++;
+      if (opcodes->format & (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2))
+	expect++;
+      /* Special case for call instruction.  */
+      if ((opcodes->format & MC9S12X_OP_PAGE)
+          && !(opcodes->format & MC9S12X_OP_IND16))
+        expect++;
+
+      if (expect < opc->min_operands)
+	opc->min_operands = expect;
+      if (IS_CALL_SYMBOL (opcodes->format))
+         expect++;
+      if (expect > opc->max_operands)
+	opc->max_operands = expect;
+    }
+  opc++;
+  mc9s12x_nb_opcode_defs = opc - mc9s12x_opcode_defs;
+
+
+// printf("\n at end of MD_BEGIN \n");
+
+
+  if (flag_print_opcodes)
+    {
+      print_opcode_list ();
+      exit (EXIT_SUCCESS);
+    }
+}
+
+void
+mc9s12x_init_after_args (void)
+{
+}
+
+/* Builtin help.  */
+
+/* Return a string that represents the operand format for the instruction.
+   When example is true, this generates an example of operand.  This is used
+   to give an example and also to generate a test.  */
+static char *
+print_opcode_format (struct mc9s12x_opcode *opcode, int example)
+{
+  static char buf[128];
+  int format = opcode->format;
+  char *p;
+
+  p = buf;
+  buf[0] = 0;
+  if (format & MC9S12X_OP_IMM8)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<imm8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_IMM16)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FFFF);
+      else
+	strcpy (p, _("#<imm16>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_IX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_IY)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_IDX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, "n,r");
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_PAGE)
+    {
+      if (example)
+	sprintf (p, ", %d", rand () & 0x0FF);
+      else
+	strcpy (p, ", <page>");
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_DIRECT)
+    {
+      if (example)
+	sprintf (p, "*Z%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("*<abs8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9S12X_OP_BITMASK)
+    {
+      if (buf[0])
+	*p++ = ' ';
+
+      if (example)
+	sprintf (p, "#$%02x", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<mask>"));
+
+      p = &p[strlen (p)];
+      if (format & MC9S12X_OP_JUMP_REL)
+	*p++ = ' ';
+    }
+
+  if (format & MC9S12X_OP_IND16)
+    {
+      if (example)
+	sprintf (p, _("symbol%d"), rand () & 0x0FF);
+      else
+	strcpy (p, _("<abs>"));
+
+      p = &p[strlen (p)];
+    }
+
+  if (format & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+    {
+      if (example)
+	{
+	  if (format & MC9S12X_OP_BITMASK)
+	    {
+	      sprintf (p, ".+%d", rand () & 0x7F);
+	    }
+	  else
+	    {
+	      sprintf (p, "L%d", rand () & 0x0FF);
+	    }
+	}
+      else
+	strcpy (p, _("<label>"));
+    }
+
+  return buf;
+}
+
+/* Prints the list of instructions with the possible operands.  */
+static void
+print_opcode_list (void)
+{
+  int i;
+  char *prev_name = "";
+  struct mc9s12x_opcode *opcodes;
+  int example = flag_print_opcodes == 2;
+
+  if (example)
+    printf (_("# Example of `%s' instructions\n\t.sect .text\n_start:\n"),
+	    default_cpu);
+
+  opcodes = mc9s12x_sorted_opcodes;
+
+  /* Walk the list sorted on names (by md_begin).  We only report
+     one instruction per line, and we collect the different operand
+     formats.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      char *fmt = print_opcode_format (opcodes, example);
+
+      if (example)
+	{
+	  printf ("L%d:\t", i);
+	  printf ("%s %s\n", opcodes->name, fmt);
+	}
+      else
+	{
+	  if (strcmp (prev_name, opcodes->name))
+	    {
+	      if (i > 0)
+		printf ("\n");
+
+	      printf ("%-5.5s ", opcodes->name);
+	      prev_name = (char *) opcodes->name;
+	    }
+	  if (fmt[0])
+	    printf ("  [%s]", fmt);
+	}
+    }
+  printf ("\n");
+}
+
+/* Print the instruction format.  This operation is called when some
+   instruction is not correct.  Instruction format is printed as an
+   error message.  */
+static void
+print_insn_format (char *name)
+{
+  struct mc9s12x_opcode_def *opc;
+  struct mc9s12x_opcode *opcode;
+  char buf[128];
+
+  opc = (struct mc9s12x_opcode_def *) hash_find (mc9s12x_hash, name);
+  if (opc == NULL)
+    {
+      as_bad (_("Instruction `%s' is not recognized."), name);
+      return;
+    }
+  opcode = opc->opcode;
+
+  as_bad (_("Instruction formats for `%s':"), name);
+  do
+    {
+      char *fmt;
+
+      fmt = print_opcode_format (opcode, 0);
+      sprintf (buf, "\t%-5.5s %s", opcode->name, fmt);
+
+      as_bad ("%s", buf);
+      opcode++;
+    }
+  while (strcmp (opcode->name, name) == 0);
+}
+
+/* Analysis of 68HC11 and 68HC12 operands.  */
+
+/* reg_name_search() finds the register number given its name.
+   Returns the register number or REG_NONE on failure.  */
+static register_id
+reg_name_search (char *name)
+{
+  if (strcasecmp (name, "x") == 0 || strcasecmp (name, "ix") == 0)
+    return REG_X;
+  if (strcasecmp (name, "y") == 0 || strcasecmp (name, "iy") == 0)
+    return REG_Y;
+  if (strcasecmp (name, "a") == 0)
+    return REG_A;
+  if (strcasecmp (name, "b") == 0)
+    return REG_B;
+  if (strcasecmp (name, "d") == 0)
+    return REG_D;
+  if (strcasecmp (name, "sp") == 0)
+    return REG_SP;
+  if (strcasecmp (name, "pc") == 0)
+    return REG_PC;
+  if (strcasecmp (name, "ccr") == 0)
+    return REG_CCR;
+
+  return REG_NONE;
+}
+
+static char *
+skip_whites (char *p)
+{
+  while (*p == ' ' || *p == '\t')
+    p++;
+
+  return p;
+}
+
+/* Check the string at input_line_pointer
+   to see if it is a valid register name.  */
+static register_id
+register_name (void)
+{
+  register_id reg_number;
+  char c, *p = input_line_pointer;
+
+  if (!is_name_beginner (*p++))
+    return REG_NONE;
+
+  while (is_part_of_name (*p++))
+    continue;
+
+  c = *--p;
+  if (c)
+    *p++ = 0;
+
+  /* Look to see if it's in the register table.  */
+  reg_number = reg_name_search (input_line_pointer);
+  if (reg_number != REG_NONE)
+    {
+      if (c)
+	*--p = c;
+
+      input_line_pointer = p;
+      return reg_number;
+    }
+  if (c)
+    *--p = c;
+
+  return reg_number;
+}
+#define MC9S12X_OP_CALL_ADDR    0x00800000
+#define MC9S12X_OP_PAGE_ADDR    0x04000000
+
+/* Parse a string of operands and return an array of expressions.
+
+   Operand      mode[0]         mode[1]       exp[0]       exp[1]
+   #n           M6811_OP_IMM16  -             O_*
+   *<exp>       M6811_OP_DIRECT -             O_*
+   .{+-}<exp>   M6811_OP_JUMP_REL -           O_*
+   <exp>        M6811_OP_IND16  -             O_*
+   ,r N,r       M6812_OP_IDX    M6812_OP_REG  O_constant   O_register
+   n,-r         M6812_PRE_DEC   M6812_OP_REG  O_constant   O_register
+   n,+r         M6812_PRE_INC   " "
+   n,r-         M6812_POST_DEC  " "
+   n,r+         M6812_POST_INC  " "
+   A,r B,r D,r  M6811_OP_REG    M6812_OP_REG  O_register   O_register
+   [D,r]        M6811_OP_D_IDX  M6812_OP_REG  O_register   O_register
+   [n,r]        M6811_OP_D_IDX_2 M6812_OP_REG  O_constant   O_register  */
+static int
+get_operand (operand *oper, int which, long opmode)
+{
+  char *p = input_line_pointer;
+  int mode;
+  register_id reg;
+
+  oper->exp.X_op = O_absent;
+  oper->reg1 = REG_NONE;
+  oper->reg2 = REG_NONE;
+  mode = MC9S12X_OP_NONE;
+
+  p = skip_whites (p);
+
+  if (*p == 0 || *p == '\n' || *p == '\r')
+    {
+      input_line_pointer = p;
+      return 0;
+    }
+
+  if (*p == '*' && (opmode & (MC9S12X_OP_DIRECT | MC9S12X_OP_IND16)))
+    {
+      mode = MC9S12X_OP_DIRECT;
+      p++;
+    }
+  else if (*p == '#')
+    {
+      if (!(opmode & (MC9S12X_OP_IMM8 | MC9S12X_OP_IMM16 | MC9S12X_OP_BITMASK)))
+	{
+	  as_bad (_("Immediate operand is not allowed for operand %d."),
+		  which);
+	  return -1;
+	}
+
+      mode = MC9S12X_OP_IMM16;
+      p++;
+      if (strncmp (p, "%hi", 3) == 0)
+	{
+	  p += 3;
+	  mode |= MC9S12X_OP_HIGH_ADDR;
+	}
+      else if (strncmp (p, "%lo", 3) == 0)
+	{
+	  p += 3;
+	  mode |= MC9S12X_OP_LOW_ADDR;
+	}
+      /* %page modifier is used to obtain only the page number
+         of the address of a function.  */
+      else if (strncmp (p, "%page", 5) == 0)
+	{
+	  p += 5;
+	  mode |= MC9S12X_OP_PAGE_ADDR;
+	}
+
+      /* %addr modifier is used to obtain the physical address part
+         of the function (16-bit).  For 68HC12 the function will be
+         mapped in the 16K window at 0x8000 and the value will be
+         within that window (although the function address may not fit
+         in 16-bit).  See bfd/elf32-m68hc12.c for the translation.  */
+      else if (strncmp (p, "%addr", 5) == 0)
+	{
+	  p += 5;
+	  mode |= MC9S12X_OP_CALL_ADDR;
+	}
+    }
+  else if (*p == '.' && (p[1] == '+' || p[1] == '-'))
+    {
+      p++;
+      mode = MC9S12X_OP_JUMP_REL;
+    }
+  else if (*p == '[')
+    {
+	  /* TODO fix */
+      if (current_architecture != cpumc9s12x)
+	as_bad (_("Indirect indexed addressing is not valid for 68HC11."));
+
+      p++;
+      mode = MC9S12X_OP_D_IDX;
+      p = skip_whites (p);
+    }
+  else if (*p == ',')		/* Special handling of ,x and ,y.  */
+    {
+      p++;
+      input_line_pointer = p;
+
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  oper->reg1 = reg;
+	  oper->exp.X_op = O_constant;
+	  oper->exp.X_add_number = 0;
+	//  printf("\n adding a numper to expression on line1054");
+	  oper->mode = MC9S12X_OP_IDX;
+	  return 1;
+	}
+      as_bad (_("Spurious `,' or bad indirect register addressing mode."));
+      return -1;
+    }
+  /* Handle 68HC12 page specification in 'call foo,%page(bar)'.  */
+  else if ((opmode & MC9S12X_OP_PAGE) && strncmp (p, "%page", 5) == 0)
+    {
+      p += 5;
+      mode = MC9S12X_OP_PAGE_ADDR |MC9S12X_OP_PAGE | MC9S12X_OP_IND16;
+    }
+  input_line_pointer = p;
+
+  if (mode == MC9S12X_OP_NONE || mode == MC9S12X_OP_D_IDX)
+    reg = register_name ();
+  else
+    reg = REG_NONE;
+
+  if (reg != REG_NONE)
+    {
+      p = skip_whites (input_line_pointer);
+      if (*p == ']' && mode == MC9S12X_OP_D_IDX)
+	{
+	  as_bad
+	    (_("Missing second register or offset for indexed-indirect mode."));
+	  return -1;
+	}
+
+      oper->reg1 = reg;
+      oper->mode = mode | MC9S12X_OP_REG;
+      if (*p != ',')
+	{
+	  if (mode == MC9S12X_OP_D_IDX)
+	    {
+	      as_bad (_("Missing second register for indexed-indirect mode."));
+	      return -1;
+	    }
+	  return 1;
+	}
+
+      p++;
+      input_line_pointer = p;
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  p = skip_whites (input_line_pointer);
+	  if (mode == MC9S12X_OP_D_IDX)
+	    {
+	      if (*p != ']')
+		{
+		  as_bad (_("Missing `]' to close indexed-indirect mode."));
+		  return -1;
+		}
+	      p++;
+              oper->mode = MC9S12X_OP_D_IDX;
+	    }
+	  input_line_pointer = p;
+
+	  oper->reg2 = reg;
+	  return 1;
+	}
+      return 1;
+    }
+
+  /* In MRI mode, isolate the operand because we can't distinguish
+     operands from comments.  */
+  if (flag_mri)
+    {
+      char c = 0;
+
+      p = skip_whites (p);
+      while (*p && *p != ' ' && *p != '\t')
+	p++;
+
+      if (*p)
+	{
+	  c = *p;
+	  *p = 0;
+	}
+
+      /* Parse as an expression.  */
+      expression (&oper->exp);
+    //  printf("\n read expression line 1137");
+
+      if (c)
+	{
+	  *p = c;
+	}
+    }
+  else
+    {
+      expression (&oper->exp);
+      //printf("\n read expression line 1147, %d",(int) oper.exp->X_unsigned);
+    }
+
+  if (oper->exp.X_op == O_illegal)
+    {
+      as_bad (_("Illegal operand."));
+      return -1;
+    }
+  else if (oper->exp.X_op == O_absent)
+    {
+      as_bad (_("Missing operand."));
+      return -1;
+    }
+
+  p = input_line_pointer;
+
+  if (mode == MC9S12X_OP_NONE || mode == MC9S12X_OP_DIRECT
+      || mode == MC9S12X_OP_D_IDX)
+    {
+      p = skip_whites (input_line_pointer);
+
+      if (*p == ',')
+	{
+	  int possible_mode = MC9S12X_OP_NONE;
+	  char *old_input_line;
+
+	  old_input_line = p;
+	  p++;
+
+	  /* 68HC12 pre increment or decrement.  */
+	  if (mode == MC9S12X_OP_NONE)
+	    {
+	      if (*p == '-')
+		{
+		  possible_mode = MC9S12X_PRE_DEC;
+		  p++;
+		}
+	      else if (*p == '+')
+		{
+		  possible_mode = MC9S12X_PRE_INC;
+		  p++;
+		}
+	      p = skip_whites (p);
+	    }
+	  input_line_pointer = p;
+	  reg = register_name ();
+
+	  /* Backtrack if we have a valid constant expression and
+	     it does not correspond to the offset of the 68HC12 indexed
+	     addressing mode (as in N,x).  */
+	  if (reg == REG_NONE && mode == MC9S12X_OP_NONE
+	      && possible_mode != MC9S12X_OP_NONE)
+	    {
+	      oper->mode = MC9S12X_OP_IND16 | MC9S12X_OP_JUMP_REL;
+	      input_line_pointer = skip_whites (old_input_line);
+	      return 1;
+	    }
+
+	  if (possible_mode != MC9S12X_OP_NONE)
+	    mode = possible_mode;
+
+	  if ((current_architecture != cpumc9s12x)
+	      && possible_mode != MC9S12X_OP_NONE)
+	    as_bad (_("Pre-increment mode is not valid for 68HC11"));
+	  /* Backtrack.  */
+	  if (which == 0 && opmode & MC9S12X_OP_IDX_P2
+	      && reg != REG_X && reg != REG_Y
+	      && reg != REG_PC && reg != REG_SP)
+	    {
+	      reg = REG_NONE;
+	      input_line_pointer = p;
+	    }
+
+	  if (reg == REG_NONE && mode != MC9S12X_OP_DIRECT
+	      && !(mode == MC9S12X_OP_NONE && opmode & MC9S12X_OP_IND16))
+	    {
+	      as_bad (_("Wrong register in register indirect mode."));
+	      return -1;
+	    }
+	  if (mode == MC9S12X_OP_D_IDX)
+	    {
+	      p = skip_whites (input_line_pointer);
+	      if (*p++ != ']')
+		{
+		  as_bad (_("Missing `]' to close register indirect operand."));
+		  return -1;
+		}
+	      input_line_pointer = p;
+              oper->reg1 = reg;
+              oper->mode = MC9S12X_OP_D_IDX_2;
+              return 1;
+	    }
+	  if (reg != REG_NONE)
+	    {
+	      oper->reg1 = reg;
+	      if (mode == MC9S12X_OP_NONE)
+		{
+		  p = input_line_pointer;
+		  if (*p == '-')
+		    {
+		      mode = MC9S12X_POST_DEC;
+		      p++;
+		      if (current_architecture != cpumc9s12x)
+			as_bad
+			  (_("Post-decrement mode is not valid for 68HC11."));
+		    }
+		  else if (*p == '+')
+		    {
+		      mode = MC9S12X_POST_INC;
+		      p++;
+		      if (current_architecture != cpumc9s12x){
+		        printf("\n current arch is %d", current_architecture);
+		        as_bad
+			  (_("Post-increment mode is not valid for 68HC11."));
+
+		      }
+		    }
+		  else
+		    mode = MC9S12X_OP_IDX;
+
+		  input_line_pointer = p;
+		}
+	      else
+		mode |= MC9S12X_OP_IDX;
+
+	      oper->mode = mode;
+	      return 1;
+	    }
+          input_line_pointer = old_input_line;
+	}
+
+      if (mode == MC9S12X_OP_D_IDX_2)
+	{
+	  as_bad (_("Invalid indexed indirect mode."));
+	  return -1;
+	}
+    }
+
+  /* If the mode is not known until now, this is either a label
+     or an indirect address.  */
+  if (mode == MC9S12X_OP_NONE)
+    mode = MC9S12X_OP_IND16 | MC9S12X_OP_JUMP_REL;
+
+  p = input_line_pointer;
+  while (*p == ' ' || *p == '\t')
+    p++;
+  input_line_pointer = p;
+  oper->mode = mode;
+
+  return 1;
+}
+
+#define MC9S12X_AUTO_INC_DEC (MC9S12X_PRE_INC | MC9S12X_PRE_DEC \
+                            | MC9S12X_POST_INC | MC9S12X_POST_DEC)
+
+/* Checks that the number 'num' fits for a given mode.  */
+static int
+check_range (long num, int mode)
+{
+  /* Auto increment and decrement are ok for [-8..8] without 0.  */
+  if (mode & MC9S12X_AUTO_INC_DEC)
+    return (num != 0 && num <= 8 && num >= -8);
+
+  /* The 68HC12 supports 5, 9 and 16-bit offsets.  */
+  if (mode & (MC9S12X_INDEXED_IND | MC9S12X_INDEXED | MC9S12X_OP_IDX))
+    mode = MC9S12X_OP_IND16;
+
+  if (mode & MC9S12X_OP_JUMP_REL16)
+    mode = MC9S12X_OP_IND16;
+
+  mode &= ~MC9S12X_OP_BRANCH;
+  switch (mode)
+    {
+    case MC9S12X_OP_IX:
+    case MC9S12X_OP_IY:
+    case MC9S12X_OP_DIRECT:
+      return (num >= 0 && num <= 255) ? 1 : 0;
+
+    case MC9S12X_OP_BITMASK:
+    case MC9S12X_OP_IMM8:
+    case MC9S12X_OP_PAGE:
+      return (((num & 0xFFFFFF00) == 0) || ((num & 0xFFFFFF00) == 0xFFFFFF00))
+	? 1 : 0;
+
+    case MC9S12X_OP_JUMP_REL:
+      return (num >= -128 && num <= 127) ? 1 : 0;
+
+    case MC9S12X_OP_IND16:
+    case MC9S12X_OP_IND16 | MC9S12X_OP_PAGE:
+    case MC9S12X_OP_IMM16:
+      return (((num & 0xFFFF0000) == 0) || ((num & 0xFFFF0000) == 0xFFFF0000))
+	? 1 : 0;
+
+    case MC9S12X_OP_IBCC_MARKER:
+    case MC9S12X_OP_TBCC_MARKER:
+    case MC9S12X_OP_DBCC_MARKER:
+      return (num >= -256 && num <= 255) ? 1 : 0;
+
+    case MC9S12X_OP_TRAP_ID:
+      return ((num >= 0x30 && num <= 0x39)
+	      || (num >= 0x40 && num <= 0x0ff)) ? 1 : 0;
+
+    default:
+      return 0;
+    }
+}
+
+/* Gas fixup generation.  */
+
+/* Put a 1 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate an 8-bit fixup.  */
+static void
+fixup8 (expressionS *oper, int mode, int opmode)
+{
+  char *f;
+
+  f = frag_more (1);
+
+  if (oper->X_op == O_constant)
+    {
+      if (mode & MC9S12X_OP_TRAP_ID
+	  && !check_range (oper->X_add_number, MC9S12X_OP_TRAP_ID))
+	{
+	  static char trap_id_warn_once = 0;
+
+	  as_bad (_("Trap id `%ld' is out of range."), oper->X_add_number);
+	  if (trap_id_warn_once == 0)
+	    {
+	      trap_id_warn_once = 1;
+	      as_bad (_("Trap id must be within [0x30..0x39] or [0x40..0xff]."));
+	    }
+	}
+
+      if (!(mode & MC9S12X_OP_TRAP_ID)
+	  && !check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 8-bit range: `%ld'."), oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FF, 1);
+    }
+  else if (oper->X_op != O_register)
+    {
+      if (mode & MC9S12X_OP_TRAP_ID)
+	as_bad (_("The trap id must be a constant."));
+
+      if (mode == MC9S12X_OP_JUMP_REL)
+	{
+	  fixS *fixp;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+			      oper, TRUE, BFD_RELOC_8_PCREL);
+	  fixp->fx_pcrel_adjust = 1;
+	}
+      else
+	{
+	  fixS *fixp;
+          int reloc;
+
+	  /* Now create an 8-bit fixup.  If there was some %hi, %lo
+	     or %page modifier, generate the reloc accordingly.  */
+          if (opmode & MC9S12X_OP_HIGH_ADDR)
+            reloc = BFD_RELOC_MC9S12X_HI8;
+          else if (opmode & MC9S12X_OP_LOW_ADDR)
+            reloc = BFD_RELOC_MC9S12X_LO8;
+          else if (opmode & MC9S12X_OP_PAGE_ADDR)
+            reloc = BFD_RELOC_MC9S12X_PAGE;
+          else
+            reloc = BFD_RELOC_8;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+                              oper, FALSE, reloc);
+          if (reloc != BFD_RELOC_8)
+            fixp->fx_no_overflow = 1;
+	}
+      number_to_chars_bigendian (f, 0, 1);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup8."), oper->X_op);
+    }
+}
+
+/* Put a 2 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 16-bit fixup.  */
+static void
+fixup16 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (2);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFF, 2);
+
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+      int reloc;
+
+      if ((opmode & MC9S12X_OP_CALL_ADDR) && (mode & MC9S12X_OP_IMM16))
+        reloc = BFD_RELOC_MC9S12X_LO16;
+      else if (mode & MC9S12X_OP_JUMP_REL16)
+        reloc = BFD_RELOC_16_PCREL;
+      else if (mode & MC9S12X_OP_PAGE)
+        reloc = BFD_RELOC_MC9S12X_LO16;
+      else
+        reloc = BFD_RELOC_16;
+
+      /* Now create a 16-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+			  oper,
+			  reloc == BFD_RELOC_16_PCREL,
+                          reloc);
+      number_to_chars_bigendian (f, 0, 2);
+      if (reloc == BFD_RELOC_16_PCREL)
+	fixp->fx_pcrel_adjust = 2;
+      if (reloc == BFD_RELOC_MC9S12X_LO16)
+        fixp->fx_no_overflow = 1;
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* Put a 3 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 24-bit fixup.  */
+static void
+fixup24 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (3);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFFFF, 3);
+     // printf("\n in fixup24 line 1494");
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+
+      /* Now create a 24-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 3,
+			  oper, FALSE, BFD_RELOC_MC9S12X_24);
+      number_to_chars_bigendian (f, 0, 3);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* 68HC11 and 68HC12 code generation.  */
+
+/* Translate the short branch/bsr instruction into a long branch.  */
+static unsigned char
+convert_branch (unsigned char code)
+{
+  if (IS_OPCODE (code, MC9S12X_BSR2))
+    return MC9S12X_JSR;
+  else if (IS_OPCODE (code, MC9S12X_BSR))
+    return MC9S12X_JSR;
+  else if (IS_OPCODE (code, MC9S12X_BRA))
+    return (current_architecture & cpumc9s12x) ? MC9S12X_JMP2 : MC9S12X_JMP2;
+  else
+    as_fatal (_("Unexpected branch conversion with `%x'"), code);
+
+  /* Keep gcc happy.  */
+  return MC9S12X_JSR2;
+}
+
+/* Start a new insn that contains at least 'size' bytes.  Record the
+   line information of that insn in the dwarf2 debug sections.  */
+static char *
+mc9s12x_new_insn (int size)
+{
+  char *f;
+
+  f = frag_more (size);
+
+  dwarf2_emit_insn (size);
+
+  return f;
+}
+
+/* Builds a jump instruction (bra, bcc, bsr).  */
+static void
+build_jump_insn (struct mc9s12x_opcode *opcode, operand operands[],
+                 int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+  fragS *frag;
+  int where;
+
+ // printf("\n in build_jump_insn %s",opcode->name);
+
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  gas_assert ((opcode->format & MC9S12X_OP_BITMASK) == 0);
+  gas_assert (nb_operands == 1);
+  gas_assert (operands[0].reg1 == REG_NONE && operands[0].reg2 == REG_NONE);
+
+  code = opcode->opcode;
+
+  n = operands[0].exp.X_add_number;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jbcc and the constant is out of -128..127 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[0].exp.X_op == O_constant
+	  && (!check_range (n, opcode->format) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9S12X_RL_JUMP);
+
+      if (code == MC9S12X_BSR || code == MC9S12X_BRA || code == MC9S12X_BSR2)
+	{
+	  code = convert_branch (code);
+
+	  f = mc9s12x_new_insn (1);
+	  number_to_chars_bigendian (f, code, 1);
+	}
+      else if (current_architecture & cpumc9s12x)
+	{
+	  /* 68HC12: translate the bcc into a lbcc.  */
+	  f = mc9s12x_new_insn (2);
+	  number_to_chars_bigendian (f, MC9S12X_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  fixup16 (&operands[0].exp, MC9S12X_OP_JUMP_REL16,
+		   MC9S12X_OP_JUMP_REL16);
+	  return;
+	}
+      else
+	{
+	  /* 68HC11: translate the bcc into b!cc +3; jmp <L>.  */
+	  f = mc9s12x_new_insn (3);
+	  code ^= 1;
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 3, 1);
+	  number_to_chars_bigendian (f + 2, MC9S12X_JMP, 1);
+	}
+      fixup16 (&operands[0].exp, MC9S12X_OP_IND16, MC9S12X_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 8-bits.  */
+  if (operands[0].exp.X_op == O_constant)
+    {
+      if (!check_range (n, opcode->format))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else if (opcode->format & MC9S12X_OP_JUMP_REL16)
+	{
+	  f = mc9s12x_new_insn (4);
+	  number_to_chars_bigendian (f, MC9S12X_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  number_to_chars_bigendian (f + 2, n & 0x0ffff, 2);
+	}
+      else
+	{
+	  f = mc9s12x_new_insn (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else if (opcode->format & MC9S12X_OP_JUMP_REL16)
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9S12X_RL_JUMP);
+
+      f = mc9s12x_new_insn (2);
+      number_to_chars_bigendian (f, MC9S12X_OPCODE_PAGE2, 1);
+      number_to_chars_bigendian (f + 1, code, 1);
+      fixup16 (&operands[0].exp, MC9S12X_OP_JUMP_REL16, MC9S12X_OP_JUMP_REL16);
+    }
+  else
+    {
+      char *opcode;
+
+      frag = frag_now;
+      where = frag_now_fix ();
+      
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9S12X_RL_JUMP);
+
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  opcode = mc9s12x_new_insn (1);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  fixup8 (&operands[0].exp, MC9S12X_OP_JUMP_REL, MC9S12X_OP_JUMP_REL);
+	}
+
+      /* bra/bsr made be changed into jmp/jsr.  */
+      else if (code == MC9S12X_BSR || code == MC9S12X_BRA || code == MC9S12X_BSR2)
+	{
+          /* Allocate worst case storage.  */
+	  opcode = mc9s12x_new_insn (3);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_variant (rs_machine_dependent, 1, 1,
+                        ENCODE_RELAX (STATE_PC_RELATIVE, STATE_UNDF),
+                        operands[0].exp.X_add_symbol, (offsetT) n,
+                        opcode);
+	}
+      else if (current_architecture & cpumc9s12x)
+	{
+	  opcode = mc9s12x_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 2, 2,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+      else
+	{
+	  opcode = mc9s12x_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+    }
+}
+
+/* Builds a dbne/dbeq/tbne/tbeq instruction.  */
+static void
+build_dbranch_insn (struct mc9s12x_opcode *opcode, operand operands[],
+                    int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+
+ // printf("\n in build_dbranch_insn %s",opcode->name);
+
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  gas_assert ((opcode->format & MC9S12X_OP_BITMASK) == 0);
+  gas_assert (nb_operands == 2);
+  gas_assert (operands[0].reg1 != REG_NONE);
+
+  code = opcode->opcode & 0x0FF;
+
+  f = mc9s12x_new_insn (1);
+  number_to_chars_bigendian (f, code, 1);
+
+  n = operands[1].exp.X_add_number;
+  code = operands[0].reg1;
+
+  if (operands[0].reg1 == REG_NONE || operands[0].reg1 == REG_CCR
+      || operands[0].reg1 == REG_PC)
+    as_bad (_("Invalid register for dbcc/tbcc instruction."));
+
+  if (opcode->format & MC9S12X_OP_IBCC_MARKER)
+    code |= 0x80;
+  else if (opcode->format & MC9S12X_OP_TBCC_MARKER)
+    code |= 0x40;
+
+  if (!(opcode->format & MC9S12X_OP_EQ_MARKER))
+    code |= 0x20;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jdbcc and the constant is out of -256..255 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[1].exp.X_op == O_constant
+	  && (!check_range (n, MC9S12X_OP_IBCC_MARKER) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      f = frag_more (2);
+      code ^= 0x20;
+      number_to_chars_bigendian (f, code, 1);
+      number_to_chars_bigendian (f + 1, MC9S12X_JMP2, 1);
+      fixup16 (&operands[0].exp, MC9S12X_OP_IND16, MC9S12X_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 9-bits.  */
+  if (operands[1].exp.X_op == O_constant)
+    {
+      if (!check_range (n, MC9S12X_OP_IBCC_MARKER))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else
+	{
+	  if ((long) n < 0)
+	    code |= 0x10;
+
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else
+    {
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  fixup8 (&operands[0].exp, MC9S12X_OP_JUMP_REL, MC9S12X_OP_JUMP_REL);
+	}
+
+      else
+	{
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_UNDF),
+		    operands[1].exp.X_add_symbol, (offsetT) n, f);
+	}
+    }
+}
+
+#define OP_EXTENDED (MC9S12X_OP_PAGE2 | MC9S12X_OP_PAGE3 | MC9S12X_OP_PAGE4)
+
+/* Assemble the post index byte for 68HC12 extended addressing modes.  */
+static int
+build_indexed_byte (operand *op, int format ATTRIBUTE_UNUSED, int move_insn)
+{
+  unsigned char byte = 0;
+  char *f;
+  int mode;
+  long val;
+
+  //printf("\n in build_indexed_byte %s",opcode->name);
+
+
+  val = op->exp.X_add_number;
+  mode = op->mode;
+  if (mode & MC9S12X_AUTO_INC_DEC)
+    {
+      byte = 0x20;
+      if (mode & (MC9S12X_POST_INC | MC9S12X_POST_DEC))
+	byte |= 0x10;
+
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, mode))
+	    {
+	      as_bad (_("Increment/decrement value is out of range: `%ld'."),
+		      val);
+	    }
+	  if (mode & (MC9S12X_POST_INC | MC9S12X_PRE_INC))
+	    byte |= (val - 1) & 0x07;
+	  else
+	    byte |= (8 - ((val) & 7)) | 0x8;
+	}
+      switch (op->reg1)
+	{
+	case REG_NONE:
+	  as_fatal (_("Expecting a register."));
+
+	case REG_X:
+	  byte |= 0;
+	  break;
+
+	case REG_Y:
+	  byte |= 0x40;
+	  break;
+
+	case REG_SP:
+	  byte |= 0x80;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register for post/pre increment."));
+	  break;
+	}
+
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+  if (mode & (MC9S12X_OP_IDX | MC9S12X_OP_D_IDX_2))
+    {
+      switch (op->reg1)
+	{
+	case REG_X:
+	  byte = 0;
+	  break;
+
+	case REG_Y:
+	  byte = 1;
+	  break;
+
+	case REG_SP:
+	  byte = 2;
+	  break;
+
+	case REG_PC:
+	  byte = 3;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register."));
+	  break;
+	}
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, MC9S12X_OP_IDX))
+	    {
+	      as_bad (_("Offset out of 16-bit range: %ld."), val);
+	    }
+
+	  if (move_insn && !(val >= -16 && val <= 15))
+	    {
+	      as_bad (_("Offset out of 5-bit range for movw/movb insn: %ld."),
+		      val);
+	      return -1;
+	    }
+
+	  if (val >= -16 && val <= 15 && !(mode & MC9S12X_OP_D_IDX_2))
+	    {
+	      byte = byte << 6;
+	      byte |= val & 0x1f;
+	      f = frag_more (1);
+	      number_to_chars_bigendian (f, byte, 1);
+	      return 1;
+	    }
+	  else if (val >= -256 && val <= 255 && !(mode & MC9S12X_OP_D_IDX_2))
+	    {
+	      byte = byte << 3;
+	      byte |= 0xe0;
+	      if (val < 0)
+		byte |= 0x1;
+	      f = frag_more (2);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FF, 1);
+	      return 2;
+	    }
+	  else
+	    {
+	      byte = byte << 3;
+	      if (mode & MC9S12X_OP_D_IDX_2)
+		byte |= 0xe3;
+	      else
+		byte |= 0xe2;
+
+	      f = frag_more (3);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FFFF, 2);
+	      return 3;
+	    }
+	}
+      if (mode & MC9S12X_OP_D_IDX_2)
+        {
+          byte = (byte << 3) | 0xe3;
+          f = frag_more (1);
+          number_to_chars_bigendian (f, byte, 1);
+
+          fixup16 (&op->exp, 0, 0);
+        }
+      else if (op->reg1 != REG_PC)
+	{
+          symbolS *sym;
+          offsetT off;
+
+	  f = frag_more (1);
+	  number_to_chars_bigendian (f, byte, 1);
+          sym = op->exp.X_add_symbol;
+          off = op->exp.X_add_number;
+          if (op->exp.X_op != O_symbol)
+            {
+              sym = make_expr_symbol (&op->exp);
+              off = 0;
+            }
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       sym, off, 0, BFD_RELOC_MC9S12X_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_UNDF),
+			sym, off, f);
+	    }
+	}
+      else
+	{
+	  f = frag_more (1);
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       op->exp.X_add_symbol, op->exp.X_add_number, 0, BFD_RELOC_MC9S12X_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_UNDF),
+			op->exp.X_add_symbol,
+			op->exp.X_add_number, f);
+	    }
+	}
+      return 3;
+    }
+
+  if (mode & (MC9S12X_OP_REG | MC9S12X_OP_D_IDX))
+    {
+      if (mode & MC9S12X_OP_D_IDX)
+	{
+	  if (op->reg1 != REG_D)
+	    as_bad (_("Expecting register D for indexed indirect mode."));
+	  if (move_insn)
+	    as_bad (_("Indexed indirect mode is not allowed for movb/movw."));
+
+	  byte = 0xE7;
+	}
+      else
+	{
+	  switch (op->reg1)
+	    {
+	    case REG_A:
+	      byte = 0xE4;
+	      break;
+
+	    case REG_B:
+	      byte = 0xE5;
+	      break;
+
+	    default:
+	      as_bad (_("Invalid accumulator register."));
+
+	    case REG_D:
+	      byte = 0xE6;
+	      break;
+	    }
+	}
+      switch (op->reg2)
+	{
+	case REG_X:
+	  break;
+
+	case REG_Y:
+	  byte |= (1 << 3);
+	  break;
+
+	case REG_SP:
+	  byte |= (2 << 3);
+	  break;
+
+	case REG_PC:
+	  byte |= (3 << 3);
+	  break;
+
+	default:
+	  as_bad (_("Invalid indexed register."));
+	  break;
+	}
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+  as_fatal (_("Addressing mode not implemented yet."));
+  return 0;
+}
+
+/* Assemble the 68HC12 register mode byte.  */
+static int
+build_reg_mode (operand *op, int format)
+{
+  unsigned char byte;
+  char *f;
+
+  if (format & MC9S12X_OP_SEX_MARKER
+      && op->reg1 != REG_A && op->reg1 != REG_B && op->reg1 != REG_CCR)
+    as_bad (_("Invalid source register for this instruction, use 'tfr'."));
+  else if (op->reg1 == REG_NONE || op->reg1 == REG_PC)
+    as_bad (_("Invalid source register."));
+
+  if (format & MC9S12X_OP_SEX_MARKER
+      && op->reg2 != REG_D
+      && op->reg2 != REG_X && op->reg2 != REG_Y && op->reg2 != REG_SP)
+    as_bad (_("Invalid destination register for this instruction, use 'tfr'."));
+  else if (op->reg2 == REG_NONE || op->reg2 == REG_PC)
+    as_bad (_("Invalid destination register."));
+
+  byte = (op->reg1 << 4) | (op->reg2);
+  if (format & MC9S12X_OP_EXG_MARKER)
+    byte |= 0x80;
+
+  f = frag_more (1);
+  number_to_chars_bigendian (f, byte, 1);
+  return 1;
+}
+
+/* build_insn takes a pointer to the opcode entry in the opcode table,
+   the array of operand expressions and builds the corresponding instruction.
+   This operation only deals with non relative jumps insn (need special
+   handling).  */
+static void
+build_insn (struct mc9s12x_opcode *opcode, operand operands[],
+            int nb_operands ATTRIBUTE_UNUSED)
+{
+  int i;
+  char *f;
+  long format;
+  int move_insn = 0;
+  //printf("\n in build_insn %s",opcode->name);
+  /* Put the page code instruction if there is one.  */
+  format = opcode->format;
+
+  if (format & MC9S12X_OP_BRANCH)
+    fix_new (frag_now, frag_now_fix (), 0,
+             &abs_symbol, 0, 1, BFD_RELOC_MC9S12X_RL_JUMP);
+
+  if (format & OP_EXTENDED)
+    {
+      int page_code;
+
+      f = mc9s12x_new_insn (2);
+      if (format & MC9S12X_OP_PAGE2)
+	page_code = MC9S12X_OPCODE_PAGE2;
+      else if (format & MC9S12X_OP_PAGE3)
+	page_code = MC9S12X_OPCODE_PAGE3;
+      else
+	page_code = MC9S12X_OPCODE_PAGE4;
+
+      number_to_chars_bigendian (f, page_code, 1);
+      f++;
+    }
+  else
+    f = mc9s12x_new_insn (1);
+
+  number_to_chars_bigendian (f, opcode->opcode, 1);
+
+  i = 0;
+
+  /* The 68HC12 movb and movw instructions are special.  We have to handle
+     them in a special way.  */
+  if (format & (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2))
+    {
+      move_insn = 1;
+      if (format & MC9S12X_OP_IDX)
+	{
+	  build_indexed_byte (&operands[0], format, 1);
+	  i = 1;
+	  format &= ~MC9S12X_OP_IDX;
+	}
+      if (format & MC9S12X_OP_IDX_P2)
+	{
+	  build_indexed_byte (&operands[1], format, 1);
+	  i = 0;
+	  format &= ~MC9S12X_OP_IDX_P2;
+	}
+    }
+
+  if (format & (MC9S12X_OP_DIRECT | MC9S12X_OP_IMM8))
+    {
+      fixup8 (&operands[i].exp,
+	      format & (MC9S12X_OP_DIRECT | MC9S12X_OP_IMM8 | MC9S12X_OP_TRAP_ID),
+	      operands[i].mode);
+      i++;
+    }
+  else if (IS_CALL_SYMBOL (format) && nb_operands == 1)
+    {
+      format &= ~MC9S12X_OP_PAGE;
+      fixup24 (&operands[i].exp, format & MC9S12X_OP_IND16,
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (MC9S12X_OP_IMM16 | MC9S12X_OP_IND16))
+    {
+      fixup16 (&operands[i].exp,
+               format & (MC9S12X_OP_IMM16 | MC9S12X_OP_IND16 | MC9S12X_OP_PAGE),
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (MC9S12X_OP_IX | MC9S12X_OP_IY))
+    {
+      if ((format & MC9S12X_OP_IX) && (operands[0].reg1 != REG_X))
+	as_bad (_("Invalid indexed register, expecting register X."));
+      if ((format & MC9S12X_OP_IY) && (operands[0].reg1 != REG_Y))
+	as_bad (_("Invalid indexed register, expecting register Y."));
+
+      fixup8 (&operands[0].exp, MC9S12X_OP_IX, operands[0].mode);
+      i = 1;
+    }
+  else if (format &
+	   (MC9S12X_OP_IDX | MC9S12X_OP_IDX_2 | MC9S12X_OP_IDX_1
+            | MC9S12X_OP_D_IDX | MC9S12X_OP_D_IDX_2))
+    {
+      build_indexed_byte (&operands[i], format, move_insn);
+      i++;
+    }
+  else if (format & MC9S12X_OP_REG && current_architecture & cpumc9s12x)
+    {
+      build_reg_mode (&operands[i], format);
+      i++;
+    }
+  if (format & MC9S12X_OP_BITMASK)
+    {
+      fixup8 (&operands[i].exp, MC9S12X_OP_BITMASK, operands[i].mode);
+      i++;
+    }
+  if (format & MC9S12X_OP_JUMP_REL)
+    {
+      fixup8 (&operands[i].exp, MC9S12X_OP_JUMP_REL, operands[i].mode);
+    }
+  else if (format & MC9S12X_OP_IND16_P2)
+    {
+      fixup16 (&operands[1].exp, MC9S12X_OP_IND16, operands[1].mode);
+    }
+  if (format & MC9S12X_OP_PAGE)
+    {
+      fixup8 (&operands[i].exp, MC9S12X_OP_PAGE, operands[i].mode);
+    }
+}
+
+/* Opcode identification and operand analysis.  */
+
+/* find() gets a pointer to an entry in the opcode table.  It must look at all
+   opcodes with the same name and use the operands to choose the correct
+   opcode.  Returns the opcode pointer if there was a match and 0 if none.  */
+static struct mc9s12x_opcode *
+find (struct mc9s12x_opcode_def *opc, operand operands[], int nb_operands)
+{
+  int i, match, pos;
+  struct mc9s12x_opcode *opcode;
+  struct mc9s12x_opcode *op_indirect;
+
+  op_indirect = 0;
+  opcode = opc->opcode;
+
+  /* Now search the opcode table table for one with operands
+     that matches what we've got.  We're only done if the operands matched so
+     far AND there are no more to check.  */
+  for (pos = match = 0; match == 0 && pos < opc->nb_modes; pos++, opcode++)
+    {
+      int poss_indirect = 0;
+      long format = opcode->format;
+      int expect;
+
+      expect = 0;
+      if (opcode->format & MC9S12X_OP_MASK)
+	expect++;
+      if (opcode->format & MC9S12X_OP_BITMASK)
+	expect++;
+      if (opcode->format & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	expect++;
+      if (opcode->format & (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2))
+	expect++;
+      if ((opcode->format & MC9S12X_OP_PAGE)
+          && (!IS_CALL_SYMBOL (opcode->format) || nb_operands == 2))
+        expect++;
+
+      for (i = 0; expect == nb_operands && i < nb_operands; i++)
+	{
+	  int mode = operands[i].mode;
+
+	  if (mode & MC9S12X_OP_IMM16)
+	    {
+	      if (format &
+		  (MC9S12X_OP_IMM8 | MC9S12X_OP_IMM16 | MC9S12X_OP_BITMASK))
+		continue;
+	      break;
+	    }
+	  if (mode == MC9S12X_OP_DIRECT)
+	    {
+	      if (format & MC9S12X_OP_DIRECT)
+		continue;
+
+	      /* If the operand is a page 0 operand, remember a
+	         possible <abs-16> addressing mode.  We mark
+	         this and continue to check other operands.  */
+	      if (format & MC9S12X_OP_IND16
+		  && flag_strict_direct_addressing && op_indirect == 0)
+		{
+		  poss_indirect = 1;
+		  continue;
+		}
+	      break;
+	    }
+	  if (mode & MC9S12X_OP_IND16)
+	    {
+	      if (i == 0 && (format & MC9S12X_OP_IND16) != 0)
+		continue;
+              if (i != 0 && (format & MC9S12X_OP_PAGE) != 0)
+                continue;
+	      if (i != 0 && (format & MC9S12X_OP_IND16_P2) != 0)
+		continue;
+	      if (i == 0 && (format & MC9S12X_OP_BITMASK))
+		break;
+	    }
+	  if (mode & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	    {
+	      if (format & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+		continue;
+	    }
+	  if (mode & MC9S12X_OP_REG)
+	    {
+	      if (i == 0
+		  && (format & MC9S12X_OP_REG)
+		  && (operands[i].reg2 == REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9S12X_OP_REG)
+		  && (format & MC9S12X_OP_REG_2)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9S12X_OP_IDX)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9S12X_OP_IDX)
+		  && (format & (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2)))
+		continue;
+	      if (i == 1
+		  && (format & MC9S12X_OP_IDX_P2))
+		continue;
+	      break;
+	    }
+	  if (mode & MC9S12X_OP_IDX)
+	    {
+	      if (format & MC9S12X_OP_IX && operands[i].reg1 == REG_X)
+		continue;
+	      if (format & MC9S12X_OP_IY && operands[i].reg1 == REG_Y)
+		continue;
+	      if (i == 0
+		  && format & (MC9S12X_OP_IDX | MC9S12X_OP_IDX_1 | MC9S12X_OP_IDX_2)
+		  && (operands[i].reg1 == REG_X
+		      || operands[i].reg1 == REG_Y
+		      || operands[i].reg1 == REG_SP
+		      || operands[i].reg1 == REG_PC))
+		continue;
+	      if (i == 1 && format & MC9S12X_OP_IDX_P2)
+		continue;
+	    }
+          if (mode & format & (MC9S12X_OP_D_IDX | MC9S12X_OP_D_IDX_2))
+            {
+              if (i == 0)
+                continue;
+            }
+	  if (mode & MC9S12X_AUTO_INC_DEC)
+	    {
+	      if (i == 0
+		  && format & (MC9S12X_OP_IDX | MC9S12X_OP_IDX_1 |
+			       MC9S12X_OP_IDX_2))
+		continue;
+	      if (i == 1 && format & MC9S12X_OP_IDX_P2)
+		continue;
+	    }
+	  break;
+	}
+      match = i == nb_operands;
+
+      /* Operands are ok but an operand uses page 0 addressing mode
+         while the insn supports abs-16 mode.  Keep a reference to this
+         insns in case there is no insn supporting page 0 addressing.  */
+      if (match && poss_indirect)
+	{
+	  op_indirect = opcode;
+	  match = 0;
+	}
+      if (match)
+	break;
+    }
+
+  /* Page 0 addressing is used but not supported by any insn.
+     If absolute addresses are supported, we use that insn.  */
+  if (match == 0 && op_indirect)
+    {
+      opcode = op_indirect;
+      match = 1;
+    }
+
+  if (!match)
+    {
+      return (0);
+    }
+
+  return opcode;
+}
+
+/* Find the real opcode and its associated operands.  We use a progressive
+   approach here.  On entry, 'opc' points to the first opcode in the
+   table that matches the opcode name in the source line.  We try to
+   isolate an operand, find a possible match in the opcode table.
+   We isolate another operand if no match were found.  The table 'operands'
+   is filled while operands are recognized.
+
+   Returns the opcode pointer that matches the opcode name in the
+   source line and the associated operands.  */
+static struct mc9s12x_opcode *
+find_opcode (struct mc9s12x_opcode_def *opc, operand operands[],
+             int *nb_operands)
+{
+  struct mc9s12x_opcode *opcode;
+  int i;
+
+  if (opc->max_operands == 0)
+    {
+      *nb_operands = 0;
+      return opc->opcode;
+    }
+
+  for (i = 0; i < opc->max_operands;)
+    {
+      int result;
+
+      result = get_operand (&operands[i], i, opc->format);
+   //   printf("\n result of get_operands is %d",result);
+      if (result <= 0)
+	return 0;
+
+      /* Special case where the bitmask of the bclr/brclr
+         instructions is not introduced by #.
+         Example: bclr 3,x $80.  */
+      if (i == 1 && (opc->format & MC9S12X_OP_BITMASK)
+	  && (operands[i].mode & MC9S12X_OP_IND16))
+	{
+	  operands[i].mode = MC9S12X_OP_IMM16;
+	}
+
+      i += result;
+      *nb_operands = i;
+      if (i >= opc->min_operands)
+	{
+	  opcode = find (opc, operands, i);
+
+          /* Another special case for 'call foo,page' instructions.
+             Since we support 'call foo' and 'call foo,page' we must look
+             if the optional page specification is present otherwise we will
+             assemble immediately and treat the page spec as garbage.  */
+          if (opcode && !(opcode->format & MC9S12X_OP_PAGE))
+             return opcode;
+
+	  if (opcode && *input_line_pointer != ',')
+	    return opcode;
+	}
+
+      if (*input_line_pointer == ',')
+	input_line_pointer++;
+    }
+
+  return 0;
+}
+
+#define MC9S12X_XBCC_MARKER (MC9S12X_OP_TBCC_MARKER \
+                           | MC9S12X_OP_DBCC_MARKER \
+                           | MC9S12X_OP_IBCC_MARKER)
+
+/* Gas line assembler entry point.  */
+
+/* This is the main entry point for the machine-dependent assembler.  str
+   points to a machine-dependent instruction.  This function is supposed to
+   emit the frags/bytes it assembles to.  */
+void
+md_assemble (char *str)
+{
+
+  struct mc9s12x_opcode_def *opc;
+  struct mc9s12x_opcode *opcode;
+
+  unsigned char *op_start, *op_end;
+  char *save;
+  char name[20];
+  int nlen = 0;
+  operand operands[MC9S12X_MAX_OPERANDS];
+  int nb_operands = 0;
+  int branch_optimize = 0;
+  int alias_id = -1;
+
+  /* Drop leading whitespace.  */
+  while (*str == ' ')
+    str++;
+
+  /* Find the opcode end and get the opcode in 'name'.  The opcode is forced
+     lower case (the opcode table only has lower case op-codes).  */
+  for (op_start = op_end = (unsigned char *) str;
+       *op_end && nlen < 20 && !is_end_of_line[*op_end] && *op_end != ' ';
+       op_end++)
+    {
+      name[nlen] = TOLOWER (op_start[nlen]);
+      nlen++;
+    }
+  name[nlen] = 0;
+
+  if (nlen == 0)
+    {
+      as_bad (_("No instruction or missing opcode."));
+      return;
+    }
+
+  /* Find the opcode definition given its name.  */
+  opc = (struct mc9s12x_opcode_def *) hash_find (mc9s12x_hash, name);
+
+  /* If it's not recognized, look for 'jbsr' and 'jbxx'.  These are
+     pseudo insns for relative branch.  For these branches, we always
+     optimize them (turned into absolute branches) even if --short-branches
+     is given.  */
+  if (opc == NULL && name[0] == 'j' && name[1] == 'b')
+    {
+      opc = (struct mc9s12x_opcode_def *) hash_find (mc9s12x_hash, &name[1]);
+      if (opc
+	  && (!(opc->format & MC9S12X_OP_JUMP_REL)
+	      || (opc->format & MC9S12X_OP_BITMASK)))
+	opc = 0;
+      if (opc)
+	branch_optimize = 1;
+    }
+
+ // printf("\n found %s", opc->opcode->name);
+
+  /* The following test should probably be removed.  This is not conform
+     to Motorola assembler specs.  */
+  if (opc == NULL && flag_mri)
+    {
+      if (*op_end == ' ' || *op_end == '\t')
+	{
+	  while (*op_end == ' ' || *op_end == '\t')
+	    op_end++;
+
+	  if (nlen < 19
+	      && (*op_end &&
+		  (is_end_of_line[op_end[1]]
+		   || op_end[1] == ' ' || op_end[1] == '\t'
+		   || !ISALNUM (op_end[1])))
+	      && (*op_end == 'a' || *op_end == 'b'
+		  || *op_end == 'A' || *op_end == 'B'
+		  || *op_end == 'd' || *op_end == 'D'
+		  || *op_end == 'x' || *op_end == 'X'
+		  || *op_end == 'y' || *op_end == 'Y'))
+	    {
+	      name[nlen++] = TOLOWER (*op_end++);
+	      name[nlen] = 0;
+	      opc = (struct mc9s12x_opcode_def *) hash_find (mc9s12x_hash,
+							     name);
+	    }
+	}
+    }
+
+  /* Identify a possible instruction alias.  There are some on the
+     68HC12 to emulate a few 68HC11 instructions.  */
+  /* TODO make sure this always reads true */
+  if (opc == NULL && (current_architecture & cpumc9s12x))
+    {
+      int i;
+
+      for (i = 0; i < mc9s12x_num_alias; i++)
+	if (strcmp (mc9s12x_alias[i].name, name) == 0)
+	  {
+	    alias_id = i;
+	    break;
+	  }
+    }
+  if (opc == NULL && alias_id < 0)
+    {
+      as_bad (_("Opcode `%s' is not recognized."), name);
+      return;
+    }
+  save = input_line_pointer;
+  input_line_pointer = (char *) op_end;
+
+  if (opc)
+    {
+      opc->used++;
+      opcode = find_opcode (opc, operands, &nb_operands);
+    }
+  else
+    opcode = 0;
+
+  if ((opcode || alias_id >= 0) && !flag_mri)
+    {
+      char *p = input_line_pointer;
+
+      while (*p == ' ' || *p == '\t' || *p == '\n' || *p == '\r')
+	p++;
+
+      if (*p != '\n' && *p)
+	as_bad (_("Garbage at end of instruction: `%s'."), p);
+    }
+
+  input_line_pointer = save;
+
+  if (alias_id >= 0)
+    {
+      char *f = mc9s12x_new_insn (mc9s12x_alias[alias_id].size);
+
+      number_to_chars_bigendian (f, mc9s12x_alias[alias_id].code1, 1);
+      if (mc9s12x_alias[alias_id].size > 1)
+	number_to_chars_bigendian (f + 1, mc9s12x_alias[alias_id].code2, 1);
+
+      return;
+    }
+
+  /* Opcode is known but does not have valid operands.  Print out the
+     syntax for this opcode.  */
+  if (opcode == 0)
+    {
+      if (flag_print_insn_syntax)
+	print_insn_format (name);
+
+      as_bad (_("Invalid operand for `%s'"), name);
+      return;
+    }
+
+  /* Treat dbeq/ibeq/tbeq instructions in a special way.  The branch is
+     relative and must be in the range -256..255 (9-bits).  */
+  if ((opcode->format & MC9S12X_XBCC_MARKER)
+      && (opcode->format & MC9S12X_OP_JUMP_REL))
+    build_dbranch_insn (opcode, operands, nb_operands, branch_optimize);
+
+  /* Relative jumps instructions are taken care of separately.  We have to make
+     sure that the relative branch is within the range -128..127.  If it's out
+     of range, the instructions are changed into absolute instructions.
+     This is not supported for the brset and brclr instructions.  */
+  else if ((opcode->format & (MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	   && !(opcode->format & MC9S12X_OP_BITMASK))
+    build_jump_insn (opcode, operands, nb_operands, branch_optimize);
+  else
+    build_insn (opcode, operands, nb_operands);
+}
+
+
+/* Pseudo op to control the ELF flags.  */
+static void
+s_mc9s12x_mode (int x ATTRIBUTE_UNUSED)
+{
+  char *name = input_line_pointer, ch;
+
+  while (!is_end_of_line[(unsigned char) *input_line_pointer])
+    input_line_pointer++;
+  ch = *input_line_pointer;
+  *input_line_pointer = '\0';
+
+  if (strcmp (name, "mshort") == 0)
+    {
+      elf_flags &= ~E_MC9S12X_I32;
+    }
+  else if (strcmp (name, "mlong") == 0)
+    {
+      elf_flags |= E_MC9S12X_I32;
+    }
+  else if (strcmp (name, "mshort-double") == 0)
+    {
+      elf_flags &= ~E_MC9S12X_F64;
+    }
+  else if (strcmp (name, "mlong-double") == 0)
+    {
+      elf_flags |= E_MC9S12X_F64;
+    }
+  else
+    {
+      as_warn (_("Invalid mode: %s\n"), name);
+    }
+  *input_line_pointer = ch;
+  demand_empty_rest_of_line ();
+}
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void
+s_mc9s12x_mark_symbol (int mark)
+{
+  char *name;
+  int c;
+  symbolS *symbolP;
+  asymbol *bfdsym;
+  elf_symbol_type *elfsym;
+
+  do
+    {
+      name = input_line_pointer;
+      c = get_symbol_end ();
+      symbolP = symbol_find_or_make (name);
+      *input_line_pointer = c;
+
+      SKIP_WHITESPACE ();
+
+      bfdsym = symbol_get_bfdsym (symbolP);
+      elfsym = elf_symbol_from (bfd_asymbol_bfd (bfdsym), bfdsym);
+
+      gas_assert (elfsym);
+
+      /* Mark the symbol far (using rtc for function return).  */
+      elfsym->internal_elf_sym.st_other |= mark;
+
+      if (c == ',')
+	{
+	  input_line_pointer ++;
+
+	  SKIP_WHITESPACE ();
+
+	  if (*input_line_pointer == '\n')
+	    c = '\n';
+	}
+    }
+  while (c == ',');
+
+  demand_empty_rest_of_line ();
+}
+
+static void
+s_mc9s12x_relax (int ignore ATTRIBUTE_UNUSED)
+{
+  expressionS ex;
+
+  expression (&ex);
+
+  if (ex.X_op != O_symbol || ex.X_add_number != 0)
+    {
+      as_bad (_("bad .relax format"));
+      ignore_rest_of_line ();
+      return;
+    }
+
+  fix_new_exp (frag_now, frag_now_fix (), 0, &ex, 1,
+               BFD_RELOC_MC9S12X_RL_GROUP);
+
+  demand_empty_rest_of_line ();
+}
+
+
+/* Relocation, relaxation and frag conversions.  */
+
+/* PC-relative offsets are relative to the start of the
+   next instruction.  That is, the address of the offset, plus its
+   size, since the offset is always the last part of the insn.  */
+long
+md_pcrel_from (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_MC9S12X_RL_JUMP)
+    return 0;
+
+  return fixP->fx_size + fixP->fx_where + fixP->fx_frag->fr_address;
+}
+
+/* If while processing a fixup, a reloc really needs to be created
+   then it is done here.  */
+arelent *
+tc_gen_reloc (asection *section ATTRIBUTE_UNUSED, fixS *fixp)
+{
+  arelent *reloc;
+
+  reloc = (arelent *) xmalloc (sizeof (arelent));
+  reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
+  *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);
+  reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
+  if (fixp->fx_r_type == 0)
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, BFD_RELOC_16);
+  else
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);
+  if (reloc->howto == (reloc_howto_type *) NULL)
+    {
+      as_bad_where (fixp->fx_file, fixp->fx_line,
+		    _("Relocation %d is not supported by object file format."),
+		    (int) fixp->fx_r_type);
+      return NULL;
+    }
+
+  /* Since we use Rel instead of Rela, encode the vtable entry to be
+     used in the relocation's section offset.  */
+  if (fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+    reloc->address = fixp->fx_offset;
+
+  reloc->addend = 0;
+ // printf("\n about to return relocation-%d name-%s",(int) reloc, reloc->howto->name);
+  return reloc;
+}
+
+/* We need a port-specific relaxation function to cope with sym2 - sym1
+   relative expressions with both symbols in the same segment (but not
+   necessarily in the same frag as this insn), for example:
+     ldab sym2-(sym1-2),pc
+    sym1:
+   The offset can be 5, 9 or 16 bits long.  */
+
+long
+mc9s12x_relax_frag (segT seg ATTRIBUTE_UNUSED, fragS *fragP,
+                    long stretch ATTRIBUTE_UNUSED)
+{
+  long growth;
+  offsetT aim = 0;
+  symbolS *symbolP;
+  const relax_typeS *this_type;
+  const relax_typeS *start_type;
+  relax_substateT next_state;
+  relax_substateT this_state;
+  const relax_typeS *table = TC_GENERIC_RELAX_TABLE;
+
+  /* We only have to cope with frags as prepared by
+     md_estimate_size_before_relax.  The STATE_BITS16 case may geet here
+     because of the different reasons that it's not relaxable.  */
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      /* When we get to this state, the frag won't grow any more.  */
+      return 0;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      if (fragP->fr_symbol == NULL
+	  || S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	as_fatal (_("internal inconsistency problem in %s: fr_symbol %lx"),
+		  __FUNCTION__, (long) fragP->fr_symbol);
+      symbolP = fragP->fr_symbol;
+      if (symbol_resolved_p (symbolP))
+	as_fatal (_("internal inconsistency problem in %s: resolved symbol"),
+		  __FUNCTION__);
+      aim = S_GET_VALUE (symbolP);
+      break;
+
+    default:
+      as_fatal (_("internal inconsistency problem in %s: fr_subtype %d"),
+		  __FUNCTION__, fragP->fr_subtype);
+    }
+
+  /* The rest is stolen from relax_frag.  There's no obvious way to
+     share the code, but fortunately no requirement to keep in sync as
+     long as fragP->fr_symbol does not have its segment changed.  */
+
+  this_state = fragP->fr_subtype;
+  start_type = this_type = table + this_state;
+
+  if (aim < 0)
+    {
+      /* Look backwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim >= this_type->rlx_backward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+  else
+    {
+      /* Look forwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim <= this_type->rlx_forward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+
+  growth = this_type->rlx_length - start_type->rlx_length;
+  if (growth != 0)
+    fragP->fr_subtype = this_state;
+  return growth;
+}
+
+void
+md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, asection *sec ATTRIBUTE_UNUSED,
+                 fragS *fragP)
+{
+	//printf("\n in md_convert_frag");
+  fixS *fixp;
+  long value;
+  long disp;
+  char *buffer_address = fragP->fr_literal;
+
+  /* Address in object code of the displacement.  */
+  register int object_address = fragP->fr_fix + fragP->fr_address;
+
+  buffer_address += fragP->fr_fix;
+
+  /* The displacement of the address, from current location.  */
+  value = S_GET_VALUE (fragP->fr_symbol);
+  disp = (value + fragP->fr_offset) - object_address;
+
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD):
+      /* This relax is only for bsr and bra.  */
+      gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR)
+	      || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BRA)
+	      || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR2));
+
+      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+      fix_new (fragP, fragP->fr_fix - 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_BYTE):
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 1;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = MC9S12X_JMP;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD):
+      /* Translate branch into a long branch.  */
+      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+      fragP->fr_opcode[0] = MC9S12X_OPCODE_PAGE2;
+
+      fixp = fix_new (fragP, fragP->fr_fix, 2,
+		      fragP->fr_symbol, fragP->fr_offset, 1,
+		      BFD_RELOC_16_PCREL);
+      fixp->fx_pcrel_adjust = 2;
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+      fragP->fr_opcode[0] = fragP->fr_opcode[0] << 6;
+      fragP->fr_opcode[0] |= value & 0x1f;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+      /* For a PC-relative offset, use the displacement with a -1 correction
+         to take into account the additional byte of the insn.  */
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp - 1;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xE0;
+      fragP->fr_opcode[0] |= (value >> 8) & 1;
+      fragP->fr_opcode[1] = value;
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xe2;
+      if ((fragP->fr_opcode[0] & 0x0ff) == 0x0fa
+          && fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	{
+	  fixp = fix_new (fragP, fragP->fr_fix, 2,
+			  fragP->fr_symbol, fragP->fr_offset,
+			  1, BFD_RELOC_16_PCREL);
+	}
+      else
+	{
+	  fix_new (fragP, fragP->fr_fix, 2,
+		   fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+	}
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE):
+      if (disp < 0)
+	fragP->fr_opcode[0] |= 0x10;
+
+      fragP->fr_opcode[1] = disp & 0x0FF;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 0x20;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = MC9S12X_JMP2;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    default:
+      break;
+    }
+}
+
+/* On an ELF system, we can't relax a weak symbol.  The weak symbol
+   can be overridden at final link time by a non weak symbol.  We can
+   relax externally visible symbol because there is no shared library
+   and such symbol can't be overridden (unless they are weak).  */
+static int
+relaxable_symbol (symbolS *symbol)
+{
+  return ! S_IS_WEAK (symbol);
+}
+
+/* Force truly undefined symbols to their maximum size, and generally set up
+   the frag list to be relaxed.  */
+int
+md_estimate_size_before_relax (fragS *fragP, asection *segment)
+{
+  if (RELAX_LENGTH (fragP->fr_subtype) == STATE_UNDF)
+    {
+      if (S_GET_SEGMENT (fragP->fr_symbol) != segment
+	  || !relaxable_symbol (fragP->fr_symbol)
+          || (segment != absolute_section
+              && RELAX_STATE (fragP->fr_subtype) == STATE_INDEXED_OFFSET))
+	{
+	  /* Non-relaxable cases.  */
+	  int old_fr_fix;
+	  char *buffer_address;
+
+	  old_fr_fix = fragP->fr_fix;
+	  buffer_address = fragP->fr_fix + fragP->fr_literal;
+
+	  switch (RELAX_STATE (fragP->fr_subtype))
+	    {
+	    case STATE_PC_RELATIVE:
+
+	      /* This relax is only for bsr and bra.  */
+	      gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR)
+		      || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BRA)
+		      || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR2));
+
+	      if (flag_fixed_branches)
+		as_bad_where (fragP->fr_file, fragP->fr_line,
+			      _("bra or bsr with undefined symbol."));
+
+	      /* The symbol is undefined or in a separate section.
+		 Turn bra into a jmp and bsr into a jsr.  The insn
+		 becomes 3 bytes long (instead of 2).  A fixup is
+		 necessary for the unresolved symbol address.  */
+	      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+	      fix_new (fragP, fragP->fr_fix - 1, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix++;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH:
+	      gas_assert (current_architecture & cpumc9s12x);
+
+	      fragP->fr_opcode[0] ^= 1;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = MC9S12X_JMP;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_INDEXED_OFFSET:
+	      gas_assert (current_architecture & cpumc9s12x);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   /* Switch the indexed operation to 16-bit mode.  */
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                            fragP->fr_offset, 0, BFD_RELOC_16);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_INDEXED_PCREL:
+	      gas_assert (current_architecture & cpumc9s12x);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   fixS* fixp;
+
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fixp = fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                                   fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_XBCC_BRANCH:
+	      gas_assert (current_architecture & cpumc9s12x);
+
+	      fragP->fr_opcode[0] ^= 0x20;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = MC9S12X_JMP2;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH_6812:
+	      gas_assert (current_architecture & cpumc9s12x);
+
+	      /* Translate into a lbcc branch.  */
+	      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+	      fragP->fr_opcode[0] = MC9S12X_OPCODE_PAGE2;
+
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                       fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    default:
+	      as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+	    }
+	  frag_wane (fragP);
+
+	  /* Return the growth in the fixed part of the frag.  */
+	  return fragP->fr_fix - old_fr_fix;
+	}
+
+      /* Relaxable cases.  */
+      switch (RELAX_STATE (fragP->fr_subtype))
+	{
+	case STATE_PC_RELATIVE:
+	  /* This relax is only for bsr and bra.  */
+	  gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR)
+		  || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BRA)
+		  || IS_OPCODE (fragP->fr_opcode[0], MC9S12X_BSR2));
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH:
+	  gas_assert (current_architecture & cpumc9s12x);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH,
+					    STATE_BYTE);
+	  break;
+
+	case STATE_INDEXED_OFFSET:
+	  gas_assert (current_architecture & cpumc9s12x);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_INDEXED_PCREL:
+	  gas_assert (current_architecture & cpumc9s12x);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_XBCC_BRANCH:
+	  gas_assert (current_architecture & cpumc9s12x);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH_6812:
+	  gas_assert (current_architecture & cpumc9s12x);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812,
+					    STATE_BYTE);
+	  break;
+	}
+    }
+
+  if (fragP->fr_subtype >= sizeof (md_relax_table) / sizeof (md_relax_table[0]))
+    as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+
+  /* Return the size of the variable part of the frag.  */
+  return md_relax_table[fragP->fr_subtype].rlx_length;
+}
+
+/* See whether we need to force a relocation into the output file.  */
+int
+tc_mc9s12x_force_relocation (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_MC9S12X_RL_GROUP)
+    return 1;
+
+  return generic_force_reloc (fixP);
+}
+
+/* Here we decide which fixups can be adjusted to make them relative
+   to the beginning of the section instead of the symbol.  Basically
+   we need to make sure that the linker relaxation is done
+   correctly, so in some cases we force the original symbol to be
+   used.  */
+int
+tc_mc9s12x_fix_adjustable (fixS *fixP)
+{
+  switch (fixP->fx_r_type)
+    {
+      /* For the linker relaxation to work correctly, these relocs
+         need to be on the symbol itself.  */
+    case BFD_RELOC_16:
+    case BFD_RELOC_MC9S12X_RL_JUMP:
+    case BFD_RELOC_MC9S12X_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+    case BFD_RELOC_32:
+
+      /* The memory bank addressing translation also needs the original
+         symbol.  */
+    case BFD_RELOC_MC9S12X_LO16:
+    case BFD_RELOC_MC9S12X_PAGE:
+    case BFD_RELOC_MC9S12X_24:
+      return 0;
+
+    default:
+      return 1;
+    }
+}
+
+void
+md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
+{
+  char *where;
+  long value = * valP;
+  int op_type;
+
+  if (fixP->fx_addsy == (symbolS *) NULL)
+    fixP->fx_done = 1;
+
+  /* We don't actually support subtracting a symbol.  */
+  if (fixP->fx_subsy != (symbolS *) NULL)
+    as_bad_where (fixP->fx_file, fixP->fx_line, _("Expression too complex."));
+
+  op_type = fixP->fx_r_type;
+
+  /* Patch the instruction with the resolved operand.  Elf relocation
+     info will also be generated to take care of linker/loader fixups.
+     The 68HC11 addresses only 64Kb, we are only concerned by 8 and 16-bit
+     relocs.  BFD_RELOC_8 is basically used for .page0 access (the linker
+     will warn for overflows).  BFD_RELOC_8_PCREL should not be generated
+     because it's either resolved or turned out into non-relative insns (see
+     relax table, bcc, bra, bsr transformations)
+
+     The BFD_RELOC_32 is necessary for the support of --gstabs.  */
+  where = fixP->fx_frag->fr_literal + fixP->fx_where;
+
+  switch (fixP->fx_r_type)
+    {
+    case BFD_RELOC_32:
+      bfd_putb32 ((bfd_vma) value, (unsigned char *) where);
+      break;
+
+    case BFD_RELOC_24:
+    case BFD_RELOC_MC9S12X_24:
+      bfd_putb16 ((bfd_vma) (value & 0x0ffff), (unsigned char *) where);
+      ((bfd_byte*) where)[2] = ((value >> 16) & 0x0ff);
+      break;
+
+    case BFD_RELOC_16:
+    case BFD_RELOC_16_PCREL:
+    case BFD_RELOC_MC9S12X_LO16:
+      bfd_putb16 ((bfd_vma) value, (unsigned char *) where);
+      if (value < -65537 || value > 65535)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value out of 16-bit range."));
+      break;
+
+    case BFD_RELOC_MC9S12X_HI8:
+      value = value >> 8;
+      /* Fall through.  */
+
+    case BFD_RELOC_MC9S12X_LO8:
+    case BFD_RELOC_8:
+    case BFD_RELOC_MC9S12X_PAGE:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+      break;
+
+    case BFD_RELOC_8_PCREL:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+
+      if (value < -128 || value > 127)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value %ld too large for 8-bit PC-relative branch."),
+		      value);
+      break;
+
+    case BFD_RELOC_MC9S12X_3B:
+      if (value <= 0 || value > 8)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Auto increment/decrement offset '%ld' is out of range."),
+		      value);
+      if (where[0] & 0x8)
+	value = 8 - value;
+      else
+	value--;
+
+      where[0] = where[0] | (value & 0x07);
+      break;
+
+    case BFD_RELOC_MC9S12X_5B:
+      if (value < -16 || value > 15)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Offset out of 5-bit range for movw/movb insn: %ld"),
+		      value);
+      if (value >= 0)
+	where[0] |= value;
+      else 
+	where[0] |= (0x10 | (16 + value));
+      break;
+
+    case BFD_RELOC_MC9S12X_RL_JUMP:
+    case BFD_RELOC_MC9S12X_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+      fixP->fx_done = 0;
+      return;
+
+    default:
+      as_fatal (_("Line %d: unknown relocation type: 0x%x."),
+		fixP->fx_line, fixP->fx_r_type);
+    }
+}
+
+/* Set the ELF specific flags.  */
+void
+mc9s12x_elf_final_processing (void)
+{
+	/* TODO make this always true */
+  if (current_architecture & cpumc9s12x)
+    elf_flags |= EF_MC9S12X_MACH;
+  elf_elfheader (stdoutput)->e_flags &= ~EF_MC9S12X_ABI;
+  elf_elfheader (stdoutput)->e_flags |= elf_flags;
+}
diff -rupN binutils-2.20/gas/config/tc-mc9s12x.h binutils-2.20-sean/gas/config/tc-mc9s12x.h
--- binutils-2.20/gas/config/tc-mc9s12x.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9s12x.h	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,109 @@
+/* tc-mc9s12x.h -- Header file for tc-mc9s12x.c.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2007
+   Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#define TC_MC9S12X
+//#define TC_M68HC12
+
+struct fix;
+
+/* Define TC_M68K so that we can use the MRI mode.  */
+#define TC_M68K
+
+#define TARGET_BYTES_BIG_ENDIAN 1
+
+/* Motorola assembler specs does not require '.' before pseudo-ops.  */
+#define NO_PSEUDO_DOT 1
+
+/* The target BFD architecture.  */
+#define TARGET_ARCH (mc9s12x_arch ())
+extern enum bfd_architecture mc9s12x_arch (void);
+
+#define TARGET_MACH (mc9s12x_mach ())
+extern int mc9s12x_mach (void);
+
+#define TARGET_FORMAT (mc9s12x_arch_format ())
+extern const char *mc9s12x_arch_format (void);
+
+#define LISTING_WORD_SIZE 1	/* A word is 1 bytes */
+#define LISTING_LHS_WIDTH 4	/* One word on the first line */
+#define LISTING_LHS_WIDTH_SECOND 4	/* One word on the second line */
+#define LISTING_LHS_CONT_LINES 4	/* And 4 lines max */
+#define LISTING_HEADER mc9s12x_listing_header ()
+extern const char *mc9s12x_listing_header (void);
+
+/* Permit temporary numeric labels.  */
+#define LOCAL_LABELS_FB 1
+
+#define tc_init_after_args mc9s12x_init_after_args
+extern void mc9s12x_init_after_args (void);
+
+#define md_parse_long_option mc9s12x_parse_long_option
+extern int mc9s12x_parse_long_option (char *);
+
+#define DWARF2_LINE_MIN_INSN_LENGTH 1
+
+/* Use 32-bit address to represent a symbol address so that we can
+   represent them with their page number.  */
+#define DWARF2_ADDR_SIZE(bfd) 4
+
+/* We don't need to handle .word strangely.  */
+#define WORKING_DOT_WORD
+
+#define md_number_to_chars           number_to_chars_bigendian
+
+/* Relax table to translate short relative branches (-128..127) into
+   absolute branches.  */
+#define TC_GENERIC_RELAX_TABLE md_relax_table
+extern struct relax_type md_relax_table[];
+
+/* GAS only handles relaxations for pc-relative data targeting addresses
+   in the same segment, so we have to handle the rest on our own.  */
+#define md_relax_frag(SEG, FRAGP, STRETCH)		\
+ ((FRAGP)->fr_symbol != NULL				\
+  && S_GET_SEGMENT ((FRAGP)->fr_symbol) == (SEG)	\
+  ? relax_frag (SEG, FRAGP, STRETCH)			\
+  : mc9s12x_relax_frag (SEG, FRAGP, STRETCH))
+extern long mc9s12x_relax_frag (segT, fragS*, long);
+
+#define TC_HANDLES_FX_DONE
+
+#define DIFF_EXPR_OK		/* .-foo gets turned into PC relative relocs */
+
+/* Values passed to md_apply_fix don't include the symbol value.  */
+#define MD_APPLY_SYM_VALUE(FIX) 0
+
+/* No shared lib support, so we don't need to ensure externally
+   visible symbols can be overridden.  */
+#define EXTERN_FORCE_RELOC 0
+
+#define TC_FORCE_RELOCATION(fix) tc_mc9s12x_force_relocation (fix)
+extern int tc_mc9s12x_force_relocation (struct fix *);
+
+#define tc_fix_adjustable(X) tc_mc9s12x_fix_adjustable(X)
+extern int tc_mc9s12x_fix_adjustable (struct fix *);
+
+#define md_operand(x)
+
+#define elf_tc_final_processing	mc9s12x_elf_final_processing
+extern void mc9s12x_elf_final_processing (void);
+
+#define tc_print_statistics(FILE) mc9s12x_print_statistics (FILE)
+extern void mc9s12x_print_statistics (FILE *);
diff -rupN binutils-2.20/gas/config/tc-mc9xgate.c binutils-2.20-sean/gas/config/tc-mc9xgate.c
--- binutils-2.20/gas/config/tc-mc9xgate.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9xgate.c	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,1913 @@
+/* tc-avr.c -- Assembler code for the Freescale XGATE
+
+ Copyright 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010
+ Free Software Foundation, Inc.
+ Contributed by Sean Keys <info@powerefi.com>
+
+ This file is part of GAS, the GNU Assembler.
+
+ GAS is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 3, or (at your option)
+ any later version.
+
+ GAS is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+
+ You should have received a copy of the GNU General Public License
+ along with GAS; see the file COPYING.  If not, write to
+ the Free Software Foundation, 51 Franklin Street - Fifth Floor,
+ Boston, MA 02110-1301, USA.
+
+ Relocation 14 is not supported by object file format
+ bfd_install_relocation
+ R_MC9XGATE_32
+ about to return relocation
+ about to compare
+ elf_set_mach_from_flag
+ architecture of input file
+ failed to merge target specific data
+ Can't disassemble for architecture
+ printf
+
+ */
+
+#include "as.h"
+#include "safe-ctype.h"
+#include "subsegs.h"
+#include "opcode/mc9xgate.h"
+#include "dwarf2dbg.h"
+#include "elf/mc9xgate.h"
+#include "stdio.h" /* TODO only here for testing */
+
+const char comment_chars[] = ";!";
+const char line_comment_chars[] = "#*";
+const char line_separator_chars[] = "";
+
+const char EXP_CHARS[] = "eE";
+const char FLT_CHARS[] = "dD";
+
+#define SIXTEENTH_BIT	0x8000
+#define N_BITS_IN_WORD	16	/* number of bits in a word */
+
+#define STATE_CONDITIONAL_BRANCH	(1)
+#define STATE_PC_RELATIVE		(2)
+#define STATE_INDEXED_OFFSET            (3)
+#define STATE_INDEXED_PCREL             (4)
+#define STATE_XBCC_BRANCH               (5)
+#define STATE_CONDITIONAL_BRANCH_6812	(6)
+
+#define STATE_BYTE			(0)
+#define STATE_BITS5                     (0)
+#define STATE_WORD			(1)
+#define STATE_BITS9                     (1)
+#define STATE_LONG			(2)
+#define STATE_BITS16                    (2)
+#define STATE_UNDF			(3)	/* Symbol undefined in pass1 */
+
+#define REGISTER_P(ptr)		(ptr == 'r')
+
+#define INCREMENT			01
+#define DECREMENT			02
+
+#define MAXREGISTER			07
+#define MINREGISTER			00
+#define NINE_BITS			511
+#define TEN_BITS			1023
+
+//struct mc9xgate_parsed_op{
+//	unsigned short bin_operand_mask;
+//	unsigned int  shorthand_format; /* prime values used as flags */
+//	char	num_modes;
+//};
+// bfd_reloc_code_real_type
+/* This macro has no side-effects.  */
+#define ENCODE_RELAX(what,length) (((what) << 2) + (length))
+#define RELAX_STATE(s) ((s) >> 2)
+#define RELAX_LENGTH(s) ((s) & 3)
+
+#define IS_OPCODE(C1,C2)        (((C1) & 0x0FF) == ((C2) & 0x0FF))
+
+struct mc9xgate_opcode_handle
+{
+  unsigned char number_of_modes;
+  char *name;
+  struct mc9xgate_opcode *opc0;
+  struct mc9xgate_opcode *opc1;
+  struct mc9xgate_opcode *opc2;
+  struct mc9xgate_opcode *opc3;
+  struct mc9xgate_opcode *opc4;
+};
+
+struct macroOperands
+{
+  char *oper1;
+  char *oper2;
+  char *oper3;
+};
+
+/*  LOCAL FUNCTIONS */
+static void
+s_mc9xgate_mode(int); /* Pseudo op to control the ELF flags.  */
+static inline char *
+skip_whitespace(char *);
+static void
+get_default_target(void); /* Pseudo op to indicate a relax group.  */
+static void
+s_mc9xgate_relax(int);
+static void
+s_mc9xgate_mode(int);
+static void
+s_mc9xgate_mark_symbol(int);/* Pseudo op to control the ELF flags.  */
+static char*
+extract_word(char *, char *, int);
+static char *
+mc9xgate_new_instruction(int size); /* number of bytes */
+unsigned short
+mc9xgate_apply_operand(unsigned short new_mask,
+    unsigned short *oper_bits_availiable, unsigned short mask,
+    unsigned char n_bits);
+static unsigned int
+mc9xgate_operands(struct mc9xgate_opcode *opcode, char **line);
+static unsigned int
+mc9xgate_operand(struct mc9xgate_opcode *opcode, int *bit_width, int where,
+    char **op_con, char **line);
+static struct mc9xgate_opcode*
+mc9xgate_find_match(struct mc9xgate_opcode_handle *opcode_handle,
+    unsigned char numberOfModes, unsigned int sh_format);
+
+void
+mc9xgate_get_macro_masks(unsigned int *operMask0, unsigned int *operMask1,
+    char *string);
+
+static char *
+mc9xgate_parse_exp(char *s, expressionS *op);
+
+unsigned short
+mc9xgate_get_operands_old(char *input, struct mc9xgate_opcode *opcode);
+static unsigned int
+mc9xgate_get_constant(char *input, int max);
+void
+append_str(char *in, char c);
+static int
+cmp_opcode(struct mc9xgate_opcode *, struct mc9xgate_opcode *);
+
+unsigned int
+mc9xgate_detect_format(char *line_in);
+
+//char get_address_mode(char *);
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+ are using 'rtc' for returning.  It is necessary to use 'call'
+ to invoke them.  This is also used by the debugger to correctly
+ find the stack frame.  */
+/* END LOCAL FUNCTIONS */
+
+/* LOCAL DATA */
+static struct hash_control *mc9xgate_hash;
+static unsigned int prev = 0; /* Previous opcode.  */
+static unsigned char fixup_required = 0;
+//static char parse_error;
+//static char error_message[ sizeof( char) ];
+static char oper_check;
+
+static unsigned int oper1 = 0;
+static unsigned int oper2 = 0;
+static unsigned int oper3 = 0;
+static int oper1_present = 0;
+static int oper1_bit_length = 0;
+static int oper2_present = 0;
+static int oper2_bit_length = 0;
+static int oper3_present = 0;
+static int oper3_bit_length = 0;
+
+//static struct mc9xgate_opcode *mc9xgate_op_table = 0;
+
+
+typedef struct mc9xgate_operand
+{
+  expressionS exp0;
+  expressionS exp1;
+  unsigned char reg;
+} operand;
+
+/* This table describes how you change sizes for the various types of variable
+ size expressions.  This version only supports two kinds.  */
+
+/* The fields are:
+ How far Forward this mode will reach.
+ How far Backward this mode will reach.
+ How many bytes this mode will add to the size of the frag.
+ Which mode to go to if the offset won't fit in this one.  */
+
+relax_typeS md_relax_table[] =
+  {
+    { 1, 1, 0, 0 }, /* First entries aren't used.  */
+    { 1, 1, 0, 0 }, /* For no good reason except.  */
+    { 1, 1, 0, 0 }, /* that the VAX doesn't either.  */
+    { 1, 1, 0, 0 },
+
+  /* Relax for bcc <L>.
+   These insns are translated into b!cc +3 jmp L.  */
+    { (127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD) },
+    { 0, 0, 3, 0 },
+    { 1, 1, 0, 0 },
+    { 1, 1, 0, 0 },
+
+  /* Relax for bsr <L> and bra <L>.
+   These insns are translated into jsr and jmp.  */
+    { (127), (-128), 0, ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD) },
+    { 0, 0, 1, 0 },
+    { 1, 1, 0, 0 },
+    { 1, 1, 0, 0 },
+
+  /* Relax for indexed offset: 5-bits, 9-bits, 16-bits.  */
+    { (15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9) },
+    { (255), (-256), 1, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16) },
+    { 0, 0, 2, 0 },
+    { 1, 1, 0, 0 },
+
+  /* Relax for PC relative offset: 5-bits, 9-bits, 16-bits.
+   For the 9-bit case, there will be a -1 correction to take into
+   account the new byte that's why the range is -255..256.  */
+    { (15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9) },
+    { (256), (-255), 1, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16) },
+    { 0, 0, 2, 0 },
+    { 1, 1, 0, 0 },
+
+  /* Relax for dbeq/ibeq/tbeq r,<L>:
+   These insns are translated into db!cc +3 jmp L.  */
+    { (255), (-256), 0, ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD) },
+    { 0, 0, 3, 0 },
+    { 1, 1, 0, 0 },
+    { 1, 1, 0, 0 },
+
+  /* Relax for bcc <L> on 68HC12.
+   These insns are translated into lbcc <L>.  */
+    { (127), (-128), 0,
+        ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD) },
+    { 0, 0, 2, 0 },
+    { 1, 1, 0, 0 },
+    { 1, 1, 0, 0 },
+
+  };
+
+/* mc9Xgate registers all are 16-bit.  They are numbered according to the mc9xgate.  */
+typedef enum register_id
+{
+  REG_NONE = -1,
+  REG_A = 0, /* is tied to the value “$0000”
+   Selecting R0 as destination register will discard the result of the instruction. Only
+   the Condition Code Register will be updated  */
+  REG_B = 1, /* variable pointer, It is preloaded with the initial variable pointer
+   of the channel’s service request vector  */
+  REG_C = 2,
+  REG_D = 3,
+  REG_E = 4,
+  REG_F = 5,
+  REG_G = 6,
+  REG_H = 7,
+  REG_CCR = 8, //was 8 set to 55 for testing
+  REG_PC = 9
+} register_id;
+
+/* ELF flags to set in the output file header.  */
+//static int elf_flags = E_MC9XGATE_F64;
+
+/* These are the machine dependent pseudo-ops.  These are included so
+ the assembler can work on the output from the SUN C compiler, which
+ generates these.  */
+
+/* This table describes all the machine specific pseudo-ops the assembler
+ has to support.  The fields are:
+ pseudo-op name without dot
+ function to call to execute this pseudo-op
+ Integer arg to pass to the function.  */
+const pseudo_typeS md_pseudo_table[] =
+  {
+  /* The following pseudo-ops are supported for MRI compatibility.  */
+    { "fcb", cons, 1 },
+    { "fdb", cons, 2 },
+    { "fcc", stringer, 8 + 1 },
+    { "rmb", s_space, 0 },
+
+  /* Motorola ALIS.  */
+    { "xrefb", s_ignore, 0 }, /* Same as xref  */
+
+  /* Gcc driven relaxation.  */
+    { "relax", s_mc9xgate_relax, 0 },
+
+  /* .mode instruction (ala SH).  */
+    { "mode", s_mc9xgate_mode, 0 },
+
+  /* .far instruction.  */
+    { "far", s_mc9xgate_mark_symbol, STO_MC9XGATE_FAR },
+
+  /* .interrupt instruction.  */
+    { "interrupt", s_mc9xgate_mark_symbol, STO_MC9XGATE_INTERRUPT },
+
+    { 0, 0, 0 } };
+
+/* statics */
+static int current_architecture;
+static int mc9xgate_nb_opcode_defs = 0;
+static const char *default_cpu;
+//static struct hash_control *mc9xgate_hash;
+//static struct mc9xgate_opcode_def *mc9xgate_opcode_defs = 0;
+static unsigned int numberOfCalls = 0;
+/* ELF flags to set in the output file header.  */
+static int elf_flags = E_MC9XGATE_F64;
+
+/* Declaired to keep the current make happy with alot of baggage from the old port  TODO clean up*/
+const char *md_shortopts = "Sm:";
+struct option md_longopts[] =
+  {
+
+#define OPTION_FORCE_LONG_BRANCH (OPTION_MD_BASE)
+        { "force-long-branches", no_argument, NULL, OPTION_FORCE_LONG_BRANCH },
+        { "force-long-branchs", no_argument, NULL, OPTION_FORCE_LONG_BRANCH }, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_SHORT_BRANCHES     (OPTION_MD_BASE + 1)
+        { "short-branches", no_argument, NULL, OPTION_SHORT_BRANCHES },
+        { "short-branchs", no_argument, NULL, OPTION_SHORT_BRANCHES }, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_STRICT_DIRECT_MODE  (OPTION_MD_BASE + 2)
+        { "strict-direct-mode", no_argument, NULL, OPTION_STRICT_DIRECT_MODE },
+
+#define OPTION_PRINT_INSN_SYNTAX  (OPTION_MD_BASE + 3)
+        { "print-insn-syntax", no_argument, NULL, OPTION_PRINT_INSN_SYNTAX },
+
+#define OPTION_PRINT_OPCODES  (OPTION_MD_BASE + 4)
+        { "print-opcodes", no_argument, NULL, OPTION_PRINT_OPCODES },
+
+#define OPTION_GENERATE_EXAMPLE  (OPTION_MD_BASE + 5)
+        { "generate-example", no_argument, NULL, OPTION_GENERATE_EXAMPLE },
+
+#define OPTION_MSHORT  (OPTION_MD_BASE + 6)
+        { "mshort", no_argument, NULL, OPTION_MSHORT },
+
+#define OPTION_MLONG  (OPTION_MD_BASE + 7)
+        { "mlong", no_argument, NULL, OPTION_MLONG },
+
+#define OPTION_MSHORT_DOUBLE  (OPTION_MD_BASE + 8)
+        { "mshort-double", no_argument, NULL, OPTION_MSHORT_DOUBLE },
+
+#define OPTION_MLONG_DOUBLE  (OPTION_MD_BASE + 9)
+        { "mlong-double", no_argument, NULL, OPTION_MLONG_DOUBLE },
+
+        { NULL, no_argument, NULL, 0 } };
+
+size_t md_longopts_size = sizeof(md_longopts);
+
+char *
+md_atof(int type, char *litP, int *sizeP)
+{
+  return ieee_md_atof(type, litP, sizeP, TRUE);
+}
+
+int
+md_parse_option(int c, char *arg)
+{
+  c = 0; //for testing
+  *arg = 't'; //for testing
+  return 1;
+}
+
+const char *
+mc9xgate_arch_format(void)
+{
+  get_default_target();
+  if (current_architecture & cpumc9xgate)
+    {
+      return "elf32-mc9xgate";
+    }
+  else
+    {
+      //printf("\n ERROR in mc9xgate_arch_format ---unknown----\n");  //for debugging
+      return "error";
+    }
+}
+
+static void
+get_default_target(void)
+{
+  const bfd_target *target;
+  bfd abfd;
+
+  if (current_architecture != 0)
+    return;
+
+  default_cpu = "unknown";
+  target = bfd_find_target(0, &abfd);
+  if (target && target->name)
+    {
+      if (strcmp(target->name, "elf32-mc9xgate") == 0)
+        {
+          current_architecture = cpumc9xgate;
+          default_cpu = "mc9xgate";
+          //printf("\n found default cpu->%s\n",target->name);
+          return;
+        }
+      else
+        {
+          as_bad(_("Default target `%s' is not supported."), target->name);
+        }
+    }
+}
+
+void
+md_begin(void)
+{
+  struct mc9xgate_opcode *mc9xgate_opcode_ptr;
+  struct mc9xgate_opcode *mc9xgate_op_table;
+  struct mc9xgate_opcode_handle *op_handles = 0;
+  //struct mc9xgate_opcode *mc9xgate_op_handle_ptr;
+  //struct mc9xgate_opcode *op_alias;
+  char prev_op_name[9];
+  char handle_enum = 0;
+  unsigned int number_of_handle_rows = 0;
+  int i, j = 0;
+  //int opcode_offset = 0;
+
+  /* create a local copy of our opcode table including and an extra line for NULL termination*/
+  mc9xgate_op_table = (struct mc9xgate_opcode *) xmalloc((mc9xgate_num_opcodes
+      + 1) * sizeof(struct mc9xgate_opcode));
+  memset(mc9xgate_op_table, 0, sizeof(struct mc9xgate_opcode)
+      * (mc9xgate_num_opcodes + 1));
+
+  for (i = (mc9xgate_num_opcodes + 1); i; i--)
+    {
+
+      mc9xgate_opcode_ptr = NULL;
+    }
+
+  for (mc9xgate_opcode_ptr = mc9xgate_opcodes, i = 0; i < mc9xgate_num_opcodes; i++)
+    {
+      mc9xgate_op_table[i] = mc9xgate_opcode_ptr[i];
+    }
+
+  qsort(mc9xgate_opcode_ptr, mc9xgate_num_opcodes,
+      sizeof(struct mc9xgate_opcode), (int
+      (*)(const void*, const void*)) cmp_opcode);
+
+  /* Calculate number of handles since this will be smaller than the raw number of opcodes in the table */
+  for (mc9xgate_opcode_ptr = mc9xgate_op_table; mc9xgate_opcode_ptr->name; mc9xgate_opcode_ptr++)
+    {
+      if (strcmp(prev_op_name, mc9xgate_opcode_ptr->name))
+        {
+          number_of_handle_rows++;
+        }
+      strcpy(prev_op_name, mc9xgate_opcode_ptr->name);
+    }
+
+  op_handles = (struct mc9xgate_opcode_handle *) xmalloc(
+      sizeof(struct mc9xgate_opcode_handle) * (number_of_handle_rows + 1));
+
+  /* insert opcode names into hash table, aliasing duplicates */
+  /* TODO do this dynamically with xmalloc and a loop */
+  mc9xgate_hash = hash_new(); /* create a new has control table */
+  for (mc9xgate_opcode_ptr = mc9xgate_op_table, i = 0, j = 0; i
+      < mc9xgate_num_opcodes; i++, mc9xgate_opcode_ptr++)
+    {
+      if (strcmp(prev_op_name, mc9xgate_opcode_ptr->name))
+        {
+          handle_enum = 1;
+          if (i)
+            {
+              j++;
+            }
+          op_handles[j].name = mc9xgate_opcode_ptr->name;
+          op_handles[j].opc0 = mc9xgate_opcode_ptr;
+        }
+      else
+        {
+          handle_enum++;
+          switch (handle_enum)
+            {
+          case 2:
+            op_handles[j].opc1 = mc9xgate_opcode_ptr;
+            break;
+          case 3:
+            op_handles[j].opc2 = mc9xgate_opcode_ptr;
+            break;
+          case 4:
+            op_handles[j].opc3 = mc9xgate_opcode_ptr;
+          case 5:
+            op_handles[j].opc4 = mc9xgate_opcode_ptr;
+          default:
+            as_bad(_(":error adding operand handle"));
+            break;
+            }
+        }
+      op_handles[j].number_of_modes = handle_enum;
+      strcpy(prev_op_name, op_handles[j].name);
+    }
+  while (op_handles->name)
+    {
+      //printf("\n hash insert message %s",(hash_insert(mc9xgate_hash, op_handles->name, (char *) op_handles)) );
+      hash_insert(mc9xgate_hash, op_handles->name, (char *) op_handles);
+      op_handles++;
+    }
+}
+
+void
+mc9xgate_init_after_args(void)
+{
+  //return; // no return needed?????
+}
+
+void
+md_show_usage(FILE *stream)
+{
+  get_default_target();
+  fprintf(
+      stream,
+      _("\
+      Motorola MC9XGATE co-processor options:\n\
+      -mc9xgate               specify the processor [default %s]\n\
+      -mshort                 use 16-bit int ABI (default)\n\
+      -mlong                  use 32-bit int ABI\n\
+      -mshort-double          use 32-bit double ABI\n\
+      -mlong-double           use 64-bit double ABI (default)\n\
+      --force-long-branches   always turn relative branches into absolute ones\n\
+      -S,--short-branches     do not turn relative branches into absolute ones\n\
+      when the offset is out of range\n\
+      --strict-direct-mode    do not turn the direct mode into extended mode\n\
+      when the instruction does not support direct mode\n\
+      --print-insn-syntax     print the syntax of instruction in case of error\n\
+      --print-opcodes         print the list of instructions with syntax\n\
+      --generate-example      generate an example of each instruction\n\
+  (used for testing)\n"),
+      default_cpu);
+}
+
+enum bfd_architecture
+mc9xgate_arch(void)
+{
+  get_default_target();
+  if (current_architecture & cpumc9xgate) /* TODO same as above todo */
+    // return bfd_arch_mc9xgate;
+    return bfd_arch_mc9xgate;
+  else
+    //printf("\n error in tc-mc9s12x mc9xgate_arch \n");
+    //return bfd_arch_mc9xgate;
+    return bfd_arch_mc9xgate;
+}
+
+int
+mc9xgate_mach(void)
+{
+  return 0;
+}
+
+void
+mc9xgate_print_statistics(FILE *file)
+{
+  //  int i;
+  struct mc9xgate_opcode *opc;
+
+  hash_print_statistics(file, "opcode table", mc9xgate_hash);
+
+  opc = mc9xgate_opcodes;
+  if (opc == 0 || mc9xgate_nb_opcode_defs == 0)
+    return;
+
+  /* Dump the opcode statistics table.  */
+  //  fprintf (file, _("Name   # Modes  Min ops  Max ops  Modes mask  # Used\n"));
+  //  for (i = 0; i < mc9xgate_nb_opcode_defs; i++, opc++)
+  //   {
+  //     fprintf (file, "%-7.7s  %5d  %7d  %7d  0x%08lx  %7d\n",
+  //	       opc->opcode->name,
+  //	       opc->nb_modes,
+  //	       opc->min_operands, opc->max_operands, opc->format, opc->used);
+  //    }
+}
+
+const char *
+mc9xgate_listing_header(void)
+{
+  if (current_architecture & cpumc9xgate)
+    return "MC9S12X GAS "; /* TODO same as above */
+  else
+    return "ERROR MC9S12X GAS ";
+}
+symbolS *
+md_undefined_symbol(char *name ATTRIBUTE_UNUSED)
+{
+  return 0;
+}
+
+valueT
+md_section_align(asection *seg, valueT addr)
+{
+  int align = bfd_get_section_alignment (stdoutput, seg);
+  return ((addr + (1 << align) - 1) & (-1 << align));
+}
+
+void
+md_assemble(char *input_line)
+{
+  struct mc9xgate_opcode *opcode = 0;
+  struct mc9xgate_opcode *macro_opcode = 0;
+  struct mc9xgate_opcode_handle *opcode_handle = 0;
+  char *saved_input_line = input_line; /* caller expects it to be returned as it was passed */
+  unsigned short opcode_bin = 0;
+  char op_name[9] =
+    { 0 };
+  char handle_enum_alias = 0;
+  unsigned int sh_format = 0;
+  char *p = 0;
+  unsigned int imm16_value0 = 0;
+  unsigned int imm16_value1 = 0;
+  char imm16_string[25] =
+    { 0 };
+  unsigned int imm16_string_index = 0;
+  char *imm16_pointer = 0;
+
+  fixup_required = 0;
+
+  numberOfCalls++; // for testing
+
+  oper_check = 0; /* set error flags */
+
+  input_line = extract_word(input_line, op_name, sizeof(op_name));
+  if (!op_name[0])
+    {
+      as_bad(_("opcode missing or not found on input line"));
+      //	 return;
+    }
+
+  //printf("\n read code %s\n", op_name);
+
+  if (!(opcode_handle = (struct mc9xgate_opcode_handle *) hash_find(
+      mc9xgate_hash, op_name)))
+    {
+      //	 //printf("\n %s\n",op_name);
+      as_bad(_("opcode not found in hash"));
+    }
+  else
+    {
+
+      /* detect operand format so we can pull the proper opcode bin */
+      handle_enum_alias = opcode_handle->number_of_modes;
+      //printf("\n about to detect operands, %d combinations found", handle_enum_alias);
+      //printf("\n inline reads %s", input_line);
+      sh_format = mc9xgate_detect_format(input_line);
+      //printf("\n detected shorthand %d of %d alias",sh_format, handle_enum_alias);
+
+      if (handle_enum_alias > 1)
+        {
+          opcode = mc9xgate_find_match(opcode_handle,
+              opcode_handle->number_of_modes, sh_format);
+        }
+      else
+        {
+          opcode = opcode_handle->opc0;
+        }
+
+      if (!opcode)
+        {
+          as_bad(_(":error matching operand format"));
+          //TODO print list of possibilities
+        }
+      else if (opcode->size == 2)
+        { /* if size is one word assemble that native insn */
+          //printf("\n matched code %s and format %s",opcode->name, opcode->format);
+          opcode_bin = mc9xgate_operands(opcode, &input_line);
+          //printf("\n parsed bin_opcode is  %x", opcode_bin);
+        }
+      else
+        { /* if insns is a simplified instruction expand it out */
+          char constraintString[50];
+          unsigned int i;
+          /* extract formal constraint string */
+          for (i = 0, p = opcode->constraints; *p != ';'; i++, p++)
+            {
+              constraintString[i] = *p;
+            }
+          p++;
+          constraintString[i] = 0;
+
+          sh_format = mc9xgate_detect_format(constraintString);
+
+          input_line = skip_whitespace(input_line);
+
+          //printf("\n inline reads %s", input_line);
+
+          char *macro_inline = input_line;
+
+          for (i = 0; *p && i < (opcode->size / 2); i++)
+            { /* loop though macro operand list */
+              input_line = macro_inline; /* rewind */
+              p = extract_word(p, op_name, 10);
+              //printf("\n read real opcode %s", op_name);
+              if (!(opcode_handle
+                  = (struct mc9xgate_opcode_handle *) hash_find(mc9xgate_hash,
+                      op_name)))
+                {
+                  as_bad(_("opcode handle not found in hash"));
+                  break;
+                }
+              else
+                {
+                  sh_format = mc9xgate_detect_format(input_line);
+                  //printf("\n about to call find match then operands %s %s , number of modes %d with sh-format %d", op_name, input_line, opcode_handle->number_of_modes, sh_format);
+                  macro_opcode = mc9xgate_find_match(opcode_handle,
+                      opcode_handle->number_of_modes, sh_format);
+                  //printf("\n opcode is %s", opcode->name);
+                  opcode_bin = mc9xgate_operands(macro_opcode, &input_line);
+                }
+            }
+
+          if (0)
+            {
+              if (*input_line == 'r' || *input_line == 'R')
+                {
+                  //	*bit_width = 3;
+                  //	input_line = extract_word (input_line, imm16_string, sizeof (imm16_string));
+
+                  for (imm16_string_index = 0; is_part_of_name(*input_line); imm16_string_index++, input_line++)
+                    {
+                      imm16_string[imm16_string_index] = *input_line;
+                    }
+
+                  if (*input_line != ',')
+                    {
+                      as_bad(_(":expected , operand seperator"));
+                    }
+                  else
+                    {
+                      imm16_string[imm16_string_index++] = *input_line++;
+                    }
+
+                  if (*input_line == '#')
+                    { /* go past # character */
+                      input_line++;
+                      //printf("\n about to call get constant %s", input_line);
+                      imm16_value0 = mc9xgate_get_constant(input_line, 0xFFFF);
+                      imm16_value1 = (imm16_value0 & 0xFF00) >> 8;
+                      imm16_value0 &= 0x00FF;
+                      //printf("\n in case r extracted %s and read valueL %x valueH %x", imm16_string, imm16_value0, imm16_value1);
+                    }
+                  else
+                    {
+                      //printf("\n need to parse expression for macro");
+                    }
+
+                }
+              else
+                {
+                  as_bad(_(": expected register name r0-r7 read %s "),
+                      input_line);
+
+                }
+
+              for (i = 0; *p && i < 2; i++)
+                { /* loop though macro operand list */
+                  p = extract_word(p, op_name, 10);
+                  if (!(opcode_handle
+                      = (struct mc9xgate_opcode_handle *) hash_find(
+                          mc9xgate_hash, op_name)))
+                    {
+                      as_bad(_("opcode not found in hash"));
+                      break;
+                    }
+                  else
+                    {
+                      //printf("\n found %s", op_name);
+                      opcode = mc9xgate_find_match(opcode_handle,
+                          opcode_handle->number_of_modes, sh_format);
+                    }
+
+                  if (!i)
+                    { /* write the low byte first since it will clear the high byte in the process */
+                      sprintf(&imm16_string[imm16_string_index], "#%d",
+                          imm16_value0);
+                      //printf("\n paresd %s", imm16_string);
+                      //imm16_string[imm16_string_index] = inttos();
+                    }
+                  else
+                    {
+                      sprintf(&imm16_string[imm16_string_index], "#%d",
+                          imm16_value1);
+                      //printf("\n parsed %s", imm16_string);
+                      // opcode_bin = mc9xgate_operands(opcode, &input_line);
+                    }
+                  imm16_pointer = imm16_string;
+                  //printf("\n parsed %s about to call operands", imm16_pointer);
+                  opcode_bin = mc9xgate_operands(opcode, &imm16_pointer);
+                }
+              //printf("\n done processing macro");
+            }
+        }
+
+    }
+
+  input_line = saved_input_line;
+}
+
+static void
+s_mc9xgate_relax(int ignore ATTRIBUTE_UNUSED)
+{
+  //printf("\n in s_mc9xgate_relax");
+  expressionS ex;
+
+  expression (&ex);
+
+  if (ex.X_op != O_symbol || ex.X_add_number != 0)
+    {
+      as_bad(_("bad .relax format"));
+      ignore_rest_of_line();
+      return;
+    }
+
+  fix_new_exp(frag_now, frag_now_fix(), 0, &ex, 1, BFD_RELOC_MC9XGATE_RL_GROUP);
+
+  demand_empty_rest_of_line();
+}
+
+/* Pseudo op to control the ELF flags.  */
+static void
+s_mc9xgate_mode(int x ATTRIBUTE_UNUSED)
+{
+
+}
+
+static void
+s_mc9xgate_mark_symbol(int mark)
+{
+  mark = 0; //for testing
+}
+
+/* Force truly undefined symbols to their maximum size, and generally set up
+ the frag list to be relaxed.  */
+int
+md_estimate_size_before_relax(fragS *fragP, asection *segment)
+{
+  int temp = fragP->fr_fix;
+  int temp2 = segment->entsize;
+  temp2 = temp;
+  return 0;
+}
+
+long
+mc9xgate_relax_frag(segT seg ATTRIBUTE_UNUSED, fragS *fragP, long stretch ATTRIBUTE_UNUSED)
+{
+  //printf("\n in relax_frag");
+  int temp = fragP->fr_var;
+  int temp2;
+  temp2 = temp;
+
+  return 1;
+}
+
+/* Relocation, relaxation and frag conversions.  */
+
+/* PC-relative offsets are relative to the start of the
+ next instruction.  That is, the address of the offset, plus its
+ size, since the offset is always the last part of the insn.  */
+long
+md_pcrel_from(fixS *fixP)
+{
+  //printf("\n in perel_from");
+  if (fixP->fx_r_type == BFD_RELOC_MC9XGATE_RL_JUMP)
+    return 0;
+
+  return fixP->fx_size + fixP->fx_where + fixP->fx_frag->fr_address;
+}
+
+/* If while processing a fixup, a reloc really needs to be created
+ then it is done here.  */
+arelent *
+tc_gen_reloc(asection *section ATTRIBUTE_UNUSED, fixS *fixp)
+{
+  //printf("\n in tc_gen_reloc fx_r_type is %d ", fixp->fx_r_type);
+
+  arelent *reloc;
+
+  reloc = (arelent *) xmalloc(sizeof(arelent));
+  reloc->sym_ptr_ptr = (asymbol **) xmalloc(sizeof(asymbol *));
+  *reloc->sym_ptr_ptr = symbol_get_bfdsym(fixp->fx_addsy);
+  reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
+  if (fixp->fx_r_type == 0)
+    reloc->howto = bfd_reloc_type_lookup(stdoutput, BFD_RELOC_16);
+  else
+    {
+      reloc->howto = bfd_reloc_type_lookup(stdoutput, fixp->fx_r_type);
+      //printf("\nlooking up howto based on fx_r_type");
+    }
+
+  if (fixp->fx_r_type == 14)
+    {
+      reloc->howto = bfd_reloc_name_lookup(stdoutput, "R_MC9XGATE_IMM8");
+    }
+
+  if (reloc->howto == (reloc_howto_type *) NULL)
+    {
+      as_bad_where(fixp->fx_file, fixp->fx_line,
+          _("Relocation %d is not supported by object file format."),
+          (int) fixp->fx_r_type);
+      return NULL;
+    }
+
+  /* Since we use Rel instead of Rela, encode the vtable entry to be
+   used in the relocation's section offset.  */
+  if (fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+    reloc->address = fixp->fx_offset;
+
+  reloc->addend = 0;
+  //printf("\n about to return relocation name-%s size-%d type->%u", reloc->howto->name, reloc->howto->size, reloc->howto->type);
+  return reloc;
+
+  //	arelent *reloc;
+
+  //	reloc = (arelent *) xmalloc (sizeof (arelent));
+  //	reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
+  //	*reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);
+  //	reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
+  //	if (fixp->fx_r_type == 0)
+  //		reloc->howto = bfd_reloc_type_lookup (stdoutput, BFD_RELOC_16);
+  //	else /* TODO fix so it finds by type */
+  //		reloc->howto = bfd_reloc_name_lookup(stdoutput, "R_MC9XGATE_IMM8");
+  // reloc->howto = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);
+  //	if (reloc->howto == (reloc_howto_type *) NULL)
+  //	{
+  //		as_bad_where (fixp->fx_file, fixp->fx_line,
+  //				_("Relocation %d is not supported by object file format."),
+  //				(int) fixp->fx_r_type);
+  //		return NULL;
+  //	}
+
+  /* Since we use Rel instead of Rela, encode the vtable entry to be
+   used in the relocation's section offset.  */
+  //	if (fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+  //		reloc->address = fixp->fx_offset;
+
+  //	//printf("\name of reloc is %s", reloc->howto->name);
+
+  //	reloc->addend = 0;
+  //	return reloc;
+}
+
+/* Patch the instruction with the resolved operand.  Elf relocation
+ info will also be generated to take care of linker/loader fixups.
+ The 68HC11 addresses only 64Kb, we are only concerned by 8 and 16-bit
+ relocs.  BFD_RELOC_8 is basically used for .page0 access (the linker
+ will warn for overflows).  BFD_RELOC_8_PCREL should not be generated
+ because it's either resolved or turned out into non-relative insns (see
+ relax table, bcc, bra, bsr transformations)
+ The BFD_RELOC_32 is necessary for the support of --gstabs.
+
+ */
+void
+md_apply_fix(fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
+{
+  //printf("\n in md_apply_fix");
+
+  char *where;
+  long value = *valP;
+  int op_type;
+  int opcode = 0;
+  ldiv_t result;
+
+  /* if the fixup is done mark it done so no further symbol resoloution will take place */
+  if (fixP->fx_addsy == (symbolS *) NULL)
+    {
+      fixP->fx_done = 1;
+      //printf("\n fixup done");
+    }
+
+  /* We don't actually support subtracting a symbol.  */
+  if (fixP->fx_subsy != (symbolS *) NULL)
+    as_bad_where(fixP->fx_file, fixP->fx_line, _("Expression too complex."));
+
+  op_type = fixP->fx_r_type;
+
+  where = fixP->fx_frag->fr_literal + fixP->fx_where;
+
+  opcode = bfd_getl16(where);
+
+  int mask = 0;
+
+  //printf("\n read opcode %d from frag", opcode);
+
+  switch (fixP->fx_r_type)
+    {
+
+  //   case BFD_RELOC_MC9XGATE_PCREL_9:
+  case R_MC9XGATE_PCREL_9:
+
+    if (value < -255 || value > 254)
+      as_bad_where(fixP->fx_file, fixP->fx_line,
+          _("Value %ld too large for 9-bit PC-relative branch."), value);
+    result = ldiv(value, 2); /* from bytes to words */
+    value = result.quot;
+    mask = 0x1FF; /* Clip into 9-bit field FIXME I'm sure there is a more proper place for this */
+    value &= mask;
+    number_to_chars_bigendian(where, (opcode | value), 2);
+    //printf("\n fixup with operand is %ld",(opcode | value));
+    break;
+  case R_MC9XGATE_PCREL_10:
+    if (value < -512 || value > 511)
+      as_bad_where(fixP->fx_file, fixP->fx_line,
+          _("Value %ld too large for 10-bit PC-relative branch."), value);
+    result = ldiv(value, 2); /* from bytes to words */
+    value = result.quot;
+    mask = 0x3FF; /* Clip into 9-bit field FIXME I'm sure there is a more proper place for this */
+    value &= mask;
+    number_to_chars_bigendian(where, (opcode | value), 2);
+    //printf("\n fixup with operand is %ld",(opcode | value));
+    break;
+    break;
+    //case R_MC9XGATE_32: // for testing
+  case BFD_RELOC_MC9XGATE_24:
+    //case R_MC9XGATE_IMM8_LO:
+  case BFD_RELOC_MC9XGATE_IMM8_HI:
+    if (value < -65537 || value > 65535)
+      as_bad_where(fixP->fx_file, fixP->fx_line,
+          _("Value out of 16-bit range."));
+    value >>= 8;
+    bfd_putb16((bfd_vma) value | opcode, (unsigned char *) where);
+    //printf("\n fixup 8 with operand is %ld",(long int) opcode);
+    break;
+
+  case BFD_RELOC_MC9XGATE_IMM8_LO:
+    if (value < -65537 || value > 65535)
+      as_bad_where(fixP->fx_file, fixP->fx_line,
+          _("Value out of 16-bit range."));
+    value &= 0x00ff;
+    bfd_putb16((bfd_vma) value | opcode, (unsigned char *) where);
+    if (value < -65537 || value > 65535)
+      as_bad_where(fixP->fx_file, fixP->fx_line,
+          _("Value out of 16-bit range."));
+
+    //number_to_chars_bigendian(where, opcode , 2);
+
+    //printf("\n fixup 8LO with operand is %ld",(long int) opcode);
+
+    // case R_MC9XGATE_16:
+    //	   //printf("\n need to fixup 16");
+    break;
+  case BFD_RELOC_MC9XGATE_IMM3:
+    if (value < 0 || value > 7)
+      as_bad_where(fixP->fx_file, fixP->fx_line, _("Value out of 3-bit range."));
+    //printf("\n need to process imm3 relocatoin");
+    value <<= 8; /* alight the operand bits */
+
+    number_to_chars_bigendian(where, (opcode | value), 2);
+    break;
+  case BFD_RELOC_MC9XGATE_IMM4:
+    if (value < 0 || value > 15)
+      as_bad_where(fixP->fx_file, fixP->fx_line, _("Value out of 4-bit range."));
+    value <<= 4; /* alight the operand bits */
+    //printf("\n need to process imm4 relocatoin");
+    number_to_chars_bigendian(where, (opcode | value), 2);
+    break;
+  case R_MC9XGATE_16:
+  case 0x2: /* seems to be the default value for no fixup TODO figure out how to remove*/
+    break;
+  default:
+    as_fatal(_("Line %d: unknown relocation type: 0x%x."), fixP->fx_line,
+        fixP->fx_r_type);
+    }
+}
+
+/* See whether we need to force a relocation into the output file.  */
+int
+tc_mc9xgate_force_relocation(fixS *fixP)
+{
+  //printf("\n in force_relocation");
+  if (fixP->fx_r_type == BFD_RELOC_MC9XGATE_RL_GROUP)
+    return 1;
+
+  return generic_force_reloc(fixP);
+}
+
+/* Here we decide which fixups can be adjusted to make them relative
+ to the beginning of the section instead of the symbol.  Basically
+ we need to make sure that the linker relaxation is done
+ correctly, so in some cases we force the original symbol to be
+ used.  */
+int
+tc_mc9xgate_fix_adjustable(fixS *fixP)
+{
+  //printf("\n in fix_adjustable");
+
+  switch (fixP->fx_r_type)
+    {
+  /* For the linker relaxation to work correctly, these relocs
+   need to be on the symbol itself.  */
+  case BFD_RELOC_MC9XGATE_IMM8_LO:
+  case BFD_RELOC_MC9XGATE_IMM8_HI:
+  case BFD_RELOC_16:
+  case BFD_RELOC_MC9XGATE_RL_JUMP:
+  case BFD_RELOC_MC9XGATE_RL_GROUP:
+  case BFD_RELOC_VTABLE_INHERIT:
+  case BFD_RELOC_VTABLE_ENTRY:
+  case BFD_RELOC_32:
+
+    /* The memory bank addressing translation also needs the original
+     symbol.  */
+  case BFD_RELOC_MC9XGATE_LO16:
+  case BFD_RELOC_MC9XGATE_PAGE:
+  case BFD_RELOC_MC9XGATE_24:
+    return 0;
+
+  default:
+    return 1;
+    }
+}
+
+void
+md_convert_frag(bfd *abfd ATTRIBUTE_UNUSED, asection *sec ATTRIBUTE_UNUSED, fragS *fragP)
+{
+  //printf("\n in convert_frag");
+
+  int temp = fragP->fr_address;
+  temp++;
+  return;
+}
+
+/* Set the ELF specific flags.  */
+void
+mc9xgate_elf_final_processing(void)
+{
+  //printf("\n in elf_final processing");
+  /* TODO make this always true */
+  if (current_architecture & cpumc9xgate)
+    elf_flags |= EF_MC9XGATE_MACH;
+  elf_elfheader (stdoutput)->e_flags &= ~EF_MC9XGATE_ABI;
+  elf_elfheader (stdoutput)->e_flags |= elf_flags;
+}
+
+static inline char *
+skip_whitespace(char *s)
+{
+  while (*s == ' ' || *s == '\t' || *s == '(' || *s == ')')
+    {
+      s++;
+    }
+  ////printf("\n debug white space %c", *s);
+  return s;
+}
+
+/* extract a word (continuous alpha-numeric chars) from the input line */
+static char *
+extract_word(char *from, char *to, int limit)
+{
+  char *op_start;
+  char *op_end;
+  int size = 0;
+
+  /* Drop leading whitespace.  */
+  from = skip_whitespace(from);
+  *to = 0;
+
+  /* Find the op code end.  */
+  for (op_start = op_end = from; *op_end != 0 && is_part_of_name (*op_end);)
+    {
+      to[size++] = *op_end++;
+      if (size + 1 >= limit)
+        break;
+    }
+
+  to[size] = 0;
+  return op_end;
+}
+
+/* Create a new fragment for our instruction. Record the
+ line information of that insn in the dwarf2 debug sections. */
+static char *
+mc9xgate_new_instruction(int size)
+{
+
+  char *f = frag_more(size);
+
+  dwarf2_emit_insn(size); /* avr code passes 0 for size */
+
+  return f;
+}
+
+unsigned short
+mc9xgate_apply_operand(unsigned short new_mask,
+    unsigned short *availiable_mask_bits, unsigned short mask,
+    unsigned char n_bits)
+{
+  ////printf("\n need to apply %d to %d with %d left", new_mask, mask, *availiable_mask_bits);
+  unsigned short n_shifts;
+  unsigned int n_drop_bits;
+
+  /* shift until you find an availiable operand bit "1" and record the number of shifts */
+  for (n_shifts = 0; !(*availiable_mask_bits & SIXTEENTH_BIT) && n_shifts < 16; n_shifts++)
+    {
+      *availiable_mask_bits <<= 1;
+    }
+  /* shift for the number of bits your operand requires while bits are avaibiable */
+  for (n_drop_bits = n_bits; n_drop_bits && (*availiable_mask_bits
+      & SIXTEENTH_BIT); --n_drop_bits)
+    {
+      *availiable_mask_bits <<= 1;
+
+    }
+  if (n_drop_bits)
+    as_bad(_(":operand has too many bits"));
+
+  *availiable_mask_bits >>= n_shifts + n_bits;
+
+  if ((n_drop_bits == 0) && (*availiable_mask_bits == 0))
+    {
+      oper_check = 1; /* flag operand check as good */
+      //printf("\n good to go\n");
+    }
+
+  new_mask <<= N_BITS_IN_WORD - (n_shifts + n_bits);
+  mask |= new_mask;
+  return mask;
+}
+
+/* Parse ordinary expression.  */
+static char *
+mc9xgate_parse_exp(char *s, expressionS *op)
+{
+  input_line_pointer = s;
+  expression (op);
+  if (op->X_op == O_absent)
+    as_bad(_("missing operand"));
+  return input_line_pointer;
+}
+
+static unsigned int
+mc9xgate_get_constant(char *str, int max)
+{
+  expressionS ex;
+
+  str = skip_whitespace(str);
+  input_line_pointer = str;
+  expression (& ex);
+
+  if (ex.X_op != O_constant)
+    as_bad(_("constant value required"));
+
+  if (ex.X_add_number > max || ex.X_add_number < 0)
+    as_bad(_("number must be positive and less than %d"), max + 1);
+
+  return ex.X_add_number;
+}
+
+void
+append_str(char *in, char c)
+{
+  unsigned char length = (unsigned char) strlen(in);
+  in[length] = c;
+  in[++length] = 0; /* terminate */
+  return;
+}
+
+static int
+cmp_opcode(struct mc9xgate_opcode *op1, struct mc9xgate_opcode *op2)
+{
+  return strcmp(op1->name, op2->name);
+}
+
+/* Parse instruction operands.
+ Return binary opcode.  */
+static unsigned int
+mc9xgate_operands(struct mc9xgate_opcode *opcode, char **line)
+{
+  char *frag = mc9xgate_new_instruction(opcode->size);
+  int where = frag - frag_now->fr_literal;
+  char *op = opcode->constraints;
+  unsigned int bin = (int) opcode->bin_opcode;
+  char *str = *line;
+
+  /* TODO Structure this */
+  unsigned short oper_mask = 0;
+
+  oper1 = 0;
+  oper2 = 0;
+  oper3 = 0;
+
+  oper1_present = 0;
+  oper1_bit_length = 0;
+  oper2_present = 0;
+
+  oper2_bit_length = 0;
+  oper3_present = 0;
+  oper3_bit_length = 0;
+
+  char n_operand_bits = 0;
+  char first_can_equal_second = 0;
+  int i = 0;
+  char c = 0;
+
+  /* generate availible operand bits mask */
+  for (i = 0; (c = opcode->format[i]); i++)
+    {
+      if (ISDIGIT(c) || (c == 's'))
+        {
+          oper_mask <<= 1;
+        }
+      else
+        {
+          oper_mask <<= 1;
+          oper_mask += 1;
+          n_operand_bits++;
+        }
+    }
+  //printf("\n available operbit mask is %d with %d bits", oper_mask, n_operand_bits);
+  /* Opcode have operands.  */
+  /* Parse first operand.  */
+  if (*op)
+    {
+      //printf("\n first char of op is %c",*op);
+      if (*op == '=')
+        {
+          first_can_equal_second = 1;
+          ++op;
+        }
+      oper1_present = 1;
+      //printf("\n getting operand 1 , %c", *op);
+      oper1 = mc9xgate_operand(opcode, &oper1_bit_length, where, &op, &str);
+      ++op;
+
+      /* Parse second operand.  */
+      if (*op)
+        {
+          if (*op == ',')
+            ++op;
+
+          oper2_present = 1;
+          str = skip_whitespace(str);
+          //printf("\n string is now %c first_can_second is %c", *str, first_can_equal_second);
+          if (*str++ != ',')
+            {
+              if (first_can_equal_second)
+                {
+                  oper2 = oper1;
+                  ++op;
+                  //op++;
+                  //op++;
+                  //printf("\n op string is now %c",*op);
+                }
+              else
+                {
+                  as_bad(_("`,' required before second operand"));
+                }
+            }
+          else
+            {
+              str = skip_whitespace(str);
+              //printf("\n operand before call to get_operand %c", *op);
+              oper2 = mc9xgate_operand(opcode, &oper2_bit_length, where, &op,
+                  &str);
+              //printf("\n operand after call to get_operand %c", *op);
+              ++op;
+            }
+
+        }
+      /* parse the third register */
+      if (*op)
+        {
+          if (*op == ',')
+            ++op;
+
+          oper3_present = 1;
+
+          str = skip_whitespace(str);
+          if (*str++ != ',')
+            as_bad(_("`,' required before third operand"));
+          str = skip_whitespace(str);
+          //printf("\n getting operand 3 typs is, %c input string is %s", *op, str);
+          oper3 = mc9xgate_operand(opcode, &oper3_bit_length, where, &op, &str);
+
+        }
+
+    }
+
+  if (oper1_present)
+    bin = mc9xgate_apply_operand(oper1, &oper_mask, bin, oper1_bit_length);
+  if (oper2_present)
+    bin = mc9xgate_apply_operand(oper2, &oper_mask, bin, oper2_bit_length);
+  if (oper3_present)
+    bin = mc9xgate_apply_operand(oper3, &oper_mask, bin, oper3_bit_length);
+
+  if (opcode->size == 4 && fixup_required)
+    {
+      /* not used */
+      //bfd_putl32(opcode->bin_opcode, frag);
+    }
+  else if (opcode->size == 2 && fixup_required)
+    {
+
+      bfd_putl16(bin, frag);
+
+    }
+  else if ((opcode->sh_format & MC9XGATE_PCREL))
+    {
+      //printf("\n PCREL instruction");
+      bfd_putl16(opcode->bin_opcode, frag); /* write our data to a frag for further processing */
+    }
+  else
+    { /* apply operand mask(s)to bin opcode and write the output */
+
+      //printf("\n no fixup required writing final bin to object %d",bin);
+      number_to_chars_bigendian(frag, bin, opcode->size); /* since we are done write this frag in xgate BE format */
+    }
+  //  printf("\n firt length is %d with operand %d second length is %d with operand %d third length is %d with operand %d",
+  //		  oper1_bit_length, oper1, oper2_bit_length, oper2, oper3_bit_length, oper3);
+
+  prev = bin;
+  *line = str;
+  return bin;
+}
+
+static unsigned int
+mc9xgate_operand(struct mc9xgate_opcode *opcode, int *bit_width, int where,
+    char **op_con, char **line)
+{
+
+  expressionS op_expr;
+  opcode = opcode;
+  char *op_constraint = *op_con;
+  unsigned int op_mask = 0;
+  char *str = skip_whitespace(*line);
+  char r_name[20] =
+    { 0 };
+  unsigned int pp_fix = 0;
+  unsigned short max_size = 0;
+  char reg_expected = 0;
+  int i;
+  *bit_width = 0;
+
+  /* reset */
+  switch (*op_constraint)
+    {
+  /* TODO should be able to combine with with case R */
+  case '+': /* indexed register operand +/- or plain r  */
+    pp_fix = 0x0b00; /* default to no inc or dec */
+    //TODO maybe use a loop so the order is not important
+    *bit_width = 5;
+    //printf("\n found +/- line reads %s", str);
+    //str = extract_word (str, r_name, sizeof (r_name));
+    str = skip_whitespace(str);
+    //printf("\n found +/- extracted %s", r_name);
+
+    while (*str != ' ' && *str != '\t')
+      {
+        if (*str == '-')
+          pp_fix = DECREMENT;
+        else if (*str == '+')
+          pp_fix = INCREMENT;
+        else if (*str == 'r' || *str == 'R')
+          {
+            reg_expected = 1;
+            str = extract_word(str, r_name, sizeof(r_name));
+            //printf("\n extracted %s %c and %c", r_name, r_name[0], r_name[1]);
+            //str--; /* rewind */
+            if (ISDIGIT (r_name[1]))
+              {
+                if (r_name[2] == '\0' && (r_name[1] - '0' < 8))
+                  op_mask = r_name[1] - '0';
+                if (r_name[2] != '\0' && (r_name[1] - '0' > 7))
+                  as_bad(_(": expected register name r0-r7 read %s"), r_name);
+
+                //else{ //if (r_name[1] != '0'
+                //	&& ISDIGIT (r_name[2])
+                //	&& r_name[3] == '\0')
+                //	op_mask = (r_name[1] - '0') * 10 + r_name[2] - '0';
+                /* TODO fix so it checks for range 0-7 */
+                continue;
+                as_bad(_(": not digit expected register name r0-r7 read %s"),
+                    r_name);
+              }
+          }
+        str++;
+      }
+    op_mask <<= 2;
+    op_mask |= pp_fix;
+    //printf("\n built code %d from prefix %d",op_mask,pp_fix);
+    break;
+  case 'r': /* register operand.  */
+    if (*str == 'r' || *str == 'R')
+      {
+        *bit_width = 3;
+
+        str = extract_word(str, r_name, sizeof(r_name));
+        //  printf("\n in case r extracted %s", r_name);
+        op_mask = 0xff;
+        if (ISDIGIT (r_name[1]))
+          {
+            if (r_name[2] == '\0')
+              op_mask = r_name[1] - '0';
+            else if (r_name[1] != '0' && ISDIGIT (r_name[2]) && r_name[3]
+                == '\0')
+              op_mask = (r_name[1] - '0') * 10 + r_name[2] - '0';
+            if (op_mask > MAXREGISTER)
+              as_bad(_(": expected register name r0-r7 read %s "), r_name);
+          }
+      }
+    else
+      {
+        as_bad(_(": expected register name r0-r7 read %s "), r_name);
+
+      }
+    break;
+
+  case 'i': /* immediate value expected */
+    (*op_con)++; /* advance the origional format pointer */
+    op_constraint++;
+
+    if (ISDIGIT(*op_constraint))
+      {
+        *bit_width = (int) *op_constraint - '0';
+      }
+    else if (*op_constraint == 'a')
+      {
+        *bit_width = 0x0A;
+      }
+    else if (*op_constraint == 'f')
+      {
+        *bit_width = 0x0F;
+      }
+    //as_bad(_(":expected numerical value after i constraint"));
+
+    if (*str == '#')
+      { /* go past # character */
+        str++;
+        if (!ISDIGIT(*op_constraint))
+          as_bad(
+              _(":expected bit length with constraint type i(# immediate) read %c"),
+              *op_constraint);
+        //printf("\n case is i input string is %s",str);
+        op_mask = mc9xgate_get_constant(str, 0xFFFF);
+        /* make sure it fits */
+        for (i = *bit_width; i; i--)
+          {
+            max_size <<= 1;
+            max_size += 1;
+          }
+        if (op_mask > max_size)
+          as_bad(_(":operand too big for constraint"));
+      }
+    else
+      {
+
+        //printf("\n getting relocatable expresson from string %s", str);
+        str = mc9xgate_parse_exp(str, &op_expr);
+
+        fixS *fixp = 0;
+        fixup_required = 1;
+        //printf("\n need to do fixup");
+        if (*op_constraint == '8')
+          { /* mode == M68XG_OP_REL9 */
+            //printf("\n length of opcode name is %d ", strlen(opcode->name));
+            //printf("\n char is %c",opcode->name[strlen(opcode->name)]);
+            //printf("\n char is %c",opcode->name[3]);
+
+            if (opcode->name[strlen(opcode->name) - 1] == 'l')
+              {
+                //printf("\n not 0_register parsing IMM8 with reloc %d", BFD_RELOC_MC9XGATE_IMM8_LO);
+                fixp = fix_new_exp(frag_now, where, 2, &op_expr, FALSE,
+                    BFD_RELOC_MC9XGATE_IMM8_LO); /* BFD_RELOC_MC9XGATE_IMM8 forced type into bfd-in-2 around line 2367 R_MC9XGATE_HI8*/
+                fixp->fx_pcrel_adjust = 0;
+
+              }
+
+            if (opcode->name[strlen(opcode->name) - 1] == 'h')
+              {
+                //printf("\n not 0_register parsing IMM8 with reloc %d", BFD_RELOC_MC9XGATE_IMM8_HI);
+                fixp = fix_new_exp(frag_now, where, 2, &op_expr, FALSE,
+                    BFD_RELOC_MC9XGATE_IMM8_HI); /* BFD_RELOC_MC9XGATE_IMM8 forced type into bfd-in-2 around line 2367 R_MC9XGATE_HI8*/
+                fixp->fx_pcrel_adjust = 0;
+
+              }
+            if (!fixp)
+              {
+                as_bad(_(":unknown relocation"));
+              }
+          }
+        else if (*op_constraint == '4')
+          {
+
+            //printf("\n not 0_register parsing IMM4 with reloc %d", BFD_RELOC_MC9XGATE_IMM4);
+            fixp = fix_new_exp(frag_now, where, 2, &op_expr, FALSE,
+                BFD_RELOC_MC9XGATE_IMM4); /* BFD_RELOC_MC9XGATE_IMM8 forced type into bfd-in-2 around line 2367 R_MC9XGATE_HI8*/
+            fixp->fx_pcrel_adjust = 0;
+            //printf("\n need to gen 4 bit fixup");
+
+          }
+        else if (*op_constraint == '3')
+          {
+            //printf("\n not 0_register parsing IMM3 with reloc %d", BFD_RELOC_MC9XGATE_IMM3);
+            fixp = fix_new_exp(frag_now, where, 2, &op_expr, FALSE,
+                BFD_RELOC_MC9XGATE_IMM3); /* BFD_RELOC_MC9XGATE_IMM8 forced type into bfd-in-2 around line 2367 R_MC9XGATE_HI8*/
+            fixp->fx_pcrel_adjust = 0;
+            //printf("\n need to gen 3 bit fixup");
+          }
+        else
+          {
+            as_bad(_(":unknown relocation constraint size"));
+            //if (*op_constraint == 'f') { /* mode == M68XG_OP_REL10 */
+            //	printf("\n not 0_register parsing 16");
+            //	fixp = fix_new_exp (frag_now, where , 4,
+            //			&op_expr, FALSE, BFD_RELOC_MC9XGATE_IMM8_HI); /* forced type into bfd-in-2 around line 2367 */
+            //	fixp->fx_pcrel_adjust = 0;
+          }
+
+      }
+    //printf("\n length is %c and read %d from get_constant", *op_constraint, op_mask);
+    break;
+  case 'c': /* CCR register expected */
+    if (*str == 'c' || *str == 'C')
+      {
+        *bit_width = 0;
+
+        str = extract_word(str, r_name, sizeof(r_name));
+        //printf("\n in case c extracted %s", r_name);
+
+        if (!(strcmp(r_name, "ccr") || strcmp(r_name, "CCR")))
+          as_bad(_(": expected register name ccr read %s "), r_name);
+
+      }
+    else
+      {
+        as_bad(_(": expected character c or C  read %c"), *str);
+      }
+    break;
+
+  case 'p': /* PC register expected */
+    if (*str == 'p' || *str == 'P')
+      {
+        *bit_width = 0;
+
+        str = extract_word(str, r_name, sizeof(r_name));
+        //printf("\n in case c extracted %s", r_name);
+
+        if (!(strcmp(r_name, "pc") || strcmp(r_name, "PC")))
+          as_bad(_(": expected register name pc read %s "), r_name);
+
+      }
+    else
+      {
+        as_bad(_(": expected character p or P read %c "), *str);
+      }
+    break;
+  case 'b': /* branch expected */
+    //printf("\n getting branch expresson");
+    str = mc9xgate_parse_exp(str, &op_expr);
+    (*op_con)++;
+    op_constraint++;
+    //   	if ((j = op_expr->X_add_number) > 9)
+    //     		as_bad(_(":branch longer than max bits"));
+    //printf("\n reloc number is %d and %d constraint is %c", R_MC9XGATE_PCREL_9, BFD_RELOC_MC9XGATE_PCREL_9, *op_constraint);
+
+    if (op_expr.X_op != O_register)
+      {
+
+        if (*op_constraint == '9')
+          { /* mode == M68XG_OP_REL9 */
+            //printf("\n not 0_register parsing reloc 9");
+            fixS *fixp;
+            fixp = fix_new_exp(frag_now, where, 2, &op_expr, TRUE,
+                R_MC9XGATE_PCREL_9); /* forced type into bfd-in-2 around line 2367 */
+            fixp->fx_pcrel_adjust = 1;
+          }
+        else if (*op_constraint == 'a')
+          { /* mode == M68XG_OP_REL10 */
+            fixS *fixp;
+            fixp = fix_new_exp(frag_now, where, 2, &op_expr, TRUE,
+                R_MC9XGATE_PCREL_10); /* forced type into bfd-in-2 around line 2367 */
+            fixp->fx_pcrel_adjust = 1;
+          }
+      }
+    else
+      {
+        as_fatal(_("Operand `%x' not recognized in fixup8."), op_expr.X_op);
+      }
+    break;
+  case 'm': /* immediate value from macro expansion */
+    //printf("\n trying to apply macro value");
+    (*op_con)++; /* advance the origional format pointer */
+    op_constraint++;
+
+    if (ISDIGIT(*op_constraint))
+      {
+        *bit_width = (int) *op_constraint - '0';
+      }
+    else if (*op_constraint == 'a')
+      {
+        *bit_width = 0xA;
+      }
+    //as_bad(_(":expected numerical value after i constraint"));
+
+    if (*str == '#') /* go past # character */
+      str++;
+    if (!ISDIGIT(*op_constraint))
+      as_bad(
+          _(":expected bit length with constraint type i(# immediate) read %c"),
+          *op_constraint);
+    //printf("\n case is i input string is %s",str);
+    op_mask = (unsigned int) strtol(str, &str, 10);
+    /* make sure it fits */
+    for (i = *bit_width; i; i--)
+      {
+        max_size <<= 1;
+        max_size += 1;
+      }
+    if (op_mask > max_size)
+      as_bad(_(":operand too big for constraint"));
+
+    break;
+  case '?':
+    break;
+
+  default:
+    as_bad(_("unknown constraint `%c'"), *op_constraint);
+    }
+
+  *line = str;
+  return op_mask;
+}
+
+unsigned int
+mc9xgate_detect_format(char *line_in)
+{
+  char c;
+  char sh_format[10]; /* shorthand format */
+  char num_operands = 0;
+  int i = 0;
+  char *str = skip_whitespace(line_in);
+  char previous_char = 0;
+  char process_first_char = 0; /* next character is first of an operand */
+
+  /* strings TODO maybe structure this*/
+  char* i_string =
+    { "i" };
+  char *r_string =
+    { "r" };
+  char *r_r_string =
+    { "r,r" };
+  char *r_r_r_string =
+    { "r,r,r" };
+  char *r_i_string =
+    { "r,i" };
+  char *r_c_string =
+    { "r,c" };
+  char *c_r_string =
+    { "c,r" };
+  char *r_p_string =
+    { "r,p" };
+  char *r_r_i_string =
+    { "r,r,i" };
+  char *r_bug3_string =
+    { "r," }; /* TODO seems there is a bug with the parsing code*/
+  char *r_bug4_string =
+    { ",r" }; /* TODO seems there is a bug with the parsing code*/
+  char *r_bug5_string =
+    { "r,ip" }; /* TODO seems there is a bug with the parsing code*/
+
+  for (i = 0, process_first_char = 1; (c = TOLOWER(*skip_whitespace(str)))
+      && num_operands < 3; ++str)
+    {
+      //	printf("\n debug detect char read %c",c);
+
+      /* mark immediate values incase they are not marked */
+      //	if (ISDIGIT(c) && process_first_char){
+      //		c = '#';
+      //		process_first_char = 0;
+      //	}
+
+      switch (c)
+        {
+      case 'r':
+        if (process_first_char)
+          {
+            process_first_char = 0;
+            if (previous_char == 'c')
+              {
+                sh_format[i++] = 'c'; /* special registers allowed */
+              }
+            else
+              {
+                sh_format[i++] = 'r';
+              }
+          }
+        break;
+      case ',':
+        if (process_first_char)
+          { /* default to an immediate value */
+            sh_format[i++] = 'i';
+          }
+        process_first_char = 1;
+        sh_format[i++] = ',';
+        num_operands++;
+        break;
+      case '#':
+        process_first_char = 0;
+        sh_format[i++] = 'i'; /* immediate address */
+        break;
+      case 'c': /* TODO make expected var work with r case */
+        process_first_char = 0;
+        if (previous_char == 'p')
+          {
+            sh_format[i++] = 'p'; /* special registers allowed */
+          }
+        else
+          {
+            // possobile error message
+          }
+        break;
+      default: /* default to an immediate as an expression */
+        if (process_first_char && c != '+' && c != '-')
+          {
+            process_first_char = 0;
+            sh_format[i++] = 'i'; /* immediate address */
+          }
+        break;
+        }
+      if (c)
+        previous_char = c;
+
+    }
+
+  /* TODO maybe mark this as something else if its always missed as one specific type */
+  if (process_first_char && c)
+    { /* default to an immediate value if char hasnt yet been processed*/
+      sh_format[i++] = 'i';
+    }
+
+  sh_format[i] = 0; /* null terminate */
+
+  /* if there are chars there is at least 1 operand */
+  if (i)
+    num_operands++;
+
+  //printf("\n detected format %s and counted %d operands", sh_format, num_operands);
+  /* TODO MACRO THIS */
+  if (!strcmp(i_string, sh_format) && num_operands == 1)
+    return MC9XGATE_I;
+  if (!strcmp(r_i_string, sh_format) && num_operands == 2)
+    return MC9XGATE_R_I;
+  if (!strcmp(r_r_r_string, sh_format) && num_operands == 3)
+    return MC9XGATE_R_R_R;
+  if (!strcmp(r_r_string, sh_format) && num_operands == 2)
+    return MC9XGATE_R_R;
+  if (!strcmp(r_string, sh_format) && num_operands == 1)
+    return MC9XGATE_R;
+  if (!strcmp(r_c_string, sh_format) && num_operands == 2)
+    return MC9XGATE_R_C;
+  if (!strcmp(c_r_string, sh_format) && num_operands == 2)
+    return MC9XGATE_C_R;
+  if (!strcmp(r_p_string, sh_format) && num_operands == 2)
+    return MC9XGATE_R_P;
+  if (!strcmp(r_r_i_string, sh_format) && num_operands == 3)
+    return MC9XGATE_R_R_I;
+  if (!strcmp(r_bug3_string, sh_format) && num_operands == 2) /* FOR TESTING TODO */
+    return MC9XGATE_R_C;
+  if (!strcmp(r_bug4_string, sh_format) && num_operands == 2) /* FOR TESTING TODO */
+    return MC9XGATE_C_R;
+  if (!strcmp(r_bug5_string, sh_format) && num_operands == 2) /* FOR TESTING TODO */
+    return MC9XGATE_R_P;
+  if (!num_operands)
+    return MC9XGATE_INH;
+  return 0;
+}
+
+static struct mc9xgate_opcode*
+mc9xgate_find_match(struct mc9xgate_opcode_handle *opcode_handle,
+    unsigned char numberOfModes, unsigned int sh_format)
+{
+  struct mc9xgate_opcode *opcode = 0;
+
+  while (numberOfModes)
+    {
+      switch (numberOfModes)
+        {
+      case 1:
+        if (opcode_handle->opc0->sh_format & sh_format)
+          opcode = opcode_handle->opc0;
+        break;
+      case 2:
+        if (opcode_handle->opc1->sh_format & sh_format)
+          opcode = opcode_handle->opc1;
+        break;
+      case 3:
+        if (opcode_handle->opc2->sh_format & sh_format)
+          opcode = opcode_handle->opc2;
+        break;
+      case 4:
+        if (opcode_handle->opc3->sh_format & sh_format)
+          opcode = opcode_handle->opc3;
+      case 5:
+        if (opcode_handle->opc2->sh_format & sh_format)
+          opcode = opcode_handle->opc2;
+        break;
+      default:
+        as_bad((":Error too many operand to opcode combinations"));
+        }
+      numberOfModes--;
+    }
+  return opcode;
+}
+
diff -rupN binutils-2.20/gas/config/tc-mc9xgate.c-old binutils-2.20-sean/gas/config/tc-mc9xgate.c-old
--- binutils-2.20/gas/config/tc-mc9xgate.c-old	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9xgate.c-old	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,3338 @@
+/* tc-m68hc11.c -- Assembler code for the Motorola 68HC11 & 68HC12.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to
+   the Free Software Foundation, 51 Franklin Street - Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
+/*
+ * scratch data
+ * Can't disassemble for architecture
+ * mc9xgate_alias
+ * mc9s12x_alias
+ */
+#include "as.h"
+#include "safe-ctype.h"
+#include "subsegs.h"
+#include "opcode/mc9xgate.h"
+#include "dwarf2dbg.h"
+#include "elf/mc9xgate.h"
+#include "stdio.h" /* TODO only here for testing */
+
+/* temp macros */
+#define MC9XGATE_OP_REG 		44
+#define MC9XGATE_OP_JUMP_REL	55
+#define MC9XGATE_OP_JUMP_REL16	66
+#define MC9XGATE_OP_IX			77
+#define MC9XGATE_OP_IY			88
+#define MC9XGATE_OP_REG_2		99
+/* end temp macros */
+
+const char comment_chars[] = ";!";
+const char line_comment_chars[] = "#*";
+const char line_separator_chars[] = "";
+
+const char EXP_CHARS[] = "eE";
+const char FLT_CHARS[] = "dD";
+
+#define STATE_CONDITIONAL_BRANCH	(1)
+#define STATE_PC_RELATIVE		(2)
+#define STATE_INDEXED_OFFSET            (3)
+#define STATE_INDEXED_PCREL             (4)
+#define STATE_XBCC_BRANCH               (5)
+#define STATE_CONDITIONAL_BRANCH_6812	(6)
+
+#define STATE_BYTE			(0)
+#define STATE_BITS5                     (0)
+#define STATE_WORD			(1)
+#define STATE_BITS9                     (1)
+#define STATE_LONG			(2)
+#define STATE_BITS16                    (2)
+#define STATE_UNDF			(3)	/* Symbol undefined in pass1 */
+
+/* This macro has no side-effects.  */
+#define ENCODE_RELAX(what,length) (((what) << 2) + (length))
+#define RELAX_STATE(s) ((s) >> 2)
+#define RELAX_LENGTH(s) ((s) & 3)
+
+#define IS_OPCODE(C1,C2)        (((C1) & 0x0FF) == ((C2) & 0x0FF))
+
+/* This table describes how you change sizes for the various types of variable
+   size expressions.  This version only supports two kinds.  */
+
+/* The fields are:
+   How far Forward this mode will reach.
+   How far Backward this mode will reach.
+   How many bytes this mode will add to the size of the frag.
+   Which mode to go to if the offset won't fit in this one.  */
+
+relax_typeS md_relax_table[] = {
+  {1, 1, 0, 0},			/* First entries aren't used.  */
+  {1, 1, 0, 0},			/* For no good reason except.  */
+  {1, 1, 0, 0},			/* that the VAX doesn't either.  */
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L>.
+     These insns are translated into b!cc +3 jmp L.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bsr <L> and bra <L>.
+     These insns are translated into jsr and jmp.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD)},
+  {0, 0, 1, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for indexed offset: 5-bits, 9-bits, 16-bits.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9)},
+  {(255), (-256), 1, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for PC relative offset: 5-bits, 9-bits, 16-bits.
+     For the 9-bit case, there will be a -1 correction to take into
+     account the new byte that's why the range is -255..256.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9)},
+  {(256), (-255), 1, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for dbeq/ibeq/tbeq r,<L>:
+     These insns are translated into db!cc +3 jmp L.  */
+  {(255), (-256), 0, ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L> on 68HC12.
+     These insns are translated into lbcc <L>.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+};
+
+/* mc9Xgate registers all are 16-bit.  They are numbered according to the mc9xgate.  */
+typedef enum register_id {
+  REG_NONE = -1,
+  REG_A = 0,  /* is tied to the value “$0000”
+                Selecting R0 as destination register will discard the result of the instruction. Only
+                the Condition Code Register will be updated  */
+  REG_B = 1, /* variable pointer, It is preloaded with the initial variable pointer
+                of the channel’s service request vector  */
+  REG_C = 2,
+  REG_D = 3,
+  REG_E = 4,
+  REG_F = 5,
+  REG_G = 6,
+  REG_H = 7,
+  REG_CCR = 8, //was 8 set to 55 for testing
+  REG_PC = 9
+} register_id;
+
+typedef struct operand {
+  expressionS exp;
+  register_id reg1;
+  register_id reg2;
+  int mode;
+} operand;
+
+struct mc9xgate_opcode_def {
+  long format;
+  int min_operands;
+  int max_operands;
+  int nb_modes;
+  int used;
+  struct mc9xgate_opcode *opcode;
+};
+
+static struct mc9xgate_opcode_def *mc9xgate_opcode_defs = 0;
+static int mc9xgate_nb_opcode_defs = 0;
+/* disable since we are not using
+typedef struct alias {
+  const char *name;
+  const char *alias;
+} alias;
+
+static alias alias_opcodes[] = {
+  {"cpd", "cmpd"},
+  {"cpx", "cmpx"},
+  {"cpy", "cmpy"},
+  {0, 0}
+};
+*/
+/* Local functions.  */
+static register_id reg_name_search (char *);
+static register_id register_name (void);
+static int cmp_opcode (struct mc9xgate_opcode *, struct mc9xgate_opcode *);
+static char *print_opcode_format (struct mc9xgate_opcode *, int);
+static char *skip_whites (char *);
+static int check_range (long, int);
+static void print_opcode_list (void);
+static void get_default_target (void);
+static void print_insn_format (char *);
+static int get_operand (operand *, int, long);
+static void fixup8 (expressionS *, int, int);
+static void fixup16 (expressionS *, int, int);
+static void fixup24 (expressionS *, int, int);
+static unsigned char convert_branch (unsigned char);
+static char *mc9xgate_new_insn (int);
+static void build_dbranch_insn (struct mc9xgate_opcode *,
+                                operand *, int, int);
+static int build_indexed_byte (operand *, int, int);
+static int build_reg_mode (operand *, int);
+
+static struct mc9xgate_opcode *find (struct mc9xgate_opcode_def *,
+                                    operand *, int);
+static struct mc9xgate_opcode *find_opcode (struct mc9xgate_opcode_def *,
+                                           operand *, int *);
+static void build_jump_insn (struct mc9xgate_opcode *, operand *, int, int);
+static void build_insn (struct mc9xgate_opcode *, operand *, int);
+static int relaxable_symbol (symbolS *);
+
+/* Pseudo op to indicate a relax group.  */
+static void s_mc9xgate_relax (int);
+
+/* Pseudo op to control the ELF flags.  */
+static void s_mc9xgate_mode (int);
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void s_mc9xgate_mark_symbol (int);
+
+/* Controls whether relative branches can be turned into long branches.
+   When the relative offset is too large, the insn are changed:
+    bra -> jmp
+    bsr -> jsr
+    bcc -> b!cc +3
+           jmp L
+    dbcc -> db!cc +3
+            jmp L
+
+  Setting the flag forbidds this.  */
+static short flag_fixed_branches = 0;
+
+/* Force to use long jumps (absolute) instead of relative branches.  */
+static short flag_force_long_jumps = 0;
+
+/* Change the direct addressing mode into an absolute addressing mode
+   when the insn does not support direct addressing.
+   For example, "clr *ZD0" is normally not possible and is changed
+   into "clr ZDO".  */
+static short flag_strict_direct_addressing = 1;
+
+/* When an opcode has invalid operand, print out the syntax of the opcode
+   to stderr.  */
+static short flag_print_insn_syntax = 0;
+
+/* Dumps the list of instructions with syntax and then exit:
+   1 -> Only dumps the list (sorted by name)
+   2 -> Generate an example (or test) that can be compiled.  */
+static short flag_print_opcodes = 0;
+
+/* Opcode hash table.  */
+static struct hash_control *mc9xgate_hash;
+
+/* Current cpu (either cpu6811 or cpu6812).  This is determined automagically
+   by 'get_default_target' by looking at default BFD vector.  This is overridden
+   with the -m<cpu> option.  */
+static int current_architecture = 0;
+
+/* Default cpu determined by 'get_default_target'.  */
+static const char *default_cpu;
+
+/* Number of opcodes in the sorted table (filtered by current cpu).  */
+static int num_opcodes;
+
+/* The opcodes sorted by name and filtered by current cpu.  */
+static struct mc9xgate_opcode *mc9xgate_sorted_opcodes;
+
+/* ELF flags to set in the output file header.  */
+static int elf_flags = E_MC9XGATE_F64;
+
+/* These are the machine dependent pseudo-ops.  These are included so
+   the assembler can work on the output from the SUN C compiler, which
+   generates these.  */
+
+/* This table describes all the machine specific pseudo-ops the assembler
+   has to support.  The fields are:
+   pseudo-op name without dot
+   function to call to execute this pseudo-op
+   Integer arg to pass to the function.  */
+const pseudo_typeS md_pseudo_table[] = {
+  /* The following pseudo-ops are supported for MRI compatibility.  */
+  {"fcb", cons, 1},
+  {"fdb", cons, 2},
+  {"fcc", stringer, 8 + 1},
+  {"rmb", s_space, 0},
+
+  /* Motorola ALIS.  */
+  {"xrefb", s_ignore, 0}, /* Same as xref  */
+
+  /* Gcc driven relaxation.  */
+  {"relax", s_mc9xgate_relax, 0},
+
+  /* .mode instruction (ala SH).  */
+  {"mode", s_mc9xgate_mode, 0},
+
+  /* .far instruction.  */
+  {"far", s_mc9xgate_mark_symbol, STO_MC9XGATE_FAR},
+
+  /* .interrupt instruction.  */
+  {"interrupt", s_mc9xgate_mark_symbol, STO_MC9XGATE_INTERRUPT},
+
+  {0, 0, 0}
+};
+
+/* Options and initialization.  */
+
+const char *md_shortopts = "Sm:";
+
+struct option md_longopts[] = {
+#define OPTION_FORCE_LONG_BRANCH (OPTION_MD_BASE)
+  {"force-long-branches", no_argument, NULL, OPTION_FORCE_LONG_BRANCH},
+  {"force-long-branchs", no_argument, NULL, OPTION_FORCE_LONG_BRANCH}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_SHORT_BRANCHES     (OPTION_MD_BASE + 1)
+  {"short-branches", no_argument, NULL, OPTION_SHORT_BRANCHES},
+  {"short-branchs", no_argument, NULL, OPTION_SHORT_BRANCHES}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_STRICT_DIRECT_MODE  (OPTION_MD_BASE + 2)
+  {"strict-direct-mode", no_argument, NULL, OPTION_STRICT_DIRECT_MODE},
+
+#define OPTION_PRINT_INSN_SYNTAX  (OPTION_MD_BASE + 3)
+  {"print-insn-syntax", no_argument, NULL, OPTION_PRINT_INSN_SYNTAX},
+
+#define OPTION_PRINT_OPCODES  (OPTION_MD_BASE + 4)
+  {"print-opcodes", no_argument, NULL, OPTION_PRINT_OPCODES},
+
+#define OPTION_GENERATE_EXAMPLE  (OPTION_MD_BASE + 5)
+  {"generate-example", no_argument, NULL, OPTION_GENERATE_EXAMPLE},
+
+#define OPTION_MSHORT  (OPTION_MD_BASE + 6)
+  {"mshort", no_argument, NULL, OPTION_MSHORT},
+
+#define OPTION_MLONG  (OPTION_MD_BASE + 7)
+  {"mlong", no_argument, NULL, OPTION_MLONG},
+
+#define OPTION_MSHORT_DOUBLE  (OPTION_MD_BASE + 8)
+  {"mshort-double", no_argument, NULL, OPTION_MSHORT_DOUBLE},
+
+#define OPTION_MLONG_DOUBLE  (OPTION_MD_BASE + 9)
+  {"mlong-double", no_argument, NULL, OPTION_MLONG_DOUBLE},
+
+  {NULL, no_argument, NULL, 0}
+};
+size_t md_longopts_size = sizeof (md_longopts);
+
+/* Get the target cpu for the assembler.  This is based on the configure
+   options and on the -m68hc11/-m68hc12 option.  If no option is specified,
+   we must get the default.  */
+const char *
+mc9xgate_arch_format (void)
+{
+  get_default_target ();
+  if (current_architecture & cpumc9xgate) /* TODO find 6811 and replace with s12x or refactor*/
+    return "elf32-mc9xgate";
+  else
+	printf("\n error in tc-mc9xgate line 348 %d ->\n",current_architecture);
+    return "error-line339";
+}
+
+enum bfd_architecture
+mc9xgate_arch (void)
+{
+  get_default_target ();
+  if (current_architecture & cpumc9xgate) /* TODO same as above todo */
+    return bfd_arch_mc9xgate;
+  else
+	printf("\n error in tc-mc9xgate line 348\n");
+    return bfd_arch_mc9xgate;
+}
+
+int
+mc9xgate_mach (void)
+{
+  return 0;
+}
+
+/* Listing header selected according to cpu.  */
+const char *
+mc9xgate_listing_header (void)
+{
+  if (current_architecture & cpumc9xgate)
+    return "MC9XGATE GAS "; /* TODO same as above */
+  else
+    return "ERROR MC9XGATE GAS ";
+}
+
+void
+md_show_usage (FILE *stream)   /* TODO fix options below */
+{
+  get_default_target ();
+  fprintf (stream, _("\
+Motorola 68HC11/68HC12/68HCS12 options:\n\
+  -m68hc11 | -m68hc12 |\n\
+  -m68hcs12               specify the processor [default %s]\n\
+  -mshort                 use 16-bit int ABI (default)\n\
+  -mlong                  use 32-bit int ABI\n\
+  -mshort-double          use 32-bit double ABI\n\
+  -mlong-double           use 64-bit double ABI (default)\n\
+  --force-long-branches   always turn relative branches into absolute ones\n\
+  -S,--short-branches     do not turn relative branches into absolute ones\n\
+                          when the offset is out of range\n\
+  --strict-direct-mode    do not turn the direct mode into extended mode\n\
+                          when the instruction does not support direct mode\n\
+  --print-insn-syntax     print the syntax of instruction in case of error\n\
+  --print-opcodes         print the list of instructions with syntax\n\
+  --generate-example      generate an example of each instruction\n\
+                          (used for testing)\n"), default_cpu);
+
+}
+
+/* Try to identify the default target based on the BFD library.  */
+static void
+get_default_target (void)
+{
+  const bfd_target *target;
+  bfd abfd;
+
+  if (current_architecture != 0)
+    return;
+
+  default_cpu = "unknown";
+  target = bfd_find_target (0, &abfd);
+  printf("\n line 416 target is ->%s",target->name); // for debug
+  if (target && target->name)
+    {
+      if (strcmp (target->name, "elf32-m68hc12") == 0)
+	{
+	  current_architecture = cpumc9xgate;
+	  default_cpu = "mc9xgate";
+	}
+      else if (strcmp (target->name, "elf32-mc9xgate") == 0)
+	{
+      current_architecture = cpumc9xgate;
+	  default_cpu = "mc9xgate";
+	}
+      else
+	{
+	  as_bad (_("Default target `%s' is not supported."), target->name);
+	}
+    }
+}
+
+void
+mc9xgate_print_statistics (FILE *file)
+{
+  int i;
+  struct mc9xgate_opcode_def *opc;
+
+  hash_print_statistics (file, "opcode table", mc9xgate_hash);
+
+  opc = mc9xgate_opcode_defs;
+  if (opc == 0 || mc9xgate_nb_opcode_defs == 0)
+    return;
+
+  /* Dump the opcode statistics table.  */
+  fprintf (file, _("Name   # Modes  Min ops  Max ops  Modes mask  # Used\n"));
+  for (i = 0; i < mc9xgate_nb_opcode_defs; i++, opc++)
+    {
+      fprintf (file, "%-7.7s  %5d  %7d  %7d  0x%08lx  %7d\n",
+	       opc->opcode->name,
+	       opc->nb_modes,
+	       opc->min_operands, opc->max_operands, opc->format, opc->used);
+    }
+}
+
+int
+md_parse_option (int c, char *arg)
+{
+  get_default_target ();
+  switch (c)
+    {
+      /* -S means keep external to 2 bit offset rather than 16 bit one.  */
+    case OPTION_SHORT_BRANCHES:
+    case 'S':
+      flag_fixed_branches = 1;
+      break;
+
+    case OPTION_FORCE_LONG_BRANCH:
+      flag_force_long_jumps = 1;
+      break;
+
+    case OPTION_PRINT_INSN_SYNTAX:
+      flag_print_insn_syntax = 1;
+      break;
+
+    case OPTION_PRINT_OPCODES:
+      flag_print_opcodes = 1;
+      break;
+
+    case OPTION_STRICT_DIRECT_MODE:
+      flag_strict_direct_addressing = 0;
+      break;
+
+    case OPTION_GENERATE_EXAMPLE:
+      flag_print_opcodes = 2;
+      break;
+
+    case OPTION_MSHORT:
+      elf_flags &= ~E_MC9XGATE_I32;
+      break;
+
+    case OPTION_MLONG:
+      elf_flags |= E_MC9XGATE_I32;
+      break;
+
+    case OPTION_MSHORT_DOUBLE:
+      elf_flags &= ~E_MC9XGATE_F64;
+      break;
+
+    case OPTION_MLONG_DOUBLE:
+      elf_flags |= E_MC9XGATE_F64;
+      break;
+
+    case 'm':
+      if (strcasecmp (arg, "MC9XGATE") == 0)
+	current_architecture = cpumc9xgate;
+      else if (strcasecmp (arg, "MC9XGATE") == 0)
+	current_architecture = cpumc9xgate;
+      else if (strcasecmp (arg, "68hcs12") == 0)
+	current_architecture = cpumc9xgate | cpumc9xgate;
+      else
+	as_bad (_("Option `%s' is not recognized."), arg);
+      break;
+
+    default:
+      return 0;
+    }
+
+  return 1;
+}
+
+symbolS *
+md_undefined_symbol (char *name ATTRIBUTE_UNUSED)
+{
+  return 0;
+}
+
+char *
+md_atof (int type, char *litP, int *sizeP)
+{
+  return ieee_md_atof (type, litP, sizeP, TRUE);
+}
+
+valueT
+md_section_align (asection *seg, valueT addr)
+{
+  int align = bfd_get_section_alignment (stdoutput, seg);
+  return ((addr + (1 << align) - 1) & (-1 << align));
+}
+
+static int
+cmp_opcode (struct mc9xgate_opcode *op1, struct mc9xgate_opcode *op2)
+{
+  return strcmp (op1->name, op2->name);
+}
+
+#define IS_CALL_SYMBOL(MODE) \
+(((MODE) & (MC9XGATE_OP_PAGE|MC9XGATE_OP_IND16)) \
+  == ((MC9XGATE_OP_PAGE|MC9XGATE_OP_IND16)))
+
+/* Initialize the assembler.  Create the opcode hash table
+   (sorted on the names) with the M6811 opcode table
+   (from opcode library).  */
+void
+md_begin (void)
+{
+  printf("\n IN MD_BEGIN\n"); /* TODO FOR TESTING */
+  char *prev_name = "";
+  struct mc9xgate_opcode *opcodes;
+  struct mc9xgate_opcode_def *opc = 0;
+  int i;  /* removed j */
+
+  get_default_target ();
+
+  mc9xgate_hash = hash_new ();
+
+  opcodes = (struct mc9xgate_opcode *) xmalloc (mc9xgate_num_opcodes *
+					       sizeof (struct
+						       mc9xgate_opcode));
+  mc9xgate_sorted_opcodes = opcodes;
+  num_opcodes = 0;
+  printf("\n seize of root structure %d",sizeof (struct mc9xgate_opcode)); //returns 16 SAME AS ORIGI code
+  printf("\n size of opcodes %d \n",mc9xgate_num_opcodes);  //origional code returns 775  this returns 575 since we are dropping hc11 codes
+  printf("\nCurrent arch is %d\n",current_architecture);  // this code returns 4 orig returns 4
+
+  for (i = 0; i < mc9xgate_num_opcodes; i++)
+    {
+      if (mc9xgate_opcodes[i].arch & current_architecture)
+      {
+      opcodes[num_opcodes] = mc9xgate_opcodes[i];
+	  if (opcodes[num_opcodes].name[0] == 'b'   /* get the first letter of the name */
+	      && opcodes[num_opcodes].format & MC9XGATE_OP_JUMP_REL
+	      && !(opcodes[num_opcodes].format & MC9XGATE_OP_BITMASK))
+	    {
+		//  printf("\n num_opcodes++ %s",opcodes[num_opcodes].name);  //should return 618
+	      opcodes[num_opcodes] = mc9xgate_opcodes[i];
+	    }
+	  num_opcodes++;
+	  /*
+	   * since we are dropping hc11 the code below will be dropped, if this code is to be renabled mc9xgate_num_opcodes must be added to the size
+	   * of the alias table or qsort will segfault  or something like that
+	   */
+
+	  /*for (j = 0; alias_opcodes[j].name != 0; j++)
+	    if (strcmp (mc9xgate_opcodes[i].name, alias_opcodes[j].name) == 0)
+	      {
+		opcodes[num_opcodes] = mc9xgate_opcodes[i];
+		opcodes[num_opcodes].name = alias_opcodes[j].alias;
+		num_opcodes++;
+		break;
+	      }
+	      */
+	}
+    }
+  //print_opcode_list();
+  //printf("\n number of OPcodes %d",num_opcodes);  //should be 599
+  //printf("\n done building table\n");
+  qsort (opcodes, num_opcodes, sizeof (struct mc9xgate_opcode),
+         (int (*) (const void*, const void*)) cmp_opcode);
+
+  //print_opcode_list();
+  //printf("\n done sorting \n");
+
+  opc = (struct mc9xgate_opcode_def *)
+    xmalloc (num_opcodes * sizeof (struct mc9xgate_opcode_def));
+  mc9xgate_opcode_defs = opc--;
+
+  /* Insert unique names into hash table.  The M6811 instruction set
+     has several identical opcode names that have different opcodes based
+     on the operands.  This hash table then provides a quick index to
+     the first opcode with a particular name in the opcode table.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      int expect;
+
+      if (strcmp (prev_name, opcodes->name))
+	{
+	  prev_name = (char *) opcodes->name;
+
+	  opc++;
+	  opc->format = 0;
+	  opc->min_operands = 100;
+	  opc->max_operands = 0;
+	  opc->nb_modes = 0;
+	  opc->opcode = opcodes;
+	  opc->used = 0;
+	  hash_insert (mc9xgate_hash, opcodes->name, opc);
+	}
+      opc->nb_modes++;
+      opc->format |= opcodes->format;
+
+      /* See how many operands this opcode needs.  */
+      expect = 0;
+      if (opcodes->format & MC9XGATE_OP_MASK)
+	expect++;
+      if (opcodes->format & MC9XGATE_OP_BITMASK)
+	expect++;
+      if (opcodes->format & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+	expect++;
+      if (opcodes->format & (MC9XGATE_OP_IND16_P2 | MC9XGATE_OP_IDX_P2))
+	expect++;
+      /* Special case for call instruction.  */
+      if ((opcodes->format & MC9XGATE_OP_PAGE)
+          && !(opcodes->format & MC9XGATE_OP_IND16))
+        expect++;
+
+      if (expect < opc->min_operands)
+	opc->min_operands = expect;
+      if (IS_CALL_SYMBOL (opcodes->format))
+         expect++;
+      if (expect > opc->max_operands)
+	opc->max_operands = expect;
+    }
+  opc++;
+  mc9xgate_nb_opcode_defs = opc - mc9xgate_opcode_defs;
+
+
+  printf("\n at end of MD_BEGIN \n");
+
+
+  if (flag_print_opcodes)
+    {
+      print_opcode_list ();
+      exit (EXIT_SUCCESS);
+    }
+}
+
+void
+mc9xgate_init_after_args (void)
+{
+}
+
+/* Builtin help.  */
+
+/* Return a string that represents the operand format for the instruction.
+   When example is true, this generates an example of operand.  This is used
+   to give an example and also to generate a test.  */
+static char *
+print_opcode_format (struct mc9xgate_opcode *opcode, int example)
+{
+  static char buf[128];
+  int format = opcode->format;
+  char *p;
+
+  p = buf;
+  buf[0] = 0;
+  if (format & MC9XGATE_OP_IMM8)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<imm8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_IMM16_REMOVE)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FFFF);
+      else
+	strcpy (p, _("#<imm16>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_IX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_IY)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_IDX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, "n,r");
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_PAGE)
+    {
+      if (example)
+	sprintf (p, ", %d", rand () & 0x0FF);
+      else
+	strcpy (p, ", <page>");
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_DIRECT)
+    {
+      if (example)
+	sprintf (p, "*Z%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("*<abs8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & MC9XGATE_OP_BITMASK)
+    {
+      if (buf[0])
+	*p++ = ' ';
+
+      if (example)
+	sprintf (p, "#$%02x", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<mask>"));
+
+      p = &p[strlen (p)];
+      if (format & MC9XGATE_OP_JUMP_REL)
+	*p++ = ' ';
+    }
+
+  if (format & MC9XGATE_OP_IND16)
+    {
+      if (example)
+	sprintf (p, _("symbol%d"), rand () & 0x0FF);
+      else
+	strcpy (p, _("<abs>"));
+
+      p = &p[strlen (p)];
+    }
+
+  if (format & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+    {
+      if (example)
+	{
+	  if (format & MC9XGATE_OP_BITMASK)
+	    {
+	      sprintf (p, ".+%d", rand () & 0x7F);
+	    }
+	  else
+	    {
+	      sprintf (p, "L%d", rand () & 0x0FF);
+	    }
+	}
+      else
+	strcpy (p, _("<label>"));
+    }
+
+  return buf;
+}
+
+/* Prints the list of instructions with the possible operands.  */
+static void
+print_opcode_list (void)
+{
+  int i;
+  char *prev_name = "";
+  struct mc9xgate_opcode *opcodes;
+  int example = flag_print_opcodes == 2;
+
+  if (example)
+    printf (_("# Example of `%s' instructions\n\t.sect .text\n_start:\n"),
+	    default_cpu);
+
+  opcodes = mc9xgate_sorted_opcodes;
+
+  /* Walk the list sorted on names (by md_begin).  We only report
+     one instruction per line, and we collect the different operand
+     formats.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      char *fmt = print_opcode_format (opcodes, example);
+
+      if (example)
+	{
+	  printf ("L%d:\t", i);
+	  printf ("%s %s\n", opcodes->name, fmt);
+	}
+      else
+	{
+	  if (strcmp (prev_name, opcodes->name))
+	    {
+	      if (i > 0)
+		printf ("\n");
+
+	      printf ("%-5.5s ", opcodes->name);
+	      prev_name = (char *) opcodes->name;
+	    }
+	  if (fmt[0])
+	    printf ("  [%s]", fmt);
+	}
+    }
+  printf ("\n");
+}
+
+/* Print the instruction format.  This operation is called when some
+   instruction is not correct.  Instruction format is printed as an
+   error message.  */
+static void
+print_insn_format (char *name)
+{
+  struct mc9xgate_opcode_def *opc;
+  struct mc9xgate_opcode *opcode;
+  char buf[128];
+
+  opc = (struct mc9xgate_opcode_def *) hash_find (mc9xgate_hash, name);
+  if (opc == NULL)
+    {
+      as_bad (_("Instruction `%s' is not recognized."), name);
+      return;
+    }
+  opcode = opc->opcode;
+
+  as_bad (_("Instruction formats for `%s':"), name);
+  do
+    {
+      char *fmt;
+
+      fmt = print_opcode_format (opcode, 0);
+      sprintf (buf, "\t%-5.5s %s", opcode->name, fmt);
+
+      as_bad ("%s", buf);
+      opcode++;
+    }
+  while (strcmp (opcode->name, name) == 0);
+}
+
+/* Analysis of 68HC11 and 68HC12 operands.  */
+
+/* reg_name_search() finds the register number given its name.
+   Returns the register number or REG_NONE on failure.  */
+static register_id
+reg_name_search (char *name)
+{
+  if (strcasecmp (name, "r0") == 0)
+    return REG_A;
+  if (strcasecmp (name, "r1") == 0 )
+    return REG_B;
+  if (strcasecmp (name, "r2") == 0)
+    return REG_C;
+  if (strcasecmp (name, "r3") == 0)
+    return REG_D;
+  if (strcasecmp (name, "r4") == 0)
+    return REG_E;
+  if (strcasecmp (name, "r5") == 0)
+    return REG_F;
+  if (strcasecmp (name, "r6") == 0)
+    return REG_G;
+  if (strcasecmp (name, "ccr") == 0)
+    return REG_CCR;
+
+  return REG_NONE;
+}
+
+static char *
+skip_whites (char *p)
+{
+  while (*p == ' ' || *p == '\t')
+    p++;
+
+  return p;
+}
+
+/* Check the string at input_line_pointer
+   to see if it is a valid register name.  */
+static register_id
+register_name (void)
+{
+  register_id reg_number;
+  char c, *p = input_line_pointer;
+
+  if (!is_name_beginner (*p++))
+    return REG_NONE;
+
+  while (is_part_of_name (*p++))
+    continue;
+
+  c = *--p;
+  if (c)
+    *p++ = 0;
+
+  /* Look to see if it's in the register table.  */
+  reg_number = reg_name_search (input_line_pointer);
+  if (reg_number != REG_NONE)
+    {
+      if (c)
+	*--p = c;
+
+      input_line_pointer = p;
+      return reg_number;
+    }
+  if (c)
+    *--p = c;
+
+  return reg_number;
+}
+#define MC9XGATE_OP_CALL_ADDR    0x00800000
+#define MC9XGATE_OP_PAGE_ADDR    0x04000000
+
+/* Parse a string of operands and return an array of expressions.
+
+   Operand      mode[0]         mode[1]       exp[0]       exp[1]
+   #n           M6811_OP_IMM16  -             O_*
+   *<exp>       M6811_OP_DIRECT -             O_*
+   .{+-}<exp>   M6811_OP_JUMP_REL -           O_*
+   <exp>        M6811_OP_IND16  -             O_*
+   ,r N,r       M6812_OP_IDX    M6812_OP_REG  O_constant   O_register
+   n,-r         M6812_PRE_DEC   M6812_OP_REG  O_constant   O_register
+   n,+r         M6812_PRE_INC   " "
+   n,r-         M6812_POST_DEC  " "
+   n,r+         M6812_POST_INC  " "
+   A,r B,r D,r  M6811_OP_REG    M6812_OP_REG  O_register   O_register
+   [D,r]        M6811_OP_D_IDX  M6812_OP_REG  O_register   O_register
+   [n,r]        M6811_OP_D_IDX_2 M6812_OP_REG  O_constant   O_register  */
+static int
+get_operand (operand *oper, int which, long opmode)
+{
+  char *p = input_line_pointer;
+  int mode;
+  register_id reg;
+
+  oper->exp.X_op = O_absent;
+  oper->reg1 = REG_NONE;
+  oper->reg2 = REG_NONE;
+  mode = MC9XGATE_OP_NONE;
+
+  p = skip_whites (p);
+
+  if (*p == 0 || *p == '\n' || *p == '\r')
+    {
+      input_line_pointer = p;
+      return 0;
+    }
+
+  if (*p == '*' && (opmode & (MC9XGATE_OP_DIRECT | MC9XGATE_OP_IND16)))
+    {
+      mode = MC9XGATE_OP_DIRECT;
+      p++;
+    }
+  else if (*p == '#')
+    {
+      if (!(opmode & (MC9XGATE_OP_IMM8 | MC9XGATE_OP_IMM16_REMOVE | MC9XGATE_OP_BITMASK)))
+	{
+	  as_bad (_("Immediate operand is not allowed for operand %d."),
+		  which);
+	  return -1;
+	}
+
+      mode = MC9XGATE_OP_IMM16_REMOVE;
+      p++;
+      if (strncmp (p, "%hi", 3) == 0)
+	{
+	  p += 3;
+	  mode |= MC9XGATE_OP_HIGH_ADDR;
+	}
+      else if (strncmp (p, "%lo", 3) == 0)
+	{
+	  p += 3;
+	  mode |= MC9XGATE_OP_LOW_ADDR;
+	}
+      /* %page modifier is used to obtain only the page number
+         of the address of a function.  */
+      else if (strncmp (p, "%page", 5) == 0)
+	{
+	  p += 5;
+	  mode |= MC9XGATE_OP_PAGE_ADDR;
+	}
+
+      /* %addr modifier is used to obtain the physical address part
+         of the function (16-bit).  For 68HC12 the function will be
+         mapped in the 16K window at 0x8000 and the value will be
+         within that window (although the function address may not fit
+         in 16-bit).  See bfd/elf32-m68hc12.c for the translation.  */
+      else if (strncmp (p, "%addr", 5) == 0)
+	{
+	  p += 5;
+	  mode |= MC9XGATE_OP_CALL_ADDR;
+	}
+    }
+  else if (*p == '.' && (p[1] == '+' || p[1] == '-'))
+    {
+      p++;
+      mode = MC9XGATE_OP_JUMP_REL;
+    }
+  else if (*p == '[')
+    {
+	  /* TODO fix */
+      if (current_architecture & cpumc9xgate)
+	as_bad (_("Indirect indexed addressing is not valid for 68HC11."));
+
+      p++;
+      mode = MC9XGATE_OP_D_IDX;
+      p = skip_whites (p);
+    }
+  else if (*p == ',')		/* Special handling of ,x and ,y.  */
+    {
+      p++;
+      input_line_pointer = p;
+
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  oper->reg1 = reg;
+	  oper->exp.X_op = O_constant;
+	  oper->exp.X_add_number = 0;
+	  oper->mode = MC9XGATE_OP_IDX;
+	  return 1;
+	}
+      as_bad (_("Spurious `,' or bad indirect register addressing mode."));
+      return -1;
+    }
+  /* Handle 68HC12 page specification in 'call foo,%page(bar)'.  */
+  else if ((opmode & MC9XGATE_OP_PAGE) && strncmp (p, "%page", 5) == 0)
+    {
+      p += 5;
+      mode = MC9XGATE_OP_PAGE_ADDR |MC9XGATE_OP_PAGE | MC9XGATE_OP_IND16;
+    }
+  input_line_pointer = p;
+
+  if (mode == MC9XGATE_OP_NONE || mode == MC9XGATE_OP_D_IDX)
+    reg = register_name ();
+  else
+    reg = REG_NONE;
+
+  if (reg != REG_NONE)
+    {
+      p = skip_whites (input_line_pointer);
+      if (*p == ']' && mode == MC9XGATE_OP_D_IDX)
+	{
+	  as_bad
+	    (_("Missing second register or offset for indexed-indirect mode."));
+	  return -1;
+	}
+
+      oper->reg1 = reg;
+      oper->mode = mode | MC9XGATE_OP_REG;
+      if (*p != ',')
+	{
+	  if (mode == MC9XGATE_OP_D_IDX)
+	    {
+	      as_bad (_("Missing second register for indexed-indirect mode."));
+	      return -1;
+	    }
+	  return 1;
+	}
+
+      p++;
+      input_line_pointer = p;
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  p = skip_whites (input_line_pointer);
+	  if (mode == MC9XGATE_OP_D_IDX)
+	    {
+	      if (*p != ']')
+		{
+		  as_bad (_("Missing `]' to close indexed-indirect mode."));
+		  return -1;
+		}
+	      p++;
+              oper->mode = MC9XGATE_OP_D_IDX;
+	    }
+	  input_line_pointer = p;
+
+	  oper->reg2 = reg;
+	  return 1;
+	}
+      return 1;
+    }
+
+  /* In MRI mode, isolate the operand because we can't distinguish
+     operands from comments.  */
+  if (flag_mri)
+    {
+      char c = 0;
+
+      p = skip_whites (p);
+      while (*p && *p != ' ' && *p != '\t')
+	p++;
+
+      if (*p)
+	{
+	  c = *p;
+	  *p = 0;
+	}
+
+      /* Parse as an expression.  */
+      expression (&oper->exp);
+
+      if (c)
+	{
+	  *p = c;
+	}
+    }
+  else
+    {
+      expression (&oper->exp);
+    }
+
+  if (oper->exp.X_op == O_illegal)
+    {
+      as_bad (_("Illegal operand."));
+      return -1;
+    }
+  else if (oper->exp.X_op == O_absent)
+    {
+      as_bad (_("Missing operand."));
+      return -1;
+    }
+
+  p = input_line_pointer;
+
+  if (mode == MC9XGATE_OP_NONE || mode == MC9XGATE_OP_DIRECT
+      || mode == MC9XGATE_OP_D_IDX)
+    {
+      p = skip_whites (input_line_pointer);
+
+      if (*p == ',')
+	{
+	  int possible_mode = MC9XGATE_OP_NONE;
+	  char *old_input_line;
+
+	  old_input_line = p;
+	  p++;
+
+	  /* 68HC12 pre increment or decrement.  */
+	  if (mode == MC9XGATE_OP_NONE)
+	    {
+	      if (*p == '-')
+		{
+		  possible_mode = MC9XGATE_PRE_DEC;
+		  p++;
+		}
+	      else if (*p == '+')
+		{
+		  possible_mode = MC9XGATE_PRE_INC;
+		  p++;
+		}
+	      p = skip_whites (p);
+	    }
+	  input_line_pointer = p;
+	  reg = register_name ();
+
+	  /* Backtrack if we have a valid constant expression and
+	     it does not correspond to the offset of the 68HC12 indexed
+	     addressing mode (as in N,x).  */
+	  if (reg == REG_NONE && mode == MC9XGATE_OP_NONE
+	      && possible_mode != MC9XGATE_OP_NONE)
+	    {
+	      oper->mode = MC9XGATE_OP_IND16 | MC9XGATE_OP_JUMP_REL;
+	      input_line_pointer = skip_whites (old_input_line);
+	      return 1;
+	    }
+
+	  if (possible_mode != MC9XGATE_OP_NONE)
+	    mode = possible_mode;
+
+	  if ((current_architecture & cpumc9xgate)
+	      && possible_mode != MC9XGATE_OP_NONE)
+	    as_bad (_("Pre-increment mode is not valid for 68HC11"));
+	  /* Backtrack.  */
+	  if (which == 0 && opmode & MC9XGATE_OP_IDX_P2
+	      && reg != REG_A && reg != REG_B
+	      && reg != REG_PC && reg != REG_A)
+	    {
+	      reg = REG_NONE;
+	      input_line_pointer = p;
+	    }
+
+	  if (reg == REG_NONE && mode != MC9XGATE_OP_DIRECT
+	      && !(mode == MC9XGATE_OP_NONE && opmode & MC9XGATE_OP_IND16))
+	    {
+	      as_bad (_("Wrong register in register indirect mode."));
+	      return -1;
+	    }
+	  if (mode == MC9XGATE_OP_D_IDX)
+	    {
+	      p = skip_whites (input_line_pointer);
+	      if (*p++ != ']')
+		{
+		  as_bad (_("Missing `]' to close register indirect operand."));
+		  return -1;
+		}
+	      input_line_pointer = p;
+              oper->reg1 = reg;
+              oper->mode = MC9XGATE_OP_D_IDX_2;
+              return 1;
+	    }
+	  if (reg != REG_NONE)
+	    {
+	      oper->reg1 = reg;
+	      if (mode == MC9XGATE_OP_NONE)
+		{
+		  p = input_line_pointer;
+		  if (*p == '-')
+		    {
+		      mode = MC9XGATE_POST_DEC;
+		      p++;
+		      if (current_architecture & cpumc9xgate)
+			as_bad
+			  (_("Post-decrement mode is not valid for 68HC11."));
+		    }
+		  else if (*p == '+')
+		    {
+		      mode = MC9XGATE_POST_INC;
+		      p++;
+		      if (current_architecture & cpumc9xgate)
+			as_bad
+			  (_("Post-increment mode is not valid for 68HC11."));
+		    }
+		  else
+		    mode = MC9XGATE_OP_IDX;
+
+		  input_line_pointer = p;
+		}
+	      else
+		mode |= MC9XGATE_OP_IDX;
+
+	      oper->mode = mode;
+	      return 1;
+	    }
+          input_line_pointer = old_input_line;
+	}
+
+      if (mode == MC9XGATE_OP_D_IDX_2)
+	{
+	  as_bad (_("Invalid indexed indirect mode."));
+	  return -1;
+	}
+    }
+
+  /* If the mode is not known until now, this is either a label
+     or an indirect address.  */
+  if (mode == MC9XGATE_OP_NONE)
+    mode = MC9XGATE_OP_IND16 | MC9XGATE_OP_JUMP_REL;
+
+  p = input_line_pointer;
+  while (*p == ' ' || *p == '\t')
+    p++;
+  input_line_pointer = p;
+  oper->mode = mode;
+
+  return 1;
+}
+
+#define MC9XGATE_AUTO_INC_DEC (MC9XGATE_PRE_INC | MC9XGATE_PRE_DEC \
+                            | MC9XGATE_POST_INC | MC9XGATE_POST_DEC)
+
+/* Checks that the number 'num' fits for a given mode.  */
+static int
+check_range (long num, int mode)
+{
+  /* Auto increment and decrement are ok for [-8..8] without 0.  */
+  if (mode & MC9XGATE_AUTO_INC_DEC)
+    return (num != 0 && num <= 8 && num >= -8);
+
+  /* The 68HC12 supports 5, 9 and 16-bit offsets.  */
+  if (mode & (MC9XGATE_INDEXED_IND | MC9XGATE_INDEXED | MC9XGATE_OP_IDX))
+    mode = MC9XGATE_OP_IND16;
+
+  if (mode & MC9XGATE_OP_JUMP_REL16)
+    mode = MC9XGATE_OP_IND16;
+
+  mode &= ~MC9XGATE_OP_BRANCH;
+  switch (mode)
+    {
+    case MC9XGATE_OP_IX:
+    case MC9XGATE_OP_IY:
+    case MC9XGATE_OP_DIRECT:
+      return (num >= 0 && num <= 255) ? 1 : 0;
+
+    case MC9XGATE_OP_BITMASK:
+    case MC9XGATE_OP_IMM8:
+    case MC9XGATE_OP_PAGE:
+      return (((num & 0xFFFFFF00) == 0) || ((num & 0xFFFFFF00) == 0xFFFFFF00))
+	? 1 : 0;
+
+    case MC9XGATE_OP_JUMP_REL:
+      return (num >= -128 && num <= 127) ? 1 : 0;
+
+    case MC9XGATE_OP_IND16:
+    case MC9XGATE_OP_IND16 | MC9XGATE_OP_PAGE:
+    case MC9XGATE_OP_IMM16_REMOVE:
+      return (((num & 0xFFFF0000) == 0) || ((num & 0xFFFF0000) == 0xFFFF0000))
+	? 1 : 0;
+
+    case MC9XGATE_OP_IBCC_MARKER:
+    case MC9XGATE_OP_TBCC_MARKER:
+    case MC9XGATE_OP_DBCC_MARKER:
+      return (num >= -256 && num <= 255) ? 1 : 0;
+
+    case MC9XGATE_OP_TRAP_ID:
+      return ((num >= 0x30 && num <= 0x39)
+	      || (num >= 0x40 && num <= 0x0ff)) ? 1 : 0;
+
+    default:
+      return 0;
+    }
+}
+
+/* Gas fixup generation.  */
+
+/* Put a 1 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate an 8-bit fixup.  */
+static void
+fixup8 (expressionS *oper, int mode, int opmode)
+{
+  char *f;
+
+  f = frag_more (1);
+
+  if (oper->X_op == O_constant)
+    {
+      if (mode & MC9XGATE_OP_TRAP_ID
+	  && !check_range (oper->X_add_number, MC9XGATE_OP_TRAP_ID))
+	{
+	  static char trap_id_warn_once = 0;
+
+	  as_bad (_("Trap id `%ld' is out of range."), oper->X_add_number);
+	  if (trap_id_warn_once == 0)
+	    {
+	      trap_id_warn_once = 1;
+	      as_bad (_("Trap id must be within [0x30..0x39] or [0x40..0xff]."));
+	    }
+	}
+
+      if (!(mode & MC9XGATE_OP_TRAP_ID)
+	  && !check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 8-bit range: `%ld'."), oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FF, 1);
+    }
+  else if (oper->X_op != O_register)
+    {
+      if (mode & MC9XGATE_OP_TRAP_ID)
+	as_bad (_("The trap id must be a constant."));
+
+      if (mode == MC9XGATE_OP_JUMP_REL)
+	{
+	  fixS *fixp;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+			      oper, TRUE, BFD_RELOC_8_PCREL);
+	  fixp->fx_pcrel_adjust = 1;
+	}
+      else
+	{
+	  fixS *fixp;
+          int reloc;
+
+	  /* Now create an 8-bit fixup.  If there was some %hi, %lo
+	     or %page modifier, generate the reloc accordingly.  */
+          if (opmode & MC9XGATE_OP_HIGH_ADDR)
+            reloc = BFD_RELOC_MC9XGATE_HI8;
+          else if (opmode & MC9XGATE_OP_LOW_ADDR)
+            reloc = BFD_RELOC_MC9XGATE_LO8;
+          else if (opmode & MC9XGATE_OP_PAGE_ADDR)
+            reloc = BFD_RELOC_MC9XGATE_PAGE;
+          else
+            reloc = BFD_RELOC_8;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+                              oper, FALSE, reloc);
+          if (reloc != BFD_RELOC_8)
+            fixp->fx_no_overflow = 1;
+	}
+      number_to_chars_bigendian (f, 0, 1);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup8."), oper->X_op);
+    }
+}
+
+/* Put a 2 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 16-bit fixup.  */
+static void
+fixup16 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (2);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFF, 2);
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+      int reloc;
+
+      if ((opmode & MC9XGATE_OP_CALL_ADDR) && (mode & MC9XGATE_OP_IMM16_REMOVE))
+        reloc = BFD_RELOC_MC9XGATE_LO16;
+      else if (mode & MC9XGATE_OP_JUMP_REL16)
+        reloc = BFD_RELOC_16_PCREL;
+      else if (mode & MC9XGATE_OP_PAGE)
+        reloc = BFD_RELOC_MC9XGATE_LO16;
+      else
+        reloc = BFD_RELOC_16;
+
+      /* Now create a 16-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+			  oper,
+			  reloc == BFD_RELOC_16_PCREL,
+                          reloc);
+      number_to_chars_bigendian (f, 0, 2);
+      if (reloc == BFD_RELOC_16_PCREL)
+	fixp->fx_pcrel_adjust = 2;
+      if (reloc == BFD_RELOC_MC9XGATE_LO16)
+        fixp->fx_no_overflow = 1;
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* Put a 3 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 24-bit fixup.  */
+static void
+fixup24 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (3);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFFFF, 3);
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+
+      /* Now create a 24-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 3,
+			  oper, FALSE, BFD_RELOC_MC9XGATE_24);
+      number_to_chars_bigendian (f, 0, 3);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* 68HC11 and 68HC12 code generation.  */
+
+/* Translate the short branch/bsr instruction into a long branch.  */
+static unsigned char
+convert_branch (unsigned char code)
+{
+  if (IS_OPCODE (code, MC9XGATE_BSR2))
+    return MC9XGATE_JSR;
+  else if (IS_OPCODE (code, MC9XGATE_BSR))
+    return MC9XGATE_JSR;
+  else if (IS_OPCODE (code, MC9XGATE_BRA))
+    return (current_architecture & cpumc9xgate) ? MC9XGATE_JMP2 : MC9XGATE_JMP2;
+  else
+    as_fatal (_("Unexpected branch conversion with `%x'"), code);
+
+  /* Keep gcc happy.  */
+  return MC9XGATE_JSR2;
+}
+
+/* Start a new insn that contains at least 'size' bytes.  Record the
+   line information of that insn in the dwarf2 debug sections.  */
+static char *
+mc9xgate_new_insn (int size)
+{
+  char *f;
+
+  f = frag_more (size);
+
+  dwarf2_emit_insn (size);
+
+  return f;
+}
+
+/* Builds a jump instruction (bra, bcc, bsr).  */
+static void
+build_jump_insn (struct mc9xgate_opcode *opcode, operand operands[],
+                 int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+  fragS *frag;
+  int where;
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  gas_assert ((opcode->format & MC9XGATE_OP_BITMASK) == 0);
+  gas_assert (nb_operands == 1);
+  gas_assert (operands[0].reg1 == REG_NONE && operands[0].reg2 == REG_NONE);
+
+  code = opcode->opcode;
+
+  n = operands[0].exp.X_add_number;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jbcc and the constant is out of -128..127 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[0].exp.X_op == O_constant
+	  && (!check_range (n, opcode->format) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9XGATE_RL_JUMP);
+
+      if (code == MC9XGATE_BSR || code == MC9XGATE_BRA || code == MC9XGATE_BSR2)
+	{
+	  code = convert_branch (code);
+
+	  f = mc9xgate_new_insn (1);
+	  number_to_chars_bigendian (f, code, 1);
+	}
+      else if (current_architecture & cpumc9xgate)
+	{
+	  /* 68HC12: translate the bcc into a lbcc.  */
+	  f = mc9xgate_new_insn (2);
+	  number_to_chars_bigendian (f, MC9XGATE_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  fixup16 (&operands[0].exp, MC9XGATE_OP_JUMP_REL16,
+		   MC9XGATE_OP_JUMP_REL16);
+	  return;
+	}
+      else
+	{
+	  /* 68HC11: translate the bcc into b!cc +3; jmp <L>.  */
+	  f = mc9xgate_new_insn (3);
+	  code ^= 1;
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 3, 1);
+	  number_to_chars_bigendian (f + 2, MC9XGATE_JMP, 1);
+	}
+      fixup16 (&operands[0].exp, MC9XGATE_OP_IND16, MC9XGATE_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 8-bits.  */
+  if (operands[0].exp.X_op == O_constant)
+    {
+      if (!check_range (n, opcode->format))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else if (opcode->format & MC9XGATE_OP_JUMP_REL16)
+	{
+	  f = mc9xgate_new_insn (4);
+	  number_to_chars_bigendian (f, MC9XGATE_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  number_to_chars_bigendian (f + 2, n & 0x0ffff, 2);
+	}
+      else
+	{
+	  f = mc9xgate_new_insn (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else if (opcode->format & MC9XGATE_OP_JUMP_REL16)
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9XGATE_RL_JUMP);
+
+      f = mc9xgate_new_insn (2);
+      number_to_chars_bigendian (f, MC9XGATE_OPCODE_PAGE2, 1);
+      number_to_chars_bigendian (f + 1, code, 1);
+      fixup16 (&operands[0].exp, MC9XGATE_OP_JUMP_REL16, MC9XGATE_OP_JUMP_REL16);
+    }
+  else
+    {
+      char *opcode;
+
+      frag = frag_now;
+      where = frag_now_fix ();
+      
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_MC9XGATE_RL_JUMP);
+
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  opcode = mc9xgate_new_insn (1);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  fixup8 (&operands[0].exp, MC9XGATE_OP_JUMP_REL, MC9XGATE_OP_JUMP_REL);
+	}
+
+      /* bra/bsr made be changed into jmp/jsr.  */
+      else if (code == MC9XGATE_BSR || code == MC9XGATE_BRA || code == MC9XGATE_BSR2)
+	{
+          /* Allocate worst case storage.  */
+	  opcode = mc9xgate_new_insn (3);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_variant (rs_machine_dependent, 1, 1,
+                        ENCODE_RELAX (STATE_PC_RELATIVE, STATE_UNDF),
+                        operands[0].exp.X_add_symbol, (offsetT) n,
+                        opcode);
+	}
+      else if (current_architecture & cpumc9xgate)
+	{
+	  opcode = mc9xgate_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 2, 2,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+      else
+	{
+	  opcode = mc9xgate_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+    }
+}
+
+/* Builds a dbne/dbeq/tbne/tbeq instruction.  */
+static void
+build_dbranch_insn (struct mc9xgate_opcode *opcode, operand operands[],
+                    int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  gas_assert ((opcode->format & MC9XGATE_OP_BITMASK) == 0);
+  gas_assert (nb_operands == 2);
+  gas_assert (operands[0].reg1 != REG_NONE);
+
+  code = opcode->opcode & 0x0FF;
+
+  f = mc9xgate_new_insn (1);
+  number_to_chars_bigendian (f, code, 1);
+
+  n = operands[1].exp.X_add_number;
+  code = operands[0].reg1;
+
+  if (operands[0].reg1 == REG_NONE || operands[0].reg1 == REG_CCR
+      || operands[0].reg1 == REG_PC)
+    as_bad (_("Invalid register for dbcc/tbcc instruction."));
+
+  if (opcode->format & MC9XGATE_OP_IBCC_MARKER)
+    code |= 0x80;
+  else if (opcode->format & MC9XGATE_OP_TBCC_MARKER)
+    code |= 0x40;
+
+  if (!(opcode->format & MC9XGATE_OP_EQ_MARKER))
+    code |= 0x20;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jdbcc and the constant is out of -256..255 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[1].exp.X_op == O_constant
+	  && (!check_range (n, MC9XGATE_OP_IBCC_MARKER) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      f = frag_more (2);
+      code ^= 0x20;
+      number_to_chars_bigendian (f, code, 1);
+      number_to_chars_bigendian (f + 1, MC9XGATE_JMP2, 1);
+      fixup16 (&operands[0].exp, MC9XGATE_OP_IND16, MC9XGATE_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 9-bits.  */
+  if (operands[1].exp.X_op == O_constant)
+    {
+      if (!check_range (n, MC9XGATE_OP_IBCC_MARKER))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else
+	{
+	  if ((long) n < 0)
+	    code |= 0x10;
+
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else
+    {
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  fixup8 (&operands[0].exp, MC9XGATE_OP_JUMP_REL, MC9XGATE_OP_JUMP_REL);
+	}
+
+      else
+	{
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_UNDF),
+		    operands[1].exp.X_add_symbol, (offsetT) n, f);
+	}
+    }
+}
+
+#define OP_EXTENDED (MC9XGATE_OP_PAGE2 | MC9XGATE_OP_PAGE3 | MC9XGATE_OP_PAGE4)
+
+/* Assemble the post index byte for 68HC12 extended addressing modes.  */
+static int
+build_indexed_byte (operand *op, int format ATTRIBUTE_UNUSED, int move_insn)
+{
+  unsigned char byte = 0;
+  char *f;
+  int mode;
+  long val;
+
+  val = op->exp.X_add_number;
+  mode = op->mode;
+  if (mode & MC9XGATE_AUTO_INC_DEC)
+    {
+      byte = 0x20;
+      if (mode & (MC9XGATE_POST_INC | MC9XGATE_POST_DEC))
+	byte |= 0x10;
+
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, mode))
+	    {
+	      as_bad (_("Increment/decrement value is out of range: `%ld'."),
+		      val);
+	    }
+	  if (mode & (MC9XGATE_POST_INC | MC9XGATE_PRE_INC))
+	    byte |= (val - 1) & 0x07;
+	  else
+	    byte |= (8 - ((val) & 7)) | 0x8;
+	}
+      switch (op->reg1)
+	{
+	case REG_NONE:
+	  as_fatal (_("Expecting a register."));
+
+	case REG_A:
+	  byte |= 0;
+	  break;
+
+	case REG_B:
+	  byte |= 0x40;
+	  break;
+
+	case REG_C:
+	  byte |= 0x80;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register for post/pre increment."));
+	  break;
+	}
+
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+  if (mode & (MC9XGATE_OP_IDX | MC9XGATE_OP_D_IDX_2))
+    {
+      switch (op->reg1)
+	{
+	case REG_A:
+	  byte = 0;
+	  break;
+
+	case REG_B:
+	  byte = 1;
+	  break;
+
+	case REG_C:
+	  byte = 2;
+	  break;
+
+	case REG_PC:
+	  byte = 3;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register."));
+	  break;
+	}
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, MC9XGATE_OP_IDX))
+	    {
+	      as_bad (_("Offset out of 16-bit range: %ld."), val);
+	    }
+
+	  if (move_insn && !(val >= -16 && val <= 15))
+	    {
+	      as_bad (_("Offset out of 5-bit range for movw/movb insn: %ld."),
+		      val);
+	      return -1;
+	    }
+
+	  if (val >= -16 && val <= 15 && !(mode & MC9XGATE_OP_D_IDX_2))
+	    {
+	      byte = byte << 6;
+	      byte |= val & 0x1f;
+	      f = frag_more (1);
+	      number_to_chars_bigendian (f, byte, 1);
+	      return 1;
+	    }
+	  else if (val >= -256 && val <= 255 && !(mode & MC9XGATE_OP_D_IDX_2))
+	    {
+	      byte = byte << 3;
+	      byte |= 0xe0;
+	      if (val < 0)
+		byte |= 0x1;
+	      f = frag_more (2);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FF, 1);
+	      return 2;
+	    }
+	  else
+	    {
+	      byte = byte << 3;
+	      if (mode & MC9XGATE_OP_D_IDX_2)
+		byte |= 0xe3;
+	      else
+		byte |= 0xe2;
+
+	      f = frag_more (3);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FFFF, 2);
+	      return 3;
+	    }
+	}
+      if (mode & MC9XGATE_OP_D_IDX_2)
+        {
+          byte = (byte << 3) | 0xe3;
+          f = frag_more (1);
+          number_to_chars_bigendian (f, byte, 1);
+
+          fixup16 (&op->exp, 0, 0);
+        }
+      else if (op->reg1 != REG_PC)
+	{
+          symbolS *sym;
+          offsetT off;
+
+	  f = frag_more (1);
+	  number_to_chars_bigendian (f, byte, 1);
+          sym = op->exp.X_add_symbol;
+          off = op->exp.X_add_number;
+          if (op->exp.X_op != O_symbol)
+            {
+              sym = make_expr_symbol (&op->exp);
+              off = 0;
+            }
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       sym, off, 0, BFD_RELOC_MC9XGATE_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_UNDF),
+			sym, off, f);
+	    }
+	}
+      else
+	{
+	  f = frag_more (1);
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       op->exp.X_add_symbol, op->exp.X_add_number, 0, BFD_RELOC_MC9XGATE_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_UNDF),
+			op->exp.X_add_symbol,
+			op->exp.X_add_number, f);
+	    }
+	}
+      return 3;
+    }
+
+  if (mode & (MC9XGATE_OP_REG | MC9XGATE_OP_D_IDX))
+    {
+      if (mode & MC9XGATE_OP_D_IDX)
+	{
+	  if (op->reg1 != REG_D)
+	    as_bad (_("Expecting register D for indexed indirect mode."));
+	  if (move_insn)
+	    as_bad (_("Indexed indirect mode is not allowed for movb/movw."));
+
+	  byte = 0xE7;
+	}
+      else
+	{
+	  switch (op->reg1)
+	    {
+	    case REG_E:
+	      byte = 0xE4;
+	      break;
+
+	    case REG_F:
+	      byte = 0xE5;
+	      break;
+
+	    default:
+	      as_bad (_("Invalid accumulator register."));
+
+	    case REG_D:
+	      byte = 0xE6;
+	      break;
+	    }
+	}
+      switch (op->reg2)
+	{
+	case REG_A:
+	  break;
+
+	case REG_B:
+	  byte |= (1 << 3);
+	  break;
+
+	case REG_C:
+	  byte |= (2 << 3);
+	  break;
+
+	case REG_PC:
+	  byte |= (3 << 3);
+	  break;
+
+	default:
+	  as_bad (_("Invalid indexed register."));
+	  break;
+	}
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+  as_fatal (_("Addressing mode not implemented yet."));
+  return 0;
+}
+
+/* Assemble the 68HC12 register mode byte.  */
+static int
+build_reg_mode (operand *op, int format)
+{
+  unsigned char byte;
+  char *f;
+
+  if (format & MC9XGATE_OP_SEX_MARKER
+      && op->reg1 != REG_E && op->reg1 != REG_F && op->reg1 != REG_CCR)
+    as_bad (_("Invalid source register for this instruction, use 'tfr'."));
+  else if (op->reg1 == REG_NONE || op->reg1 == REG_PC)
+    as_bad (_("Invalid source register."));
+
+  if (format & MC9XGATE_OP_SEX_MARKER
+      && op->reg2 != REG_D
+      && op->reg2 != REG_A && op->reg2 != REG_B && op->reg2 != REG_A)
+    as_bad (_("Invalid destination register for this instruction, use 'tfr'."));
+  else if (op->reg2 == REG_NONE || op->reg2 == REG_PC)
+    as_bad (_("Invalid destination register."));
+
+  byte = (op->reg1 << 4) | (op->reg2);
+  if (format & MC9XGATE_OP_EXG_MARKER)
+    byte |= 0x80;
+
+  f = frag_more (1);
+  number_to_chars_bigendian (f, byte, 1);
+  return 1;
+}
+
+/* build_insn takes a pointer to the opcode entry in the opcode table,
+   the array of operand expressions and builds the corresponding instruction.
+   This operation only deals with non relative jumps insn (need special
+   handling).  */
+static void
+build_insn (struct mc9xgate_opcode *opcode, operand operands[],
+            int nb_operands ATTRIBUTE_UNUSED)
+{
+  int i;
+  char *f;
+  long format;
+  int move_insn = 0;
+
+  /* Put the page code instruction if there is one.  */
+  format = opcode->format;
+
+  if (format & MC9XGATE_OP_BRANCH)
+    fix_new (frag_now, frag_now_fix (), 0,
+             &abs_symbol, 0, 1, BFD_RELOC_MC9XGATE_RL_JUMP);
+
+  if (format & OP_EXTENDED)
+    {
+      int page_code;
+
+      f = mc9xgate_new_insn (2);
+      if (format & MC9XGATE_OP_PAGE2)
+	page_code = MC9XGATE_OPCODE_PAGE2;
+      else if (format & MC9XGATE_OP_PAGE3)
+	page_code = MC9XGATE_OPCODE_PAGE3;
+      else
+	page_code = MC9XGATE_OPCODE_PAGE4;
+
+      number_to_chars_bigendian (f, page_code, 1);
+      f++;
+    }
+  else
+    f = mc9xgate_new_insn (1);
+
+  number_to_chars_bigendian (f, opcode->opcode, 1);
+
+  i = 0;
+
+  /* The 68HC12 movb and movw instructions are special.  We have to handle
+     them in a special way.  */
+  if (format & (MC9XGATE_OP_IND16_P2 | MC9XGATE_OP_IDX_P2))
+    {
+      move_insn = 1;
+      if (format & MC9XGATE_OP_IDX)
+	{
+	  build_indexed_byte (&operands[0], format, 1);
+	  i = 1;
+	  format &= ~MC9XGATE_OP_IDX;
+	}
+      if (format & MC9XGATE_OP_IDX_P2)
+	{
+	  build_indexed_byte (&operands[1], format, 1);
+	  i = 0;
+	  format &= ~MC9XGATE_OP_IDX_P2;
+	}
+    }
+
+  if (format & (MC9XGATE_OP_DIRECT | MC9XGATE_OP_IMM8))
+    {
+      fixup8 (&operands[i].exp,
+	      format & (MC9XGATE_OP_DIRECT | MC9XGATE_OP_IMM8 | MC9XGATE_OP_TRAP_ID),
+	      operands[i].mode);
+      i++;
+    }
+  else if (IS_CALL_SYMBOL (format) && nb_operands == 1)
+    {
+      format &= ~MC9XGATE_OP_PAGE;
+      fixup24 (&operands[i].exp, format & MC9XGATE_OP_IND16,
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (MC9XGATE_OP_IMM16_REMOVE | MC9XGATE_OP_IND16))
+    {
+      fixup16 (&operands[i].exp,
+               format & (MC9XGATE_OP_IMM16_REMOVE | MC9XGATE_OP_IND16 | MC9XGATE_OP_PAGE),
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (MC9XGATE_OP_IX | MC9XGATE_OP_IY))
+    {
+      if ((format & MC9XGATE_OP_IX) && (operands[0].reg1 != REG_A))
+	as_bad (_("Invalid indexed register, expecting register X."));
+      if ((format & MC9XGATE_OP_IY) && (operands[0].reg1 != REG_B))
+	as_bad (_("Invalid indexed register, expecting register Y."));
+
+      fixup8 (&operands[0].exp, MC9XGATE_OP_IX, operands[0].mode);
+      i = 1;
+    }
+  else if (format &
+	   (MC9XGATE_OP_IDX | MC9XGATE_OP_IDX_2 | MC9XGATE_OP_IDX_1
+            | MC9XGATE_OP_D_IDX | MC9XGATE_OP_D_IDX_2))
+    {
+      build_indexed_byte (&operands[i], format, move_insn);
+      i++;
+    }
+  else if (format & MC9XGATE_OP_REG && current_architecture & cpumc9xgate)
+    {
+      build_reg_mode (&operands[i], format);
+      i++;
+    }
+  if (format & MC9XGATE_OP_BITMASK)
+    {
+      fixup8 (&operands[i].exp, MC9XGATE_OP_BITMASK, operands[i].mode);
+      i++;
+    }
+  if (format & MC9XGATE_OP_JUMP_REL)
+    {
+      fixup8 (&operands[i].exp, MC9XGATE_OP_JUMP_REL, operands[i].mode);
+    }
+  else if (format & MC9XGATE_OP_IND16_P2)
+    {
+      fixup16 (&operands[1].exp, MC9XGATE_OP_IND16, operands[1].mode);
+    }
+  if (format & MC9XGATE_OP_PAGE)
+    {
+      fixup8 (&operands[i].exp, MC9XGATE_OP_PAGE, operands[i].mode);
+    }
+}
+
+/* Opcode identification and operand analysis.  */
+
+/* find() gets a pointer to an entry in the opcode table.  It must look at all
+   opcodes with the same name and use the operands to choose the correct
+   opcode.  Returns the opcode pointer if there was a match and 0 if none.  */
+static struct mc9xgate_opcode *
+find (struct mc9xgate_opcode_def *opc, operand operands[], int nb_operands)
+{
+  int i, match, pos;
+  struct mc9xgate_opcode *opcode;
+  struct mc9xgate_opcode *op_indirect;
+
+  op_indirect = 0;
+  opcode = opc->opcode;
+
+  /* Now search the opcode table table for one with operands
+     that matches what we've got.  We're only done if the operands matched so
+     far AND there are no more to check.  */
+  for (pos = match = 0; match == 0 && pos < opc->nb_modes; pos++, opcode++)
+    {
+      int poss_indirect = 0;
+      long format = opcode->format;
+      int expect;
+
+      expect = 0;
+      if (opcode->format & MC9XGATE_OP_MASK)
+	expect++;
+      if (opcode->format & MC9XGATE_OP_BITMASK)
+	expect++;
+      if (opcode->format & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+	expect++;
+      if (opcode->format & (MC9XGATE_OP_IND16_P2 | MC9XGATE_OP_IDX_P2))
+	expect++;
+      if ((opcode->format & MC9XGATE_OP_PAGE)
+          && (!IS_CALL_SYMBOL (opcode->format) || nb_operands == 2))
+        expect++;
+
+      for (i = 0; expect == nb_operands && i < nb_operands; i++)
+	{
+	  int mode = operands[i].mode;
+
+	  if (mode & MC9XGATE_OP_IMM16_REMOVE)
+	    {
+	      if (format &
+		  (MC9XGATE_OP_IMM8 | MC9XGATE_OP_IMM16_REMOVE | MC9XGATE_OP_BITMASK))
+		continue;
+	      break;
+	    }
+	  if (mode == MC9XGATE_OP_DIRECT)
+	    {
+	      if (format & MC9XGATE_OP_DIRECT)
+		continue;
+
+	      /* If the operand is a page 0 operand, remember a
+	         possible <abs-16> addressing mode.  We mark
+	         this and continue to check other operands.  */
+	      if (format & MC9XGATE_OP_IND16
+		  && flag_strict_direct_addressing && op_indirect == 0)
+		{
+		  poss_indirect = 1;
+		  continue;
+		}
+	      break;
+	    }
+	  if (mode & MC9XGATE_OP_IND16)
+	    {
+	      if (i == 0 && (format & MC9XGATE_OP_IND16) != 0)
+		continue;
+              if (i != 0 && (format & MC9XGATE_OP_PAGE) != 0)
+                continue;
+	      if (i != 0 && (format & MC9XGATE_OP_IND16_P2) != 0)
+		continue;
+	      if (i == 0 && (format & MC9XGATE_OP_BITMASK))
+		break;
+	    }
+	  if (mode & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+	    {
+	      if (format & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+		continue;
+	    }
+	  if (mode & MC9XGATE_OP_REG)
+	    {
+	      if (i == 0
+		  && (format & MC9XGATE_OP_REG)
+		  && (operands[i].reg2 == REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9XGATE_OP_REG)
+		  && (format & MC9XGATE_OP_REG_2)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9XGATE_OP_IDX)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & MC9XGATE_OP_IDX)
+		  && (format & (MC9XGATE_OP_IND16_P2 | MC9XGATE_OP_IDX_P2)))
+		continue;
+	      if (i == 1
+		  && (format & MC9XGATE_OP_IDX_P2))
+		continue;
+	      break;
+	    }
+	  if (mode & MC9XGATE_OP_IDX)
+	    {
+	      if (format & MC9XGATE_OP_IX && operands[i].reg1 == REG_A)
+		continue;
+	      if (format & MC9XGATE_OP_IY && operands[i].reg1 == REG_B)
+		continue;
+	      if (i == 0
+		  && format & (MC9XGATE_OP_IDX | MC9XGATE_OP_IDX_1 | MC9XGATE_OP_IDX_2)
+		  && (operands[i].reg1 == REG_A
+		      || operands[i].reg1 == REG_B
+		      || operands[i].reg1 == REG_A
+		      || operands[i].reg1 == REG_PC))
+		continue;
+	      if (i == 1 && format & MC9XGATE_OP_IDX_P2)
+		continue;
+	    }
+          if (mode & format & (MC9XGATE_OP_D_IDX | MC9XGATE_OP_D_IDX_2))
+            {
+              if (i == 0)
+                continue;
+            }
+	  if (mode & MC9XGATE_AUTO_INC_DEC)
+	    {
+	      if (i == 0
+		  && format & (MC9XGATE_OP_IDX | MC9XGATE_OP_IDX_1 |
+			       MC9XGATE_OP_IDX_2))
+		continue;
+	      if (i == 1 && format & MC9XGATE_OP_IDX_P2)
+		continue;
+	    }
+	  break;
+	}
+      match = i == nb_operands;
+
+      /* Operands are ok but an operand uses page 0 addressing mode
+         while the insn supports abs-16 mode.  Keep a reference to this
+         insns in case there is no insn supporting page 0 addressing.  */
+      if (match && poss_indirect)
+	{
+	  op_indirect = opcode;
+	  match = 0;
+	}
+      if (match)
+	break;
+    }
+
+  /* Page 0 addressing is used but not supported by any insn.
+     If absolute addresses are supported, we use that insn.  */
+  if (match == 0 && op_indirect)
+    {
+      opcode = op_indirect;
+      match = 1;
+    }
+
+  if (!match)
+    {
+      return (0);
+    }
+
+  return opcode;
+}
+
+/* Find the real opcode and its associated operands.  We use a progressive
+   approach here.  On entry, 'opc' points to the first opcode in the
+   table that matches the opcode name in the source line.  We try to
+   isolate an operand, find a possible match in the opcode table.
+   We isolate another operand if no match were found.  The table 'operands'
+   is filled while operands are recognized.
+
+   Returns the opcode pointer that matches the opcode name in the
+   source line and the associated operands.  */
+static struct mc9xgate_opcode *
+find_opcode (struct mc9xgate_opcode_def *opc, operand operands[],
+             int *nb_operands)
+{
+  struct mc9xgate_opcode *opcode;
+  int i;
+
+  if (opc->max_operands == 0)
+    {
+      *nb_operands = 0;
+      return opc->opcode;
+    }
+
+  for (i = 0; i < opc->max_operands;)
+    {
+      int result;
+
+      result = get_operand (&operands[i], i, opc->format);
+      if (result <= 0)
+	return 0;
+
+      /* Special case where the bitmask of the bclr/brclr
+         instructions is not introduced by #.
+         Example: bclr 3,x $80.  */
+      if (i == 1 && (opc->format & MC9XGATE_OP_BITMASK)
+	  && (operands[i].mode & MC9XGATE_OP_IND16))
+	{
+	  operands[i].mode = MC9XGATE_OP_IMM16_REMOVE;
+	}
+
+      i += result;
+      *nb_operands = i;
+      if (i >= opc->min_operands)
+	{
+	  opcode = find (opc, operands, i);
+
+          /* Another special case for 'call foo,page' instructions.
+             Since we support 'call foo' and 'call foo,page' we must look
+             if the optional page specification is present otherwise we will
+             assemble immediately and treat the page spec as garbage.  */
+          if (opcode && !(opcode->format & MC9XGATE_OP_PAGE))
+             return opcode;
+
+	  if (opcode && *input_line_pointer != ',')
+	    return opcode;
+	}
+
+      if (*input_line_pointer == ',')
+	input_line_pointer++;
+    }
+
+  return 0;
+}
+
+#define MC9XGATE_XBCC_MARKER (MC9XGATE_OP_TBCC_MARKER \
+                           | MC9XGATE_OP_DBCC_MARKER \
+                           | MC9XGATE_OP_IBCC_MARKER)
+
+/* Gas line assembler entry point.  */
+
+/* This is the main entry point for the machine-dependent assembler.  str
+   points to a machine-dependent instruction.  This function is supposed to
+   emit the frags/bytes it assembles to.  */
+void
+md_assemble (char *str)
+{
+  struct mc9xgate_opcode_def *opc;
+  struct mc9xgate_opcode *opcode;
+
+  unsigned char *op_start, *op_end;
+  char *save;
+  char name[20];
+  int nlen = 0;
+  operand operands[MC9XGATE_MAX_OPERANDS];
+  int nb_operands = 0;
+  int branch_optimize = 0;
+  int alias_id = -1;
+
+  /* Drop leading whitespace.  */
+  while (*str == ' ')
+    str++;
+
+  /* Find the opcode end and get the opcode in 'name'.  The opcode is forced
+     lower case (the opcode table only has lower case op-codes).  */
+  for (op_start = op_end = (unsigned char *) str;
+       *op_end && nlen < 20 && !is_end_of_line[*op_end] && *op_end != ' ';
+       op_end++)
+    {
+      name[nlen] = TOLOWER (op_start[nlen]);
+      nlen++;
+    }
+  name[nlen] = 0;
+
+  if (nlen == 0)
+    {
+      as_bad (_("No instruction or missing opcode."));
+      return;
+    }
+
+  /* Find the opcode definition given its name.  */
+  opc = (struct mc9xgate_opcode_def *) hash_find (mc9xgate_hash, name);
+
+  /* If it's not recognized, look for 'jbsr' and 'jbxx'.  These are
+     pseudo insns for relative branch.  For these branches, we always
+     optimize them (turned into absolute branches) even if --short-branches
+     is given.  */
+  if (opc == NULL && name[0] == 'j' && name[1] == 'b')
+    {
+      opc = (struct mc9xgate_opcode_def *) hash_find (mc9xgate_hash, &name[1]);
+      if (opc
+	  && (!(opc->format & MC9XGATE_OP_JUMP_REL)
+	      || (opc->format & MC9XGATE_OP_BITMASK)))
+	opc = 0;
+      if (opc)
+	branch_optimize = 1;
+    }
+
+  /* The following test should probably be removed.  This is not conform
+     to Motorola assembler specs.  */
+  if (opc == NULL && flag_mri)
+    {
+      if (*op_end == ' ' || *op_end == '\t')
+	{
+	  while (*op_end == ' ' || *op_end == '\t')
+	    op_end++;
+
+	  if (nlen < 19
+	      && (*op_end &&
+		  (is_end_of_line[op_end[1]]
+		   || op_end[1] == ' ' || op_end[1] == '\t'
+		   || !ISALNUM (op_end[1])))
+	      && (*op_end == 'a' || *op_end == 'b'
+		  || *op_end == 'A' || *op_end == 'B'
+		  || *op_end == 'd' || *op_end == 'D'
+		  || *op_end == 'x' || *op_end == 'X'
+		  || *op_end == 'y' || *op_end == 'Y'))
+	    {
+	      name[nlen++] = TOLOWER (*op_end++);
+	      name[nlen] = 0;
+	      opc = (struct mc9xgate_opcode_def *) hash_find (mc9xgate_hash,
+							     name);
+	    }
+	}
+    }
+
+  /* Identify a possible instruction alias.  There are some on the
+     68HC12 to emulate a few 68HC11 instructions.  */
+  /* TODO make sure this always reads true */
+  if (opc == NULL && (current_architecture & cpumc9xgate))
+    {
+      int i;
+
+      for (i = 0; i < mc9xgate_num_alias; i++)
+	if (strcmp (mc9xgate_alias[i].name, name) == 0)
+	  {
+	    alias_id = i;
+	    break;
+	  }
+    }
+  if (opc == NULL && alias_id < 0)
+    {
+      as_bad (_("Opcode `%s' is not recognized."), name);
+      return;
+    }
+  save = input_line_pointer;
+  input_line_pointer = (char *) op_end;
+
+  if (opc)
+    {
+      opc->used++;
+      opcode = find_opcode (opc, operands, &nb_operands);
+    }
+  else
+    opcode = 0;
+
+  if ((opcode || alias_id >= 0) && !flag_mri)
+    {
+      char *p = input_line_pointer;
+
+      while (*p == ' ' || *p == '\t' || *p == '\n' || *p == '\r')
+	p++;
+
+      if (*p != '\n' && *p)
+	as_bad (_("Garbage at end of instruction: `%s'."), p);
+    }
+
+  input_line_pointer = save;
+
+  if (alias_id >= 0)
+    {
+      char *f = mc9xgate_new_insn (mc9xgate_alias[alias_id].size);
+
+      number_to_chars_bigendian (f, mc9xgate_alias[alias_id].code1, 1);
+      if (mc9xgate_alias[alias_id].size > 1)
+	number_to_chars_bigendian (f + 1, mc9xgate_alias[alias_id].code2, 1);
+
+      return;
+    }
+
+  /* Opcode is known but does not have valid operands.  Print out the
+     syntax for this opcode.  */
+  if (opcode == 0)
+    {
+      if (flag_print_insn_syntax)
+	print_insn_format (name);
+
+      as_bad (_("Invalid operand for `%s'"), name);
+      return;
+    }
+
+  /* Treat dbeq/ibeq/tbeq instructions in a special way.  The branch is
+     relative and must be in the range -256..255 (9-bits).  */
+  if ((opcode->format & MC9XGATE_XBCC_MARKER)
+      && (opcode->format & MC9XGATE_OP_JUMP_REL))
+    build_dbranch_insn (opcode, operands, nb_operands, branch_optimize);
+
+  /* Relative jumps instructions are taken care of separately.  We have to make
+     sure that the relative branch is within the range -128..127.  If it's out
+     of range, the instructions are changed into absolute instructions.
+     This is not supported for the brset and brclr instructions.  */
+  else if ((opcode->format & (MC9XGATE_OP_JUMP_REL | MC9XGATE_OP_JUMP_REL16))
+	   && !(opcode->format & MC9XGATE_OP_BITMASK))
+    build_jump_insn (opcode, operands, nb_operands, branch_optimize);
+  else
+    build_insn (opcode, operands, nb_operands);
+}
+
+
+/* Pseudo op to control the ELF flags.  */
+static void
+s_mc9xgate_mode (int x ATTRIBUTE_UNUSED)
+{
+  char *name = input_line_pointer, ch;
+
+  while (!is_end_of_line[(unsigned char) *input_line_pointer])
+    input_line_pointer++;
+  ch = *input_line_pointer;
+  *input_line_pointer = '\0';
+
+  if (strcmp (name, "mshort") == 0)
+    {
+      elf_flags &= ~E_MC9XGATE_I32;
+    }
+  else if (strcmp (name, "mlong") == 0)
+    {
+      elf_flags |= E_MC9XGATE_I32;
+    }
+  else if (strcmp (name, "mshort-double") == 0)
+    {
+      elf_flags &= ~E_MC9XGATE_F64;
+    }
+  else if (strcmp (name, "mlong-double") == 0)
+    {
+      elf_flags |= E_MC9XGATE_F64;
+    }
+  else
+    {
+      as_warn (_("Invalid mode: %s\n"), name);
+    }
+  *input_line_pointer = ch;
+  demand_empty_rest_of_line ();
+}
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void
+s_mc9xgate_mark_symbol (int mark)
+{
+  char *name;
+  int c;
+  symbolS *symbolP;
+  asymbol *bfdsym;
+  elf_symbol_type *elfsym;
+
+  do
+    {
+      name = input_line_pointer;
+      c = get_symbol_end ();
+      symbolP = symbol_find_or_make (name);
+      *input_line_pointer = c;
+
+      SKIP_WHITESPACE ();
+
+      bfdsym = symbol_get_bfdsym (symbolP);
+      elfsym = elf_symbol_from (bfd_asymbol_bfd (bfdsym), bfdsym);
+
+      gas_assert (elfsym);
+
+      /* Mark the symbol far (using rtc for function return).  */
+      elfsym->internal_elf_sym.st_other |= mark;
+
+      if (c == ',')
+	{
+	  input_line_pointer ++;
+
+	  SKIP_WHITESPACE ();
+
+	  if (*input_line_pointer == '\n')
+	    c = '\n';
+	}
+    }
+  while (c == ',');
+
+  demand_empty_rest_of_line ();
+}
+
+static void
+s_mc9xgate_relax (int ignore ATTRIBUTE_UNUSED)
+{
+  expressionS ex;
+
+  expression (&ex);
+
+  if (ex.X_op != O_symbol || ex.X_add_number != 0)
+    {
+      as_bad (_("bad .relax format"));
+      ignore_rest_of_line ();
+      return;
+    }
+
+  fix_new_exp (frag_now, frag_now_fix (), 0, &ex, 1,
+               BFD_RELOC_MC9XGATE_RL_GROUP);
+
+  demand_empty_rest_of_line ();
+}
+
+
+/* Relocation, relaxation and frag conversions.  */
+
+/* PC-relative offsets are relative to the start of the
+   next instruction.  That is, the address of the offset, plus its
+   size, since the offset is always the last part of the insn.  */
+long
+md_pcrel_from (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_MC9XGATE_RL_JUMP)
+    return 0;
+
+  return fixP->fx_size + fixP->fx_where + fixP->fx_frag->fr_address;
+}
+
+/* If while processing a fixup, a reloc really needs to be created
+   then it is done here.  */
+arelent *
+tc_gen_reloc (asection *section ATTRIBUTE_UNUSED, fixS *fixp)
+{
+  arelent *reloc;
+
+  reloc = (arelent *) xmalloc (sizeof (arelent));
+  reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
+  *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);
+  reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
+  if (fixp->fx_r_type == 0)
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, BFD_RELOC_16);
+  else
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);
+  if (reloc->howto == (reloc_howto_type *) NULL)
+    {
+      as_bad_where (fixp->fx_file, fixp->fx_line,
+		    _("Relocation %d is not supported by object file format."),
+		    (int) fixp->fx_r_type);
+      return NULL;
+    }
+
+  /* Since we use Rel instead of Rela, encode the vtable entry to be
+     used in the relocation's section offset.  */
+  if (fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+    reloc->address = fixp->fx_offset;
+
+  reloc->addend = 0;
+  return reloc;
+}
+
+/* We need a port-specific relaxation function to cope with sym2 - sym1
+   relative expressions with both symbols in the same segment (but not
+   necessarily in the same frag as this insn), for example:
+     ldab sym2-(sym1-2),pc
+    sym1:
+   The offset can be 5, 9 or 16 bits long.  */
+
+long
+mc9xgate_relax_frag (segT seg ATTRIBUTE_UNUSED, fragS *fragP,
+                    long stretch ATTRIBUTE_UNUSED)
+{
+  long growth;
+  offsetT aim = 0;
+  symbolS *symbolP;
+  const relax_typeS *this_type;
+  const relax_typeS *start_type;
+  relax_substateT next_state;
+  relax_substateT this_state;
+  const relax_typeS *table = TC_GENERIC_RELAX_TABLE;
+
+  /* We only have to cope with frags as prepared by
+     md_estimate_size_before_relax.  The STATE_BITS16 case may geet here
+     because of the different reasons that it's not relaxable.  */
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      /* When we get to this state, the frag won't grow any more.  */
+      return 0;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      if (fragP->fr_symbol == NULL
+	  || S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	as_fatal (_("internal inconsistency problem in %s: fr_symbol %lx"),
+		  __FUNCTION__, (long) fragP->fr_symbol);
+      symbolP = fragP->fr_symbol;
+      if (symbol_resolved_p (symbolP))
+	as_fatal (_("internal inconsistency problem in %s: resolved symbol"),
+		  __FUNCTION__);
+      aim = S_GET_VALUE (symbolP);
+      break;
+
+    default:
+      as_fatal (_("internal inconsistency problem in %s: fr_subtype %d"),
+		  __FUNCTION__, fragP->fr_subtype);
+    }
+
+  /* The rest is stolen from relax_frag.  There's no obvious way to
+     share the code, but fortunately no requirement to keep in sync as
+     long as fragP->fr_symbol does not have its segment changed.  */
+
+  this_state = fragP->fr_subtype;
+  start_type = this_type = table + this_state;
+
+  if (aim < 0)
+    {
+      /* Look backwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim >= this_type->rlx_backward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+  else
+    {
+      /* Look forwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim <= this_type->rlx_forward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+
+  growth = this_type->rlx_length - start_type->rlx_length;
+  if (growth != 0)
+    fragP->fr_subtype = this_state;
+  return growth;
+}
+
+void
+md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, asection *sec ATTRIBUTE_UNUSED,
+                 fragS *fragP)
+{
+  fixS *fixp;
+  long value;
+  long disp;
+  char *buffer_address = fragP->fr_literal;
+
+  /* Address in object code of the displacement.  */
+  register int object_address = fragP->fr_fix + fragP->fr_address;
+
+  buffer_address += fragP->fr_fix;
+
+  /* The displacement of the address, from current location.  */
+  value = S_GET_VALUE (fragP->fr_symbol);
+  disp = (value + fragP->fr_offset) - object_address;
+
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD):
+      /* This relax is only for bsr and bra.  */
+      gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR)
+	      || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BRA)
+	      || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR2));
+
+      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+      fix_new (fragP, fragP->fr_fix - 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_BYTE):
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 1;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = MC9XGATE_JMP;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD):
+      /* Translate branch into a long branch.  */
+      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+      fragP->fr_opcode[0] = MC9XGATE_OPCODE_PAGE2;
+
+      fixp = fix_new (fragP, fragP->fr_fix, 2,
+		      fragP->fr_symbol, fragP->fr_offset, 1,
+		      BFD_RELOC_16_PCREL);
+      fixp->fx_pcrel_adjust = 2;
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+      fragP->fr_opcode[0] = fragP->fr_opcode[0] << 6;
+      fragP->fr_opcode[0] |= value & 0x1f;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+      /* For a PC-relative offset, use the displacement with a -1 correction
+         to take into account the additional byte of the insn.  */
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp - 1;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xE0;
+      fragP->fr_opcode[0] |= (value >> 8) & 1;
+      fragP->fr_opcode[1] = value;
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xe2;
+      if ((fragP->fr_opcode[0] & 0x0ff) == 0x0fa
+          && fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	{
+	  fixp = fix_new (fragP, fragP->fr_fix, 2,
+			  fragP->fr_symbol, fragP->fr_offset,
+			  1, BFD_RELOC_16_PCREL);
+	}
+      else
+	{
+	  fix_new (fragP, fragP->fr_fix, 2,
+		   fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+	}
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE):
+      if (disp < 0)
+	fragP->fr_opcode[0] |= 0x10;
+
+      fragP->fr_opcode[1] = disp & 0x0FF;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 0x20;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = MC9XGATE_JMP2;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    default:
+      break;
+    }
+}
+
+/* On an ELF system, we can't relax a weak symbol.  The weak symbol
+   can be overridden at final link time by a non weak symbol.  We can
+   relax externally visible symbol because there is no shared library
+   and such symbol can't be overridden (unless they are weak).  */
+static int
+relaxable_symbol (symbolS *symbol)
+{
+  return ! S_IS_WEAK (symbol);
+}
+
+/* Force truly undefined symbols to their maximum size, and generally set up
+   the frag list to be relaxed.  */
+int
+md_estimate_size_before_relax (fragS *fragP, asection *segment)
+{
+  if (RELAX_LENGTH (fragP->fr_subtype) == STATE_UNDF)
+    {
+      if (S_GET_SEGMENT (fragP->fr_symbol) != segment
+	  || !relaxable_symbol (fragP->fr_symbol)
+          || (segment != absolute_section
+              && RELAX_STATE (fragP->fr_subtype) == STATE_INDEXED_OFFSET))
+	{
+	  /* Non-relaxable cases.  */
+	  int old_fr_fix;
+	  char *buffer_address;
+
+	  old_fr_fix = fragP->fr_fix;
+	  buffer_address = fragP->fr_fix + fragP->fr_literal;
+
+	  switch (RELAX_STATE (fragP->fr_subtype))
+	    {
+	    case STATE_PC_RELATIVE:
+
+	      /* This relax is only for bsr and bra.  */
+	      gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR)
+		      || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BRA)
+		      || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR2));
+
+	      if (flag_fixed_branches)
+		as_bad_where (fragP->fr_file, fragP->fr_line,
+			      _("bra or bsr with undefined symbol."));
+
+	      /* The symbol is undefined or in a separate section.
+		 Turn bra into a jmp and bsr into a jsr.  The insn
+		 becomes 3 bytes long (instead of 2).  A fixup is
+		 necessary for the unresolved symbol address.  */
+	      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+	      fix_new (fragP, fragP->fr_fix - 1, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix++;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH:
+	      gas_assert (current_architecture & cpumc9xgate);
+
+	      fragP->fr_opcode[0] ^= 1;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = MC9XGATE_JMP;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_INDEXED_OFFSET:
+	      gas_assert (current_architecture & cpumc9xgate);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   /* Switch the indexed operation to 16-bit mode.  */
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                            fragP->fr_offset, 0, BFD_RELOC_16);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_INDEXED_PCREL:
+	      gas_assert (current_architecture & cpumc9xgate);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   fixS* fixp;
+
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fixp = fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                                   fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_XBCC_BRANCH:
+	      gas_assert (current_architecture & cpumc9xgate);
+
+	      fragP->fr_opcode[0] ^= 0x20;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = MC9XGATE_JMP2;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH_6812:
+	      gas_assert (current_architecture & cpumc9xgate);
+
+	      /* Translate into a lbcc branch.  */
+	      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+	      fragP->fr_opcode[0] = MC9XGATE_OPCODE_PAGE2;
+
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                       fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    default:
+	      as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+	    }
+	  frag_wane (fragP);
+
+	  /* Return the growth in the fixed part of the frag.  */
+	  return fragP->fr_fix - old_fr_fix;
+	}
+
+      /* Relaxable cases.  */
+      switch (RELAX_STATE (fragP->fr_subtype))
+	{
+	case STATE_PC_RELATIVE:
+	  /* This relax is only for bsr and bra.  */
+	  gas_assert (IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR)
+		  || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BRA)
+		  || IS_OPCODE (fragP->fr_opcode[0], MC9XGATE_BSR2));
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH:
+	  gas_assert (current_architecture & cpumc9xgate);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH,
+					    STATE_BYTE);
+	  break;
+
+	case STATE_INDEXED_OFFSET:
+	  gas_assert (current_architecture & cpumc9xgate);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_INDEXED_PCREL:
+	  gas_assert (current_architecture & cpumc9xgate);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_XBCC_BRANCH:
+	  gas_assert (current_architecture & cpumc9xgate);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH_6812:
+	  gas_assert (current_architecture & cpumc9xgate);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812,
+					    STATE_BYTE);
+	  break;
+	}
+    }
+
+  if (fragP->fr_subtype >= sizeof (md_relax_table) / sizeof (md_relax_table[0]))
+    as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+
+  /* Return the size of the variable part of the frag.  */
+  return md_relax_table[fragP->fr_subtype].rlx_length;
+}
+
+/* See whether we need to force a relocation into the output file.  */
+int
+tc_mc9xgate_force_relocation (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_MC9XGATE_RL_GROUP)
+    return 1;
+
+  return generic_force_reloc (fixP);
+}
+
+/* Here we decide which fixups can be adjusted to make them relative
+   to the beginning of the section instead of the symbol.  Basically
+   we need to make sure that the linker relaxation is done
+   correctly, so in some cases we force the original symbol to be
+   used.  */
+int
+tc_mc9xgate_fix_adjustable (fixS *fixP)
+{
+  switch (fixP->fx_r_type)
+    {
+      /* For the linker relaxation to work correctly, these relocs
+         need to be on the symbol itself.  */
+    case BFD_RELOC_16:
+    case BFD_RELOC_MC9XGATE_RL_JUMP:
+    case BFD_RELOC_MC9XGATE_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+    case BFD_RELOC_32:
+
+      /* The memory bank addressing translation also needs the original
+         symbol.  */
+    case BFD_RELOC_MC9XGATE_LO16:
+    case BFD_RELOC_MC9XGATE_PAGE:
+    case BFD_RELOC_MC9XGATE_24:
+      return 0;
+
+    default:
+      return 1;
+    }
+}
+
+void
+md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
+{
+  char *where;
+  long value = * valP;
+  int op_type;
+
+  if (fixP->fx_addsy == (symbolS *) NULL)
+    fixP->fx_done = 1;
+
+  /* We don't actually support subtracting a symbol.  */
+  if (fixP->fx_subsy != (symbolS *) NULL)
+    as_bad_where (fixP->fx_file, fixP->fx_line, _("Expression too complex."));
+
+  op_type = fixP->fx_r_type;
+
+  /* Patch the instruction with the resolved operand.  Elf relocation
+     info will also be generated to take care of linker/loader fixups.
+     The 68HC11 addresses only 64Kb, we are only concerned by 8 and 16-bit
+     relocs.  BFD_RELOC_8 is basically used for .page0 access (the linker
+     will warn for overflows).  BFD_RELOC_8_PCREL should not be generated
+     because it's either resolved or turned out into non-relative insns (see
+     relax table, bcc, bra, bsr transformations)
+
+     The BFD_RELOC_32 is necessary for the support of --gstabs.  */
+  where = fixP->fx_frag->fr_literal + fixP->fx_where;
+
+  switch (fixP->fx_r_type)
+    {
+    case BFD_RELOC_32:
+      bfd_putb32 ((bfd_vma) value, (unsigned char *) where);
+      break;
+
+    case BFD_RELOC_24:
+    case BFD_RELOC_MC9XGATE_24:
+      bfd_putb16 ((bfd_vma) (value & 0x0ffff), (unsigned char *) where);
+      ((bfd_byte*) where)[2] = ((value >> 16) & 0x0ff);
+      break;
+
+    case BFD_RELOC_16:
+    case BFD_RELOC_16_PCREL:
+    case BFD_RELOC_MC9XGATE_LO16:
+      bfd_putb16 ((bfd_vma) value, (unsigned char *) where);
+      if (value < -65537 || value > 65535)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value out of 16-bit range."));
+      break;
+
+    case BFD_RELOC_MC9XGATE_HI8:
+      value = value >> 8;
+      /* Fall through.  */
+
+    case BFD_RELOC_MC9XGATE_LO8:
+    case BFD_RELOC_8:
+    case BFD_RELOC_MC9XGATE_PAGE:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+      break;
+
+    case BFD_RELOC_8_PCREL:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+
+      if (value < -128 || value > 127)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value %ld too large for 8-bit PC-relative branch."),
+		      value);
+      break;
+
+    case BFD_RELOC_MC9XGATE_3B:
+      if (value <= 0 || value > 8)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Auto increment/decrement offset '%ld' is out of range."),
+		      value);
+      if (where[0] & 0x8)
+	value = 8 - value;
+      else
+	value--;
+
+      where[0] = where[0] | (value & 0x07);
+      break;
+
+    case BFD_RELOC_MC9XGATE_5B:
+      if (value < -16 || value > 15)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Offset out of 5-bit range for movw/movb insn: %ld"),
+		      value);
+      if (value >= 0)
+	where[0] |= value;
+      else 
+	where[0] |= (0x10 | (16 + value));
+      break;
+
+    case BFD_RELOC_MC9XGATE_RL_JUMP:
+    case BFD_RELOC_MC9XGATE_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+      fixP->fx_done = 0;
+      return;
+
+    default:
+      as_fatal (_("Line %d: unknown relocation type: 0x%x."),
+		fixP->fx_line, fixP->fx_r_type);
+    }
+}
+
+/* Set the ELF specific flags.  */
+void
+mc9xgate_elf_final_processing (void)
+{
+	/* TODO make this always true */
+  if (current_architecture & cpumc9xgate)
+    elf_flags |= EF_MC9XGATE_MACH;
+  elf_elfheader (stdoutput)->e_flags &= ~EF_MC9XGATE_ABI;
+  elf_elfheader (stdoutput)->e_flags |= elf_flags;
+}
diff -rupN binutils-2.20/gas/config/tc-mc9xgate.h binutils-2.20-sean/gas/config/tc-mc9xgate.h
--- binutils-2.20/gas/config/tc-mc9xgate.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9xgate.h	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,110 @@
+/* tc-mc9xgate.h -- Header file for tc-mc9xgate.c.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2007
+   Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#define TC_MC9XGATE
+//#define TC_M68HC12
+
+struct fix;
+
+/* Define TC_M68K so that we can use the MRI mode.  */
+#define TC_M68K
+
+#define TARGET_BYTES_BIG_ENDIAN 1
+
+/* Motorola assembler specs does not require '.' before pseudo-ops.  */
+#define NO_PSEUDO_DOT 1
+
+/* The target BFD architecture.  */
+#define TARGET_ARCH (mc9xgate_arch ())
+extern enum bfd_architecture mc9xgate_arch (void);
+
+#define TARGET_MACH (mc9xgate_mach ())
+extern int mc9xgate_mach (void);
+
+#define TARGET_FORMAT (mc9xgate_arch_format ())
+extern const char *mc9xgate_arch_format (void);
+
+#define LISTING_WORD_SIZE 1	/* A word is 1 bytes */
+#define LISTING_LHS_WIDTH 4	/* One word on the first line */
+#define LISTING_LHS_WIDTH_SECOND 4	/* One word on the second line */
+#define LISTING_LHS_CONT_LINES 4	/* And 4 lines max */
+#define LISTING_HEADER mc9xgate_listing_header ()
+extern const char *mc9xgate_listing_header (void);
+
+/* Permit temporary numeric labels.  */
+#define LOCAL_LABELS_FB 1
+
+#define tc_init_after_args mc9xgate_init_after_args
+extern void mc9xgate_init_after_args (void);
+
+#define md_parse_long_option mc9xgate_parse_long_option
+extern int mc9xgate_parse_long_option (char *);
+
+#define DWARF2_LINE_MIN_INSN_LENGTH 1
+
+/* Use 32-bit address to represent a symbol address so that we can
+   represent them with their page number.  */
+#define DWARF2_ADDR_SIZE(bfd) 4
+
+/* We don't need to handle .word strangely.  */
+#define WORKING_DOT_WORD
+
+#define md_number_to_chars           number_to_chars_bigendian
+
+/* Relax table to translate short relative branches (-128..127) into
+   absolute branches.  */
+#define TC_GENERIC_RELAX_TABLE md_relax_table
+extern struct relax_type md_relax_table[];
+
+/* GAS only handles relaxations for pc-relative data targeting addresses
+   in the same segment, so we have to handle the rest on our own.  */
+#define md_relax_frag(SEG, FRAGP, STRETCH)		\
+ ((FRAGP)->fr_symbol != NULL				\
+  && S_GET_SEGMENT ((FRAGP)->fr_symbol) == (SEG)	\
+  ? relax_frag (SEG, FRAGP, STRETCH)			\
+  : mc9xgate_relax_frag (SEG, FRAGP, STRETCH))
+extern long mc9xgate_relax_frag (segT, fragS*, long);
+
+#define TC_HANDLES_FX_DONE
+
+#define DIFF_EXPR_OK		/* .-foo gets turned into PC relative relocs */
+
+/* Values passed to md_apply_fix don't include the symbol value.  */
+#define MD_APPLY_SYM_VALUE(FIX) 0
+
+/* No shared lib support, so we don't need to ensure externally
+   visible symbols can be overridden.  */
+#define EXTERN_FORCE_RELOC 0
+
+#define TC_FORCE_RELOCATION(fix) tc_mc9xgate_force_relocation (fix)
+extern int tc_mc9xgate_force_relocation (struct fix *);
+
+#define tc_fix_adjustable(X) tc_mc9xgate_fix_adjustable(X)
+extern int tc_mc9xgate_fix_adjustable (struct fix *);
+
+#define md_operand(x)
+
+#define elf_tc_final_processing	mc9xgate_elf_final_processing
+extern void mc9xgate_elf_final_processing (void);
+
+#define tc_print_statistics(FILE) mc9xgate_print_statistics (FILE)
+extern void mc9xgate_print_statistics (FILE *);
+
diff -rupN binutils-2.20/gas/config/tc-mc9xgate.h-old binutils-2.20-sean/gas/config/tc-mc9xgate.h-old
--- binutils-2.20/gas/config/tc-mc9xgate.h-old	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/config/tc-mc9xgate.h-old	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,109 @@
+/* tc-mc9xgate.h -- Header file for tc-mc9xgate.c.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2007
+   Free Software Foundation, Inc.
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to the Free
+   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+#define TC_MC9XGATE
+//#define TC_M68HC12
+
+struct fix;
+
+/* Define TC_M68K so that we can use the MRI mode.  */
+#define TC_M68K
+
+#define TARGET_BYTES_BIG_ENDIAN 1
+
+/* Motorola assembler specs does not require '.' before pseudo-ops.  */
+#define NO_PSEUDO_DOT 1
+
+/* The target BFD architecture.  */
+#define TARGET_ARCH (mc9xgate_arch ())
+extern enum bfd_architecture mc9xgate_arch (void);
+
+#define TARGET_MACH (mc9xgate_mach ())
+extern int mc9xgate_mach (void);
+
+#define TARGET_FORMAT (mc9xgate_arch_format ())
+extern const char *mc9xgate_arch_format (void);
+
+#define LISTING_WORD_SIZE 1	/* A word is 1 bytes */
+#define LISTING_LHS_WIDTH 4	/* One word on the first line */
+#define LISTING_LHS_WIDTH_SECOND 4	/* One word on the second line */
+#define LISTING_LHS_CONT_LINES 4	/* And 4 lines max */
+#define LISTING_HEADER mc9xgate_listing_header ()
+extern const char *mc9xgate_listing_header (void);
+
+/* Permit temporary numeric labels.  */
+#define LOCAL_LABELS_FB 1
+
+#define tc_init_after_args mc9xgate_init_after_args
+extern void mc9xgate_init_after_args (void);
+
+#define md_parse_long_option mc9xgate_parse_long_option
+extern int mc9xgate_parse_long_option (char *);
+
+#define DWARF2_LINE_MIN_INSN_LENGTH 1
+
+/* Use 32-bit address to represent a symbol address so that we can
+   represent them with their page number.  */
+#define DWARF2_ADDR_SIZE(bfd) 4
+
+/* We don't need to handle .word strangely.  */
+#define WORKING_DOT_WORD
+
+#define md_number_to_chars           number_to_chars_bigendian
+
+/* Relax table to translate short relative branches (-128..127) into
+   absolute branches.  */
+#define TC_GENERIC_RELAX_TABLE md_relax_table
+extern struct relax_type md_relax_table[];
+
+/* GAS only handles relaxations for pc-relative data targeting addresses
+   in the same segment, so we have to handle the rest on our own.  */
+#define md_relax_frag(SEG, FRAGP, STRETCH)		\
+ ((FRAGP)->fr_symbol != NULL				\
+  && S_GET_SEGMENT ((FRAGP)->fr_symbol) == (SEG)	\
+  ? relax_frag (SEG, FRAGP, STRETCH)			\
+  : mc9xgate_relax_frag (SEG, FRAGP, STRETCH))
+extern long mc9xgate_relax_frag (segT, fragS*, long);
+
+#define TC_HANDLES_FX_DONE
+
+#define DIFF_EXPR_OK		/* .-foo gets turned into PC relative relocs */
+
+/* Values passed to md_apply_fix don't include the symbol value.  */
+#define MD_APPLY_SYM_VALUE(FIX) 0
+
+/* No shared lib support, so we don't need to ensure externally
+   visible symbols can be overridden.  */
+#define EXTERN_FORCE_RELOC 0
+
+#define TC_FORCE_RELOCATION(fix) tc_mc9xgate_force_relocation (fix)
+extern int tc_mc9xgate_force_relocation (struct fix *);
+
+#define tc_fix_adjustable(X) tc_mc9xgate_fix_adjustable(X)
+extern int tc_mc9xgate_fix_adjustable (struct fix *);
+
+#define md_operand(x)
+
+#define elf_tc_final_processing	mc9xgate_elf_final_processing
+extern void mc9xgate_elf_final_processing (void);
+
+#define tc_print_statistics(FILE) mc9xgate_print_statistics (FILE)
+extern void mc9xgate_print_statistics (FILE *);
diff -rupN binutils-2.20/gas/configure.tgt binutils-2.20-sean/gas/configure.tgt
--- binutils-2.20/gas/configure.tgt	2009-09-09 02:13:28.000000000 -0600
+++ binutils-2.20-sean/gas/configure.tgt	2010-10-01 14:37:29.000000000 -0600
@@ -52,6 +52,8 @@ case ${cpu} in
   m68008)		cpu_type=m68k ;;
   m680[012346]0)	cpu_type=m68k ;;
   m6811|m6812|m68hc12)	cpu_type=m68hc11 ;;
+  mc9s12x)		cpu_type=mc9s12x ;;
+  mc9xgate)		cpu_type=mc9xgate ;;
   m683??)		cpu_type=m68k ;;
   maxq)			cpu_type=maxq ;;
   mep-*-elf)		cpu_type=mep endian=big ;;
@@ -261,6 +263,10 @@ case ${generic_target} in
 
   m68hc11-*-* | m6811-*-*)		fmt=elf ;;
   m68hc12-*-* | m6812-*-*)		fmt=elf ;;
+  
+  mc9s12x-*-*)		fmt=elf ;;
+  
+  mc9xgate-*-*)		fmt=elf ;;
 
   m68k-*-elf*)				fmt=elf ;;
   m68k-*-sysv4*)			fmt=elf em=svr4 ;;
diff -rupN binutils-2.20/gas/doc/c-mc9s12x.texi binutils-2.20-sean/gas/doc/c-mc9s12x.texi
--- binutils-2.20/gas/doc/c-mc9s12x.texi	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/doc/c-mc9s12x.texi	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,442 @@
+@c Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2003, 2006
+@c Free Software Foundation, Inc.
+@c This is part of the GAS manual.
+@c For copying conditions, see the file as.texinfo.
+@ifset GENERIC
+@page
+@node M68HC11-Dependent
+@chapter M68HC11 and M68HC12 Dependent Features
+@end ifset
+@ifclear GENERIC
+@node Machine Dependencies
+@chapter M68HC11 and M68HC12 Dependent Features
+@end ifclear
+
+@cindex M68HC11 and M68HC12 support
+@menu
+* M68HC11-Opts::                   M68HC11 and M68HC12 Options
+* M68HC11-Syntax::                 Syntax
+* M68HC11-Modifiers::              Symbolic Operand Modifiers
+* M68HC11-Directives::             Assembler Directives
+* M68HC11-Float::                  Floating Point
+* M68HC11-opcodes::                Opcodes
+@end menu
+
+@node M68HC11-Opts
+@section M68HC11 and M68HC12 Options
+
+@cindex options, M68HC11
+@cindex M68HC11 options
+The Motorola 68HC11 and 68HC12 version of @code{@value{AS}} have a few machine
+dependent options.
+
+@table @code
+
+@cindex @samp{-m68hc11}
+@item -m68hc11
+This option switches the assembler in the M68HC11 mode. In this mode,
+the assembler only accepts 68HC11 operands and mnemonics. It produces
+code for the 68HC11.
+
+@cindex @samp{-m68hc12}
+@item -m68hc12
+This option switches the assembler in the M68HC12 mode. In this mode,
+the assembler also accepts 68HC12 operands and mnemonics. It produces
+code for the 68HC12. A few 68HC11 instructions are replaced by
+some 68HC12 instructions as recommended by Motorola specifications.
+
+@cindex @samp{-m68hcs12}
+@item -m68hcs12
+This option switches the assembler in the M68HCS12 mode.  This mode is
+similar to @samp{-m68hc12} but specifies to assemble for the 68HCS12
+series.  The only difference is on the assembling of the @samp{movb}
+and @samp{movw} instruction when a PC-relative operand is used.
+
+@cindex @samp{-mshort}
+@item -mshort
+This option controls the ABI and indicates to use a 16-bit integer ABI.
+It has no effect on the assembled instructions.
+This is the default.
+
+@cindex @samp{-mlong}
+@item -mlong
+This option controls the ABI and indicates to use a 32-bit integer ABI.
+
+@cindex @samp{-mshort-double}
+@item -mshort-double
+This option controls the ABI and indicates to use a 32-bit float ABI.
+This is the default.
+
+@cindex @samp{-mlong-double}
+@item -mlong-double
+This option controls the ABI and indicates to use a 64-bit float ABI.
+
+@cindex @samp{--strict-direct-mode}
+@item --strict-direct-mode
+You can use the @samp{--strict-direct-mode} option to disable
+the automatic translation of direct page mode addressing into
+extended mode when the instruction does not support direct mode.
+For example, the @samp{clr} instruction does not support direct page
+mode addressing. When it is used with the direct page mode,
+@code{@value{AS}} will ignore it and generate an absolute addressing.
+This option prevents @code{@value{AS}} from doing this, and the wrong
+usage of the direct page mode will raise an error.
+
+@cindex @samp{--short-branches}
+@item --short-branches
+The @samp{--short-branches} option turns off the translation of
+relative branches into absolute branches when the branch offset is
+out of range. By default @code{@value{AS}} transforms the relative
+branch (@samp{bsr}, @samp{bgt}, @samp{bge}, @samp{beq}, @samp{bne},
+@samp{ble}, @samp{blt}, @samp{bhi}, @samp{bcc}, @samp{bls},
+@samp{bcs}, @samp{bmi}, @samp{bvs}, @samp{bvs}, @samp{bra}) into
+an absolute branch when the offset is out of the -128 .. 127 range.
+In that case, the @samp{bsr} instruction is translated into a
+@samp{jsr}, the @samp{bra} instruction is translated into a
+@samp{jmp} and the conditional branches instructions are inverted and
+followed by a @samp{jmp}. This option disables these translations
+and @code{@value{AS}} will generate an error if a relative branch
+is out of range. This option does not affect the optimization
+associated to the @samp{jbra}, @samp{jbsr} and @samp{jbXX} pseudo opcodes.
+
+@cindex @samp{--force-long-branches}
+@item --force-long-branches
+The @samp{--force-long-branches} option forces the translation of
+relative branches into absolute branches. This option does not affect
+the optimization associated to the @samp{jbra}, @samp{jbsr} and
+@samp{jbXX} pseudo opcodes. 
+
+@cindex @samp{--print-insn-syntax}
+@item --print-insn-syntax
+You can use the @samp{--print-insn-syntax} option to obtain the
+syntax description of the instruction when an error is detected.
+
+@cindex @samp{--print-opcodes}
+@item --print-opcodes
+The @samp{--print-opcodes} option prints the list of all the
+instructions with their syntax. The first item of each line
+represents the instruction name and the rest of the line indicates
+the possible operands for that instruction. The list is printed
+in alphabetical order. Once the list is printed @code{@value{AS}}
+exits.
+
+@cindex @samp{--generate-example}
+@item --generate-example
+The @samp{--generate-example} option is similar to @samp{--print-opcodes}
+but it generates an example for each instruction instead.
+@end table
+
+@node M68HC11-Syntax
+@section Syntax
+
+@cindex M68HC11 syntax
+@cindex syntax, M68HC11
+
+In the M68HC11 syntax, the instruction name comes first and it may
+be followed by one or several operands (up to three). Operands are
+separated by comma (@samp{,}). In the normal mode,
+@code{@value{AS}} will complain if too many operands are specified for
+a given instruction. In the MRI mode (turned on with @samp{-M} option),
+it will treat them as comments. Example:
+
+@smallexample
+inx
+lda  #23
+bset 2,x #4
+brclr *bot #8 foo
+@end smallexample
+
+@cindex M68HC11 addressing modes
+@cindex addressing modes, M68HC11
+The following addressing modes are understood for 68HC11 and 68HC12:
+@table @dfn
+@item Immediate
+@samp{#@var{number}}
+
+@item Address Register
+@samp{@var{number},X}, @samp{@var{number},Y}
+
+The @var{number} may be omitted in which case 0 is assumed.
+
+@item Direct Addressing mode
+@samp{*@var{symbol}}, or @samp{*@var{digits}}
+
+@item Absolute
+@samp{@var{symbol}}, or @samp{@var{digits}}
+@end table
+
+The M68HC12 has other more complex addressing modes. All of them
+are supported and they are represented below:
+
+@table @dfn
+@item Constant Offset Indexed Addressing Mode
+@samp{@var{number},@var{reg}}
+
+The @var{number} may be omitted in which case 0 is assumed.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or
+@samp{PC}.  The assembler will use the smaller post-byte definition
+according to the constant value (5-bit constant offset, 9-bit constant
+offset or 16-bit constant offset).  If the constant is not known by
+the assembler it will use the 16-bit constant offset post-byte and the value
+will be resolved at link time.
+
+@item Offset Indexed Indirect
+@samp{[@var{number},@var{reg}]}
+
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Auto Pre-Increment/Pre-Decrement/Post-Increment/Post-Decrement
+@samp{@var{number},-@var{reg}}
+@samp{@var{number},+@var{reg}}
+@samp{@var{number},@var{reg}-}
+@samp{@var{number},@var{reg}+}
+
+The number must be in the range @samp{-8}..@samp{+8} and must not be 0.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Accumulator Offset
+@samp{@var{acc},@var{reg}}
+
+The accumulator register can be either @samp{A}, @samp{B} or @samp{D}.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Accumulator D offset indexed-indirect
+@samp{[D,@var{reg}]}
+
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@end table
+
+For example:
+
+@smallexample
+ldab 1024,sp
+ldd [10,x]
+orab 3,+x
+stab -2,y-
+ldx a,pc
+sty [d,sp]
+@end smallexample
+
+
+@node M68HC11-Modifiers
+@section Symbolic Operand Modifiers
+
+@cindex M68HC11 modifiers
+@cindex syntax, M68HC11
+
+The assembler supports several modifiers when using symbol addresses
+in 68HC11 and 68HC12 instruction operands.  The general syntax is
+the following:
+
+@smallexample
+%modifier(symbol)
+@end smallexample
+
+@table @code
+@cindex symbol modifiers
+@item %addr
+This modifier indicates to the assembler and linker to use
+the 16-bit physical address corresponding to the symbol.  This is intended
+to be used on memory window systems to map a symbol in the memory bank window.
+If the symbol is in a memory expansion part, the physical address
+corresponds to the symbol address within the memory bank window.
+If the symbol is not in a memory expansion part, this is the symbol address
+(using or not using the %addr modifier has no effect in that case).
+
+@item %page
+This modifier indicates to use the memory page number corresponding
+to the symbol.  If the symbol is in a memory expansion part, its page
+number is computed by the linker as a number used to map the page containing
+the symbol in the memory bank window.  If the symbol is not in a memory
+expansion part, the page number is 0.
+
+@item %hi
+This modifier indicates to use the 8-bit high part of the physical
+address of the symbol.
+
+@item %lo
+This modifier indicates to use the 8-bit low part of the physical
+address of the symbol.
+
+@end table
+
+For example a 68HC12 call to a function @samp{foo_example} stored in memory
+expansion part could be written as follows:
+
+@smallexample
+call %addr(foo_example),%page(foo_example)
+@end smallexample
+
+and this is equivalent to
+
+@smallexample
+call foo_example
+@end smallexample
+
+And for 68HC11 it could be written as follows:
+
+@smallexample
+ldab #%page(foo_example)
+stab _page_switch
+jsr  %addr(foo_example)
+@end smallexample
+
+@node M68HC11-Directives
+@section Assembler Directives
+
+@cindex assembler directives, M68HC11
+@cindex assembler directives, M68HC12
+@cindex M68HC11 assembler directives
+@cindex M68HC12 assembler directives
+
+The 68HC11 and 68HC12 version of @code{@value{AS}} have the following
+specific assembler directives:
+
+@table @code
+@item .relax
+@cindex assembler directive .relax, M68HC11
+@cindex M68HC11 assembler directive .relax
+The relax directive is used by the @samp{GNU Compiler} to emit a specific
+relocation to mark a group of instructions for linker relaxation.
+The sequence of instructions within the group must be known to the linker
+so that relaxation can be performed.
+
+@item .mode [mshort|mlong|mshort-double|mlong-double]
+@cindex assembler directive .mode, M68HC11
+@cindex M68HC11 assembler directive .mode
+This directive specifies the ABI.  It overrides the @samp{-mshort},
+@samp{-mlong}, @samp{-mshort-double} and @samp{-mlong-double} options.
+
+@item .far @var{symbol}
+@cindex assembler directive .far, M68HC11
+@cindex M68HC11 assembler directive .far
+This directive marks the symbol as a @samp{far} symbol meaning that it
+uses a @samp{call/rtc} calling convention as opposed to @samp{jsr/rts}.
+During a final link, the linker will identify references to the @samp{far}
+symbol and will verify the proper calling convention.
+
+@item .interrupt @var{symbol}
+@cindex assembler directive .interrupt, M68HC11
+@cindex M68HC11 assembler directive .interrupt
+This directive marks the symbol as an interrupt entry point.
+This information is then used by the debugger to correctly unwind the
+frame across interrupts.
+
+@item .xrefb @var{symbol}
+@cindex assembler directive .xrefb, M68HC11
+@cindex M68HC11 assembler directive .xrefb
+This directive is defined for compatibility with the
+@samp{Specification for Motorola 8 and 16-Bit Assembly Language Input
+Standard} and is ignored.
+
+@end table
+
+@node M68HC11-Float
+@section Floating Point
+
+@cindex floating point, M68HC11
+@cindex M68HC11 floating point
+Packed decimal (P) format floating literals are not supported.
+Feel free to add the code!
+
+The floating point formats generated by directives are these.
+
+@table @code
+@cindex @code{float} directive, M68HC11
+@item .float
+@code{Single} precision floating point constants.
+
+@cindex @code{double} directive, M68HC11
+@item .double
+@code{Double} precision floating point constants.
+
+@cindex @code{extend} directive M68HC11
+@cindex @code{ldouble} directive M68HC11
+@item .extend
+@itemx .ldouble
+@code{Extended} precision (@code{long double}) floating point constants.
+@end table
+
+@need 2000
+@node M68HC11-opcodes
+@section Opcodes
+
+@cindex M68HC11 opcodes
+@cindex opcodes, M68HC11
+@cindex instruction set, M68HC11
+
+@menu
+* M68HC11-Branch::                 Branch Improvement
+@end menu
+
+@node M68HC11-Branch
+@subsection Branch Improvement
+
+@cindex pseudo-opcodes, M68HC11
+@cindex M68HC11 pseudo-opcodes
+@cindex branch improvement, M68HC11
+@cindex M68HC11 branch improvement
+
+Certain pseudo opcodes are permitted for branch instructions.
+They expand to the shortest branch instruction that reach the
+target. Generally these mnemonics are made by prepending @samp{j} to
+the start of Motorola mnemonic. These pseudo opcodes are not affected
+by the @samp{--short-branches} or @samp{--force-long-branches} options.
+
+The following table summarizes the pseudo-operations.
+
+@smallexample
+                        Displacement Width
+     +-------------------------------------------------------------+
+     |                     Options                                 |
+     |    --short-branches           --force-long-branches         |
+     +--------------------------+----------------------------------+
+  Op |BYTE             WORD     | BYTE          WORD               |
+     +--------------------------+----------------------------------+
+ bsr | bsr <pc-rel>    <error>  |               jsr <abs>          |
+ bra | bra <pc-rel>    <error>  |               jmp <abs>          |
+jbsr | bsr <pc-rel>   jsr <abs> | bsr <pc-rel>  jsr <abs>          |
+jbra | bra <pc-rel>   jmp <abs> | bra <pc-rel>  jmp <abs>          |
+ bXX | bXX <pc-rel>    <error>  |               bNX +3; jmp <abs>  | 
+jbXX | bXX <pc-rel>   bNX +3;   | bXX <pc-rel>  bNX +3; jmp <abs>  |
+     |                jmp <abs> |                                  |
+     +--------------------------+----------------------------------+
+XX: condition
+NX: negative of condition XX
+
+@end smallexample
+
+@table @code
+@item jbsr
+@itemx jbra
+These are the simplest jump pseudo-operations; they always map to one
+particular machine instruction, depending on the displacement to the
+branch target.
+
+@item jb@var{XX}
+Here, @samp{jb@var{XX}} stands for an entire family of pseudo-operations,
+where @var{XX} is a conditional branch or condition-code test.  The full
+list of pseudo-ops in this family is:
+@smallexample
+ jbcc   jbeq   jbge   jbgt   jbhi   jbvs   jbpl  jblo
+ jbcs   jbne   jblt   jble   jbls   jbvc   jbmi
+@end smallexample
+
+For the cases of non-PC relative displacements and long displacements,
+@code{@value{AS}} issues a longer code fragment in terms of
+@var{NX}, the opposite condition to @var{XX}.  For example, for the
+non-PC relative case:
+@smallexample
+    jb@var{XX} foo
+@end smallexample
+gives
+@smallexample
+     b@var{NX}s oof
+     jmp foo
+ oof:
+@end smallexample
+
+@end table
+
+
diff -rupN binutils-2.20/gas/doc/c-mc9xgate.texi binutils-2.20-sean/gas/doc/c-mc9xgate.texi
--- binutils-2.20/gas/doc/c-mc9xgate.texi	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/doc/c-mc9xgate.texi	2010-10-01 14:37:29.000000000 -0600
@@ -0,0 +1,442 @@
+@c Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2003, 2006
+@c Free Software Foundation, Inc.
+@c This is part of the GAS manual.
+@c For copying conditions, see the file as.texinfo.
+@ifset GENERIC
+@page
+@node M68HC11-Dependent
+@chapter M68HC11 and M68HC12 Dependent Features
+@end ifset
+@ifclear GENERIC
+@node Machine Dependencies
+@chapter M68HC11 and M68HC12 Dependent Features
+@end ifclear
+
+@cindex M68HC11 and M68HC12 support
+@menu
+* M68HC11-Opts::                   M68HC11 and M68HC12 Options
+* M68HC11-Syntax::                 Syntax
+* M68HC11-Modifiers::              Symbolic Operand Modifiers
+* M68HC11-Directives::             Assembler Directives
+* M68HC11-Float::                  Floating Point
+* M68HC11-opcodes::                Opcodes
+@end menu
+
+@node M68HC11-Opts
+@section M68HC11 and M68HC12 Options
+
+@cindex options, M68HC11
+@cindex M68HC11 options
+The Motorola 68HC11 and 68HC12 version of @code{@value{AS}} have a few machine
+dependent options.
+
+@table @code
+
+@cindex @samp{-m68hc11}
+@item -m68hc11
+This option switches the assembler in the M68HC11 mode. In this mode,
+the assembler only accepts 68HC11 operands and mnemonics. It produces
+code for the 68HC11.
+
+@cindex @samp{-m68hc12}
+@item -m68hc12
+This option switches the assembler in the M68HC12 mode. In this mode,
+the assembler also accepts 68HC12 operands and mnemonics. It produces
+code for the 68HC12. A few 68HC11 instructions are replaced by
+some 68HC12 instructions as recommended by Motorola specifications.
+
+@cindex @samp{-m68hcs12}
+@item -m68hcs12
+This option switches the assembler in the M68HCS12 mode.  This mode is
+similar to @samp{-m68hc12} but specifies to assemble for the 68HCS12
+series.  The only difference is on the assembling of the @samp{movb}
+and @samp{movw} instruction when a PC-relative operand is used.
+
+@cindex @samp{-mshort}
+@item -mshort
+This option controls the ABI and indicates to use a 16-bit integer ABI.
+It has no effect on the assembled instructions.
+This is the default.
+
+@cindex @samp{-mlong}
+@item -mlong
+This option controls the ABI and indicates to use a 32-bit integer ABI.
+
+@cindex @samp{-mshort-double}
+@item -mshort-double
+This option controls the ABI and indicates to use a 32-bit float ABI.
+This is the default.
+
+@cindex @samp{-mlong-double}
+@item -mlong-double
+This option controls the ABI and indicates to use a 64-bit float ABI.
+
+@cindex @samp{--strict-direct-mode}
+@item --strict-direct-mode
+You can use the @samp{--strict-direct-mode} option to disable
+the automatic translation of direct page mode addressing into
+extended mode when the instruction does not support direct mode.
+For example, the @samp{clr} instruction does not support direct page
+mode addressing. When it is used with the direct page mode,
+@code{@value{AS}} will ignore it and generate an absolute addressing.
+This option prevents @code{@value{AS}} from doing this, and the wrong
+usage of the direct page mode will raise an error.
+
+@cindex @samp{--short-branches}
+@item --short-branches
+The @samp{--short-branches} option turns off the translation of
+relative branches into absolute branches when the branch offset is
+out of range. By default @code{@value{AS}} transforms the relative
+branch (@samp{bsr}, @samp{bgt}, @samp{bge}, @samp{beq}, @samp{bne},
+@samp{ble}, @samp{blt}, @samp{bhi}, @samp{bcc}, @samp{bls},
+@samp{bcs}, @samp{bmi}, @samp{bvs}, @samp{bvs}, @samp{bra}) into
+an absolute branch when the offset is out of the -128 .. 127 range.
+In that case, the @samp{bsr} instruction is translated into a
+@samp{jsr}, the @samp{bra} instruction is translated into a
+@samp{jmp} and the conditional branches instructions are inverted and
+followed by a @samp{jmp}. This option disables these translations
+and @code{@value{AS}} will generate an error if a relative branch
+is out of range. This option does not affect the optimization
+associated to the @samp{jbra}, @samp{jbsr} and @samp{jbXX} pseudo opcodes.
+
+@cindex @samp{--force-long-branches}
+@item --force-long-branches
+The @samp{--force-long-branches} option forces the translation of
+relative branches into absolute branches. This option does not affect
+the optimization associated to the @samp{jbra}, @samp{jbsr} and
+@samp{jbXX} pseudo opcodes. 
+
+@cindex @samp{--print-insn-syntax}
+@item --print-insn-syntax
+You can use the @samp{--print-insn-syntax} option to obtain the
+syntax description of the instruction when an error is detected.
+
+@cindex @samp{--print-opcodes}
+@item --print-opcodes
+The @samp{--print-opcodes} option prints the list of all the
+instructions with their syntax. The first item of each line
+represents the instruction name and the rest of the line indicates
+the possible operands for that instruction. The list is printed
+in alphabetical order. Once the list is printed @code{@value{AS}}
+exits.
+
+@cindex @samp{--generate-example}
+@item --generate-example
+The @samp{--generate-example} option is similar to @samp{--print-opcodes}
+but it generates an example for each instruction instead.
+@end table
+
+@node M68HC11-Syntax
+@section Syntax
+
+@cindex M68HC11 syntax
+@cindex syntax, M68HC11
+
+In the M68HC11 syntax, the instruction name comes first and it may
+be followed by one or several operands (up to three). Operands are
+separated by comma (@samp{,}). In the normal mode,
+@code{@value{AS}} will complain if too many operands are specified for
+a given instruction. In the MRI mode (turned on with @samp{-M} option),
+it will treat them as comments. Example:
+
+@smallexample
+inx
+lda  #23
+bset 2,x #4
+brclr *bot #8 foo
+@end smallexample
+
+@cindex M68HC11 addressing modes
+@cindex addressing modes, M68HC11
+The following addressing modes are understood for 68HC11 and 68HC12:
+@table @dfn
+@item Immediate
+@samp{#@var{number}}
+
+@item Address Register
+@samp{@var{number},X}, @samp{@var{number},Y}
+
+The @var{number} may be omitted in which case 0 is assumed.
+
+@item Direct Addressing mode
+@samp{*@var{symbol}}, or @samp{*@var{digits}}
+
+@item Absolute
+@samp{@var{symbol}}, or @samp{@var{digits}}
+@end table
+
+The M68HC12 has other more complex addressing modes. All of them
+are supported and they are represented below:
+
+@table @dfn
+@item Constant Offset Indexed Addressing Mode
+@samp{@var{number},@var{reg}}
+
+The @var{number} may be omitted in which case 0 is assumed.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or
+@samp{PC}.  The assembler will use the smaller post-byte definition
+according to the constant value (5-bit constant offset, 9-bit constant
+offset or 16-bit constant offset).  If the constant is not known by
+the assembler it will use the 16-bit constant offset post-byte and the value
+will be resolved at link time.
+
+@item Offset Indexed Indirect
+@samp{[@var{number},@var{reg}]}
+
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Auto Pre-Increment/Pre-Decrement/Post-Increment/Post-Decrement
+@samp{@var{number},-@var{reg}}
+@samp{@var{number},+@var{reg}}
+@samp{@var{number},@var{reg}-}
+@samp{@var{number},@var{reg}+}
+
+The number must be in the range @samp{-8}..@samp{+8} and must not be 0.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Accumulator Offset
+@samp{@var{acc},@var{reg}}
+
+The accumulator register can be either @samp{A}, @samp{B} or @samp{D}.
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@item Accumulator D offset indexed-indirect
+@samp{[D,@var{reg}]}
+
+The register can be either @samp{X}, @samp{Y}, @samp{SP} or @samp{PC}.
+
+@end table
+
+For example:
+
+@smallexample
+ldab 1024,sp
+ldd [10,x]
+orab 3,+x
+stab -2,y-
+ldx a,pc
+sty [d,sp]
+@end smallexample
+
+
+@node M68HC11-Modifiers
+@section Symbolic Operand Modifiers
+
+@cindex M68HC11 modifiers
+@cindex syntax, M68HC11
+
+The assembler supports several modifiers when using symbol addresses
+in 68HC11 and 68HC12 instruction operands.  The general syntax is
+the following:
+
+@smallexample
+%modifier(symbol)
+@end smallexample
+
+@table @code
+@cindex symbol modifiers
+@item %addr
+This modifier indicates to the assembler and linker to use
+the 16-bit physical address corresponding to the symbol.  This is intended
+to be used on memory window systems to map a symbol in the memory bank window.
+If the symbol is in a memory expansion part, the physical address
+corresponds to the symbol address within the memory bank window.
+If the symbol is not in a memory expansion part, this is the symbol address
+(using or not using the %addr modifier has no effect in that case).
+
+@item %page
+This modifier indicates to use the memory page number corresponding
+to the symbol.  If the symbol is in a memory expansion part, its page
+number is computed by the linker as a number used to map the page containing
+the symbol in the memory bank window.  If the symbol is not in a memory
+expansion part, the page number is 0.
+
+@item %hi
+This modifier indicates to use the 8-bit high part of the physical
+address of the symbol.
+
+@item %lo
+This modifier indicates to use the 8-bit low part of the physical
+address of the symbol.
+
+@end table
+
+For example a 68HC12 call to a function @samp{foo_example} stored in memory
+expansion part could be written as follows:
+
+@smallexample
+call %addr(foo_example),%page(foo_example)
+@end smallexample
+
+and this is equivalent to
+
+@smallexample
+call foo_example
+@end smallexample
+
+And for 68HC11 it could be written as follows:
+
+@smallexample
+ldab #%page(foo_example)
+stab _page_switch
+jsr  %addr(foo_example)
+@end smallexample
+
+@node M68HC11-Directives
+@section Assembler Directives
+
+@cindex assembler directives, M68HC11
+@cindex assembler directives, M68HC12
+@cindex M68HC11 assembler directives
+@cindex M68HC12 assembler directives
+
+The 68HC11 and 68HC12 version of @code{@value{AS}} have the following
+specific assembler directives:
+
+@table @code
+@item .relax
+@cindex assembler directive .relax, M68HC11
+@cindex M68HC11 assembler directive .relax
+The relax directive is used by the @samp{GNU Compiler} to emit a specific
+relocation to mark a group of instructions for linker relaxation.
+The sequence of instructions within the group must be known to the linker
+so that relaxation can be performed.
+
+@item .mode [mshort|mlong|mshort-double|mlong-double]
+@cindex assembler directive .mode, M68HC11
+@cindex M68HC11 assembler directive .mode
+This directive specifies the ABI.  It overrides the @samp{-mshort},
+@samp{-mlong}, @samp{-mshort-double} and @samp{-mlong-double} options.
+
+@item .far @var{symbol}
+@cindex assembler directive .far, M68HC11
+@cindex M68HC11 assembler directive .far
+This directive marks the symbol as a @samp{far} symbol meaning that it
+uses a @samp{call/rtc} calling convention as opposed to @samp{jsr/rts}.
+During a final link, the linker will identify references to the @samp{far}
+symbol and will verify the proper calling convention.
+
+@item .interrupt @var{symbol}
+@cindex assembler directive .interrupt, M68HC11
+@cindex M68HC11 assembler directive .interrupt
+This directive marks the symbol as an interrupt entry point.
+This information is then used by the debugger to correctly unwind the
+frame across interrupts.
+
+@item .xrefb @var{symbol}
+@cindex assembler directive .xrefb, M68HC11
+@cindex M68HC11 assembler directive .xrefb
+This directive is defined for compatibility with the
+@samp{Specification for Motorola 8 and 16-Bit Assembly Language Input
+Standard} and is ignored.
+
+@end table
+
+@node M68HC11-Float
+@section Floating Point
+
+@cindex floating point, M68HC11
+@cindex M68HC11 floating point
+Packed decimal (P) format floating literals are not supported.
+Feel free to add the code!
+
+The floating point formats generated by directives are these.
+
+@table @code
+@cindex @code{float} directive, M68HC11
+@item .float
+@code{Single} precision floating point constants.
+
+@cindex @code{double} directive, M68HC11
+@item .double
+@code{Double} precision floating point constants.
+
+@cindex @code{extend} directive M68HC11
+@cindex @code{ldouble} directive M68HC11
+@item .extend
+@itemx .ldouble
+@code{Extended} precision (@code{long double}) floating point constants.
+@end table
+
+@need 2000
+@node M68HC11-opcodes
+@section Opcodes
+
+@cindex M68HC11 opcodes
+@cindex opcodes, M68HC11
+@cindex instruction set, M68HC11
+
+@menu
+* M68HC11-Branch::                 Branch Improvement
+@end menu
+
+@node M68HC11-Branch
+@subsection Branch Improvement
+
+@cindex pseudo-opcodes, M68HC11
+@cindex M68HC11 pseudo-opcodes
+@cindex branch improvement, M68HC11
+@cindex M68HC11 branch improvement
+
+Certain pseudo opcodes are permitted for branch instructions.
+They expand to the shortest branch instruction that reach the
+target. Generally these mnemonics are made by prepending @samp{j} to
+the start of Motorola mnemonic. These pseudo opcodes are not affected
+by the @samp{--short-branches} or @samp{--force-long-branches} options.
+
+The following table summarizes the pseudo-operations.
+
+@smallexample
+                        Displacement Width
+     +-------------------------------------------------------------+
+     |                     Options                                 |
+     |    --short-branches           --force-long-branches         |
+     +--------------------------+----------------------------------+
+  Op |BYTE             WORD     | BYTE          WORD               |
+     +--------------------------+----------------------------------+
+ bsr | bsr <pc-rel>    <error>  |               jsr <abs>          |
+ bra | bra <pc-rel>    <error>  |               jmp <abs>          |
+jbsr | bsr <pc-rel>   jsr <abs> | bsr <pc-rel>  jsr <abs>          |
+jbra | bra <pc-rel>   jmp <abs> | bra <pc-rel>  jmp <abs>          |
+ bXX | bXX <pc-rel>    <error>  |               bNX +3; jmp <abs>  | 
+jbXX | bXX <pc-rel>   bNX +3;   | bXX <pc-rel>  bNX +3; jmp <abs>  |
+     |                jmp <abs> |                                  |
+     +--------------------------+----------------------------------+
+XX: condition
+NX: negative of condition XX
+
+@end smallexample
+
+@table @code
+@item jbsr
+@itemx jbra
+These are the simplest jump pseudo-operations; they always map to one
+particular machine instruction, depending on the displacement to the
+branch target.
+
+@item jb@var{XX}
+Here, @samp{jb@var{XX}} stands for an entire family of pseudo-operations,
+where @var{XX} is a conditional branch or condition-code test.  The full
+list of pseudo-ops in this family is:
+@smallexample
+ jbcc   jbeq   jbge   jbgt   jbhi   jbvs   jbpl  jblo
+ jbcs   jbne   jblt   jble   jbls   jbvc   jbmi
+@end smallexample
+
+For the cases of non-PC relative displacements and long displacements,
+@code{@value{AS}} issues a longer code fragment in terms of
+@var{NX}, the opposite condition to @var{XX}.  For example, for the
+non-PC relative case:
+@smallexample
+    jb@var{XX} foo
+@end smallexample
+gives
+@smallexample
+     b@var{NX}s oof
+     jmp foo
+ oof:
+@end smallexample
+
+@end table
+
+
diff -rupN binutils-2.20/gas/po/POTFILES.in binutils-2.20-sean/gas/po/POTFILES.in
--- binutils-2.20/gas/po/POTFILES.in	2009-09-07 06:09:33.000000000 -0600
+++ binutils-2.20-sean/gas/po/POTFILES.in	2010-10-01 14:37:29.000000000 -0600
@@ -87,6 +87,7 @@ config/tc-m32r.c
 config/tc-m32r.h
 config/tc-m68hc11.c
 config/tc-m68hc11.h
+config/tc-mc9s12x.h
 config/tc-m68k.c
 config/tc-m68k.h
 config/tc-maxq.c
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-32.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-32.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-32.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-32.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mshort-double
+#name:	  Elf flags 68HC11 16-bit int, 32-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 0:\[abi=16-bit int, 32-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-64.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-64.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-64.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-16-64.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11
+#name:	  Elf flags 68HC11 16-bit int, 64-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 2:\[abi=16-bit int, 64-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-32.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-32.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-32.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-32.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mlong -mshort-double
+#name:	  Elf flags 68HC11 32-bit int, 32-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 1:\[abi=32-bit int, 32-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-64.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-64.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-64.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi-m68hc11-32-64.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mlong
+#name:	  Elf flags 68HC11 32-bit int, 64-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 3:\[abi=32-bit int, 64-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/abi.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/abi.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/abi.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,4 @@
+	.sect .text
+	.globl L1
+L1:
+	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/all_insns.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/all_insns.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/all_insns.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/all_insns.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,500 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: all_insns
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <L0> aba
+0+0001 <L1> abx
+0+0002 <L2> aby
+0+0004 <L3> adca	#103
+0+0006 <L4> adca	\*0+0+ <L0>
+			7: R_M68HC11_8	Z198
+0+0008 <L5> adca	105,x
+0+000a <L6> adca	0+0+ <L0>
+			b: R_M68HC11_16	symbol115
+0+000d <L7> adca	81,x
+0+000f <L8> adcb	#255
+0+0011 <L9> adcb	\*0+0+ <L0>
+			12: R_M68HC11_8	Z74
+0+0013 <L10> adcb	236,x
+0+0015 <L11> adcb	0+0+ <L0>
+			16: R_M68HC11_16	symbol41
+0+0018 <L12> adcb	205,x
+0+001a <L13> adda	#186
+0+001c <L14> adda	\*0+0+ <L0>
+			1d: R_M68HC11_8	Z171
+0+001e <L15> adda	242,x
+0+0020 <L16> adda	0+0+ <L0>
+			21: R_M68HC11_16	symbol251
+0+0023 <L17> adda	227,x
+0+0025 <L18> addb	#70
+0+0027 <L19> addb	\*0+0+ <L0>
+			28: R_M68HC11_8	Z124
+0+0029 <L20> addb	194,x
+0+002b <L21> addb	0+0+ <L0>
+			2c: R_M68HC11_16	symbol84
+0+002e <L22> addb	248,x
+0+0030 <L23> addd	#0+231b <L330\+0x2034>
+0+0033 <L24> addd	\*0+0+ <L0>
+			34: R_M68HC11_8	Z232
+0+0035 <L25> addd	231,x
+0+0037 <L26> addd	0+0+ <L0>
+			38: R_M68HC11_16	symbol141
+0+003a <L27> addd	118,x
+0+003c <L28> anda	#90
+0+003e <L29> anda	\*0+0+ <L0>
+			3f: R_M68HC11_8	Z46
+0+0040 <L30> anda	99,x
+0+0042 <L31> anda	0+0+ <L0>
+			43: R_M68HC11_16	symbol51
+0+0045 <L32> anda	159,x
+0+0047 <L33> andb	#201
+0+0049 <L34> andb	\*0+0+ <L0>
+			4a: R_M68HC11_8	Z154
+0+004b <L35> andb	102,x
+0+004d <L36> andb	0+0+ <L0>
+			4e: R_M68HC11_16	symbol50
+0+0050 <L37> andb	13,x
+0+0052 <L38> asl	183,x
+0+0054 <L39> asl	0+0+ <L0>
+			55: R_M68HC11_16	symbol49
+0+0057 <L40> asl	88,x
+0+0059 <L41> asla
+0+005a <L42> aslb
+0+005b <L43> asld
+0+005c <L44> asr	163,x
+0+005e <L45> asr	0+0+ <L0>
+			5f: R_M68HC11_16	symbol90
+0+0061 <L46> asr	37,x
+0+0063 <L47> asra
+0+0064 <L48> asrb
+0+0065 <L49> bcs	0+006a <L50>
+			65: R_M68HC11_RL_JUMP	\*ABS\*
+0+0067 <L49\+0x2> jmp	0+0+ <L0>
+			68: R_M68HC11_16	L93
+0+006a <L50> bclr	\*0+0+ <L0> #\$00
+			6b: R_M68HC11_8	Z5
+			6c: R_M68HC11_8	\$17
+0+006d <L51> bclr	88,x #\$00
+			6f: R_M68HC11_8	\$e9
+0+0070 <L52> bclr	94,x #\$00
+			72: R_M68HC11_8	\$d4
+0+0073 <L53> bcc	0+0078 <L54>
+			73: R_M68HC11_RL_JUMP	\*ABS\*
+0+0075 <L53\+0x2> jmp	0+0+ <L0>
+			76: R_M68HC11_16	L171
+0+0078 <L54> bne	0+007d <L55>
+			78: R_M68HC11_RL_JUMP	\*ABS\*
+0+007a <L54\+0x2> jmp	0+0+ <L0>
+			7b: R_M68HC11_16	L178
+0+007d <L55> blt	0+0082 <L56>
+			7d: R_M68HC11_RL_JUMP	\*ABS\*
+0+007f <L55\+0x2> jmp	0+0+ <L0>
+			80: R_M68HC11_16	L205
+0+0082 <L56> ble	0+0087 <L57>
+			82: R_M68HC11_RL_JUMP	\*ABS\*
+0+0084 <L56\+0x2> jmp	0+0+ <L0>
+			85: R_M68HC11_16	L198
+0+0087 <L57> bls	0+008c <L58>
+			87: R_M68HC11_RL_JUMP	\*ABS\*
+0+0089 <L57\+0x2> jmp	0+0+ <L0>
+			8a: R_M68HC11_16	L155
+0+008c <L58> bcs	0+0091 <L59>
+			8c: R_M68HC11_RL_JUMP	\*ABS\*
+0+008e <L58\+0x2> jmp	0+0+ <L0>
+			8f: R_M68HC11_16	L180
+0+0091 <L59> bita	#84
+0+0093 <L60> bita	\*0+0+ <L0>
+			94: R_M68HC11_8	Z17
+0+0095 <L61> bita	14,x
+0+0097 <L62> bita	0+0+ <L0>
+			98: R_M68HC11_16	symbol130
+0+009a <L63> bita	116,x
+0+009c <L64> bitb	#65
+0+009e <L65> bitb	\*0+0+ <L0>
+			9f: R_M68HC11_8	Z33
+0+00a0 <L66> bitb	61,x
+0+00a2 <L67> bitb	0+0+ <L0>
+			a3: R_M68HC11_16	symbol220
+0+00a5 <L68> bitb	135,x
+0+00a7 <L69> ble	0+011d <L112>
+			a7: R_M68HC11_RL_JUMP	\*ABS\*
+0+00a9 <L70> bcc	0+00ae <L71>
+			a9: R_M68HC11_RL_JUMP	\*ABS\*
+0+00ab <L70\+0x2> jmp	0+0+ <L0>
+			ac: R_M68HC11_16	L233
+0+00ae <L71> bls	0+0097 <L62>
+			ae: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b0 <L72> bge	0+00b5 <L73>
+			b0: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b2 <L72\+0x2> jmp	0+0+ <L0>
+			b3: R_M68HC11_16	L161
+0+00b5 <L73> bmi	0+009e <L65>
+			b5: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b7 <L74> beq	0+00bc <L75>
+			b7: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b9 <L74\+0x2> jmp	0+0+ <L0>
+			ba: R_M68HC11_16	L225
+0+00bc <L75> bmi	0+00c1 <L76>
+			bc: R_M68HC11_RL_JUMP	\*ABS\*
+0+00be <L75\+0x2> jmp	0+0+ <L0>
+			bf: R_M68HC11_16	L252
+0+00c1 <L76> bra	0+0106 <L103>
+			c1: R_M68HC11_RL_JUMP	\*ABS\*
+0+00c3 <L77> brclr	\*0+0+ <L0> #\$00 0+0145 <L125\+0x2>
+			c3: R_M68HC11_RL_JUMP	\*ABS\*
+			c4: R_M68HC11_8	Z62
+			c5: R_M68HC11_8	\$01
+0+00c7 <L78> brclr	151,x #\$00 0+0127 <L115>
+			c7: R_M68HC11_RL_JUMP	\*ABS\*
+			c9: R_M68HC11_8	\$ea
+0+00cb <L79> brclr	107,x #\$00 0+00de <L84\+0x1>
+			cb: R_M68HC11_RL_JUMP	\*ABS\*
+			cd: R_M68HC11_8	\$96
+0+00cf <L80> brn	0+0082 <L56>
+			cf: R_M68HC11_RL_JUMP	\*ABS\*
+0+00d1 <L81> brset	\*0+0+ <L0> #\$00 0+0141 <L124>
+			d1: R_M68HC11_RL_JUMP	\*ABS\*
+			d2: R_M68HC11_8	Z92
+			d3: R_M68HC11_8	\$2a
+0+00d5 <L82> brset	176,x #\$00 0+0154 <L132>
+			d5: R_M68HC11_RL_JUMP	\*ABS\*
+			d7: R_M68HC11_8	\$3b
+0+00d9 <L83> brset	50,x #\$00 0+0119 <L110\+0x2>
+			d9: R_M68HC11_RL_JUMP	\*ABS\*
+			db: R_M68HC11_8	\$af
+0+00dd <L84> bset	\*0+0+ <L0> #\$00
+			de: R_M68HC11_8	Z84
+			df: R_M68HC11_8	\$ec
+0+00e0 <L85> bset	24,x #\$00
+			e2: R_M68HC11_8	\$db
+0+00e3 <L86> bset	92,x #\$00
+			e5: R_M68HC11_8	\$02
+0+00e6 <L87> jsr	0+0+ <L0>
+			e6: R_M68HC11_RL_JUMP	\*ABS\*
+			e7: R_M68HC11_16	L26
+0+00e9 <L88> bvs	0+00ee <L89>
+			e9: R_M68HC11_RL_JUMP	\*ABS\*
+0+00eb <L88\+0x2> jmp	0+0+ <L0>
+			ec: R_M68HC11_16	L254
+0+00ee <L89> bvs	0+00a2 <L67>
+			ee: R_M68HC11_RL_JUMP	\*ABS\*
+0+00f0 <L90> cba
+0+00f1 <L91> clc
+0+00f2 <L92> cli
+0+00f3 <L93> clr	251,x
+0+00f5 <L94> clr	0+0+ <L0>
+			f6: R_M68HC11_16	symbol250
+0+00f8 <L95> clr	170,x
+0+00fa <L96> clra
+0+00fb <L97> clrb
+0+00fc <L98> clv
+0+00fd <L99> cmpa	#58
+0+00ff <L100> cmpa	\*0+0+ <L0>
+			100: R_M68HC11_8	Z251
+0+0101 <L101> cmpa	41,x
+0+0103 <L102> cmpa	0+0+ <L0>
+			104: R_M68HC11_16	symbol209
+0+0106 <L103> cmpa	230,x
+0+0108 <L104> cmpb	#5
+0+010a <L105> cmpb	\*0+0+ <L0>
+			10b: R_M68HC11_8	Z60
+0+010c <L106> cmpb	124,x
+0+010e <L107> cmpb	0+0+ <L0>
+			10f: R_M68HC11_16	symbol148
+0+0111 <L108> cmpb	117,x
+0+0113 <L109> cpd	#0+0fd8 <L330\+0xcf1>
+0+0117 <L110> cpd	\*0+0+ <L0>
+			119: R_M68HC11_8	Z190
+0+011a <L111> cpd	97,x
+0+011d <L112> cpd	0+0+ <L0>
+			11f: R_M68HC11_16	symbol137
+0+0121 <L113> cpd	249,x
+0+0124 <L114> cpx	#0+af5c <L330\+0xac75>
+0+0127 <L115> cpx	\*0+0+ <L0>
+			128: R_M68HC11_8	Z187
+0+0129 <L116> cpx	168,x
+0+012b <L117> cpx	0+0+ <L0>
+			12c: R_M68HC11_16	symbol153
+0+012e <L118> cpx	15,x
+0+0130 <L119> cpy	#0+4095 <L330\+0x3dae>
+0+0134 <L120> cpy	\*0+0+ <L0>
+			136: R_M68HC11_8	Z177
+0+0137 <L121> cpy	235,x
+0+013a <L122> cpy	0+0+ <L0>
+			13c: R_M68HC11_16	symbol241
+0+013e <L123> cpy	179,x
+0+0141 <L124> com	5,x
+0+0143 <L125> com	0+0+ <L0>
+			144: R_M68HC11_16	symbol239
+0+0146 <L126> com	247,x
+0+0148 <L127> coma
+0+0149 <L128> comb
+0+014a <L129> cpd	#0+bf00 <L330\+0xbc19>
+0+014e <L130> cpd	\*0+0+ <L0>
+			150: R_M68HC11_8	Z233
+0+0151 <L131> cpd	161,x
+0+0154 <L132> cpd	0+0+ <L0>
+			156: R_M68HC11_16	symbol58
+0+0158 <L133> cpd	229,x
+0+015b <L134> cpx	#0+8fca <L330\+0x8ce3>
+0+015e <L135> cpx	\*0+0+ <L0>
+			15f: R_M68HC11_8	Z11
+0+0160 <L136> cpx	203,x
+0+0162 <L137> cpx	0+0+ <L0>
+			163: R_M68HC11_16	symbol208
+0+0165 <L138> cpx	72,x
+0+0167 <L139> cpy	#0+0247 <L248>
+0+016b <L140> cpy	\*0+0+ <L0>
+			16d: R_M68HC11_8	Z100
+0+016e <L141> cpy	189,x
+0+0171 <L142> cpy	0+0+ <L0>
+			173: R_M68HC11_16	symbol31
+0+0175 <L143> cpy	35,x
+0+0178 <L144> daa
+0+0179 <L145> dec	30,x
+0+017b <L146> dec	0+0+ <L0>
+			17c: R_M68HC11_16	symbol168
+0+017e <L147> dec	28,x
+0+0180 <L148> deca
+0+0181 <L149> decb
+0+0182 <L150> des
+0+0183 <L151> dex
+0+0184 <L152> dey
+0+0186 <L153> eora	#123
+0+0188 <L154> eora	\*0+0+ <L0>
+			189: R_M68HC11_8	Z100
+0+018a <L155> eora	197,x
+0+018c <L156> eora	0+0+ <L0>
+			18d: R_M68HC11_16	symbol20
+0+018f <L157> eora	115,x
+0+0191 <L158> eorb	#90
+0+0193 <L159> eorb	\*0+0+ <L0>
+			194: R_M68HC11_8	Z197
+0+0195 <L160> eorb	94,x
+0+0197 <L161> eorb	0+0+ <L0>
+			198: R_M68HC11_16	symbol75
+0+019a <L162> eorb	121,x
+0+019c <L163> fdiv
+0+019d <L164> idiv
+0+019e <L165> inc	99,x
+0+01a0 <L166> inc	0+0+ <L0>
+			1a1: R_M68HC11_16	symbol59
+0+01a3 <L167> inc	112,x
+0+01a5 <L168> inca
+0+01a6 <L169> incb
+0+01a7 <L170> ins
+0+01a8 <L171> inx
+0+01a9 <L172> iny
+0+01ab <L173> jmp	100,x
+0+01ad <L174> jmp	0+0+ <L0>
+			1ad: R_M68HC11_RL_JUMP	\*ABS\*
+			1ae: R_M68HC11_16	symbol36
+0+01b0 <L175> jmp	17,x
+0+01b2 <L176> jsr	\*0+0+ <L0>
+			1b2: R_M68HC11_RL_JUMP	\*ABS\*
+			1b3: R_M68HC11_8	Z158
+0+01b4 <L177> jsr	9,x
+0+01b6 <L178> jsr	0+0+ <L0>
+			1b6: R_M68HC11_RL_JUMP	\*ABS\*
+			1b7: R_M68HC11_16	symbol220
+0+01b9 <L179> jsr	170,x
+0+01bb <L180> ldaa	#212
+0+01bd <L181> ldaa	\*0+0+ <L0>
+			1be: R_M68HC11_8	Z172
+0+01bf <L182> ldaa	242,x
+0+01c1 <L183> ldaa	0+0+ <L0>
+			1c2: R_M68HC11_16	symbol27
+0+01c4 <L184> ldaa	16,x
+0+01c6 <L185> ldab	#175
+0+01c8 <L186> ldab	\*0+0+ <L0>
+			1c9: R_M68HC11_8	Z59
+0+01ca <L187> ldab	51,x
+0+01cc <L188> ldab	0+0+ <L0>
+			1cd: R_M68HC11_16	symbol205
+0+01cf <L189> ldab	227,x
+0+01d1 <L190> ldd	#0+c550 <L330\+0xc269>
+0+01d4 <L191> ldd	\*0+0+ <L0>
+			1d5: R_M68HC11_8	Z72
+0+01d6 <L192> ldd	71,x
+0+01d8 <L193> ldd	0+0+ <L0>
+			1d9: R_M68HC11_16	symbol21
+0+01db <L194> ldd	92,x
+0+01dd <L195> lds	#0+4fbb <L330\+0x4cd4>
+0+01e0 <L196> lds	\*0+0+ <L0>
+			1e1: R_M68HC11_8	Z111
+0+01e2 <L197> lds	34,x
+0+01e4 <L198> lds	0+0+ <L0>
+			1e5: R_M68HC11_16	symbol25
+0+01e7 <L199> lds	186,x
+0+01e9 <L200> ldx	#0+579b <L330\+0x54b4>
+0+01ec <L201> ldx	\*0+0+ <L0>
+			1ed: R_M68HC11_8	Z125
+0+01ee <L202> ldx	245,x
+0+01f0 <L203> ldx	0+0+ <L0>
+			1f1: R_M68HC11_16	symbol11
+0+01f3 <L204> ldx	225,x
+0+01f5 <L205> ldy	#0+ac1a <L330\+0xa933>
+0+01f9 <L206> ldy	\*0+0+ <L0>
+			1fb: R_M68HC11_8	Z28
+0+01fc <L207> ldy	127,x
+0+01ff <L208> ldy	0+0+ <L0>
+			201: R_M68HC11_16	symbol35
+0+0203 <L209> ldy	248,x
+0+0206 <L210> asl	41,x
+0+0208 <L211> asl	0+0+ <L0>
+			209: R_M68HC11_16	symbol248
+0+020b <L212> asl	164,x
+0+020d <L213> asla
+0+020e <L214> aslb
+0+020f <L215> asld
+0+0210 <L216> lsr	27,x
+0+0212 <L217> lsr	0+0+ <L0>
+			213: R_M68HC11_16	symbol19
+0+0215 <L218> lsr	181,x
+0+0217 <L219> lsra
+0+0218 <L220> lsrb
+0+0219 <L221> lsrd
+0+021a <L222> mul
+0+021b <L223> neg	202,x
+0+021d <L224> neg	0+0+ <L0>
+			21e: R_M68HC11_16	symbol78
+0+0220 <L225> neg	232,x
+0+0222 <L226> nega
+0+0223 <L227> negb
+0+0224 <L228> nop
+0+0225 <L229> oraa	#152
+0+0227 <L230> oraa	\*0+0+ <L0>
+			228: R_M68HC11_8	Z50
+0+0229 <L231> oraa	56,x
+0+022b <L232> oraa	0+0+ <L0>
+			22c: R_M68HC11_16	symbol224
+0+022e <L233> oraa	121,x
+0+0230 <L234> orab	#77
+0+0232 <L235> orab	\*0+0+ <L0>
+			233: R_M68HC11_8	Z61
+0+0234 <L236> orab	52,x
+0+0236 <L237> orab	0+0+ <L0>
+			237: R_M68HC11_16	symbol188
+0+0239 <L238> orab	95,x
+0+023b <L239> psha
+0+023c <L240> pshb
+0+023d <L241> pshx
+0+023e <L242> pshy
+0+0240 <L243> pula
+0+0241 <L244> pulb
+0+0242 <L245> pulx
+0+0243 <L246> puly
+0+0245 <L247> rol	78,x
+0+0247 <L248> rol	0+0+ <L0>
+			248: R_M68HC11_16	symbol119
+0+024a <L249> rol	250,x
+0+024c <L250> rola
+0+024d <L251> rolb
+0+024e <L252> ror	203,x
+0+0250 <L253> ror	0+0+ <L0>
+			251: R_M68HC11_16	symbol108
+0+0253 <L254> ror	5,x
+0+0255 <L255> rora
+0+0256 <L256> rorb
+0+0257 <L257> rti
+0+0258 <L258> rts
+0+0259 <L259> sba
+0+025a <L260> sbca	#172
+0+025c <L261> sbca	\*0+0+ <L0>
+			25d: R_M68HC11_8	Z134
+0+025e <L262> sbca	33,x
+0+0260 <L263> sbca	0+0+ <L0>
+			261: R_M68HC11_16	symbol43
+0+0263 <L264> sbca	170,x
+0+0265 <L265> sbcb	#26
+0+0267 <L266> sbcb	\*0+0+ <L0>
+			268: R_M68HC11_8	Z85
+0+0269 <L267> sbcb	162,x
+0+026b <L268> sbcb	0+0+ <L0>
+			26c: R_M68HC11_16	symbol190
+0+026e <L269> sbcb	112,x
+0+0270 <L270> sec
+0+0271 <L271> sei
+0+0272 <L272> sev
+0+0273 <L273> staa	\*0+0+ <L0>
+			274: R_M68HC11_8	Z181
+0+0275 <L274> staa	115,x
+0+0277 <L275> staa	0+0+ <L0>
+			278: R_M68HC11_16	symbol59
+0+027a <L276> staa	4,x
+0+027c <L277> stab	\*0+0+ <L0>
+			27d: R_M68HC11_8	Z92
+0+027e <L278> stab	211,x
+0+0280 <L279> stab	0+0+ <L0>
+			281: R_M68HC11_16	symbol54
+0+0283 <L280> stab	148,x
+0+0285 <L281> std	\*0+0+ <L0>
+			286: R_M68HC11_8	Z179
+0+0287 <L282> std	175,x
+0+0289 <L283> std	0+0+ <L0>
+			28a: R_M68HC11_16	symbol226
+0+028c <L284> std	240,x
+0+028e <L285> stop
+0+028f <L286> sts	\*0+0+ <L0>
+			290: R_M68HC11_8	Z228
+0+0291 <L287> sts	158,x
+0+0293 <L288> sts	0+0+ <L0>
+			294: R_M68HC11_16	symbol79
+0+0296 <L289> sts	50,x
+0+0298 <L290> stx	\*0+0+ <L0>
+			299: R_M68HC11_8	Z21
+0+029a <L291> stx	73,x
+0+029c <L292> stx	0+0+ <L0>
+			29d: R_M68HC11_16	symbol253
+0+029f <L293> stx	130,x
+0+02a1 <L294> sty	\*0+0+ <L0>
+			2a3: R_M68HC11_8	Z78
+0+02a4 <L295> sty	169,x
+0+02a7 <L296> sty	0+0+ <L0>
+			2a9: R_M68HC11_16	symbol8
+0+02ab <L297> sty	112,x
+0+02ae <L298> suba	#212
+0+02b0 <L299> suba	\*0+0+ <L0>
+			2b1: R_M68HC11_8	Z178
+0+02b2 <L300> suba	138,x
+0+02b4 <L301> suba	0+0+ <L0>
+			2b5: R_M68HC11_16	symbol41
+0+02b7 <L302> suba	84,x
+0+02b9 <L303> subb	#72
+0+02bb <L304> subb	\*0+0+ <L0>
+			2bc: R_M68HC11_8	Z154
+0+02bd <L305> subb	10,x
+0+02bf <L306> subb	0+0+ <L0>
+			2c0: R_M68HC11_16	symbol188
+0+02c2 <L307> subb	213,x
+0+02c4 <L308> subd	#0+f10e <L330\+0xee27>
+0+02c7 <L309> subd	\*0+0+ <L0>
+			2c8: R_M68HC11_8	Z24
+0+02c9 <L310> subd	168,x
+0+02cb <L311> subd	0+0+ <L0>
+			2cc: R_M68HC11_16	symbol68
+0+02ce <L312> subd	172,x
+0+02d0 <L313> swi
+0+02d1 <L314> tab
+0+02d2 <L315> tap
+0+02d3 <L316> tba
+	...
+0+02d5 <L318> tpa
+0+02d6 <L319> tst	91,x
+0+02d8 <L320> tst	0+0+ <L0>
+			2d9: R_M68HC11_16	symbol243
+0+02db <L321> tst	142,x
+0+02dd <L322> tsta
+0+02de <L323> tstb
+0+02df <L324> tsx
+0+02e0 <L325> tsy
+0+02e2 <L326> txs
+0+02e3 <L327> tys
+0+02e5 <L328> wai
+0+02e6 <L329> xgdx
+0+02e7 <L330> xgdy
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/all_insns.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/all_insns.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/all_insns.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/all_insns.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,335 @@
+# Example of M68hc11 instructions
+	.sect .text
+_start:
+L0:	aba 
+L1:	abx 
+L2:	aby 
+L3:	adca #103
+L4:	adca *Z198
+L5:	adca 105,X
+L6:	adca symbol115
+L7:	adca 81,X
+L8:	adcb #255
+L9:	adcb *Z74
+L10:	adcb 236,X
+L11:	adcb symbol41
+L12:	adcb 205,X
+L13:	adda #186
+L14:	adda *Z171
+L15:	adda 242,X
+L16:	adda symbol251
+L17:	adda 227,X
+L18:	addb #70
+L19:	addb *Z124
+L20:	addb 194,X
+L21:	addb symbol84
+L22:	addb 248,X
+L23:	addd #8987
+L24:	addd *Z232
+L25:	addd 231,X
+L26:	addd symbol141
+L27:	addd 118,X
+L28:	anda #90
+L29:	anda *Z46
+L30:	anda 99,X
+L31:	anda symbol51
+L32:	anda 159,X
+L33:	andb #201
+L34:	andb *Z154
+L35:	andb 102,X
+L36:	andb symbol50
+L37:	andb 13,X
+L38:	asl 183,X
+L39:	asl symbol49
+L40:	asl 88,X
+L41:	asla 
+L42:	aslb 
+L43:	asld 
+L44:	asr 163,X
+L45:	asr symbol90
+L46:	asr 37,X
+L47:	asra 
+L48:	asrb 
+L49:	bcc L93
+L50:	bclr *Z5 #$17
+L51:	bclr 88,X #$e9
+L52:	bclr 94,X #$d4
+L53:	bcs L171
+L54:	beq L178
+L55:	bge L205
+L56:	bgt L198
+L57:	bhi L155
+L58:	bhs L180
+L59:	bita #84
+L60:	bita *Z17
+L61:	bita 14,X
+L62:	bita symbol130
+L63:	bita 116,X
+L64:	bitb #65
+L65:	bitb *Z33
+L66:	bitb 61,X
+L67:	bitb symbol220
+L68:	bitb 135,X
+L69:	ble L112
+L70:	blo L233
+L71:	bls L62
+L72:	blt L161
+L73:	bmi L65
+L74:	bne L225
+L75:	bpl L252
+L76:	bra L103
+L77:	brclr *Z62 #$01 .+126
+L78:	brclr 151,X #$ea .+92
+L79:	brclr 107,X #$96 .+15
+L80:	brn L56
+L81:	brset *Z92 #$2a .+108
+L82:	brset 176,X #$3b .+123
+L83:	brset 50,X #$af .+60
+L84:	bset *Z84 #$ec
+L85:	bset 24,X #$db
+L86:	bset 92,X #$02
+L87:	bsr L26
+L88:	bvc L254
+L89:	bvs L67
+L90:	cba 
+L91:	clc 
+L92:	cli 
+L93:	clr 251,X
+L94:	clr symbol250
+L95:	clr 170,X
+L96:	clra 
+L97:	clrb 
+L98:	clv 
+L99:	cmpa #58
+L100:	cmpa *Z251
+L101:	cmpa 41,X
+L102:	cmpa symbol209
+L103:	cmpa 230,X
+L104:	cmpb #5
+L105:	cmpb *Z60
+L106:	cmpb 124,X
+L107:	cmpb symbol148
+L108:	cmpb 117,X
+L109:	cmpd #4056
+L110:	cmpd *Z190
+L111:	cmpd 97,X
+L112:	cmpd symbol137
+L113:	cmpd 249,X
+L114:	cmpx #44892
+L115:	cmpx *Z187
+L116:	cmpx 168,X
+L117:	cmpx symbol153
+L118:	cmpx 15,X
+L119:	cmpy #16533
+L120:	cmpy *Z177
+L121:	cmpy 235,X
+L122:	cmpy symbol241
+L123:	cmpy 179,X
+L124:	com 5,X
+L125:	com symbol239
+L126:	com 247,X
+L127:	coma 
+L128:	comb 
+L129:	cpd #48896
+L130:	cpd *Z233
+L131:	cpd 161,X
+L132:	cpd symbol58
+L133:	cpd 229,X
+L134:	cpx #36810
+L135:	cpx *Z11
+L136:	cpx 203,X
+L137:	cpx symbol208
+L138:	cpx 72,X
+L139:	cpy #583
+L140:	cpy *Z100
+L141:	cpy 189,X
+L142:	cpy symbol31
+L143:	cpy 35,X
+L144:	daa 
+L145:	dec 30,X
+L146:	dec symbol168
+L147:	dec 28,X
+L148:	deca 
+L149:	decb 
+L150:	des 
+L151:	dex 
+L152:	dey 
+L153:	eora #123
+L154:	eora *Z100
+L155:	eora 197,X
+L156:	eora symbol20
+L157:	eora 115,X
+L158:	eorb #90
+L159:	eorb *Z197
+L160:	eorb 94,X
+L161:	eorb symbol75
+L162:	eorb 121,X
+L163:	fdiv 
+L164:	idiv 
+L165:	inc 99,X
+L166:	inc symbol59
+L167:	inc 112,X
+L168:	inca 
+L169:	incb 
+L170:	ins 
+L171:	inx 
+L172:	iny 
+L173:	jmp 100,X
+L174:	jmp symbol36
+L175:	jmp 17,X
+L176:	jsr *Z158
+L177:	jsr 9,X
+L178:	jsr symbol220
+L179:	jsr 170,X
+L180:	ldaa #212
+L181:	ldaa *Z172
+L182:	ldaa 242,X
+L183:	ldaa symbol27
+L184:	ldaa 16,X
+L185:	ldab #175
+L186:	ldab *Z59
+L187:	ldab 51,X
+L188:	ldab symbol205
+L189:	ldab 227,X
+L190:	ldd #50512
+L191:	ldd *Z72
+L192:	ldd 71,X
+L193:	ldd symbol21
+L194:	ldd 92,X
+L195:	lds #20411
+L196:	lds *Z111
+L197:	lds 34,X
+L198:	lds symbol25
+L199:	lds 186,X
+L200:	ldx #22427
+L201:	ldx *Z125
+L202:	ldx 245,X
+L203:	ldx symbol11
+L204:	ldx 225,X
+L205:	ldy #44058
+L206:	ldy *Z28
+L207:	ldy 127,X
+L208:	ldy symbol35
+L209:	ldy 248,X
+L210:	lsl 41,X
+L211:	lsl symbol248
+L212:	lsl 164,X
+L213:	lsla 
+L214:	lslb 
+L215:	lsld 
+L216:	lsr 27,X
+L217:	lsr symbol19
+L218:	lsr 181,X
+L219:	lsra 
+L220:	lsrb 
+L221:	lsrd 
+L222:	mul 
+L223:	neg 202,X
+L224:	neg symbol78
+L225:	neg 232,X
+L226:	nega 
+L227:	negb 
+L228:	nop 
+L229:	oraa #152
+L230:	oraa *Z50
+L231:	oraa 56,X
+L232:	oraa symbol224
+L233:	oraa 121,X
+L234:	orab #77
+L235:	orab *Z61
+L236:	orab 52,X
+L237:	orab symbol188
+L238:	orab 95,X
+L239:	psha 
+L240:	pshb 
+L241:	pshx 
+L242:	pshy 
+L243:	pula 
+L244:	pulb 
+L245:	pulx 
+L246:	puly 
+L247:	rol 78,X
+L248:	rol symbol119
+L249:	rol 250,X
+L250:	rola 
+L251:	rolb 
+L252:	ror 203,X
+L253:	ror symbol108
+L254:	ror 5,X
+L255:	rora 
+L256:	rorb 
+L257:	rti 
+L258:	rts 
+L259:	sba 
+L260:	sbca #172
+L261:	sbca *Z134
+L262:	sbca 33,X
+L263:	sbca symbol43
+L264:	sbca 170,X
+L265:	sbcb #26
+L266:	sbcb *Z85
+L267:	sbcb 162,X
+L268:	sbcb symbol190
+L269:	sbcb 112,X
+L270:	sec 
+L271:	sei 
+L272:	sev 
+L273:	staa *Z181
+L274:	staa 115,X
+L275:	staa symbol59
+L276:	staa 4,X
+L277:	stab *Z92
+L278:	stab 211,X
+L279:	stab symbol54
+L280:	stab 148,X
+L281:	std *Z179
+L282:	std 175,X
+L283:	std symbol226
+L284:	std 240,X
+L285:	stop 
+L286:	sts *Z228
+L287:	sts 158,X
+L288:	sts symbol79
+L289:	sts 50,X
+L290:	stx *Z21
+L291:	stx 73,X
+L292:	stx symbol253
+L293:	stx 130,X
+L294:	sty *Z78
+L295:	sty 169,X
+L296:	sty symbol8
+L297:	sty 112,X
+L298:	suba #212
+L299:	suba *Z178
+L300:	suba 138,X
+L301:	suba symbol41
+L302:	suba 84,X
+L303:	subb #72
+L304:	subb *Z154
+L305:	subb 10,X
+L306:	subb symbol188
+L307:	subb 213,X
+L308:	subd #61710
+L309:	subd *Z24
+L310:	subd 168,X
+L311:	subd symbol68
+L312:	subd 172,X
+L313:	swi 
+L314:	tab 
+L315:	tap 
+L316:	tba 
+L317:	test 
+L318:	tpa 
+L319:	tst 91,X
+L320:	tst symbol243
+L321:	tst 142,X
+L322:	tsta 
+L323:	tstb 
+L324:	tsx 
+L325:	tsy 
+L326:	txs 
+L327:	tys 
+L328:	wai 
+L329:	xgdx 
+L330:	xgdy 
+
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/branchs12.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/branchs12.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/branchs12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/branchs12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,225 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 branchs
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+0+00 <start> bgt	0+48 <L1>
+[	]+0: R_M68HC12_RL_JUMP	\*ABS\*
+0+02 <start\+0x2> bge	0+48 <L1>
+[	]+2: R_M68HC12_RL_JUMP	\*ABS\*
+0+04 <start\+0x4> ble	0+48 <L1>
+[	]+4: R_M68HC12_RL_JUMP	\*ABS\*
+0+06 <start\+0x6> blt	0+48 <L1>
+[	]+6: R_M68HC12_RL_JUMP	\*ABS\*
+0+08 <start\+0x8> bhi	0+48 <L1>
+[	]+8: R_M68HC12_RL_JUMP	\*ABS\*
+0+0a <start\+0xa> bcc	0+48 <L1>
+[	]+a: R_M68HC12_RL_JUMP	\*ABS\*
+0+0c <start\+0xc> bcc	0+48 <L1>
+[	]+c: R_M68HC12_RL_JUMP	\*ABS\*
+0+0e <start\+0xe> beq	0+48 <L1>
+[	]+e: R_M68HC12_RL_JUMP	\*ABS\*
+0+10 <start\+0x10> bls	0+48 <L1>
+[	]+10: R_M68HC12_RL_JUMP	\*ABS\*
+0+12 <start\+0x12> bcs	0+48 <L1>
+[	]+12: R_M68HC12_RL_JUMP	\*ABS\*
+0+14 <start\+0x14> bcs	0+48 <L1>
+[	]+14: R_M68HC12_RL_JUMP	\*ABS\*
+0+16 <start\+0x16> bmi	0+48 <L1>
+[	]+16: R_M68HC12_RL_JUMP	\*ABS\*
+0+18 <start\+0x18> bvs	0+48 <L1>
+[	]+18: R_M68HC12_RL_JUMP	\*ABS\*
+0+1a <start\+0x1a> bra	0+48 <L1>
+[	]+1a: R_M68HC12_RL_JUMP	\*ABS\*
+0+1c <start\+0x1c> bvc	0+48 <L1>
+[	]+1c: R_M68HC12_RL_JUMP	\*ABS\*
+0+1e <start\+0x1e> bne	0+48 <L1>
+[	]+1e: R_M68HC12_RL_JUMP	\*ABS\*
+0+20 <start\+0x20> bpl	0+48 <L1>
+[	]+20: R_M68HC12_RL_JUMP	\*ABS\*
+0+22 <start\+0x22> brn	0+48 <L1>
+[	]+22: R_M68HC12_RL_JUMP	\*ABS\*
+0+24 <start\+0x24> bgt	0+00 <start>
+[	]+24: R_M68HC12_RL_JUMP	\*ABS\*
+0+26 <start\+0x26> bge	0+00 <start>
+[	]+26: R_M68HC12_RL_JUMP	\*ABS\*
+0+28 <start\+0x28> ble	0+00 <start>
+[	]+28: R_M68HC12_RL_JUMP	\*ABS\*
+0+2a <start\+0x2a> blt	0+00 <start>
+[	]+2a: R_M68HC12_RL_JUMP	\*ABS\*
+0+2c <start\+0x2c> bhi	0+00 <start>
+[	]+2c: R_M68HC12_RL_JUMP	\*ABS\*
+0+2e <start\+0x2e> bcc	0+00 <start>
+[	]+2e: R_M68HC12_RL_JUMP	\*ABS\*
+0+30 <start\+0x30> bcc	0+00 <start>
+[	]+30: R_M68HC12_RL_JUMP	\*ABS\*
+0+32 <start\+0x32> beq	0+00 <start>
+[	]+32: R_M68HC12_RL_JUMP	\*ABS\*
+0+34 <start\+0x34> bls	0+00 <start>
+[	]+34: R_M68HC12_RL_JUMP	\*ABS\*
+0+36 <start\+0x36> bcs	0+00 <start>
+[	]+36: R_M68HC12_RL_JUMP	\*ABS\*
+0+38 <start\+0x38> bcs	0+00 <start>
+[	]+38: R_M68HC12_RL_JUMP	\*ABS\*
+0+3a <start\+0x3a> bmi	0+00 <start>
+[	]+3a: R_M68HC12_RL_JUMP	\*ABS\*
+0+3c <start\+0x3c> bvs	0+00 <start>
+[	]+3c: R_M68HC12_RL_JUMP	\*ABS\*
+0+3e <start\+0x3e> bra	0+00 <start>
+[	]+3e: R_M68HC12_RL_JUMP	\*ABS\*
+0+40 <start\+0x40> bvc	0+00 <start>
+[	]+40: R_M68HC12_RL_JUMP	\*ABS\*
+0+42 <start\+0x42> bne	0+00 <start>
+[	]+42: R_M68HC12_RL_JUMP	\*ABS\*
+0+44 <start\+0x44> bpl	0+00 <start>
+[	]+44: R_M68HC12_RL_JUMP	\*ABS\*
+0+46 <start\+0x46> brn	0+00 <start>
+[	]+46: R_M68HC12_RL_JUMP	\*ABS\*
+0+48 <L1> lbgt	0+1e7 <L2>
+[	]+48: R_M68HC12_RL_JUMP	\*ABS\*
+0+4c <L1\+0x4> lbge	0+1e7 <L2>
+[	]+4c: R_M68HC12_RL_JUMP	\*ABS\*
+0+50 <L1\+0x8> lble	0+1e7 <L2>
+[	]+50: R_M68HC12_RL_JUMP	\*ABS\*
+0+54 <L1\+0xc> lblt	0+1e7 <L2>
+[	]+54: R_M68HC12_RL_JUMP	\*ABS\*
+0+58 <L1\+0x10> lbhi	0+1e7 <L2>
+[	]+58: R_M68HC12_RL_JUMP	\*ABS\*
+0+5c <L1\+0x14> lbcc	0+1e7 <L2>
+[	]+5c: R_M68HC12_RL_JUMP	\*ABS\*
+0+60 <L1\+0x18> lbcc	0+1e7 <L2>
+[	]+60: R_M68HC12_RL_JUMP	\*ABS\*
+0+64 <L1\+0x1c> lbeq	0+1e7 <L2>
+[	]+64: R_M68HC12_RL_JUMP	\*ABS\*
+0+68 <L1\+0x20> lbls	0+1e7 <L2>
+[	]+68: R_M68HC12_RL_JUMP	\*ABS\*
+0+6c <L1\+0x24> lbcs	0+1e7 <L2>
+[	]+6c: R_M68HC12_RL_JUMP	\*ABS\*
+0+70 <L1\+0x28> lbcs	0+1e7 <L2>
+[	]+70: R_M68HC12_RL_JUMP	\*ABS\*
+0+74 <L1\+0x2c> lbmi	0+1e7 <L2>
+[	]+74: R_M68HC12_RL_JUMP	\*ABS\*
+0+78 <L1\+0x30> lbvs	0+1e7 <L2>
+[	]+78: R_M68HC12_RL_JUMP	\*ABS\*
+0+7c <L1\+0x34> lbra	0+1e7 <L2>
+[	]+7c: R_M68HC12_RL_JUMP	\*ABS\*
+0+80 <L1\+0x38> lbvc	0+1e7 <L2>
+[	]+80: R_M68HC12_RL_JUMP	\*ABS\*
+0+84 <L1\+0x3c> lbne	0+1e7 <L2>
+[	]+84: R_M68HC12_RL_JUMP	\*ABS\*
+0+88 <L1\+0x40> lbpl	0+1e7 <L2>
+[	]+88: R_M68HC12_RL_JUMP	\*ABS\*
+0+8c <L1\+0x44> lbrn	0+1e7 <L2>
+[	]+8c: R_M68HC12_RL_JUMP	\*ABS\*
+0+90 <L1\+0x48> lbgt	0+00 <start>
+[	]+90: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+92: R_M68HC12_PCREL_16	undefined
+0+94 <L1\+0x4c> lbge	0+00 <start>
+[	]+94: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+96: R_M68HC12_PCREL_16	undefined
+0+98 <L1\+0x50> lble	0+00 <start>
+[	]+98: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+9a: R_M68HC12_PCREL_16	undefined
+0+9c <L1\+0x54> lblt	0+00 <start>
+[	]+9c: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+9e: R_M68HC12_PCREL_16	undefined
+0+a0 <L1\+0x58> lbhi	0+00 <start>
+[	]+a0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+a2: R_M68HC12_PCREL_16	undefined
+0+a4 <L1\+0x5c> lbcc	0+00 <start>
+[	]+a4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+a6: R_M68HC12_PCREL_16	undefined
+0+a8 <L1\+0x60> lbcc	0+00 <start>
+[	]+a8: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+aa: R_M68HC12_PCREL_16	undefined
+0+ac <L1\+0x64> lbeq	0+00 <start>
+[	]+ac: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ae: R_M68HC12_PCREL_16	undefined
+0+b0 <L1\+0x68> lbls	0+00 <start>
+[	]+b0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+b2: R_M68HC12_PCREL_16	undefined
+0+b4 <L1\+0x6c> lbcs	0+00 <start>
+[	]+b4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+b6: R_M68HC12_PCREL_16	undefined
+0+b8 <L1\+0x70> lbcs	0+00 <start>
+[	]+b8: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ba: R_M68HC12_PCREL_16	undefined
+0+bc <L1\+0x74> lbmi	0+00 <start>
+[	]+bc: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+be: R_M68HC12_PCREL_16	undefined
+0+c0 <L1\+0x78> lbvs	0+00 <start>
+[	]+c0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c2: R_M68HC12_PCREL_16	undefined
+0+c4 <L1\+0x7c> jmp	0+00 <start>
+[	]+c4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c5: R_M68HC12_16	undefined
+0+c7 <L1\+0x7f> lbvc	0+00 <start>
+[	]+c7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c9: R_M68HC12_PCREL_16	undefined
+0+cb <L1\+0x83> lbne	0+00 <start>
+[	]+cb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+cd: R_M68HC12_PCREL_16	undefined
+0+cf <L1\+0x87> lbpl	0+00 <start>
+[	]+cf: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d1: R_M68HC12_PCREL_16	undefined
+0+d3 <L1\+0x8b> lbrn	0+00 <start>
+[	]+d3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d5: R_M68HC12_PCREL_16	undefined
+0+d7 <L1\+0x8f> lbgt	0+10 <start\+0x10>
+[	]+d7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d9: R_M68HC12_PCREL_16	undefined
+0+db <L1\+0x93> lbge	0+10 <start\+0x10>
+[	]+db: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+dd: R_M68HC12_PCREL_16	undefined
+0+df <L1\+0x97> lble	0+10 <start\+0x10>
+[	]+df: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e1: R_M68HC12_PCREL_16	undefined
+0+e3 <L1\+0x9b> lblt	0+10 <start\+0x10>
+[	]+e3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e5: R_M68HC12_PCREL_16	undefined
+0+e7 <L1\+0x9f> lbhi	0+10 <start\+0x10>
+[	]+e7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e9: R_M68HC12_PCREL_16	undefined
+0+eb <L1\+0xa3> lbcc	0+10 <start\+0x10>
+[	]+eb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ed: R_M68HC12_PCREL_16	undefined
+0+ef <L1\+0xa7> lbcc	0+10 <start\+0x10>
+[	]+ef: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f1: R_M68HC12_PCREL_16	undefined
+0+f3 <L1\+0xab> lbeq	0+10 <start\+0x10>
+[	]+f3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f5: R_M68HC12_PCREL_16	undefined
+0+f7 <L1\+0xaf> lbls	0+10 <start\+0x10>
+[	]+f7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f9: R_M68HC12_PCREL_16	undefined
+0+fb <L1\+0xb3> lbcs	0+10 <start\+0x10>
+[	]+fb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+fd: R_M68HC12_PCREL_16	undefined
+0+ff <L1\+0xb7> lbcs	0+10 <start\+0x10>
+[	]+ff: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+101: R_M68HC12_PCREL_16	undefined
+0+103 <L1\+0xbb> lbmi	0+10 <start\+0x10>
+[	]+103: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+105: R_M68HC12_PCREL_16	undefined
+0+107 <L1\+0xbf> lbvs	0+10 <start\+0x10>
+[	]+107: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+109: R_M68HC12_PCREL_16	undefined
+0+10b <L1\+0xc3> lbra	0+10 <start\+0x10>
+[	]+10b: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+10d: R_M68HC12_PCREL_16	undefined
+0+10f <L1\+0xc7> lbvc	0+10 <start\+0x10>
+[	]+10f: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+111: R_M68HC12_PCREL_16	undefined
+0+113 <L1\+0xcb> lbne	0+10 <start\+0x10>
+[	]+113: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+115: R_M68HC12_PCREL_16	undefined
+0+117 <L1\+0xcf> lbpl	0+10 <start\+0x10>
+[	]+117: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+119: R_M68HC12_PCREL_16	undefined
+0+11b <L1\+0xd3> lbrn	0+10 <start\+0x10>
+[	]+11b: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+11d: R_M68HC12_PCREL_16	undefined
+	...
+0+1e7 <L2> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/branchs12.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/branchs12.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/branchs12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/branchs12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,111 @@
+#
+# Try to verify all branchs for 68HC12
+# Ensures that PC-relative relocations are correct.
+#
+	sect .text
+	globl start
+
+start:
+L0:
+	;; Branchs to defined symbols, positive offset < 128
+	bgt	L1
+	bge	L1
+	ble	L1
+	blt	L1
+	bhi	L1
+	bhs	L1
+	bcc	L1
+	beq	L1
+	bls	L1
+	blo	L1
+	bcs	L1
+	bmi	L1
+	bvs	L1
+	bra	L1
+	bvc	L1
+	bne	L1
+	bpl	L1
+	brn	L1
+
+	;; Branchs to defined symbols, negative offset > -128
+	bgt	L0
+	bge	L0
+	ble	L0
+	blt	L0
+	bhi	L0
+	bhs	L0
+	bcc	L0
+	beq	L0
+	bls	L0
+	blo	L0
+	bcs	L0
+	bmi	L0
+	bvs	L0
+	bra	L0
+	bvc	L0
+	bne	L0
+	bpl	L0
+	brn	L0
+L1:
+	;; Branchs to defined symbols, positive offset > -128
+	lbgt	L2
+	lbge	L2
+	lble	L2
+	lblt	L2
+	lbhi	L2
+	lbhs	L2
+	lbcc	L2
+	lbeq	L2
+	lbls	L2
+	lblo	L2
+	lbcs	L2
+	lbmi	L2
+	lbvs	L2
+	lbra	L2
+	lbvc	L2
+	lbne	L2
+	lbpl	L2
+	lbrn	L2
+
+	;; Branchs to undefined symbols, translated into lbcc
+	bgt	undefined
+	bge	undefined
+	ble	undefined
+	blt	undefined
+	bhi	undefined
+	bhs	undefined
+	bcc	undefined
+	beq	undefined
+	bls	undefined
+	blo	undefined
+	bcs	undefined
+	bmi	undefined
+	bvs	undefined
+	bra	undefined
+	bvc	undefined
+	bne	undefined
+	bpl	undefined
+	brn	undefined
+
+	;; Far branchs to undefined symbols
+	lbgt	undefined+16
+	lbge	undefined+16
+	lble	undefined+16
+	lblt	undefined+16
+	lbhi	undefined+16
+	lbhs	undefined+16
+	lbcc	undefined+16
+	lbeq	undefined+16
+	lbls	undefined+16
+	lblo	undefined+16
+	lbcs	undefined+16
+	lbmi	undefined+16
+	lbvs	undefined+16
+	lbra	undefined+16
+	lbvc	undefined+16
+	lbne	undefined+16
+	lbpl	undefined+16
+	lbrn	undefined+16
+	.skip	200
+L2:
+	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/bug-1825.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/bug-1825.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/bug-1825.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/bug-1825.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,129 @@
+#objdump: -S -r
+#as: -m68hc12 -gdwarf2
+#name: 68HC12 PC-relative addressing modes (bug-1825)
+
+.*:     file format elf32\-m68hc12
+
+Disassembly of section \.text:
+
+0+ <_main>:
+;;; .*
+;;; 
+	\.sect \.text
+	\.globl _main
+_main:
+	nop
+   0:	a7          	nop
+	ldx	L1,pc		; Assemble to 5\-bit > 0 offset
+   1:	ee c2       	ldx	2,PC \{5 <L1>\}
+	bra	L2
+   3:	20 02       	bra	7 <L2>
+			3: R_M68HC12_RL_JUMP	\*ABS\*
+
+0+5 <L1>:
+   5:	aa bb       	oraa	5,SP\-
+
+0+7 <L2>:
+L1:
+	.dc.w	0xaabb
+L2:
+	subd	L1,pc		; Assemble to 5\-bit < 0 offset
+   7:	a3 dc       	subd	\-4,PC \{5 <L1>\}
+
+0+9 <L3>:
+   9:	a7          	nop
+   a:	a7          	nop
+   b:	a7          	nop
+   c:	a7          	nop
+   d:	a7          	nop
+   e:	a7          	nop
+   f:	a7          	nop
+  10:	a7          	nop
+  11:	a7          	nop
+  12:	a7          	nop
+  13:	a7          	nop
+  14:	a7          	nop
+  15:	a7          	nop
+  16:	a7          	nop
+L3:
+	.ds.b	14, 0xA7
+	ldab	L3,pc		; 5\-bit < 0 offset
+  17:	e6 d0       	ldab	\-16,PC \{9 <L3>\}
+	ldab	L4,pc		; 5\-bit > 0 offset
+  19:	e6 cf       	ldab	15,PC \{2a <L4>\}
+	...
+
+0+2a <L4>:
+	...
+	.skip	15
+L4:
+	.skip	128
+	subd	L4,pc		; 9\-bit < 0 offset
+  aa:	a3 f9 7d    	subd	\-131,PC \{2a <L4>\}
+	addd	L5,pc		; 9\-bit > 0 offset
+  ad:	e3 f8 80    	addd	128,PC \{130 <L5>\}
+	...
+
+0+130 <L5>:
+	...
+ 22c:	00          	bgnd
+	.skip	128
+L5:
+	.skip	256\-3
+	orab	L5,pc		; 9 bit < 0 offset \(min value\)
+ 22d:	ea f9 00    	orab	\-256,PC \{130 <L5>\}
+	oraa	L6,pc		; 9 bit > 0 offset \(max value\)
+ 230:	aa f8 ff    	oraa	255,PC \{332 <L6>\}
+	...
+
+0+332 <L6>:
+	...
+ 42e:	00          	bgnd
+ 42f:	00          	bgnd
+	.skip	255
+L6:
+	.skip	256\-2
+	orab	L6,pc		; 16 bit < 0 offset
+ 430:	ea fa fe fe 	orab	\-258,PC \{332 <L6>\}
+	anda	_main,pc	; 16 bit < 0 offset
+ 434:	a4 fa fb c8 	anda	\-1080,PC \{0 <_main>\}
+	andb	L7,pc
+ 438:	e4 fa 01 00 	andb	256,PC \{53c <L7>\}
+	...
+
+0+53c <L7>:
+	.skip	256
+L7:
+	stab	external,pc	; External 16\-bit PCREL
+ 53c:	6b fa fa c0 	stab	\-1344,PC \{0 <_main>\}
+			53e: R_M68HC12_PCREL_16	external
+	ldd	_table,pc
+ 540:	ec cf       	ldd	15,PC \{551 <_table>\}
+	addd	_table\+2,pc
+ 542:	e3 cf       	addd	15,PC \{553 <_table\+0x2>\}
+	subd	_table\+4,pc
+ 544:	a3 cf       	subd	15,PC \{555 <_table\+0x4>\}
+	addd	_table\+8,pc
+ 546:	e3 f8 10    	addd	16,PC \{559 <_table\+0x8>\}
+	addd	_table\+12,pc
+ 549:	e3 f8 11    	addd	17,PC \{55d <_table\+0xc>\}
+	addd	_table\+16,pc
+ 54c:	e3 f8 12    	addd	18,PC \{561 <_table\+0x10>\}
+	rts
+ 54f:	3d          	rts
+	nop
+ 550:	a7          	nop
+
+0+551 <_table>:
+	...
+_table:
+	.ds.b	16,0
+	leax	_table,sp	; 16\-bit absolute reloc
+ 561:	1a f2 00 00 	leax	0,SP
+			563: R_M68HC12_16	_table
+	leay	_table,x
+ 565:	19 e2 00 00 	leay	0,X
+			567: R_M68HC12_16	_table
+	leax	_table,y
+ 569:	1a ea 00 00 	leax	0,Y
+			56b: R_M68HC12_16	_table
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/bug-1825.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/bug-1825.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/bug-1825.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/bug-1825.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,49 @@
+;;; Bug #1825: gas assemble PC-relative indexed addressing modes incorrectly
+;;; http://savannah.gnu.org/bugs/?func=detailbug&bug_id=1825&group_id=2424
+;;; 
+	.sect .text
+	.globl _main
+_main:
+	nop
+	ldx	L1,pc		; Assemble to 5-bit > 0 offset
+	bra	L2
+L1:
+	.dc.w	0xaabb
+L2:
+	subd	L1,pc		; Assemble to 5-bit < 0 offset
+L3:
+	.ds.b	14, 0xA7
+	ldab	L3,pc		; 5-bit < 0 offset
+	ldab	L4,pc		; 5-bit > 0 offset
+	.skip	15
+L4:
+	.skip	128
+	subd	L4,pc		; 9-bit < 0 offset
+	addd	L5,pc		; 9-bit > 0 offset
+	.skip	128
+L5:
+	.skip	256-3
+	orab	L5,pc		; 9 bit < 0 offset (min value)
+	oraa	L6,pc		; 9 bit > 0 offset (max value)
+	.skip	255
+L6:
+	.skip	256-2
+	orab	L6,pc		; 16 bit < 0 offset
+	anda	_main,pc	; 16 bit < 0 offset
+	andb	L7,pc
+	.skip	256
+L7:
+	stab	external,pc	; External 16-bit PCREL
+	ldd	_table,pc
+	addd	_table+2,pc
+	subd	_table+4,pc
+	addd	_table+8,pc
+	addd	_table+12,pc
+	addd	_table+16,pc
+	rts
+	nop
+_table:
+	.ds.b	16,0
+	leax	_table,sp	; 16-bit absolute reloc
+	leay	_table,x
+	leax	_table,y
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/indexed12.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/indexed12.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/indexed12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/indexed12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,204 @@
+#objdump: -S
+#as: -m68hc12 -gdwarf2
+#name: 68HC12 indexed addressing mode with 5, 9 and 16-bit offsets (indexed12)
+#source: indexed12.s
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+ <_main>:
+;; with a 5, 9 and 16-bit offset.
+;;
+	.sect .text
+	.globl _main
+_main:
+	nop
+   0:	a7          	nop
+;;; Global check \(1st\)
+	ldab	L1\-_main,x	; Offset/const of these 2 insns must be
+   1:	e6 e0 93    	ldab	147,X
+	ldaa	#L1\-_main	; identical \(likewise for 2nd global check\)
+   4:	86 93       	ldaa	#147
+;;; Test gas relax with difference of symbols \(same section\)
+	ldaa	L2\-L1,x		; \-> ldaa 2,x \(5\-bit offset\), text seg
+   6:	a6 02       	ldaa	2,X
+	adda	L1\-L2,y		; \-> adda \-2,y \(5\-bit offset\), text seg
+   8:	ab 5e       	adda	\-2,Y
+
+	orab	L7\-L6,sp	; \-> orab 8,sp  \(5\-bit offset\), text seg
+   a:	ea 88       	orab	8,SP
+	anda	L8\-L7,sp	; \-> anda 15,sp \(5\-bit offset\), text seg
+   c:	a4 8f       	anda	15,SP
+	eora	L7\-L8,sp	; \-> eora \-15,sp \(5\-bit offset\), text seg
+   e:	a8 91       	eora	\-15,SP
+	eorb	L7\-L9,sp	; \-> eorb \-16,sp \(5\-bit offset\), text seg
+  10:	e8 90       	eorb	\-16,SP
+
+	andb	L9\-L7,sp	; \-> andb 16,sp \(9\-bit offset\), text seg
+  12:	e4 f0 10    	andb	16,SP
+	staa	L7\-L10,x	; \-> staa \-17,x \(9\-bit offset\), text seg
+  15:	6a e1 ef    	staa	\-17,X
+	stab	L11\-L10,y	; \-> stab 128,y \(9\-bit offset\), text seg
+  18:	6b e8 80    	stab	128,Y
+	stab	L10\-L11,y	; \-> stab \-128,y \(9\-bit offset\), text seg
+  1b:	6b e9 80    	stab	\-128,Y
+	stab	L11\-L10\+1,y	; \-> stab 129,y \(9\-bit offset\), text seg
+  1e:	6b e8 81    	stab	129,Y
+	stab	L10\-L11\-1,y	; \-> stab \-129,y \(9\-bit offset\), text seg
+  21:	6b e9 7f    	stab	\-129,Y
+	stab	L11\-1\-L10,y	; \-> stab 127,y \(9\-bit offset\), text seg
+  24:	6b e8 7f    	stab	127,Y
+	stab	L10\-1\-L11,y	; \-> stab \-129,y \(9\-bit offset\), text seg
+  27:	6b e9 7f    	stab	\-129,Y
+
+	tst	L12\-L10,x	; \-> tst 255,x \(9\-bit offset\), text seg
+  2a:	e7 e0 ff    	tst	255,X
+	tst	L10\-L12,x	; \-> tst \-255,x \(9\-bit offset\), text seg
+  2d:	e7 e1 01    	tst	\-255,X
+	tst	L12\-L10\+1,x	; \-> tst 256,x \(16\-bit offset\), text seg
+  30:	e7 e2 01 00 	tst	256,X
+	mina	L13\-L10,x	; \-> mina 256,x \(16\-bit offset\)
+  34:	18 19 e2 01 	mina	256,X
+  38:	00 
+	mina	L10\-L13,x	; \-> mina \-256,x \(9\-bit offset\)
+  39:	18 19 e1 00 	mina	\-256,X
+
+	maxa	L14\-L10,x	; \-> maxa 257,x \(16\-bit offset\)
+  3d:	18 18 e2 01 	maxa	257,X
+  41:	01 
+	maxa	L10\-L14,x	; \-> maxa \-257,x \(16\-bit offset\)
+  42:	18 18 e2 fe 	maxa	\-257,X
+  46:	ff 
+
+;;; Test gas relax with difference of symbols \(different section\)
+	ldaa	D2\-D1,x		; \-> ldaa 2,x \(5\-bit offset\), data seg
+  47:	a6 02       	ldaa	2,X
+	adda	D1\-D2,y		; \-> adda \-2,y \(5\-bit offset\), data seg
+  49:	ab 5e       	adda	\-2,Y
+
+	orab	D7\-D6,sp	; \-> orab 8,sp  \(5\-bit offset\), data seg
+  4b:	ea 88       	orab	8,SP
+	anda	D8\-D7,sp	; \-> anda 15,sp \(5\-bit offset\), data seg
+  4d:	a4 8f       	anda	15,SP
+	eora	D7\-D8,sp	; \-> eora \-15,sp \(5\-bit offset\), data seg
+  4f:	a8 91       	eora	\-15,SP
+	eorb	D7\-D9,sp	; \-> eorb \-16,sp \(5\-bit offset\), data seg
+  51:	e8 90       	eorb	\-16,SP
+
+	andb	D9\-D7,sp	; \-> andb 16,sp \(9\-bit offset\), data seg
+  53:	e4 f0 10    	andb	16,SP
+	staa	D7\-D10,x	; \-> staa \-17,x \(9\-bit offset\), data seg
+  56:	6a e1 ef    	staa	\-17,X
+	stab	D11\-D10,y	; \-> stab 128,y \(9\-bit offset\), data seg
+  59:	6b e8 80    	stab	128,Y
+	stab	D10\-D11,y	; \-> stab \-128,y \(9\-bit offset\), data seg
+  5c:	6b e9 80    	stab	\-128,Y
+	stab	D11\-D10\+1,y	; \-> stab 129,y \(9\-bit offset\), data seg
+  5f:	6b e8 81    	stab	129,Y
+	stab	D10\-D11\+1,y	; \-> stab \-127,y \(9\-bit offset\), data seg
+  62:	6b e9 81    	stab	\-127,Y
+	stab	D11\-1\-D10,y	; \-> stab 127,y \(9\-bit offset\), data seg
+  65:	6b e8 7f    	stab	127,Y
+	stab	D10\-1\-D11,y	; \-> stab \-129,y \(9\-bit offset\), data seg
+  68:	6b e9 7f    	stab	\-129,Y
+
+	tst	D12\-D10,x	; \-> tst 255,x \(9\-bit offset\), data seg
+  6b:	e7 e0 ff    	tst	255,X
+	tst	D10\-D12,x	; \-> tst \-255,x \(9\-bit offset\), data seg
+  6e:	e7 e1 01    	tst	\-255,X
+	tst	D12\-D10\+1,x	; \-> tst 256,x \(16\-bit offset\), data seg
+  71:	e7 e2 01 00 	tst	256,X
+	mina	D13\-D10,x	; \-> mina 256,x \(16\-bit offset\)
+  75:	18 19 e2 01 	mina	256,X
+  79:	00 
+	mina	D10\-D13,x	; \-> mina \-256,x \(9\-bit offset\)
+  7a:	18 19 e1 00 	mina	\-256,X
+
+	maxa	D14\-D10,x	; \-> maxa 257,x \(16\-bit offset\)
+  7e:	18 18 e2 01 	maxa	257,X
+  82:	01 
+	maxa	D10\-D14,x	; \-> maxa \-257,x \(16\-bit offset\)
+  83:	18 18 e2 fe 	maxa	\-257,X
+  87:	ff 
+
+;;; Global check \(2nd\)
+	ldab	L1\-_main,x
+  88:	e6 e0 93    	ldab	147,X
+	ldaa	#L1\-_main
+  8b:	86 93       	ldaa	#147
+
+;;; Indexed addressing with external symbol
+	ldab	_external\+128,x
+  8d:	e6 e2 00 80 	ldab	128,X
+	bra	L2
+  91:	20 02       	bra	95 <L2>
+
+0+93 <L1>:
+  93:	aa bb       	oraa	5,SP\-
+
+0+95 <L2>:
+  95:	a7          	nop
+  96:	a7          	nop
+  97:	a7          	nop
+  98:	a7          	nop
+  99:	a7          	nop
+  9a:	a7          	nop
+  9b:	a7          	nop
+  9c:	a7          	nop
+
+0+9d <L7>:
+  9d:	a7          	nop
+  9e:	a7          	nop
+  9f:	a7          	nop
+  a0:	a7          	nop
+  a1:	a7          	nop
+  a2:	a7          	nop
+  a3:	a7          	nop
+  a4:	a7          	nop
+  a5:	a7          	nop
+  a6:	a7          	nop
+  a7:	a7          	nop
+  a8:	a7          	nop
+  a9:	a7          	nop
+  aa:	a7          	nop
+  ab:	a7          	nop
+
+0+ac <L8>:
+L6:
+	.ds.b	8, 0xa7
+L7:
+	.ds.b	15, 0xa7
+L8:
+	nop
+  ac:	a7          	nop
+
+0+ad <L9>:
+L9:
+	nop
+  ad:	a7          	nop
+
+0+ae <L10>:
+	...
+
+0+12e <L11>:
+	...
+
+0+1ad <L12>:
+L10:
+	.skip	128
+L11:
+	.skip	127
+L12:
+	nop
+ 1ad:	a7          	nop
+
+0+1ae <L13>:
+L13:
+	nop
+ 1ae:	a7          	nop
+
+0+1af <L14>:
+L14:
+	rts
+ 1af:	3d          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/indexed12.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/indexed12.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/indexed12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/indexed12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,115 @@
+;;
+;; This file verifies the 68HC12 indexed addressing modes
+;; with a 5, 9 and 16-bit offset.
+;;
+	.sect .text
+	.globl _main
+_main:
+	nop
+;;; Global check (1st)
+	ldab	L1-_main,x	; Offset/const of these 2 insns must be
+	ldaa	#L1-_main	; identical (likewise for 2nd global check)
+;;; Test gas relax with difference of symbols (same section)
+	ldaa	L2-L1,x		; -> ldaa 2,x (5-bit offset), text seg
+	adda	L1-L2,y		; -> adda -2,y (5-bit offset), text seg
+
+	orab	L7-L6,sp	; -> orab 8,sp  (5-bit offset), text seg
+	anda	L8-L7,sp	; -> anda 15,sp (5-bit offset), text seg
+	eora	L7-L8,sp	; -> eora -15,sp (5-bit offset), text seg
+	eorb	L7-L9,sp	; -> eorb -16,sp (5-bit offset), text seg
+
+	andb	L9-L7,sp	; -> andb 16,sp (9-bit offset), text seg
+	staa	L7-L10,x	; -> staa -17,x (9-bit offset), text seg
+	stab	L11-L10,y	; -> stab 128,y (9-bit offset), text seg
+	stab	L10-L11,y	; -> stab -128,y (9-bit offset), text seg
+	stab	L11-L10+1,y	; -> stab 129,y (9-bit offset), text seg
+	stab	L10-L11-1,y	; -> stab -129,y (9-bit offset), text seg
+	stab	L11-1-L10,y	; -> stab 127,y (9-bit offset), text seg
+	stab	L10-1-L11,y	; -> stab -129,y (9-bit offset), text seg
+
+	tst	L12-L10,x	; -> tst 255,x (9-bit offset), text seg
+	tst	L10-L12,x	; -> tst -255,x (9-bit offset), text seg
+	tst	L12-L10+1,x	; -> tst 256,x (16-bit offset), text seg
+	mina	L13-L10,x	; -> mina 256,x (16-bit offset)
+	mina	L10-L13,x	; -> mina -256,x (9-bit offset)
+
+	maxa	L14-L10,x	; -> maxa 257,x (16-bit offset)
+	maxa	L10-L14,x	; -> maxa -257,x (16-bit offset)
+
+;;; Test gas relax with difference of symbols (different section)
+	ldaa	D2-D1,x		; -> ldaa 2,x (5-bit offset), data seg
+	adda	D1-D2,y		; -> adda -2,y (5-bit offset), data seg
+
+	orab	D7-D6,sp	; -> orab 8,sp  (5-bit offset), data seg
+	anda	D8-D7,sp	; -> anda 15,sp (5-bit offset), data seg
+	eora	D7-D8,sp	; -> eora -15,sp (5-bit offset), data seg
+	eorb	D7-D9,sp	; -> eorb -16,sp (5-bit offset), data seg
+
+	andb	D9-D7,sp	; -> andb 16,sp (9-bit offset), data seg
+	staa	D7-D10,x	; -> staa -17,x (9-bit offset), data seg
+	stab	D11-D10,y	; -> stab 128,y (9-bit offset), data seg
+	stab	D10-D11,y	; -> stab -128,y (9-bit offset), data seg
+	stab	D11-D10+1,y	; -> stab 129,y (9-bit offset), data seg
+	stab	D10-D11+1,y	; -> stab -127,y (9-bit offset), data seg
+	stab	D11-1-D10,y	; -> stab 127,y (9-bit offset), data seg
+	stab	D10-1-D11,y	; -> stab -129,y (9-bit offset), data seg
+
+	tst	D12-D10,x	; -> tst 255,x (9-bit offset), data seg
+	tst	D10-D12,x	; -> tst -255,x (9-bit offset), data seg
+	tst	D12-D10+1,x	; -> tst 256,x (16-bit offset), data seg
+	mina	D13-D10,x	; -> mina 256,x (16-bit offset)
+	mina	D10-D13,x	; -> mina -256,x (9-bit offset)
+
+	maxa	D14-D10,x	; -> maxa 257,x (16-bit offset)
+	maxa	D10-D14,x	; -> maxa -257,x (16-bit offset)
+
+;;; Global check (2nd)
+	ldab	L1-_main,x
+	ldaa	#L1-_main
+
+;;; Indexed addressing with external symbol
+	ldab	_external+128,x
+	bra	L2
+L1:
+	.dc.w	0xaabb
+L2:
+L6:
+	.ds.b	8, 0xa7
+L7:
+	.ds.b	15, 0xa7
+L8:
+	nop
+L9:
+	nop
+L10:
+	.skip	128
+L11:
+	.skip	127
+L12:
+	nop
+L13:
+	nop
+L14:
+	rts
+
+	.sect .data
+D1:
+	.dc.w	0xaabb
+D2:
+D6:
+	.ds.b	8, 0xa7
+D7:
+	.ds.b	15, 0xa7
+D8:
+	nop
+D9:
+	nop
+D10:
+	.skip	128
+D11:
+	.skip	127
+D12:
+	nop
+D13:
+	nop
+D14:
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/insns-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/insns-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,114 @@
+#objdump: -S
+#as: -m68hc11 -gdwarf2
+#name: Dwarf2 test on insns.s
+#source: insns.s
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+
+00000000 <_start>:
+#...
+	.globl _start
+	.sect .text
+
+_start:
+	lds #stack\+1024
+   0:	8e 04 00    	lds	#400 <stack_end>
+	ldx #1
+   3:	ce 00 01    	ldx	#1 <_start\+0x1>
+
+0+06 <Loop>:
+Loop:	
+	jsr test
+   6:	bd 00 00    	jsr	0 <_start>
+	dex
+   9:	09          	dex
+	bne Loop
+   a:	26 fa       	bne	6 <Loop>
+
+0000000c <Stop>:
+   c:	cd 03       	.byte	0xcd, 0x03
+Stop:
+	
+	.byte 0xcd
+	.byte 3	
+	bra _start
+   e:	20 f0       	bra	0 <_start>
+
+00000010 <test>:
+
+test:
+	ldd #2
+  10:	cc 00 02    	ldd	#2 <_start\+0x2>
+	jsr test2
+  13:	bd 00 00    	jsr	0 <_start>
+	rts
+  16:	39          	rts
+
+00000017 <test2>:
+
+D_low = 50
+value = 23
+		
+	.globl test2
+test2:
+	ldx value,y
+  17:	cd ee 17    	ldx	23,y
+	std value,x
+  1a:	ed 17       	std	23,x
+	ldd ,x
+  1c:	ec 00       	ldd	0,x
+	sty ,y
+  1e:	18 ef 00    	sty	0,y
+	stx ,y
+  21:	cd ef 00    	stx	0,y
+	brclr 6,x,#4,test2
+  24:	1f 06 04 ef 	brclr	6,x #\$04 17 <test2>
+	brclr 12,x #8 test2
+  28:	1f 0c 08 eb 	brclr	12,x #\$08 17 <test2>
+	ldd \*ZD1
+  2c:	dc 00       	ldd	\*0 <_start>
+	ldx \*ZD1\+2
+  2e:	de 02       	ldx	\*2 <_start\+0x2>
+	clr \*ZD2
+  30:	7f 00 00    	clr	0 <_start>
+	clr \*ZD2\+1
+  33:	7f 00 01    	clr	1 <_start\+0x1>
+	bne .-4
+  36:	26 fc       	bne	34 <test2\+0x1d>
+	beq .\+2
+  38:	27 02       	beq	3c <test2\+0x25>
+	bclr \*ZD1\+1, #32
+  3a:	15 01 20    	bclr	\*1 <_start\+0x1> #\$20
+	brclr \*ZD2\+2, #40, test2
+  3d:	13 02 28 d6 	brclr	\*2 <_start\+0x2> #\$28 17 <test2>
+	ldy #24\+_start-44
+  41:	18 ce ff ec 	ldy	#ffec <stack_end\+0xfbec>
+	ldd B_low,y
+  45:	18 ec 0c    	ldd	12,y
+	addd A_low,y
+  48:	18 e3 2c    	addd	44,y
+	addd D_low,y
+  4b:	18 e3 32    	addd	50,y
+	subd A_low
+  4e:	b3 00 2c    	subd	2c <test2\+0x15>
+	subd #A_low
+  51:	83 00 2c    	subd	#2c <test2\+0x15>
+	jmp Stop
+  54:	7e 00 00    	jmp	0 <_start>
+
+00000057 <L1>:
+L1:	
+	anda #%lo\(test2\)
+  57:	84 17       	anda	#23
+	andb #%hi\(test2\)
+  59:	c4 00       	andb	#0
+	ldab #%page\(test2\)	; Check that the relocs are against symbol
+  5b:	c6 00       	ldab	#0
+	ldy  #%addr\(test2\)	; otherwise linker relaxation fails
+  5d:	18 ce 00 00 	ldy	#0 <_start>
+	rts
+  61:	39          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/insns.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/insns.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,69 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: insns
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <_start> lds	#0+0400 <stack_end>
+[	]+1: R_M68HC11_16	stack
+0+0003 <_start\+0x3> ldx	#0+0001 <_start\+0x1>
+0+0006 <Loop> jsr	0+0+ <_start>
+[	]+6: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+7: R_M68HC11_16	test
+0+0009 <Loop\+0x3> dex
+0+000a <Loop\+0x4> bne	0+0006 <Loop>
+[	]+a: R_M68HC11_RL_JUMP	\*ABS\*
+0+000c <Stop> .byte	0xcd, 0x03
+0+000e <Stop\+0x2> bra	0+0+ <_start>
+[	]+e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0010 <test> ldd	#0+0002 <_start\+0x2>
+0+0013 <test\+0x3> jsr	0+0+ <_start>
+[	]+13: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+14: R_M68HC11_16	test2
+0+0016 <test\+0x6> rts
+0+0017 <test2> ldx	23,y
+0+001a <test2\+0x3> std	23,x
+0+001c <test2\+0x5> ldd	0,x
+0+001e <test2\+0x7> sty	0,y
+0+0021 <test2\+0xa> stx	0,y
+0+0024 <test2\+0xd> brclr	6,x #\$04 0+0017 <test2>
+[	]+24: R_M68HC11_RL_JUMP	\*ABS\*
+0+0028 <test2\+0x11> brclr	12,x #\$08 0+0017 <test2>
+[	]+28: R_M68HC11_RL_JUMP	\*ABS\*
+0+002c <test2\+0x15> ldd	\*0+0+ <_start>
+[	]+2d: R_M68HC11_8	ZD1
+0+002e <test2\+0x17> ldx	\*0+0002 <_start\+0x2>
+[	]+2f: R_M68HC11_8	ZD1
+0+0030 <test2\+0x19> clr	0+0+ <_start>
+[	]+31: R_M68HC11_16	ZD2
+0+0033 <test2\+0x1c> clr	0+0001 <_start\+0x1>
+[	]+34: R_M68HC11_16	ZD2
+0+0036 <test2\+0x1f> bne	0+0034 <test2\+0x1d>
+0+0038 <test2\+0x21> beq	0+003c <test2\+0x25>
+0+003a <test2\+0x23> bclr	\*0+0001 <_start\+0x1> #\$20
+[	]+3b: R_M68HC11_8	ZD1
+0+003d <test2\+0x26> brclr	\*0+0002 <_start\+0x2> #\$28 0+0017 <test2>
+[	]+3d: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3e: R_M68HC11_8	ZD2
+0+0041 <test2\+0x2a> ldy	#0+ffec <stack_end\+0xfbec>
+[	]+43: R_M68HC11_16	_start
+0+0045 <test2\+0x2e> ldd	12,y
+0+0048 <test2\+0x31> addd	44,y
+0+004b <test2\+0x34> addd	50,y
+0+004e <test2\+0x37> subd	0+002c <test2\+0x15>
+0+0051 <test2\+0x3a> subd	#0+002c <test2\+0x15>
+0+0054 <test2\+0x3d> jmp	0+0+ <_start>
+[	]+54: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+55: R_M68HC11_16	Stop
+0+0057 <L1> anda	#23
+[	]+58: R_M68HC11_LO8	\.text
+0+0059 <L1\+0x2> andb	#0
+[	]+5a: R_M68HC11_HI8	\.text
+0+5b <L1\+0x4> ldab	#0
+[	]+5c: R_M68HC11_PAGE	test2
+0+5d <L1\+0x6> ldy	#0+ <_start>
+[	]+5f: R_M68HC11_LO16	test2
+0+61 <L1\+0xa> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/insns.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/insns.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,65 @@
+# Test for correct generation of 68HC11 insns.
+	
+	.globl _start
+	.sect .text
+
+_start:
+	lds #stack+1024
+	ldx #1
+Loop:	
+	jsr test
+	dex
+	bne Loop
+Stop:
+	
+	.byte 0xcd
+	.byte 3	
+	bra _start
+
+test:
+	ldd #2
+	jsr test2
+	rts
+
+B_low = 12
+A_low = 44
+D_low = 50
+value = 23
+		
+	.globl test2
+test2:
+	ldx value,y
+	std value,x
+	ldd ,x
+	sty ,y
+	stx ,y
+	brclr 6,x,#4,test2
+	brclr 12,x #8 test2
+	ldd *ZD1
+	ldx *ZD1+2
+	clr *ZD2
+	clr *ZD2+1
+	bne .-4
+	beq .+2
+	bclr *ZD1+1, #32
+	brclr *ZD2+2, #40, test2
+	ldy #24+_start-44
+	ldd B_low,y
+	addd A_low,y
+	addd D_low,y
+	subd A_low
+	subd #A_low
+	jmp Stop
+L1:	
+	anda #%lo(test2)
+	andb #%hi(test2)
+	ldab #%page(test2)	; Check that the relocs are against symbol
+	ldy  #%addr(test2)	; otherwise linker relaxation fails
+	rts
+
+	.sect .data
+
+	.sect .bss
+stack:
+	.space	1024
+stack_end:
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/insns12.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns12.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/insns12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,85 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 specific instructions (insns12)
+
+.*:  +file format elf32-m68hc12
+
+Disassembly of section .text:
+0+ <call_test> call	0+ <call_test> \{0+ <call_test>, 0\}
+			0: R_M68HC12_RL_JUMP	\*ABS\*
+			1: R_M68HC12_24	_foo
+0+4 <call_test\+0x4> call	0+ <call_test> \{0+ <call_test>, 1\}
+			4: R_M68HC12_RL_JUMP	\*ABS\*
+			5: R_M68HC12_LO16	_foo
+0+8 <call_test\+0x8> call	0+ <call_test> \{0+ <call_test>, 0\}
+			8: R_M68HC12_RL_JUMP	\*ABS\*
+			9: R_M68HC12_LO16	_foo
+			b: R_M68HC12_PAGE	foo_page
+0+c <call_test\+0xc> call	0,X, 3
+			c: R_M68HC12_RL_JUMP	\*ABS\*
+0+f <call_test\+0xf> call	4,Y, 12
+			f: R_M68HC12_RL_JUMP	\*ABS\*
+0+12 <call_test\+0x12> call	7,SP, 13
+			12: R_M68HC12_RL_JUMP	\*ABS\*
+0+15 <call_test\+0x15> call	12,X, 0
+			15: R_M68HC12_RL_JUMP	\*ABS\*
+			17: R_M68HC12_PAGE	foo_page
+0+18 <call_test\+0x18> call	4,Y, 0
+			18: R_M68HC12_RL_JUMP	\*ABS\*
+			1a: R_M68HC12_PAGE	foo_page
+0+1b <call_test\+0x1b> call	7,SP, 0
+			1b: R_M68HC12_RL_JUMP	\*ABS\*
+			1d: R_M68HC12_PAGE	foo_page
+0+1e <call_test\+0x1e> call	\[D,X\]
+			1e: R_M68HC12_RL_JUMP	\*ABS\*
+0+20 <call_test\+0x20> ldab	\[32767,SP\]
+0+24 <call_test\+0x24> call	\[2048,SP\]
+			24: R_M68HC12_RL_JUMP	\*ABS\*
+0+28 <call_test\+0x28> call	\[0,X\]
+			28: R_M68HC12_RL_JUMP	\*ABS\*
+			2a: R_M68HC12_16	_foo
+0+2c <call_test\+0x2c> rtc
+0+2d <special_test> emacs	0+ <call_test>
+			2f: R_M68HC12_16	_foo
+0+31 <special_test\+0x4> maxa	0,X
+0+34 <special_test\+0x7> maxa	819,Y
+0+39 <special_test\+0xc> maxa	\[D,X\]
+0+3c <special_test\+0xf> maxa	\[0,X\]
+			3f: R_M68HC12_16	_foo
+0+41 <special_test\+0x14> maxm	0,X
+0+44 <special_test\+0x17> maxm	819,Y
+0+49 <special_test\+0x1c> maxm	\[D,X\]
+0+4c <special_test\+0x1f> maxm	\[0,X\]
+			4f: R_M68HC12_16	_foo
+0+51 <special_test\+0x24> emaxd	0,X
+0+54 <special_test\+0x27> emaxd	819,Y
+0+59 <special_test\+0x2c> emaxd	\[D,X\]
+0+5c <special_test\+0x2f> emaxd	\[0,X\]
+			5f: R_M68HC12_16	_foo
+0+61 <special_test\+0x34> emaxm	0,X
+0+64 <special_test\+0x37> emaxm	819,Y
+0+69 <special_test\+0x3c> emaxm	\[D,X\]
+0+6c <special_test\+0x3f> emaxm	\[0,X\]
+			6f: R_M68HC12_16	_foo
+0+71 <special_test\+0x44> mina	0,X
+0+74 <special_test\+0x47> mina	819,Y
+0+79 <special_test\+0x4c> mina	\[D,X\]
+0+7c <special_test\+0x4f> mina	\[0,X\]
+			7f: R_M68HC12_16	_foo
+0+81 <special_test\+0x54> minm	0,X
+0+84 <special_test\+0x57> minm	819,Y
+0+89 <special_test\+0x5c> minm	\[D,X\]
+0+8c <special_test\+0x5f> minm	\[0,X\]
+			8f: R_M68HC12_16	_foo
+0+91 <special_test\+0x64> emind	0,X
+0+94 <special_test\+0x67> emind	819,Y
+0+99 <special_test\+0x6c> emind	\[D,X\]
+0+9c <special_test\+0x6f> emind	\[0,X\]
+			9f: R_M68HC12_16	_foo
+0+a1 <special_test\+0x74> emul
+0+a2 <special_test\+0x75> emuls
+0+a4 <special_test\+0x77> etbl	3,X
+0+a7 <special_test\+0x7a> etbl	4,PC \{0+ae <special_test\+0x81>\}
+0+aa <special_test\+0x7d> rev
+0+ac <special_test\+0x7f> revw
+0+ae <special_test\+0x81> wav
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/insns12.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns12.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/insns12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/insns12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,71 @@
+# Test for correct generation of 68HC12 specific insns.
+
+	.sect .text
+
+;; Test the call insns
+call_test:
+	call	_foo		; 24-bit reloc
+	call	_foo,1		; 16-bit reloc, immediate page specification
+	call	_foo,%page(foo_page)	; 16-bit reloc and 8-bit page reloc
+	call	0,x,3		; 8-bit page reloc
+	call	4,y,12
+	call	7,sp,13
+	call	12,x,%page(foo_page)	; 8-bit page reloc
+	call	4,y,%page(foo_page)
+	call	7,sp,%page(foo_page)
+	call	[d,x]		; No reloc
+	ldab	[32767,sp]
+	call	[2048,sp]	; No reloc
+	call	[_foo,x]	; 16-bit reloc
+	rtc
+;; Test special insn
+special_test:
+	emacs	_foo	; Wonderful, Emacs as a single instruction!
+
+;; Min instruction
+	maxa	0,x
+	maxa	819,y
+	maxa	[d,x]
+	maxa	[_foo,x]
+
+	maxm	0,x
+	maxm	819,y
+	maxm	[d,x]
+	maxm	[_foo,x]
+
+	emaxd	0,x
+	emaxd	819,y
+	emaxd	[d,x]
+	emaxd	[_foo,x]
+
+	emaxm	0,x
+	emaxm	819,y
+	emaxm	[d,x]
+	emaxm	[_foo,x]
+
+;; Min instruction
+	mina	0,x
+	mina	819,y
+	mina	[d,x]
+	mina	[_foo,x]
+
+	minm	0,x
+	minm	819,y
+	minm	[d,x]
+	minm	[_foo,x]
+
+	emind	0,x
+	emind	819,y
+	emind	[d,x]
+	emind	[_foo,x]
+;; Mul
+	emul
+	emuls
+	etbl	3,x
+	etbl	4,pc
+
+;;
+	rev
+	revw
+	wav
+;;
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,91 @@
+#objdump: -S
+#as: -m68hc11 -gdwarf2
+#name: Dwarf2 test on lbranch.s
+#source: lbranch.s
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+
+0+00 <_rcall>:
+#...
+	.globl	_rcall
+	.globl _start
+_start:
+_rcall:
+	ldaa	#0x10		;86 10
+   0:	86 10       	ldaa	#16
+	jbra	Lend		; Must be switched to a jmp
+   2:	7e 00 00    	jmp	0 <_rcall>
+	jbsr	toto		; -> to a jsr
+   5:	bd 00 00    	jsr	0 <_rcall>
+	jbne	toto		; -> to a beq\+jmp
+   8:	27 03       	beq	d <_rcall\+0xd>
+   a:	7e 00 00    	jmp	0 <_rcall>
+	jbeq	toto		; -> to a bne\+jmp
+   d:	26 03       	bne	12 <_rcall\+0x12>
+   f:	7e 00 00    	jmp	0 <_rcall>
+	jbcs	toto		; -> to a bcc\+jmp
+  12:	24 03       	bcc	17 <_rcall\+0x17>
+  14:	7e 00 00    	jmp	0 <_rcall>
+	jbcc	toto		; -> to a bcs\+jmp
+  17:	25 03       	bcs	1c <_rcall\+0x1c>
+  19:	7e 00 00    	jmp	0 <_rcall>
+	xgdx
+  1c:	8f          	xgdx
+	xgdx
+  1d:	8f          	xgdx
+	beq	bidule		; -> to a bne\+jmp
+  1e:	26 03       	bne	23 <_rcall\+0x23>
+  20:	7e 00 00    	jmp	0 <_rcall>
+	bcs	bidule		; -> to a bcc\+jmp
+  23:	24 03       	bcc	28 <_rcall\+0x28>
+  25:	7e 00 00    	jmp	0 <_rcall>
+	bcc	bidule		; -> to a bcs\+jmp
+  28:	25 03       	bcs	2d <_rcall\+0x2d>
+  2a:	7e 00 00    	jmp	0 <_rcall>
+	xgdx
+  2d:	8f          	xgdx
+	jbra	200
+  2e:	7e 00 c8    	jmp	c8 <_rcall\+0xc8>
+	jbsr	1923
+  31:	bd 07 83    	jsr	783 <L0\+0x602>
+	bne	Lend		; -> to a beq\+jmp
+  34:	27 03       	beq	39 <_rcall\+0x39>
+  36:	7e 00 00    	jmp	0 <_rcall>
+	jbsr	toto
+  39:	bd 00 00    	jsr	0 <_rcall>
+	jbeq	toto
+  3c:	26 03       	bne	41 <_rcall\+0x41>
+  3e:	7e 00 00    	jmp	0 <_rcall>
+	...
+	.skip 200
+	ldaa	\*dir		;96 33
+ 109:	96 00       	ldaa	\*0 <_rcall>
+
+0000010b <Lend>:
+Lend:
+	bhi	external_op
+ 10b:	23 03       	bls	110 <Lend\+0x5>
+ 10d:	7e 00 00    	jmp	0 <_rcall>
+	bls	external_op
+ 110:	22 03       	bhi	115 <Lend\+0xa>
+ 112:	7e 00 00    	jmp	0 <_rcall>
+	bsr	out
+ 115:	bd 00 00    	jsr	0 <_rcall>
+	ldx	#12
+ 118:	ce 00 0c    	ldx	#c <_rcall\+0xc>
+
+0000011b <toto>:
+toto:	
+	rts
+ 11b:	39          	rts
+	...
+
+00000180 <bidule>:
+	.skip 100
+bidule:
+	rts
+ 180:	39          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,80 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: lbranch
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <_rcall> ldaa	#16
+0+0002 <_rcall\+0x2> jmp	0+0+ <_rcall>
+[	]+2: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3: R_M68HC11_16	Lend
+0+0005 <_rcall\+0x5> jsr	0+0+ <_rcall>
+[	]+5: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+6: R_M68HC11_16	toto
+0+0008 <_rcall\+0x8> beq	0+000d <_rcall\+0xd>
+[	]+8: R_M68HC11_RL_JUMP	\*ABS\*
+0+000a <_rcall\+0xa> jmp	0+0+ <_rcall>
+[	]+b: R_M68HC11_16	toto
+0+000d <_rcall\+0xd> bne	0+0012 <_rcall\+0x12>
+[	]+d: R_M68HC11_RL_JUMP	\*ABS\*
+0+000f <_rcall\+0xf> jmp	0+0+ <_rcall>
+[	]+10: R_M68HC11_16	toto
+0+0012 <_rcall\+0x12> bcc	0+0017 <_rcall\+0x17>
+[	]+12: R_M68HC11_RL_JUMP	\*ABS\*
+0+0014 <_rcall\+0x14> jmp	0+0+ <_rcall>
+[	]+15: R_M68HC11_16	toto
+0+0017 <_rcall\+0x17> bcs	0+001c <_rcall\+0x1c>
+[	]+17: R_M68HC11_RL_JUMP	\*ABS\*
+0+0019 <_rcall\+0x19> jmp	0+0+ <_rcall>
+[	]+1a: R_M68HC11_16	toto
+0+001c <_rcall\+0x1c> xgdx
+0+001d <_rcall\+0x1d> xgdx
+0+001e <_rcall\+0x1e> bne	0+0023 <_rcall\+0x23>
+[	]+1e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0020 <_rcall\+0x20> jmp	0+0+ <_rcall>
+[	]+21: R_M68HC11_16	bidule
+0+0023 <_rcall\+0x23> bcc	0+0028 <_rcall\+0x28>
+[	]+23: R_M68HC11_RL_JUMP	\*ABS\*
+0+0025 <_rcall\+0x25> jmp	0+0+ <_rcall>
+[	]+26: R_M68HC11_16	bidule
+0+0028 <_rcall\+0x28> bcs	0+002d <_rcall\+0x2d>
+[	]+28: R_M68HC11_RL_JUMP	\*ABS\*
+0+002a <_rcall\+0x2a> jmp	0+0+ <_rcall>
+[	]+2b: R_M68HC11_16	bidule
+0+002d <_rcall\+0x2d> xgdx
+0+002e <_rcall\+0x2e> jmp	0+00c8 <_rcall\+0xc8>
+[	]+2e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0031 <_rcall\+0x31> jsr	0+0783 <bidule\+0x603>
+[	]+31: R_M68HC11_RL_JUMP	\*ABS\*
+0+0034 <_rcall\+0x34> beq	0+0039 <_rcall\+0x39>
+[	]+34: R_M68HC11_RL_JUMP	\*ABS\*
+0+0036 <_rcall\+0x36> jmp	0+0+ <_rcall>
+[	]+37: R_M68HC11_16	Lend
+0+0039 <_rcall\+0x39> jsr	0+0+ <_rcall>
+[	]+39: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3a: R_M68HC11_16	toto
+0+003c <_rcall\+0x3c> bne	0+0041 <_rcall\+0x41>
+[	]+3c: R_M68HC11_RL_JUMP	\*ABS\*
+0+003e <_rcall\+0x3e> jmp	0+0+ <_rcall>
+[	]+3f: R_M68HC11_16	toto
+	...
+0+0109 <_rcall\+0x109> ldaa	\*0+0+ <_rcall>
+[	]+10a: R_M68HC11_8	.page0
+0+010b <Lend> bls	0+0110 <Lend\+0x5>
+[	]+10b: R_M68HC11_RL_JUMP	\*ABS\*
+0+010d <Lend\+0x2> jmp	0+0+ <_rcall>
+[	]+10e: R_M68HC11_16	external_op
+0+0110 <Lend\+0x5> bhi	0+0115 <Lend\+0xa>
+[	]+110: R_M68HC11_RL_JUMP	\*ABS\*
+0+0112 <Lend\+0x7> jmp	0+0+ <_rcall>
+[	]+113: R_M68HC11_16	external_op
+0+0115 <Lend\+0xa> jsr	0+0+ <_rcall>
+[	]+115: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+116: R_M68HC11_16	out
+0+0118 <Lend\+0xd> ldx	#0+000c <_rcall\+0xc>
+0+011b <toto> rts
+	...
+0+0180 <bidule> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/lbranch.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/lbranch.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,41 @@
+# Test for the 68HC11 long branch switch
+	.text
+	.globl	_rcall
+	.globl _start
+_start:
+_rcall:
+	ldaa	#0x10		;86 10
+	jbra	Lend		; Must be switched to a jmp
+	jbsr	toto		; -> to a jsr
+	jbne	toto		; -> to a beq+jmp
+	jbeq	toto		; -> to a bne+jmp
+	jbcs	toto		; -> to a bcc+jmp
+	jbcc	toto		; -> to a bcs+jmp
+	xgdx
+	xgdx
+	beq	bidule		; -> to a bne+jmp
+	bcs	bidule		; -> to a bcc+jmp
+	bcc	bidule		; -> to a bcs+jmp
+	xgdx
+	jbra	200
+	jbsr	1923
+	bne	Lend		; -> to a beq+jmp
+	jbsr	toto
+	jbeq	toto
+	.skip 200
+	ldaa	*dir		;96 33
+Lend:
+	bhi	external_op
+	bls	external_op
+	bsr	out
+	ldx	#12
+toto:	
+	rts
+	.skip 100
+bidule:
+	rts
+	.sect ".page0"
+dir:
+	.long 0
+	
+	; END
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/m68hc11.exp binutils-2.20-sean/gas/testsuite/gas/mc9s12x/m68hc11.exp
--- binutils-2.20/gas/testsuite/gas/mc9s12x/m68hc11.exp	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/m68hc11.exp	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,183 @@
+#
+# Some generic m68HC11 tests
+#
+if ![istarget "m68hc11-*-*"] then {
+    if ![istarget "m6811-*-*"] then {
+	if ![istarget "m68hc12-*-*"] then {
+	    if ![istarget "m6812-*-*"] then {
+		return
+	    }
+	}
+    }
+}
+
+# Simple test for --print-opcodes (list of supported opcodes)
+# We don't check the list result but just the syntax and the
+# number it 
+proc gas_m68hc11_opcode_list { flags expect_count } {
+    global comp_output
+
+    set testname "Opcode list generation \[$flags\]"
+    gas_run "x.s" "--print-opcodes $flags" ""
+
+    set lines [split $comp_output "\n"]
+    set cnt [llength $lines]
+    verbose -log "Found $cnt opcodes"
+    if { $cnt == $expect_count } then {
+        pass $testname
+    } else {
+        fail $testname
+    }
+}
+
+gas_m68hc11_opcode_list "-m68hc11" 149
+gas_m68hc11_opcode_list "-m68hc12" 192
+gas_m68hc11_opcode_list "-m68hcs12" 192
+
+
+# Test for a message produced when assembling a file
+proc gas_m68hc11_message { kind options line expect } {
+    global srcdir
+    global subdir
+
+    regsub -all "\n" "$line: $expect" " " title
+
+    # Make a file containing the instructions to assemble.
+    set fd [open "$srcdir/$subdir/tst-m68hc1x.s" "w"]
+    puts -nonewline $fd "$line"
+    close $fd
+
+    verbose -log "Test: $title"
+    gas_start "tst-m68hc1x.s" "$options"
+    set ok 0
+    while 1 {
+	expect {
+	    -re ".*: Assembler messages:\n" { }
+	    -re ".*1: $kind: $expect" { incr ok; break }
+	    timeout       { perror "timeout\n"; break }
+	    eof		  { verbose "EOF from gas"; break }
+	}
+    }
+    #sleep 1 # Uncomment this line when using gcov
+    gas_finish
+    if { $ok > 0 } then {
+	pass $title
+    } else {
+	fail $title
+    }
+    catch "exec rm -f $srcdir/$subdir/tst-m68hc1x.s"
+}
+
+# Test for an error message produced by gas
+proc gas_m68hc11_error { options line expect } {
+    gas_m68hc11_message "Error" $options $line $expect
+}
+
+# Test for a warning message produced by gas
+proc gas_m68hc11_warning { options line expect } {
+    gas_m68hc11_message "Warning" $options $line $expect
+}
+
+# ------------------
+# 68HC11 error tests
+gas_m68hc11_error "" "puld\n" "Opcode .puld. is not recognized"
+gas_m68hc11_error "" "ldab\n" "Invalid operand for .ldab."
+gas_m68hc11_error "" "ldab 256,x\n" "Operand out of 8-bit range:.*256"
+gas_m68hc11_error "" "ldab 257,y\n" "Operand out of 8-bit range:.*257"
+gas_m68hc11_error "" "ldab -1,y\n" "Operand out of 8-bit range:.*-1"
+gas_m68hc11_error "" "ldab bar,y\nbar=300" "value of 300 too large for field of 1 byte"
+gas_m68hc11_error "" "jmp \#23\n" "Immediate operand is not allowed"
+gas_m68hc11_error "" "ldab \[d,pc\]\n" "Indirect indexed addressing is not valid for 68HC11"
+gas_m68hc11_error "" "ldab ,t\n" "Spurious .,. or bad indirect register"
+gas_m68hc11_error "" "ldab 1,t\n" "Garbage at end of instruction:.*,t"
+gas_m68hc11_error "" "ldab 1,,x\n" "Garbage at end of instruction:.*,x"
+gas_m68hc11_error "" "ldab 1,+x\n" "Pre-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,-x\n" "Pre-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,x+\n" "Post-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,x-\n" "Post-decrement mode is not valid"
+gas_m68hc11_error "" "ldd \#65536\n" "Operand out of 16-bit range"
+gas_m68hc11_error "--short-branchs" "bne 200\n" \
+    "Operand out of range for a relative branch"
+gas_m68hc11_error "" "bar\n" "Opcode .bar. is not recognized."
+gas_m68hc11_error "--print-insn-syntax" "bne\n" \
+    "Instruction formats for .bne..*"
+
+# ------------------
+# 68HC12 error tests
+gas_m68hc11_error "-m68hc12" "ldab x,y\n" "Invalid accumulator register"
+gas_m68hc11_error "-m68hc12" "ldab \[d,y\n" \
+    "Missing .\]. to close indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab 0,\n" "Garbage at end of instruction: .,."
+gas_m68hc11_error "-m68hc12" "ldab \[d\]\n" \
+    "Missing second register or offset for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[d x\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[d d\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[pc d\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab 65536,x\n" \
+    "Offset out of 16-bit range:"
+gas_m68hc11_error "-m68hc12 -S" "ibeq d,500\n" \
+    "Operand out of range for a relative branch"
+gas_m68hc11_error "-m68hc12" "ibeq pc,3\n" \
+    "Invalid register for dbcc/tbcc instruction"
+gas_m68hc11_error "-m68hc12 -S" "ibeq pc,500\n" \
+    "Invalid register for dbcc/tbcc instruction"
+gas_m68hc11_error "-m68hc12" "orab 9,+x\n" \
+    "Increment/decrement value is out of range"
+gas_m68hc11_error "-m68hc12" "orab -9,x-\n" \
+    "Increment/decrement value is out of range"
+gas_m68hc11_error "-m68hc12" "orab -3,-pc\n" \
+    "Invalid register for post/pre increment"
+gas_m68hc11_error "-m68hc12" "trap \#0\n" "Trap id .0. is out of range"
+gas_m68hc11_error "-m68hc12" "trap \#300\n" "Trap id .300. is out of range"
+gas_m68hc11_error "-m68hc12" "trap \#bar\n" "The trap id must be a constant"
+gas_m68hc11_error "-m68hc12" "sex x,d\n" \
+    "Invalid source register for this instruction, use .tfr."
+gas_m68hc11_error "-m68hc12" "tfr pc,a\n" "Invalid source register"
+gas_m68hc11_error "-m68hc12" "movb 200,x,3,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 200"
+gas_m68hc11_error "-m68hc12" "movb 2,x,300,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 2,x,bar,y\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb bar,y,2,x\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 200,pc,3,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 200"
+gas_m68hc11_error "-m68hc12" "movb 2,x,300,pc\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 2,x,bar,pc\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb bar,pc,2,x\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+
+# ------------------
+# Specific commands
+gas_m68hc11_warning "" ".mode \"bar\"\n" "Invalid mode: .bar."
+gas_m68hc11_error "" ".relax 23\n" "bad .relax format"
+gas_m68hc11_error "" ".relax bar-23\n" "bad .relax format"
+gas_m68hc11_error "" ".far bar bar\n" "junk at end of line"
+
+
+run_dump_test insns
+run_dump_test lbranch
+run_dump_test all_insns
+run_dump_test insns-dwarf2
+run_dump_test lbranch-dwarf2
+run_dump_test abi-m68hc11-16-64
+run_dump_test abi-m68hc11-16-32
+run_dump_test abi-m68hc11-32-64
+
+# Compliance with Motorola Assembly Language Input Standard
+run_dump_test malis
+
+# Some 68HC12 tests
+run_dump_test opers12
+run_dump_test opers12-dwarf2
+run_dump_test branchs12
+run_dump_test insns12
+run_dump_test indexed12
+run_dump_test bug-1825
+run_dump_test movb
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/malis-include.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis-include.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/malis-include.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis-include.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,19 @@
+;;
+;; This file verifies the compliance with the Motorola specification:
+;; 
+;; MOTOROLA STANDARDS
+;; Document #1001, Version 1.0
+;; SPECIFICATION FOR Motorola 8- and 16-Bit ASSEMBLY LANGUAGE INPUT STANDARD
+;; 26, October 1999
+;;
+;; Available at:
+;; 
+;; http://www.mcu.motsps.com/dev_tools/hc12/eabi/m8-16alis.pdf
+;;
+;; Lines starting with '#' represent instructions that fail in GAS.
+;;
+;;
+;;	Section 8.2.12.6 Include File - include
+	section .text
+value:	set	1
+	ldy	#value
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/malis.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/malis.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,37 @@
+#objdump: -d --prefix-addresses
+#as: -m68hc11 --mri -I$srcdir/$subdir
+#name: Motorola Assembly Language Input Standard
+
+# Test compliance with MALIS
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+000 <L0> ldaa	1,x
+0+002 <L1> ldaa	#44
+0+004 <L_txt2> ldx	#0+000 <L0>
+0+007 <L_constant> ldaa	#123
+0+009 <L_constant\+0x2> ldaa	#233
+0+00b <L_constant\+0x4> ldab	#138
+0+00d <L_constant\+0x6> ldab	#7
+0+00f <L_constant\+0x8> ldaa	#60
+0+011 <L_constant\+0xa> ldaa	#255
+0+013 <L12> ldaa	#174
+0+015 <L13> ldaa	#178
+0+017 <L11> ldx	#0+0af <entry\+0x6c>
+0+01a <L11\+0x3> ldx	#0+001 <L0\+0x1>
+0+01d <L11\+0x6> ldx	#0+001 <L0\+0x1>
+0+020 <L11\+0x9> ldx	#0+000 <L0>
+0+023 <L11\+0xc> ldab	#210
+0+025 <L_if> ldx	#0+001 <L0\+0x1>
+0+028 <L_if\+0x3> ldaa	#31
+0+02a <L_if\+0x5> ldaa	#4
+0+02c <L_if\+0x7> ldx	#0+017 <L11>
+0+02f <L_if\+0xa> ldx	#0+004 <L_txt2>
+0+032 <L_if\+0xd> ldy	#0+001 <L0\+0x1>
+0+036 <L_if\+0x11> ldy	#0+001 <L0\+0x1>
+0+03a <L_if\+0x15> ldaa	#23
+0+03c <L_if\+0x17> staa	0+018 <L11\+0x1>
+0+03f <L_if\+0x1a> rts
+0+040 <L_if\+0x1b> ldaa	0+017 <L11>
+0+043 <entry> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/malis.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/malis.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/malis.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,240 @@
+;;
+;; This file verifies the compliance with the Motorola specification:
+;; 
+;; MOTOROLA STANDARDS
+;; Document #1001, Version 1.0
+;; SPECIFICATION FOR Motorola 8- and 16-Bit ASSEMBLY LANGUAGE INPUT STANDARD
+;; 26, October 1999
+;;
+;; Available at:
+;; 
+;; http://www.mcu.motsps.com/dev_tools/hc12/eabi/m8-16alis.pdf
+;;
+;; Lines starting with '#' represent instructions that fail in GAS.
+;;
+;;
+;; Section 8.2 INPUTS
+	;; Validated within the whole file
+	
+;; Section 8.2.1 Character Set
+	;; TBD
+
+;; Section 8.2.2 Assembly Language Statement
+	;; Validated within the whole file
+
+;; Section 8.2.3 Comments
+	; Motorola comment
+	;; This file is full of comments
+
+;; Section 8.2.5 Location Counter
+	section .text
+
+_start:
+L0:	*			; L0 set to 0 (relative to text)
+	ldaa	1,x
+L1:	equ	*		; L1 set to 2 (relative to text)
+
+;; Section 8.2.6 Sections
+	section .data
+	section .text
+	section empty
+	section .text
+
+;; Section 8.2.7 Expressions
+L2:	equ	23		; Absolute = 0x17
+L3:	equ	L0-23		; Simple relocatable
+
+;; Section 8.2.7.1 Primary Expression
+L4:	equ	45		; Numeric  = 0x2d
+L5:	equ	L0		; Symbolic
+
+;; Section 8.2.7.2 Absolute Expression
+L_txt:	ldaa	#44
+L_txt2:
+L6:	equ	-L4		; unary expr		0xffffffd3
+L7:	equ	L6+1000		; binary expr		0x03bb
+L8:	equ	L6-12		;			0xffffffc7
+L9:	equ	L_txt2-L_txt	; reloc - reloc		2 = sizeof(ldaa #44)
+
+;; Section 8.2.7.3 Simple Relocatable Expressions
+L10:	equ	_start		; symbol		0 + text
+L11:	equ	L10+23		; reloc+abs		0x17 + text
+L12:	equ	L11-4		; reloc-abs		0x13 + text
+L13:	equ	L12+L9		; reloc+abs		0x15 + text
+
+;; Section 8.2.8 Symbols
+	section .text
+Text_Symbol:
+	ldx	#Data_Symbol
+
+	section .data
+Data_Symbol:
+
+;; Section 8.2.8.1 Labels
+L_label_shall_be_significant_to_at_least_32_chars:
+	dc.b	1
+L_label_lower:			; Labels are case sensitive
+	dc.b	2
+L_Label_Lower:
+	dc.b	3
+
+;; Section 8.2.9 Constants
+;
+;	Section 8.2.9.1	Decimal Constants
+	section .text
+L_constant:
+	ldaa	#123		; -> ldaa #0x7b
+	ldaa	#-23		; -> ldaa #0xe9
+	
+;;	Section 8.2.9.2	Binary Constants
+	ldab	#%10001010	; -> ldab #0x8A
+	ldab	#%0111		; -> ldab #0x07
+
+;;	Section 8.2.9.3	Octal Constants
+	ldaa	#@74		; -> ldaa 0x3c
+	ldaa	#@377		; -> ldaa 0xff
+
+;;	Section 8.2.9.4	Hexadecimal Constants
+	ldaa	#$ae		; -> ldaa 0xae
+	ldaa	#$B2		; -> ldaa 0xb2
+
+;;	Section 8.2.9.5	String Constants
+	section	.data
+#	ascii	'"Single quote string"'
+	ascii	"'Double quote string'"
+
+;;	Section 8.2.9.6 Floating Point Constants
+;;	No specification
+L_float:	float	3.241592e-2
+
+;;	Section 8.2.10	Operators
+	section .text
+L_operator:
+	ldx	#(((1<<3)&(1<<3)|2)<<4)+(4*4-1)
+	ldx	#(L2>=23)&1-(L2<=23)&1+(L2==23)&1 ; -> ldx #1
+	ldx	#(L2>23)&1-(L2<23)&1+(L2==23)&1   ; -> ldx #0
+	ldx	#1-1+1-1+1-1
+	ldab	#~L4		; -> ldab #0xd2
+#	ldab	#<_start	; force to 8-bit
+#	ldx	#>_start	; force to 16-bit
+#	ldab	#page(_start)	; 68HC12 page number of symbol
+
+;; Section 8.2.11 Instructions
+;;	Defined by other tests
+
+;; Section 8.2.12 Assembler Directives
+;; 
+;; Section 8.2.12.1 Conditional Directives
+;;
+# The specification says we are allowed to have spaces in expressions.
+# This does not work with GAS in mri mode, the instruction 'if L2 < 24'
+# is in fact treated as 'if L2'.
+L_if:
+	if L2<24		; true
+	ldx	#1		; -> ldx #1
+	else
+	ldx	#2
+	endif
+	if L2<23||L2>23||L2==22+1 ; true
+	if L2<23		; false
+	ldaa	#0
+	endif
+	if L2>23		; false
+	ldaa	#1
+	endif
+	if L2 == 23		; true
+	ldaa	#L2+8		; -> ldaa #31
+	endif
+	if L2+2<23+2		; false
+	if L2+4>23+4
+	ldaa	#1
+	elseif L2==23
+	ldaa	#2
+	else
+	ldaa	#3
+	endif
+	elseif L2==23		; true
+	ldaa	#4		; -> ldaa #4
+	else
+	ldaa	#5
+	endif
+	endif
+	ifdef L1		; true
+	ldx	#23		; -> ldx #0x17
+	endif
+	ifndef L_undef		; true
+	ldx	#4		; -> ldx #4
+	endif
+
+;;	Section 8.2.12.2 Define Constant -dc
+	section	.data
+L_const_data:
+	dc.b	(1<<3)|2	; 0x0a
+	dc.w	(1<<9)+2	; 0x02 0x02
+	dc.l	$12345678
+	dc.b	10
+	dc.l	(1<<9)*(3<<12)
+#	dc.b	"Hello"
+#	dc.w	"World"
+#	dc.l	"!!!"
+
+;;	Section 8.2.12.3 Define Constant Block -dcb
+	dcb.b	3,2
+	dcb.w	2,$55AA
+	dcb.l	2,$12345678
+	dcb.b	10,2
+	dcb.w	5,$55AA
+	dcb.l	2,$12345678
+#	dcb.b	4, 12		; Fails in GAS due to space
+
+;;	Section 8.2.12.4 Define Storage - ds
+	ds.b	4
+	ds.w	2
+	ds.l	1
+	ds	2
+
+;;	Section 8.2.12.5 Equate Symbol Value - equ
+L_equ1:	equ	(1<<8)+3
+L_equ2:	equ	L_equ1*3
+L_equ3:	equ	L_equ2-L_equ1
+
+;;	Section 8.2.12.6 Include File - include
+#	include 'malis-include.s'
+#	include "malis-include.s"
+	include malis-include.s
+	include malis-include.s
+
+;;	Section 8.2.12.7 Origin - org
+	section .text
+#	org	$100
+	ldaa	#23
+#	org	$200
+	staa	24
+#	org	$0
+	rts
+
+;;	Section 8.2.12.8 Define Section - section
+	section .text
+	ldaa	23
+
+	section .data
+	dc.b	23
+
+;;	Section 8.2.12.9 Set Value of Symbol - set
+s1:	set	3
+s1:	set	4
+s2:	set	s1+2
+s3:	set	s2+4
+
+;; Section 8.2.12.10 External Symbol Definition - xdef
+	xdef	s1
+	xdef	s2
+	xdef	entry
+
+;; Section 8.2.12.11 External Symbol Reference - xref
+	section	.text
+	xref	printf
+	xrefb	write
+entry:
+	rts
+
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/movb.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/movb.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/movb.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/movb.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,451 @@
+#objdump: -D
+#as: -m68hc12
+#name: 68HC12 movb movw instructions
+
+.*:  +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+00 <\.text>:
+[ ]+ 0:	86 00[ ]+ 	ldaa	#0
+[ ]+ 2:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ 6:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ a:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ e:	86 01[ ]+ 	ldaa	#1
+[ ]+10:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+14:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+18:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+1c:	86 02[ ]+ 	ldaa	#2
+[ ]+1e:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+22:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+26:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+2a:	86 03[ ]+ 	ldaa	#3
+[ ]+2c:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+30:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+34:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+38:	86 04[ ]+ 	ldaa	#4
+[ ]+3a:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+3e:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+42:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+46:	86 05[ ]+ 	ldaa	#5
+[ ]+48:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+4c:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+50:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+54:	86 06[ ]+ 	ldaa	#6
+[ ]+56:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+5a:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+5e:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+62:	86 07[ ]+ 	ldaa	#7
+[ ]+64:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+68:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+6c:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+70:	86 08[ ]+ 	ldaa	#8
+[ ]+72:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+76:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+7a:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+7e:	86 09[ ]+ 	ldaa	#9
+[ ]+80:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+84:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+88:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+8c:	86 0a[ ]+ 	ldaa	#10
+[ ]+8e:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+92:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+96:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+9a:	86 0b[ ]+ 	ldaa	#11
+[ ]+9c:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a0:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a4:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a8:	86 0c[ ]+	ldaa	#12
+[ ]+aa:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+ae:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+b2:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+b6:	86 0d[ ]+ 	ldaa	#13
+[ ]+b8:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+bc:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+c0:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+c4:	86 0e[ ]+ 	ldaa	#14
+[ ]+c6:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+ca:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+ce:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+d2:	86 0f[ ]+ 	ldaa	#15
+[ ]+d4:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+d8:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+dc:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+e0:	86 10[ ]+ 	ldaa	#16
+[ ]+e2:	18 0a 4f cf 	movb	15,Y, 15,PC \{f5 <cat2\+0xe6>\}
+[ ]+e6:	18 0a 4f cf 	movb	15,Y, 15,PC \{f9 <cat2\+0xea>\}
+[ ]+ea:	18 0a 4f cf 	movb	15,Y, 15,PC \{fd <cat2\+0xee>\}
+[ ]+ee:	86 11[ ]+ 	ldaa	#17
+[ ]+f0:	18 0a 4f cf 	movb	15,Y, 15,PC \{103 <cat2\+0xf4>\}
+[ ]+f4:	18 0a 4f cf 	movb	15,Y, 15,PC \{107 <cat2\+0xf8>\}
+[ ]+f8:	18 0a 4f cf 	movb	15,Y, 15,PC \{10b <cat2\+0xfc>\}
+[ ]+fc:	86 12[ ]+ 	ldaa	#18
+[ ]+fe:	18 0a 4f d0 	movb	15,Y, \-16,PC \{f2 <cat2\+0xe3>\}
+ 102:	18 0a 4f d0 	movb	15,Y, \-16,PC \{f6 <cat2\+0xe7>\}
+ 106:	18 0a 4f d0 	movb	15,Y, \-16,PC \{fa <cat2\+0xeb>\}
+ 10a:	86 13[ ]+ 	ldaa	#19
+ 10c:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{11f <cat2\+0x110>\}
+ 110:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{123 <cat2\+0x114>\}
+ 114:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{127 <cat2\+0x118>\}
+ 118:	86 14[ ]+ 	ldaa	#20
+ 11a:	18 02 4f cf 	movw	15,Y, 15,PC \{12d <cat2\+0x11e>\}
+ 11e:	18 02 4f cf 	movw	15,Y, 15,PC \{131 <cat2\+0x122>\}
+ 122:	18 02 4f cf 	movw	15,Y, 15,PC \{135 <cat2\+0x126>\}
+ 126:	86 15[ ]+ 	ldaa	#21
+ 128:	18 02 4f cf 	movw	15,Y, 15,PC \{13b <cat2\+0x12c>\}
+ 12c:	18 02 4f cf 	movw	15,Y, 15,PC \{13f <cat2\+0x130>\}
+ 130:	18 02 4f cf 	movw	15,Y, 15,PC \{143 <cat2\+0x134>\}
+ 134:	86 16[ ]+ 	ldaa	#22
+ 136:	18 02 4f d0 	movw	15,Y, \-16,PC \{12a <cat2\+0x11b>\}
+ 13a:	18 02 4f d0 	movw	15,Y, \-16,PC \{12e <cat2\+0x11f>\}
+ 13e:	18 02 4f d0 	movw	15,Y, \-16,PC \{132 <cat2\+0x123>\}
+ 142:	86 17[ ]+ 	ldaa	#23
+ 144:	18 02 50 cf 	movw	\-16,Y, 15,PC \{157 <cat2\+0x148>\}
+ 148:	18 02 50 cf 	movw	\-16,Y, 15,PC \{15b <cat2\+0x14c>\}
+ 14c:	18 02 50 cf 	movw	\-16,Y, 15,PC \{15f <cat2\+0x150>\}
+ 150:	86 18[ ]+ 	ldaa	#24
+ 152:	18 0a 8f cf 	movb	15,SP, 15,PC \{165 <cat2\+0x156>\}
+ 156:	18 0a 8f cf 	movb	15,SP, 15,PC \{169 <cat2\+0x15a>\}
+ 15a:	18 0a 8f cf 	movb	15,SP, 15,PC \{16d <cat2\+0x15e>\}
+ 15e:	86 19[ ]+ 	ldaa	#25
+ 160:	18 0a 8f cf 	movb	15,SP, 15,PC \{173 <cat2\+0x164>\}
+ 164:	18 0a 8f cf 	movb	15,SP, 15,PC \{177 <cat2\+0x168>\}
+ 168:	18 0a 8f cf 	movb	15,SP, 15,PC \{17b <cat2\+0x16c>\}
+ 16c:	86 1a[ ]+ 	ldaa	#26
+ 16e:	18 0a 8f d0 	movb	15,SP, \-16,PC \{162 <cat2\+0x153>\}
+ 172:	18 0a 8f d0 	movb	15,SP, \-16,PC \{166 <cat2\+0x157>\}
+ 176:	18 0a 8f d0 	movb	15,SP, \-16,PC \{16a <cat2\+0x15b>\}
+ 17a:	86 1b[ ]+ 	ldaa	#27
+ 17c:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{18f <cat2\+0x180>\}
+ 180:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{193 <cat2\+0x184>\}
+ 184:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{197 <cat2\+0x188>\}
+ 188:	86 1c[ ]+ 	ldaa	#28
+ 18a:	18 02 8f cf 	movw	15,SP, 15,PC \{19d <cat2\+0x18e>\}
+ 18e:	18 02 8f cf 	movw	15,SP, 15,PC \{1a1 <cat2\+0x192>\}
+ 192:	18 02 8f cf 	movw	15,SP, 15,PC \{1a5 <cat2\+0x196>\}
+ 196:	86 1d[ ]+ 	ldaa	#29
+ 198:	18 02 8f cf 	movw	15,SP, 15,PC \{1ab <cat2\+0x19c>\}
+ 19c:	18 02 8f cf 	movw	15,SP, 15,PC \{1af <cat2\+0x1a0>\}
+ 1a0:	18 02 8f cf 	movw	15,SP, 15,PC \{1b3 <cat2\+0x1a4>\}
+ 1a4:	86 1e[ ]+ 	ldaa	#30
+ 1a6:	18 02 8f d0 	movw	15,SP, \-16,PC \{19a <cat2\+0x18b>\}
+ 1aa:	18 02 8f d0 	movw	15,SP, \-16,PC \{19e <cat2\+0x18f>\}
+ 1ae:	18 02 8f d0 	movw	15,SP, \-16,PC \{1a2 <cat2\+0x193>\}
+ 1b2:	86 1f[ ]+ 	ldaa	#31
+ 1b4:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1c7 <cat2\+0x1b8>\}
+ 1b8:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1cb <cat2\+0x1bc>\}
+ 1bc:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1cf <cat2\+0x1c0>\}
+ 1c0:	86 20[ ]+ 	ldaa	#32
+ 1c2:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1c6:	00 
+ 1c7:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1cb:	00 
+ 1cc:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1d0:	00 
+ 1d1:	86 21[ ]+ 	ldaa	#33
+ 1d3:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1d7:	00 
+ 1d8:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1dc:	00 
+ 1dd:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1e1:	00 
+ 1e2:	86 22[ ]+ 	ldaa	#34
+ 1e4:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1e8:	00 
+ 1e9:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1ed:	00 
+ 1ee:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1f2:	00 
+ 1f3:	86 23[ ]+ 	ldaa	#35
+ 1f5:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 1f9:	00 
+ 1fa:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 1fe:	00 
+ 1ff:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 203:	00 
+ 204:	86 24[ ]+ 	ldaa	#36
+ 206:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 20a:	02 
+ 20b:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 20f:	02 
+ 210:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 214:	02 
+ 215:	86 25[ ]+ 	ldaa	#37
+ 217:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 21b:	02 
+ 21c:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 220:	02 
+ 221:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 225:	02 
+ 226:	86 26[ ]+ 	ldaa	#38
+ 228:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 22c:	02 
+ 22d:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 231:	02 
+ 232:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 236:	02 
+ 237:	86 27[ ]+ 	ldaa	#39
+ 239:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 23d:	02 
+ 23e:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 242:	02 
+ 243:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 247:	02 
+ 248:	86 28[ ]+ 	ldaa	#40
+ 24a:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 24e:	00 
+ 24f:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 253:	00 
+ 254:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 258:	00 
+ 259:	86 29[ ]+ 	ldaa	#41
+ 25b:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 25f:	00 
+ 260:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 264:	00 
+ 265:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 269:	00 
+ 26a:	86 2a[ ]+ 	ldaa	#42
+ 26c:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 270:	00 
+ 271:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 275:	00 
+ 276:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 27a:	00 
+ 27b:	86 2b[ ]+ 	ldaa	#43
+ 27d:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 281:	00 
+ 282:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 286:	00 
+ 287:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 28b:	00 
+ 28c:	86 2c[ ]+ 	ldaa	#44
+ 28e:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 292:	02 
+ 293:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 297:	02 
+ 298:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 29c:	02 
+ 29d:	86 2d[ ]+ 	ldaa	#45
+ 29f:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2a3:	02 
+ 2a4:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2a8:	02 
+ 2a9:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2ad:	02 
+ 2ae:	86 2e[ ]+ 	ldaa	#46
+ 2b0:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2b4:	02 
+ 2b5:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2b9:	02 
+ 2ba:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2be:	02 
+ 2bf:	86 2f[ ]+ 	ldaa	#47
+ 2c1:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2c5:	02 
+ 2c6:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2ca:	02 
+ 2cb:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2cf:	02 
+ 2d0:	86 30[ ]+ 	ldaa	#48
+ 2d2:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2e4 <cat2\+0x2d5>\}
+ 2d6:	00 
+ 2d7:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2e9 <cat2\+0x2da>\}
+ 2db:	00 
+ 2dc:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2ee <cat2\+0x2df>\}
+ 2e0:	00 
+ 2e1:	86 31[ ]+ 	ldaa	#49
+ 2e3:	18 0d cf 10 	movb	15,PC \{2f5 <cat2\+0x2e6>\}, 1000 <cat2\+0xff1>
+ 2e7:	00 
+ 2e8:	18 0d cf 10 	movb	15,PC \{2fa <cat2\+0x2eb>\}, 1000 <cat2\+0xff1>
+ 2ec:	00 
+ 2ed:	18 0d cf 10 	movb	15,PC \{2ff <cat2\+0x2f0>\}, 1000 <cat2\+0xff1>
+ 2f1:	00 
+ 2f2:	86 32[ ]+ 	ldaa	#50
+ 2f4:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2e7 <cat2\+0x2d8>\}
+ 2f8:	00 
+ 2f9:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2ec <cat2\+0x2dd>\}
+ 2fd:	00 
+ 2fe:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2f1 <cat2\+0x2e2>\}
+ 302:	00 
+ 303:	86 33[ ]+ 	ldaa	#51
+ 305:	18 0d d0 10 	movb	\-16,PC \{2f8 <cat2\+0x2e9>\}, 1000 <cat2\+0xff1>
+ 309:	00 
+ 30a:	18 0d d0 10 	movb	\-16,PC \{2fd <cat2\+0x2ee>\}, 1000 <cat2\+0xff1>
+ 30e:	00 
+ 30f:	18 0d d0 10 	movb	\-16,PC \{302 <cat2\+0x2f3>\}, 1000 <cat2\+0xff1>
+ 313:	00 
+ 314:	86 34[ ]+ 	ldaa	#52
+ 316:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{328 <cat2\+0x319>\}
+ 31a:	02 
+ 31b:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{32d <cat2\+0x31e>\}
+ 31f:	02 
+ 320:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{332 <cat2\+0x323>\}
+ 324:	02 
+ 325:	86 35[ ]+ 	ldaa	#53
+ 327:	18 05 cf 10 	movw	15,PC \{339 <cat2\+0x32a>\}, 1002 <cat2\+0xff3>
+ 32b:	02 
+ 32c:	18 05 cf 10 	movw	15,PC \{33e <cat2\+0x32f>\}, 1002 <cat2\+0xff3>
+ 330:	02 
+ 331:	18 05 cf 10 	movw	15,PC \{343 <cat2\+0x334>\}, 1002 <cat2\+0xff3>
+ 335:	02 
+ 336:	86 36[ ]+ 	ldaa	#54
+ 338:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{32b <cat2\+0x31c>\}
+ 33c:	02 
+ 33d:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{330 <cat2\+0x321>\}
+ 341:	02 
+ 342:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{335 <cat2\+0x326>\}
+ 346:	02 
+ 347:	86 37[ ]+ 	ldaa	#55
+ 349:	18 05 d0 10 	movw	\-16,PC \{33c <cat2\+0x32d>\}, 1002 <cat2\+0xff3>
+ 34d:	02 
+ 34e:	18 05 d0 10 	movw	\-16,PC \{341 <cat2\+0x332>\}, 1002 <cat2\+0xff3>
+ 352:	02 
+ 353:	18 05 d0 10 	movw	\-16,PC \{346 <cat2\+0x337>\}, 1002 <cat2\+0xff3>
+ 357:	02 
+ 358:	86 38[ ]+ 	ldaa	#56
+ 35a:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 35e:	00 
+ 35f:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 363:	00 
+ 364:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 368:	00 
+ 369:	86 39[ ]+ 	ldaa	#57
+ 36b:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 36f:	00 
+ 370:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 374:	00 
+ 375:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 379:	00 
+ 37a:	86 3a[ ]+ 	ldaa	#58
+ 37c:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 380:	00 
+ 381:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 385:	00 
+ 386:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 38a:	00 
+ 38b:	86 3b[ ]+ 	ldaa	#59
+ 38d:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 391:	00 
+ 392:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 396:	00 
+ 397:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 39b:	00 
+ 39c:	86 3c[ ]+ 	ldaa	#60
+ 39e:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3a2:	02 
+ 3a3:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3a7:	02 
+ 3a8:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3ac:	02 
+ 3ad:	86 3d[ ]+ 	ldaa	#61
+ 3af:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3b3:	02 
+ 3b4:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3b8:	02 
+ 3b9:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3bd:	02 
+ 3be:	86 3e[ ]+ 	ldaa	#62
+ 3c0:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3c4:	02 
+ 3c5:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3c9:	02 
+ 3ca:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3ce:	02 
+ 3cf:	86 3f[ ]+ 	ldaa	#63
+ 3d1:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3d5:	02 
+ 3d6:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3da:	02 
+ 3db:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3df:	02 
+ 3e0:	86 40[ ]+ 	ldaa	#64
+ 3e2:	18 08 07 aa 	movb	#170, 7,X
+ 3e6:	18 08 07 aa 	movb	#170, 7,X
+ 3ea:	18 08 07 aa 	movb	#170, 7,X
+ 3ee:	86 41[ ]+ 	ldaa	#65
+ 3f0:	18 08 18 aa 	movb	#170, \-8,X
+ 3f4:	18 08 18 aa 	movb	#170, \-8,X
+ 3f8:	18 08 18 aa 	movb	#170, \-8,X
+ 3fc:	86 42[ ]+ 	ldaa	#66
+ 3fe:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 402:	44 
+ 403:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 407:	44 
+ 408:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 40c:	44 
+ 40d:	86 43[ ]+ 	ldaa	#67
+ 40f:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 413:	44 
+ 414:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 418:	44 
+ 419:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 41d:	44 
+ 41e:	86 44[ ]+ 	ldaa	#68
+ 420:	18 08 47 aa 	movb	#170, 7,Y
+ 424:	18 08 47 aa 	movb	#170, 7,Y
+ 428:	18 08 47 aa 	movb	#170, 7,Y
+ 42c:	86 45[ ]+ 	ldaa	#69
+ 42e:	18 08 58 aa 	movb	#170, \-8,Y
+ 432:	18 08 58 aa 	movb	#170, \-8,Y
+ 436:	18 08 58 aa 	movb	#170, \-8,Y
+ 43a:	86 46[ ]+ 	ldaa	#70
+ 43c:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 440:	44 
+ 441:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 445:	44 
+ 446:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 44a:	44 
+ 44b:	86 47[ ]+ 	ldaa	#71
+ 44d:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 451:	44 
+ 452:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 456:	44 
+ 457:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 45b:	44 
+ 45c:	86 48[ ]+ 	ldaa	#72
+ 45e:	18 08 c7 aa 	movb	#170, 7,PC \{468 <cat2\+0x459>\}
+ 462:	18 08 c7 aa 	movb	#170, 7,PC \{46c <cat2\+0x45d>\}
+ 466:	18 08 c7 aa 	movb	#170, 7,PC \{470 <cat2\+0x461>\}
+ 46a:	86 49[ ]+ 	ldaa	#73
+ 46c:	18 08 d8 aa 	movb	#170, \-8,PC \{467 <cat2\+0x458>\}
+ 470:	18 08 d8 aa 	movb	#170, \-8,PC \{46b <cat2\+0x45c>\}
+ 474:	18 08 d8 aa 	movb	#170, \-8,PC \{46f <cat2\+0x460>\}
+ 478:	86 4a[ ]+ 	ldaa	#74
+ 47a:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{484 <cat2\+0x475>\}
+ 47e:	44 
+ 47f:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{489 <cat2\+0x47a>\}
+ 483:	44 
+ 484:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{48e <cat2\+0x47f>\}
+ 488:	44 
+ 489:	86 4b[ ]+ 	ldaa	#75
+ 48b:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{486 <cat2\+0x477>\}
+ 48f:	44 
+ 490:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{48b <cat2\+0x47c>\}
+ 494:	44 
+ 495:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{490 <cat2\+0x481>\}
+ 499:	44 
+ 49a:	86 4c[ ]+ 	ldaa	#76
+ 49c:	18 08 87 aa 	movb	#170, 7,SP
+ 4a0:	18 08 87 aa 	movb	#170, 7,SP
+ 4a4:	18 08 87 aa 	movb	#170, 7,SP
+ 4a8:	86 4d[ ]+ 	ldaa	#77
+ 4aa:	18 08 98 aa 	movb	#170, \-8,SP
+ 4ae:	18 08 98 aa 	movb	#170, \-8,SP
+ 4b2:	18 08 98 aa 	movb	#170, \-8,SP
+ 4b6:	86 4e[ ]+ 	ldaa	#78
+ 4b8:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4bc:	44 
+ 4bd:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4c1:	44 
+ 4c2:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4c6:	44 
+ 4c7:	86 4f[ ]+ 	ldaa	#79
+ 4c9:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4cd:	44 
+ 4ce:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4d2:	44 
+ 4d3:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4d7:	44 
+ 4d8:	86 50[ ]+ 	ldaa	#80
+
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/movb.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/movb.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/movb.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/movb.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,333 @@
+	dog2=15
+	dog3=-16
+	dog4=7
+	dog5=-8
+	;; idx - idx
+	ldaa #0
+	movb 15,x,dog2,x
+	movb 15,x,cat2,x
+	movb 15,x,15,x
+	ldaa #1
+	movb dog2,x,15,x
+	movb cat2,x,15,x
+	movb 15,x,15,x
+	ldaa #2
+	movb 15,x,dog3,x
+	movb 15,x,cat3,x	
+	movb 15,x,-16,x
+	ldaa #3		
+	movb dog3,x,15,x
+	movb cat3,x,15,x	
+	movb -16,x,15,x
+	ldaa #4
+	movw 15,x,dog2,x
+	movw 15,x,cat2,x
+	movw 15,x,15,x
+	ldaa #5
+	movw dog2,x,15,x
+	movw cat2,x,15,x
+	movw 15,x,15,x
+	ldaa #6
+	movw 15,x,dog3,x
+	movw 15,x,cat3,x
+	movw 15,x,-16,x
+	ldaa #7
+	movw dog3,x,15,x
+	movw cat3,x,15,x
+	movw -16,x,15,x
+	ldaa #8
+	movb 15,y,dog2,y
+	movb 15,y,cat2,y
+	movb 15,y,15,y
+	ldaa #9
+	movb dog2,y,15,y
+	movb cat2,y,15,y
+	movb 15,y,15,y
+	ldaa #10
+	movb 15,y,dog3,y
+	movb 15,y,cat3,y
+	movb 15,y,-16,y
+	ldaa #11
+	movb dog3,y,15,y
+	movb cat3,y,15,y
+	movb -16,y,15,y
+	ldaa #12
+	movw 15,y,dog2,y
+	movw 15,y,cat2,y
+	movw 15,y,15,y
+	ldaa #13
+	movw dog2,y,15,y
+	movw cat2,y,15,y
+	movw 15,y,15,y
+	ldaa #14
+	movw 15,y,dog3,y
+	movw 15,y,cat3,y
+	movw 15,y,-16,y
+	ldaa #15
+	movw dog3,y,15,y
+	movw cat3,y,15,y
+	movw -16,y,15,y
+	ldaa #16
+	movb 15,y,dog2,pc
+	movb 15,y,cat2,pc
+	movb 15,y,15,pc
+	ldaa #17
+	movb dog2,y,15,pc
+	movb cat2,y,15,pc
+	movb 15,y,15,pc
+	ldaa #18
+	movb 15,y,dog3,pc
+	movb 15,y,cat3,pc
+	movb 15,y,-16,pc
+	ldaa #19
+	movb dog3,y,15,pc
+	movb cat3,y,15,pc
+	movb -16,y,15,pc
+	ldaa #20
+	movw 15,y,dog2,pc
+	movw 15,y,cat2,pc
+	movw 15,y,15,pc
+	ldaa #21
+	movw dog2,y,15,pc
+	movw cat2,y,15,pc
+	movw 15,y,15,pc
+	ldaa #22
+	movw 15,y,dog3,pc
+	movw 15,y,cat3,pc
+	movw 15,y,-16,pc
+	ldaa #23
+	movw dog3,y,15,pc
+	movw cat3,y,15,pc
+	movw -16,y,15,pc
+	ldaa #24
+	movb 15,sp,dog2,pc
+	movb 15,sp,cat2,pc
+	movb 15,sp,15,pc
+	ldaa #25
+	movb dog2,sp,15,pc
+	movb cat2,sp,15,pc
+	movb 15,sp,15,pc
+	ldaa #26
+	movb 15,sp,dog3,pc
+	movb 15,sp,cat3,pc
+	movb 15,sp,-16,pc
+	ldaa #27
+	movb dog3,sp,15,pc
+	movb cat3,sp,15,pc
+	movb -16,sp,15,pc
+	ldaa #28
+	movw 15,sp,dog2,pc
+	movw 15,sp,cat2,pc
+	movw 15,sp,15,pc
+	ldaa #29
+	movw dog2,sp,15,pc
+	movw cat2,sp,15,pc
+	movw 15,sp,15,pc
+	ldaa #30
+	movw 15,sp,dog3,pc
+	movw 15,sp,cat3,pc
+	movw 15,sp,-16,pc
+	ldaa #31
+	movw dog3,sp,15,pc
+	movw cat3,sp,15,pc
+	movw -16,sp,15,pc
+	ldaa #32
+	;; ext - idx
+	;; idx - ext
+	movb 0x1000,dog2,x
+	movb 0x1000,cat2,x
+	movb 0x1000,15,x
+	ldaa #33
+	movb dog2,x,0x1000
+	movb cat2,x,0x1000
+	movb 15,x,0x1000
+	ldaa #34
+	movb 0x1000,dog3,x
+	movb 0x1000,cat3,x
+	movb 0x1000,-16,x
+	ldaa #35
+	movb dog3,x,0x1000
+	movb cat3,x,0x1000
+	movb -16,x,0x1000
+	ldaa #36
+	movw 0x1002,dog2,x
+	movw 0x1002,cat2,x
+	movw 0x1002,15,x
+	ldaa #37
+	movw dog2,x,0x1002
+	movw cat2,x,0x1002
+	movw 15,x,0x1002
+	ldaa #38
+	movw 0x1002,dog3,x
+	movw 0x1002,cat3,x
+	movw 0x1002,-16,x
+	ldaa #39
+	movw dog3,x,0x1002
+	movw cat3,x,0x1002
+	movw -16,x,0x1002
+	ldaa #40
+	movb 0x1000,dog2,y
+	movb 0x1000,cat2,y
+	movb 0x1000,15,y
+	ldaa #41
+	movb dog2,y,0x1000
+	movb cat2,y,0x1000
+	movb 15,y,0x1000
+	ldaa #42
+	movb 0x1000,dog3,y
+	movb 0x1000,cat3,y
+	movb 0x1000,-16,y
+	ldaa #43
+	movb dog3,y,0x1000
+	movb cat3,y,0x1000
+	movb -16,y,0x1000
+	ldaa #44
+	movw 0x1002,dog2,y
+	movw 0x1002,cat2,y
+	movw 0x1002,15,y
+	ldaa #45
+	movw dog2,y,0x1002
+	movw cat2,y,0x1002
+	movw 15,y,0x1002
+	ldaa #46
+	movw 0x1002,dog3,y
+	movw 0x1002,cat3,y
+	movw 0x1002,-16,y
+	ldaa #47
+	movw dog3,y,0x1002
+	movw cat3,y,0x1002
+	movw -16,y,0x1002
+	ldaa #48
+	movb 0x1000,dog2,pc
+	movb 0x1000,cat2,pc
+	movb 0x1000,15,pc
+	ldaa #49
+	movb dog2,pc,0x1000
+	movb cat2,pc,0x1000
+	movb 15,pc,0x1000
+	ldaa #50
+	movb 0x1000,dog3,pc
+	movb 0x1000,cat3,pc
+	movb 0x1000,-16,pc
+	ldaa #51
+	movb dog3,pc,0x1000
+	movb cat3,pc,0x1000
+	movb -16,pc,0x1000
+	ldaa #52
+	movw 0x1002,dog2,pc
+	movw 0x1002,cat2,pc
+	movw 0x1002,15,pc
+	ldaa #53
+	movw dog2,pc,0x1002
+	movw cat2,pc,0x1002
+	movw 15,pc,0x1002
+	ldaa #54
+	movw 0x1002,dog3,pc
+	movw 0x1002,cat3,pc
+	movw 0x1002,-16,pc
+	ldaa #55
+	movw dog3,pc,0x1002
+	movw cat3,pc,0x1002
+	movw -16,pc,0x1002
+	ldaa #56
+	movb 0x1000,dog2,sp
+	movb 0x1000,cat2,sp
+	movb 0x1000,15,sp
+	ldaa #57
+	movb dog2,sp,0x1000
+	movb cat2,sp,0x1000
+	movb 15,sp,0x1000
+	ldaa #58
+	movb 0x1000,dog3,sp
+	movb 0x1000,cat3,sp
+	movb 0x1000,-16,sp
+	ldaa #59
+	movb dog3,sp,0x1000
+	movb cat3,sp,0x1000
+	movb -16,sp,0x1000
+	ldaa #60
+	movw 0x1002,dog2,sp
+	movw 0x1002,cat2,sp
+	movw 0x1002,15,sp
+	ldaa #61
+	movw dog2,sp,0x1002
+	movw cat2,sp,0x1002
+	movw 15,sp,0x1002
+	ldaa #62
+	movw 0x1002,dog3,sp
+	movw 0x1002,cat3,sp
+	movw 0x1002,-16,sp
+	ldaa #63
+	movw dog3,sp,0x1002
+	movw cat3,sp,0x1002
+	movw -16,sp,0x1002
+	ldaa #64
+	;; imm - idx
+	movb #0xaa,dog4,x
+	movb #0xaa,cat4,x
+	movb #0xaa,7,x
+	ldaa #65
+	movb #0xaa,dog5,x
+	movb #0xaa,cat5,x
+	movb #0xaa,-8,x
+	ldaa #66
+	movw #0x44,dog4,x
+	movw #0x44,cat4,x
+	movw #0x44,7,x
+	ldaa #67
+	movw #0x44,dog5,x
+	movw #0x44,cat5,x
+	movw #0x44,-8,x
+	ldaa #68
+	movb #0xaa,dog4,y
+	movb #0xaa,cat4,y
+	movb #0xaa,7,y
+	ldaa #69
+	movb #0xaa,dog5,y
+	movb #0xaa,cat5,y
+	movb #0xaa,-8,y
+	ldaa #70
+	movw #0x44,dog4,y
+	movw #0x44,cat4,y
+	movw #0x44,7,y
+	ldaa #71
+	movw #0x44,dog5,y
+	movw #0x44,cat5,y
+	movw #0x44,-8,y
+	ldaa #72
+	movb #0xaa,dog4,pc
+	movb #0xaa,cat4,pc
+	movb #0xaa,7,pc
+	ldaa #73
+	movb #0xaa,dog5,pc
+	movb #0xaa,cat5,pc
+	movb #0xaa,-8,pc
+	ldaa #74
+	movw #0x44,dog4,pc
+	movw #0x44,cat4,pc
+	movw #0x44,7,pc
+	ldaa #75
+	movw #0x44,dog5,pc
+	movw #0x44,cat5,pc
+	movw #0x44,-8,pc
+	ldaa #76
+	movb #0xaa,dog4,sp
+	movb #0xaa,cat4,sp
+	movb #0xaa,7,sp
+	ldaa #77
+	movb #0xaa,dog5,sp
+	movb #0xaa,cat5,sp
+	movb #0xaa,-8,sp
+	ldaa #78
+	movw #0x44,dog4,sp
+	movw #0x44,cat4,sp
+	movw #0x44,7,sp
+	ldaa #79
+	movw #0x44,dog5,sp
+	movw #0x44,cat5,sp
+	movw #0x44,-8,sp
+	ldaa #80
+	cat2=15
+	cat3=-16
+	cat4=7
+	cat5=-8
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/opers12-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/opers12-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,242 @@
+#objdump: -S
+#as: -m68hc12 -gdwarf2
+#name: Dwarf2 test on opers12.s
+#source: opers12.s
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+00 <start>:
+#...
+	sect .text
+	globl start
+
+start:
+	anda	\[12,x\]		; Indexed indirect
+   0:	a4 e3 00 0c 	anda	\[12,X\]
+	ldaa	#10
+   4:	86 0a       	ldaa	#10
+	ldx	L1
+   6:	fe 00 00    	ldx	0 <start>
+
+0+09 <L1>:
+L1:	ldy	,x
+   9:	ed 00       	ldy	0,X
+	addd	1,y		; Offset from register
+   b:	e3 41       	addd	1,Y
+	subd	\-1,y
+   d:	a3 5f       	subd	\-1,Y
+	eora	15,y
+   f:	a8 4f       	eora	15,Y
+	eora	\-16,y
+  11:	a8 50       	eora	\-16,Y
+	eorb	16,y
+  13:	e8 e8 10    	eorb	16,Y
+	eorb	\-17,y
+  16:	e8 e9 ef    	eorb	\-17,Y
+	oraa	128,sp
+  19:	aa f0 80    	oraa	128,SP
+	orab	\-128,sp
+  1c:	ea f1 80    	orab	\-128,SP
+	orab	255,x
+  1f:	ea e0 ff    	orab	255,X
+	orab	\-256,x
+  22:	ea e1 00    	orab	\-256,X
+	anda	256,x
+  25:	a4 e2 01 00 	anda	256,X
+	andb	\-257,x
+  29:	e4 e2 fe ff 	andb	\-257,X
+	anda	\[12,x\]		; Indexed indirect \(16\-bit offset\)
+  2d:	a4 e3 00 0c 	anda	\[12,X\]
+	ldaa	\[257,y\]
+  31:	a6 eb 01 01 	ldaa	\[257,Y\]
+	ldab	\[32767,sp\]
+  35:	e6 f3 7f ff 	ldab	\[32767,SP\]
+	ldd	\[32768,pc\]
+  39:	ec fb 80 00 	ldd	\[32768,PC\]
+	ldd	L1,pc
+  3d:	ec f9 c9    	ldd	-55,PC \{9 <L1>\}
+	std	a,x		; Two\-reg index
+  40:	6c e4       	std	A,X
+	ldx	b,x
+  42:	ee e5       	ldx	B,X
+	stx	d,y
+  44:	6e ee       	stx	D,Y
+	addd	1,\+x		; Pre\-Auto inc
+  46:	e3 20       	addd	1,\+X
+	addd	2,\+x
+  48:	e3 21       	addd	2,\+X
+	addd	8,\+x
+  4a:	e3 27       	addd	8,\+X
+	addd	1,sp\+		; Post\-Auto inc
+  4c:	e3 b0       	addd	1,SP\+
+	addd	2,sp\+
+  4e:	e3 b1       	addd	2,SP\+
+	addd	8,sp\+
+  50:	e3 b7       	addd	8,SP\+
+	subd	1,\-y		; Pre\-Auto dec
+  52:	a3 6f       	subd	1,\-Y
+	subd	2,\-y
+  54:	a3 6e       	subd	2,\-Y
+	subd	8,\-y
+  56:	a3 68       	subd	8,\-Y
+	addd	1,y\-		; Post\-Auto dec
+  58:	e3 7f       	addd	1,Y\-
+	addd	2,y\-
+  5a:	e3 7e       	addd	2,Y\-
+	addd	8,y\-
+  5c:	e3 78       	addd	8,Y\-
+	std	\[d,x\]		; Indexed indirect with two reg index
+  5e:	6c e7       	std	\[D,X\]
+	std	\[d,y\]
+  60:	6c ef       	std	\[D,Y\]
+	std	\[d,sp\]
+  62:	6c f7       	std	\[D,SP\]
+	std	\[d,pc\]
+  64:	6c ff       	std	\[D,PC\]
+	beq	L1
+  66:	27 a1       	beq	9 <L1>
+	lbeq	start
+  68:	18 27 ff 94 	lbeq	0 <start>
+	lbcc	L2
+  6c:	18 24 00 4c 	lbcc	bc <L2>
+;;
+;; Move insn with various operands
+;; 
+	movb	start, 1,x
+  70:	18 09 01 00 	movb	0 <start>, 1,X
+  74:	00 
+	movw	1,x, start
+  75:	18 05 01 00 	movw	1,X, 0 <start>
+  79:	00 
+	movb	start, 1,\+x
+  7a:	18 09 20 00 	movb	0 <start>, 1,\+X
+  7e:	00 
+	movb	start, 1,\-x
+  7f:	18 09 2f 00 	movb	0 <start>, 1,\-X
+  83:	00 
+	movb	#23, 1,\-sp
+  84:	18 08 af 17 	movb	#23, 1,\-SP
+	movb	L1, L2
+  88:	18 0c 00 00 	movb	0 <start>, 0 <start>
+  8c:	00 00 
+	movb	L1, a,x
+  8e:	18 09 e4 00 	movb	0 <start>, A,X
+  92:	00 
+	movw	L1, b,x
+  93:	18 01 e5 00 	movw	0 <start>, B,X
+  97:	00 
+	movw	L1, d,x
+  98:	18 01 e6 00 	movw	0 <start>, D,X
+  9c:	00 
+	movw	d,x, a,x
+  9d:	18 02 e6 e4 	movw	D,X, A,X
+	movw	b,sp, d,pc
+  a1:	18 02 f5 fe 	movw	B,SP, D,PC
+	movw	b,sp, L1
+  a5:	18 05 f5 00 	movw	B,SP, 0 <start>
+  a9:	00 
+	movw	b,sp, 1,x
+  aa:	18 02 f5 01 	movw	B,SP, 1,X
+	movw	d,x, a,y
+  ae:	18 02 e6 ec 	movw	D,X, A,Y
+	trap	#0x30
+  b2:	18 30       	trap	#48
+	trap	#0x39
+  b4:	18 39       	trap	#57
+	trap	#0x40
+  b6:	18 40       	trap	#64
+	trap	#0x80
+  b8:	18 80       	trap	#128
+	trap	#255
+  ba:	18 ff       	trap	#255
+
+0+bc <L2>:
+L2:	
+	movw 1,x,2,x
+  bc:	18 02 01 02 	movw	1,X, 2,X
+	movw \-1,\-1
+  c0:	18 04 ff ff 	movw	ffff <bb\+0xd7ff>, ffff <bb\+0xd7ff>
+  c4:	ff ff 
+	movw \-1,1,x
+  c6:	18 01 01 ff 	movw	ffff <bb\+0xd7ff>, 1,X
+  ca:	ff 
+	movw #\-1,1,x
+  cb:	18 00 01 ff 	movw	#ffff <bb\+0xd7ff>, 1,X
+  cf:	ff 
+	movw 3,8
+  d0:	18 04 00 03 	movw	3 <start\+0x3>, 8 <start\+0x8>
+  d4:	00 08 
+	movw #3,3
+  d6:	18 03 00 03 	movw	#3 <start\+0x3>, 3 <start\+0x3>
+  da:	00 03 
+	movw #3,1,x
+  dc:	18 00 01 00 	movw	#3 <start\+0x3>, 1,X
+  e0:	03 
+	movw 3,1,x
+  e1:	18 01 01 00 	movw	3 <start\+0x3>, 1,X
+  e5:	03 
+	movw 3,\+2,x
+  e6:	18 01 02 00 	movw	3 <start\+0x3>, 2,X
+  ea:	03 
+	movw 4,\-2,x
+  eb:	18 01 1e 00 	movw	4 <start\+0x4>, \-2,X
+  ef:	04 
+	rts
+  f0:	3d          	rts
+
+0+f1 <post_indexed_pb>:
+;;
+;; Post\-index byte with relocation
+;; 
+post_indexed_pb:
+t1:
+	leas	abort,x
+  f1:	1b e2 00 00 	leas	0,X
+
+0+f5 <t2>:
+t2:
+	leax	t2\-t1,y
+  f5:	1a 44       	leax	4,Y
+	leax	toto,x
+  f7:	1a e0 64    	leax	100,X
+	leas	toto\+titi,sp
+  fa:	1b f0 6e    	leas	110,SP
+	leay	titi,x
+  fd:	19 0a       	leay	10,X
+	leas	bb,y
+  ff:	1b ea 28 00 	leas	10240,Y
+	leas	min5b,pc
+ 103:	1b d0       	leas	-16,PC \{f5 <t2>\}
+	leas	max5b,pc
+ 105:	1b cf       	leas	15,PC \{116 <t2\+0x21>\}
+	leas	min9b,pc
+ 107:	1b fa ff 00 	leas	-256,PC \{b <L1\+0x2>\}
+	leas	max9b,pc
+ 10b:	1b f8 ff    	leas	255,PC \{20d <L0\+0xd9>\}
+
+;;
+;; Disassembler bug with movb
+;;
+	movb	#23,0x2345
+ 10e:	18 0b 17 23 	movb	#23, 2345 <L0\+0x2211>
+ 112:	45 
+	movb	#40,12,sp
+ 113:	18 08 8c 28 	movb	#40, 12,SP
+	movb	#39,3,\+sp
+ 117:	18 08 a2 27 	movb	#39, 3,\+SP
+	movb	#20,14,sp
+ 11b:	18 08 8e 14 	movb	#20, 14,SP
+	movw	#0x3210,0x3456
+ 11f:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
+ 123:	34 56 
+	movw	#0x4040,12,sp
+ 125:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
+ 129:	40 
+	movw	#0x3900,3,\+sp
+ 12a:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
+ 12e:	00 
+	movw	#0x2000,14,sp
+ 12f:	18 00 8e 20 	movw	#2000 <L0\+0x1ecc>, 14,SP
+ 133:	00 
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/opers12.d binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12.d
--- binutils-2.20/gas/testsuite/gas/mc9s12x/opers12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,113 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 specific addressing modes (opers12)
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+0+0+ <start> anda	\[12,X\]
+0+0004 <start\+0x4> ldaa	#10
+0+0006 <start\+0x6> ldx	0+0+ <start>
+[	]+7: R_M68HC12_16	L1
+0+0009 <L1> ldy	0,X
+0+000b <L1\+0x2> addd	1,Y
+0+000d <L1\+0x4> subd	\-1,Y
+0+000f <L1\+0x6> eora	15,Y
+0+0011 <L1\+0x8> eora	\-16,Y
+0+0013 <L1\+0xa> eorb	16,Y
+0+0016 <L1\+0xd> eorb	\-17,Y
+0+0019 <L1\+0x10> oraa	128,SP
+0+001c <L1\+0x13> orab	\-128,SP
+0+001f <L1\+0x16> orab	255,X
+0+0022 <L1\+0x19> orab	\-256,X
+0+0025 <L1\+0x1c> anda	256,X
+0+0029 <L1\+0x20> andb	\-257,X
+0+002d <L1\+0x24> anda	\[12,X\]
+0+0031 <L1\+0x28> ldaa	\[257,Y\]
+0+0035 <L1\+0x2c> ldab	\[32767,SP\]
+0+0039 <L1\+0x30> ldd	\[32768,PC\]
+0+003d <L1\+0x34> ldd	\-55,PC \{0+9 <L1>\}
+0+0040 <L1\+0x37> std	A,X
+0+0042 <L1\+0x39> ldx	B,X
+0+0044 <L1\+0x3b> stx	D,Y
+0+0046 <L1\+0x3d> addd	1,\+X
+0+0048 <L1\+0x3f> addd	2,\+X
+0+004a <L1\+0x41> addd	8,\+X
+0+004c <L1\+0x43> addd	1,SP\+
+0+004e <L1\+0x45> addd	2,SP\+
+0+0050 <L1\+0x47> addd	8,SP\+
+0+0052 <L1\+0x49> subd	1,\-Y
+0+0054 <L1\+0x4b> subd	2,\-Y
+0+0056 <L1\+0x4d> subd	8,\-Y
+0+0058 <L1\+0x4f> addd	1,Y\-
+0+005a <L1\+0x51> addd	2,Y\-
+0+005c <L1\+0x53> addd	8,Y\-
+0+005e <L1\+0x55> std	\[D,X\]
+0+0060 <L1\+0x57> std	\[D,Y\]
+0+0062 <L1\+0x59> std	\[D,SP\]
+0+0064 <L1\+0x5b> std	\[D,PC\]
+0+0066 <L1\+0x5d> beq	0+0009 <L1>
+[	]+66: R_M68HC12_RL_JUMP	\*ABS\*
+0+0068 <L1\+0x5f> lbeq	0+0+ <start>
+[	]+68: R_M68HC12_RL_JUMP	\*ABS\*
+0+006c <L1\+0x63> lbcc	0+00bc <L2>
+[	]+6c: R_M68HC12_RL_JUMP	\*ABS\*
+0+0070 <L1\+0x67> movb	0+0+ <start>, 1,X
+[	]+73: R_M68HC12_16	start
+0+0075 <L1\+0x6c> movw	1,X, 0+0+ <start>
+[	]+78: R_M68HC12_16	start
+0+007a <L1\+0x71> movb	0+0+ <start>, 1,\+X
+[	]+7d: R_M68HC12_16	start
+0+007f <L1\+0x76> movb	0+0+ <start>, 1,\-X
+[	]+82: R_M68HC12_16	start
+0+0084 <L1\+0x7b> movb	#23, 1,\-SP
+0+0088 <L1\+0x7f> movb	0+0+ <start>, 0+0+ <start>
+[	]+8a: R_M68HC12_16	L1
+[	]+8c: R_M68HC12_16	L2
+0+008e <L1\+0x85> movb	0+0+ <start>, A,X
+[	]+91: R_M68HC12_16	L1
+0+0093 <L1\+0x8a> movw	0+0+ <start>, B,X
+[	]+96: R_M68HC12_16	L1
+0+0098 <L1\+0x8f> movw	0+0+ <start>, D,X
+[	]+9b: R_M68HC12_16	L1
+0+009d <L1\+0x94> movw	D,X, A,X
+0+00a1 <L1\+0x98> movw	B,SP, D,PC
+0+00a5 <L1\+0x9c> movw	B,SP, 0+0+ <start>
+[	]+a8: R_M68HC12_16	L1
+0+00aa <L1\+0xa1> movw	B,SP, 1,X
+0+00ae <L1\+0xa5> movw	D,X, A,Y
+0+00b2 <L1\+0xa9> trap	#48
+0+00b4 <L1\+0xab> trap	#57
+0+00b6 <L1\+0xad> trap	#64
+0+00b8 <L1\+0xaf> trap	#128
+0+00ba <L1\+0xb1> trap	#255
+0+00bc <L2> movw	1,X, 2,X
+0+00c0 <L2\+0x4> movw	0+ffff <bb\+0xd7ff>, 0+ffff <bb\+0xd7ff>
+0+00c6 <L2\+0xa> movw	0+ffff <bb\+0xd7ff>, 1,X
+0+00cb <L2\+0xf> movw	#0+ffff <bb\+0xd7ff>, 1,X
+0+00d0 <L2\+0x14> movw	0+0003 <start\+0x3>, 0+0008 <start\+0x8>
+0+00d6 <L2\+0x1a> movw	#0+0003 <start\+0x3>, 0+0003 <start\+0x3>
+0+00dc <L2\+0x20> movw	#0+0003 <start\+0x3>, 1,X
+0+00e1 <L2\+0x25> movw	0+0003 <start\+0x3>, 1,X
+0+00e6 <L2\+0x2a> movw	0+0003 <start\+0x3>, 2,X
+0+00eb <L2\+0x2f> movw	0+0004 <start\+0x4>, \-2,X
+0+00f0 <L2\+0x34> rts
+0+00f1 <post_indexed_pb> leas	0,X
+[	]+f3: R_M68HC12_16	abort
+0+00f5 <t2> leax	4,Y
+0+00f7 <t2\+0x2> leax	100,X
+0+00fa <t2\+0x5> leas	110,SP
+0+00fd <t2\+0x8> leay	10,X
+0+00ff <t2\+0xa> leas	10240,Y
+0+0103 <t2\+0xe> leas	-16,PC \{0+f5 <t2>\}
+0+0105 <t2\+0x10> leas	15,PC \{0+116 <t2\+0x21>\}
+0+0107 <t2\+0x12> leas	-256,PC \{0+b <L1\+0x2>\}
+0+010b <t2\+0x16> leas	255,PC \{0+20d <max9b\+0x10e>\}
+0+010e <t2\+0x19> movb	#23, 0+2345 <max9b\+0x2246>
+0+0113 <t2\+0x1e> movb	#40, 12,SP
+0+0117 <t2\+0x22> movb	#39, 3,\+SP
+0+011b <t2\+0x26> movb	#20, 14,SP
+0+011f <t2\+0x2a> movw	#0+3210 <bb\+0xa10>, 0+3456 <bb\+0xc56>
+0+0125 <t2\+0x30> movw	#0+4040 <bb\+0x1840>, 12,SP
+0+012a <t2\+0x35> movw	#0+3900 <bb\+0x1100>, 3,\+SP
+0+012f <t2\+0x3a> movw	#0+2000 <max9b\+0x1f01>, 14,SP
diff -rupN binutils-2.20/gas/testsuite/gas/mc9s12x/opers12.s binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12.s
--- binutils-2.20/gas/testsuite/gas/mc9s12x/opers12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9s12x/opers12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,122 @@
+
+#
+# Try to verify all operand modes for 68HC12
+#
+	sect .text
+	globl start
+
+start:
+	anda	[12,x]		; Indexed indirect
+	ldaa	#10
+	ldx	L1
+L1:	ldy	,x
+	addd	1,y		; Offset from register
+	subd	-1,y
+	eora	15,y
+	eora	-16,y
+	eorb	16,y
+	eorb	-17,y
+	oraa	128,sp
+	orab	-128,sp
+	orab	255,x
+	orab	-256,x
+	anda	256,x
+	andb	-257,x
+	anda	[12,x]		; Indexed indirect (16-bit offset)
+	ldaa	[257,y]
+	ldab	[32767,sp]
+	ldd	[32768,pc]
+	ldd	L1,pc
+	std	a,x		; Two-reg index
+	ldx	b,x
+	stx	d,y
+	addd	1,+x		; Pre-Auto inc
+	addd	2,+x
+	addd	8,+x
+	addd	1,sp+		; Post-Auto inc
+	addd	2,sp+
+	addd	8,sp+
+	subd	1,-y		; Pre-Auto dec
+	subd	2,-y
+	subd	8,-y
+	addd	1,y-		; Post-Auto dec
+	addd	2,y-
+	addd	8,y-
+	std	[d,x]		; Indexed indirect with two reg index
+	std	[d,y]
+	std	[d,sp]
+	std	[d,pc]
+	beq	L1
+	lbeq	start
+	lbcc	L2
+;;
+;; Move insn with various operands
+;; 
+	movb	start, 1,x
+	movw	1,x, start
+	movb	start, 1,+x
+	movb	start, 1,-x
+	movb	#23, 1,-sp
+	movb	L1, L2
+	movb	L1, a,x
+	movw	L1, b,x
+	movw	L1, d,x
+	movw	d,x, a,x
+	movw	b,sp, d,pc
+	movw	b,sp, L1
+	movw	b,sp, 1,x
+	movw	d,x, a,y
+	trap	#0x30
+	trap	#0x39
+	trap	#0x40
+	trap	#0x80
+	trap	#255
+L2:	
+	movw 1,x,2,x
+	movw -1,-1
+	movw -1,1,x
+	movw #-1,1,x
+	movw 3,8
+	movw #3,3
+	movw #3,1,x
+	movw 3,1,x
+	movw 3,+2,x
+	movw 4,-2,x
+	rts
+;;
+;; Post-index byte with relocation
+;; 
+post_indexed_pb:
+t1:
+	leas	abort,x
+t2:
+	leax	t2-t1,y
+	leax	toto,x
+	leas	toto+titi,sp
+	leay	titi,x
+	leas	bb,y
+	leas	min5b,pc
+	leas	max5b,pc
+	leas	min9b,pc
+	leas	max9b,pc
+
+;;
+;; Disassembler bug with movb
+;;
+	movb	#23,0x2345
+	movb	#40,12,sp
+	movb	#39,3,+sp
+	movb	#20,14,sp
+	movw	#0x3210,0x3456
+	movw	#0x4040,12,sp
+	movw	#0x3900,3,+sp
+	movw	#0x2000,14,sp
+#	movb	#111,start
+
+titi = 10
+toto = 100
+min5b= -16
+max5b= 15
+min9b= -256
+max9b= 255
+bb = 10240
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-32.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-32.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-32.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-32.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mshort-double
+#name:	  Elf flags 68HC11 16-bit int, 32-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 0:\[abi=16-bit int, 32-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-64.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-64.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-64.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-16-64.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11
+#name:	  Elf flags 68HC11 16-bit int, 64-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 2:\[abi=16-bit int, 64-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-32.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-32.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-32.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-32.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mlong -mshort-double
+#name:	  Elf flags 68HC11 32-bit int, 32-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 1:\[abi=32-bit int, 32-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-64.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-64.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-64.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi-m68hc11-32-64.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,7 @@
+#objdump: -p
+#as:	  -m68hc11 -mlong
+#name:	  Elf flags 68HC11 32-bit int, 64-bit double
+#source:  abi.s
+
+.*: +file format elf32\-m68hc11
+private flags = 3:\[abi=32-bit int, 64-bit double, cpu=HC11\] \[memory=flat\]
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/abi.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/abi.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/abi.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,4 @@
+	.sect .text
+	.globl L1
+L1:
+	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/all_insns.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/all_insns.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/all_insns.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/all_insns.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,500 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: all_insns
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <L0> aba
+0+0001 <L1> abx
+0+0002 <L2> aby
+0+0004 <L3> adca	#103
+0+0006 <L4> adca	\*0+0+ <L0>
+			7: R_M68HC11_8	Z198
+0+0008 <L5> adca	105,x
+0+000a <L6> adca	0+0+ <L0>
+			b: R_M68HC11_16	symbol115
+0+000d <L7> adca	81,x
+0+000f <L8> adcb	#255
+0+0011 <L9> adcb	\*0+0+ <L0>
+			12: R_M68HC11_8	Z74
+0+0013 <L10> adcb	236,x
+0+0015 <L11> adcb	0+0+ <L0>
+			16: R_M68HC11_16	symbol41
+0+0018 <L12> adcb	205,x
+0+001a <L13> adda	#186
+0+001c <L14> adda	\*0+0+ <L0>
+			1d: R_M68HC11_8	Z171
+0+001e <L15> adda	242,x
+0+0020 <L16> adda	0+0+ <L0>
+			21: R_M68HC11_16	symbol251
+0+0023 <L17> adda	227,x
+0+0025 <L18> addb	#70
+0+0027 <L19> addb	\*0+0+ <L0>
+			28: R_M68HC11_8	Z124
+0+0029 <L20> addb	194,x
+0+002b <L21> addb	0+0+ <L0>
+			2c: R_M68HC11_16	symbol84
+0+002e <L22> addb	248,x
+0+0030 <L23> addd	#0+231b <L330\+0x2034>
+0+0033 <L24> addd	\*0+0+ <L0>
+			34: R_M68HC11_8	Z232
+0+0035 <L25> addd	231,x
+0+0037 <L26> addd	0+0+ <L0>
+			38: R_M68HC11_16	symbol141
+0+003a <L27> addd	118,x
+0+003c <L28> anda	#90
+0+003e <L29> anda	\*0+0+ <L0>
+			3f: R_M68HC11_8	Z46
+0+0040 <L30> anda	99,x
+0+0042 <L31> anda	0+0+ <L0>
+			43: R_M68HC11_16	symbol51
+0+0045 <L32> anda	159,x
+0+0047 <L33> andb	#201
+0+0049 <L34> andb	\*0+0+ <L0>
+			4a: R_M68HC11_8	Z154
+0+004b <L35> andb	102,x
+0+004d <L36> andb	0+0+ <L0>
+			4e: R_M68HC11_16	symbol50
+0+0050 <L37> andb	13,x
+0+0052 <L38> asl	183,x
+0+0054 <L39> asl	0+0+ <L0>
+			55: R_M68HC11_16	symbol49
+0+0057 <L40> asl	88,x
+0+0059 <L41> asla
+0+005a <L42> aslb
+0+005b <L43> asld
+0+005c <L44> asr	163,x
+0+005e <L45> asr	0+0+ <L0>
+			5f: R_M68HC11_16	symbol90
+0+0061 <L46> asr	37,x
+0+0063 <L47> asra
+0+0064 <L48> asrb
+0+0065 <L49> bcs	0+006a <L50>
+			65: R_M68HC11_RL_JUMP	\*ABS\*
+0+0067 <L49\+0x2> jmp	0+0+ <L0>
+			68: R_M68HC11_16	L93
+0+006a <L50> bclr	\*0+0+ <L0> #\$00
+			6b: R_M68HC11_8	Z5
+			6c: R_M68HC11_8	\$17
+0+006d <L51> bclr	88,x #\$00
+			6f: R_M68HC11_8	\$e9
+0+0070 <L52> bclr	94,x #\$00
+			72: R_M68HC11_8	\$d4
+0+0073 <L53> bcc	0+0078 <L54>
+			73: R_M68HC11_RL_JUMP	\*ABS\*
+0+0075 <L53\+0x2> jmp	0+0+ <L0>
+			76: R_M68HC11_16	L171
+0+0078 <L54> bne	0+007d <L55>
+			78: R_M68HC11_RL_JUMP	\*ABS\*
+0+007a <L54\+0x2> jmp	0+0+ <L0>
+			7b: R_M68HC11_16	L178
+0+007d <L55> blt	0+0082 <L56>
+			7d: R_M68HC11_RL_JUMP	\*ABS\*
+0+007f <L55\+0x2> jmp	0+0+ <L0>
+			80: R_M68HC11_16	L205
+0+0082 <L56> ble	0+0087 <L57>
+			82: R_M68HC11_RL_JUMP	\*ABS\*
+0+0084 <L56\+0x2> jmp	0+0+ <L0>
+			85: R_M68HC11_16	L198
+0+0087 <L57> bls	0+008c <L58>
+			87: R_M68HC11_RL_JUMP	\*ABS\*
+0+0089 <L57\+0x2> jmp	0+0+ <L0>
+			8a: R_M68HC11_16	L155
+0+008c <L58> bcs	0+0091 <L59>
+			8c: R_M68HC11_RL_JUMP	\*ABS\*
+0+008e <L58\+0x2> jmp	0+0+ <L0>
+			8f: R_M68HC11_16	L180
+0+0091 <L59> bita	#84
+0+0093 <L60> bita	\*0+0+ <L0>
+			94: R_M68HC11_8	Z17
+0+0095 <L61> bita	14,x
+0+0097 <L62> bita	0+0+ <L0>
+			98: R_M68HC11_16	symbol130
+0+009a <L63> bita	116,x
+0+009c <L64> bitb	#65
+0+009e <L65> bitb	\*0+0+ <L0>
+			9f: R_M68HC11_8	Z33
+0+00a0 <L66> bitb	61,x
+0+00a2 <L67> bitb	0+0+ <L0>
+			a3: R_M68HC11_16	symbol220
+0+00a5 <L68> bitb	135,x
+0+00a7 <L69> ble	0+011d <L112>
+			a7: R_M68HC11_RL_JUMP	\*ABS\*
+0+00a9 <L70> bcc	0+00ae <L71>
+			a9: R_M68HC11_RL_JUMP	\*ABS\*
+0+00ab <L70\+0x2> jmp	0+0+ <L0>
+			ac: R_M68HC11_16	L233
+0+00ae <L71> bls	0+0097 <L62>
+			ae: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b0 <L72> bge	0+00b5 <L73>
+			b0: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b2 <L72\+0x2> jmp	0+0+ <L0>
+			b3: R_M68HC11_16	L161
+0+00b5 <L73> bmi	0+009e <L65>
+			b5: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b7 <L74> beq	0+00bc <L75>
+			b7: R_M68HC11_RL_JUMP	\*ABS\*
+0+00b9 <L74\+0x2> jmp	0+0+ <L0>
+			ba: R_M68HC11_16	L225
+0+00bc <L75> bmi	0+00c1 <L76>
+			bc: R_M68HC11_RL_JUMP	\*ABS\*
+0+00be <L75\+0x2> jmp	0+0+ <L0>
+			bf: R_M68HC11_16	L252
+0+00c1 <L76> bra	0+0106 <L103>
+			c1: R_M68HC11_RL_JUMP	\*ABS\*
+0+00c3 <L77> brclr	\*0+0+ <L0> #\$00 0+0145 <L125\+0x2>
+			c3: R_M68HC11_RL_JUMP	\*ABS\*
+			c4: R_M68HC11_8	Z62
+			c5: R_M68HC11_8	\$01
+0+00c7 <L78> brclr	151,x #\$00 0+0127 <L115>
+			c7: R_M68HC11_RL_JUMP	\*ABS\*
+			c9: R_M68HC11_8	\$ea
+0+00cb <L79> brclr	107,x #\$00 0+00de <L84\+0x1>
+			cb: R_M68HC11_RL_JUMP	\*ABS\*
+			cd: R_M68HC11_8	\$96
+0+00cf <L80> brn	0+0082 <L56>
+			cf: R_M68HC11_RL_JUMP	\*ABS\*
+0+00d1 <L81> brset	\*0+0+ <L0> #\$00 0+0141 <L124>
+			d1: R_M68HC11_RL_JUMP	\*ABS\*
+			d2: R_M68HC11_8	Z92
+			d3: R_M68HC11_8	\$2a
+0+00d5 <L82> brset	176,x #\$00 0+0154 <L132>
+			d5: R_M68HC11_RL_JUMP	\*ABS\*
+			d7: R_M68HC11_8	\$3b
+0+00d9 <L83> brset	50,x #\$00 0+0119 <L110\+0x2>
+			d9: R_M68HC11_RL_JUMP	\*ABS\*
+			db: R_M68HC11_8	\$af
+0+00dd <L84> bset	\*0+0+ <L0> #\$00
+			de: R_M68HC11_8	Z84
+			df: R_M68HC11_8	\$ec
+0+00e0 <L85> bset	24,x #\$00
+			e2: R_M68HC11_8	\$db
+0+00e3 <L86> bset	92,x #\$00
+			e5: R_M68HC11_8	\$02
+0+00e6 <L87> jsr	0+0+ <L0>
+			e6: R_M68HC11_RL_JUMP	\*ABS\*
+			e7: R_M68HC11_16	L26
+0+00e9 <L88> bvs	0+00ee <L89>
+			e9: R_M68HC11_RL_JUMP	\*ABS\*
+0+00eb <L88\+0x2> jmp	0+0+ <L0>
+			ec: R_M68HC11_16	L254
+0+00ee <L89> bvs	0+00a2 <L67>
+			ee: R_M68HC11_RL_JUMP	\*ABS\*
+0+00f0 <L90> cba
+0+00f1 <L91> clc
+0+00f2 <L92> cli
+0+00f3 <L93> clr	251,x
+0+00f5 <L94> clr	0+0+ <L0>
+			f6: R_M68HC11_16	symbol250
+0+00f8 <L95> clr	170,x
+0+00fa <L96> clra
+0+00fb <L97> clrb
+0+00fc <L98> clv
+0+00fd <L99> cmpa	#58
+0+00ff <L100> cmpa	\*0+0+ <L0>
+			100: R_M68HC11_8	Z251
+0+0101 <L101> cmpa	41,x
+0+0103 <L102> cmpa	0+0+ <L0>
+			104: R_M68HC11_16	symbol209
+0+0106 <L103> cmpa	230,x
+0+0108 <L104> cmpb	#5
+0+010a <L105> cmpb	\*0+0+ <L0>
+			10b: R_M68HC11_8	Z60
+0+010c <L106> cmpb	124,x
+0+010e <L107> cmpb	0+0+ <L0>
+			10f: R_M68HC11_16	symbol148
+0+0111 <L108> cmpb	117,x
+0+0113 <L109> cpd	#0+0fd8 <L330\+0xcf1>
+0+0117 <L110> cpd	\*0+0+ <L0>
+			119: R_M68HC11_8	Z190
+0+011a <L111> cpd	97,x
+0+011d <L112> cpd	0+0+ <L0>
+			11f: R_M68HC11_16	symbol137
+0+0121 <L113> cpd	249,x
+0+0124 <L114> cpx	#0+af5c <L330\+0xac75>
+0+0127 <L115> cpx	\*0+0+ <L0>
+			128: R_M68HC11_8	Z187
+0+0129 <L116> cpx	168,x
+0+012b <L117> cpx	0+0+ <L0>
+			12c: R_M68HC11_16	symbol153
+0+012e <L118> cpx	15,x
+0+0130 <L119> cpy	#0+4095 <L330\+0x3dae>
+0+0134 <L120> cpy	\*0+0+ <L0>
+			136: R_M68HC11_8	Z177
+0+0137 <L121> cpy	235,x
+0+013a <L122> cpy	0+0+ <L0>
+			13c: R_M68HC11_16	symbol241
+0+013e <L123> cpy	179,x
+0+0141 <L124> com	5,x
+0+0143 <L125> com	0+0+ <L0>
+			144: R_M68HC11_16	symbol239
+0+0146 <L126> com	247,x
+0+0148 <L127> coma
+0+0149 <L128> comb
+0+014a <L129> cpd	#0+bf00 <L330\+0xbc19>
+0+014e <L130> cpd	\*0+0+ <L0>
+			150: R_M68HC11_8	Z233
+0+0151 <L131> cpd	161,x
+0+0154 <L132> cpd	0+0+ <L0>
+			156: R_M68HC11_16	symbol58
+0+0158 <L133> cpd	229,x
+0+015b <L134> cpx	#0+8fca <L330\+0x8ce3>
+0+015e <L135> cpx	\*0+0+ <L0>
+			15f: R_M68HC11_8	Z11
+0+0160 <L136> cpx	203,x
+0+0162 <L137> cpx	0+0+ <L0>
+			163: R_M68HC11_16	symbol208
+0+0165 <L138> cpx	72,x
+0+0167 <L139> cpy	#0+0247 <L248>
+0+016b <L140> cpy	\*0+0+ <L0>
+			16d: R_M68HC11_8	Z100
+0+016e <L141> cpy	189,x
+0+0171 <L142> cpy	0+0+ <L0>
+			173: R_M68HC11_16	symbol31
+0+0175 <L143> cpy	35,x
+0+0178 <L144> daa
+0+0179 <L145> dec	30,x
+0+017b <L146> dec	0+0+ <L0>
+			17c: R_M68HC11_16	symbol168
+0+017e <L147> dec	28,x
+0+0180 <L148> deca
+0+0181 <L149> decb
+0+0182 <L150> des
+0+0183 <L151> dex
+0+0184 <L152> dey
+0+0186 <L153> eora	#123
+0+0188 <L154> eora	\*0+0+ <L0>
+			189: R_M68HC11_8	Z100
+0+018a <L155> eora	197,x
+0+018c <L156> eora	0+0+ <L0>
+			18d: R_M68HC11_16	symbol20
+0+018f <L157> eora	115,x
+0+0191 <L158> eorb	#90
+0+0193 <L159> eorb	\*0+0+ <L0>
+			194: R_M68HC11_8	Z197
+0+0195 <L160> eorb	94,x
+0+0197 <L161> eorb	0+0+ <L0>
+			198: R_M68HC11_16	symbol75
+0+019a <L162> eorb	121,x
+0+019c <L163> fdiv
+0+019d <L164> idiv
+0+019e <L165> inc	99,x
+0+01a0 <L166> inc	0+0+ <L0>
+			1a1: R_M68HC11_16	symbol59
+0+01a3 <L167> inc	112,x
+0+01a5 <L168> inca
+0+01a6 <L169> incb
+0+01a7 <L170> ins
+0+01a8 <L171> inx
+0+01a9 <L172> iny
+0+01ab <L173> jmp	100,x
+0+01ad <L174> jmp	0+0+ <L0>
+			1ad: R_M68HC11_RL_JUMP	\*ABS\*
+			1ae: R_M68HC11_16	symbol36
+0+01b0 <L175> jmp	17,x
+0+01b2 <L176> jsr	\*0+0+ <L0>
+			1b2: R_M68HC11_RL_JUMP	\*ABS\*
+			1b3: R_M68HC11_8	Z158
+0+01b4 <L177> jsr	9,x
+0+01b6 <L178> jsr	0+0+ <L0>
+			1b6: R_M68HC11_RL_JUMP	\*ABS\*
+			1b7: R_M68HC11_16	symbol220
+0+01b9 <L179> jsr	170,x
+0+01bb <L180> ldaa	#212
+0+01bd <L181> ldaa	\*0+0+ <L0>
+			1be: R_M68HC11_8	Z172
+0+01bf <L182> ldaa	242,x
+0+01c1 <L183> ldaa	0+0+ <L0>
+			1c2: R_M68HC11_16	symbol27
+0+01c4 <L184> ldaa	16,x
+0+01c6 <L185> ldab	#175
+0+01c8 <L186> ldab	\*0+0+ <L0>
+			1c9: R_M68HC11_8	Z59
+0+01ca <L187> ldab	51,x
+0+01cc <L188> ldab	0+0+ <L0>
+			1cd: R_M68HC11_16	symbol205
+0+01cf <L189> ldab	227,x
+0+01d1 <L190> ldd	#0+c550 <L330\+0xc269>
+0+01d4 <L191> ldd	\*0+0+ <L0>
+			1d5: R_M68HC11_8	Z72
+0+01d6 <L192> ldd	71,x
+0+01d8 <L193> ldd	0+0+ <L0>
+			1d9: R_M68HC11_16	symbol21
+0+01db <L194> ldd	92,x
+0+01dd <L195> lds	#0+4fbb <L330\+0x4cd4>
+0+01e0 <L196> lds	\*0+0+ <L0>
+			1e1: R_M68HC11_8	Z111
+0+01e2 <L197> lds	34,x
+0+01e4 <L198> lds	0+0+ <L0>
+			1e5: R_M68HC11_16	symbol25
+0+01e7 <L199> lds	186,x
+0+01e9 <L200> ldx	#0+579b <L330\+0x54b4>
+0+01ec <L201> ldx	\*0+0+ <L0>
+			1ed: R_M68HC11_8	Z125
+0+01ee <L202> ldx	245,x
+0+01f0 <L203> ldx	0+0+ <L0>
+			1f1: R_M68HC11_16	symbol11
+0+01f3 <L204> ldx	225,x
+0+01f5 <L205> ldy	#0+ac1a <L330\+0xa933>
+0+01f9 <L206> ldy	\*0+0+ <L0>
+			1fb: R_M68HC11_8	Z28
+0+01fc <L207> ldy	127,x
+0+01ff <L208> ldy	0+0+ <L0>
+			201: R_M68HC11_16	symbol35
+0+0203 <L209> ldy	248,x
+0+0206 <L210> asl	41,x
+0+0208 <L211> asl	0+0+ <L0>
+			209: R_M68HC11_16	symbol248
+0+020b <L212> asl	164,x
+0+020d <L213> asla
+0+020e <L214> aslb
+0+020f <L215> asld
+0+0210 <L216> lsr	27,x
+0+0212 <L217> lsr	0+0+ <L0>
+			213: R_M68HC11_16	symbol19
+0+0215 <L218> lsr	181,x
+0+0217 <L219> lsra
+0+0218 <L220> lsrb
+0+0219 <L221> lsrd
+0+021a <L222> mul
+0+021b <L223> neg	202,x
+0+021d <L224> neg	0+0+ <L0>
+			21e: R_M68HC11_16	symbol78
+0+0220 <L225> neg	232,x
+0+0222 <L226> nega
+0+0223 <L227> negb
+0+0224 <L228> nop
+0+0225 <L229> oraa	#152
+0+0227 <L230> oraa	\*0+0+ <L0>
+			228: R_M68HC11_8	Z50
+0+0229 <L231> oraa	56,x
+0+022b <L232> oraa	0+0+ <L0>
+			22c: R_M68HC11_16	symbol224
+0+022e <L233> oraa	121,x
+0+0230 <L234> orab	#77
+0+0232 <L235> orab	\*0+0+ <L0>
+			233: R_M68HC11_8	Z61
+0+0234 <L236> orab	52,x
+0+0236 <L237> orab	0+0+ <L0>
+			237: R_M68HC11_16	symbol188
+0+0239 <L238> orab	95,x
+0+023b <L239> psha
+0+023c <L240> pshb
+0+023d <L241> pshx
+0+023e <L242> pshy
+0+0240 <L243> pula
+0+0241 <L244> pulb
+0+0242 <L245> pulx
+0+0243 <L246> puly
+0+0245 <L247> rol	78,x
+0+0247 <L248> rol	0+0+ <L0>
+			248: R_M68HC11_16	symbol119
+0+024a <L249> rol	250,x
+0+024c <L250> rola
+0+024d <L251> rolb
+0+024e <L252> ror	203,x
+0+0250 <L253> ror	0+0+ <L0>
+			251: R_M68HC11_16	symbol108
+0+0253 <L254> ror	5,x
+0+0255 <L255> rora
+0+0256 <L256> rorb
+0+0257 <L257> rti
+0+0258 <L258> rts
+0+0259 <L259> sba
+0+025a <L260> sbca	#172
+0+025c <L261> sbca	\*0+0+ <L0>
+			25d: R_M68HC11_8	Z134
+0+025e <L262> sbca	33,x
+0+0260 <L263> sbca	0+0+ <L0>
+			261: R_M68HC11_16	symbol43
+0+0263 <L264> sbca	170,x
+0+0265 <L265> sbcb	#26
+0+0267 <L266> sbcb	\*0+0+ <L0>
+			268: R_M68HC11_8	Z85
+0+0269 <L267> sbcb	162,x
+0+026b <L268> sbcb	0+0+ <L0>
+			26c: R_M68HC11_16	symbol190
+0+026e <L269> sbcb	112,x
+0+0270 <L270> sec
+0+0271 <L271> sei
+0+0272 <L272> sev
+0+0273 <L273> staa	\*0+0+ <L0>
+			274: R_M68HC11_8	Z181
+0+0275 <L274> staa	115,x
+0+0277 <L275> staa	0+0+ <L0>
+			278: R_M68HC11_16	symbol59
+0+027a <L276> staa	4,x
+0+027c <L277> stab	\*0+0+ <L0>
+			27d: R_M68HC11_8	Z92
+0+027e <L278> stab	211,x
+0+0280 <L279> stab	0+0+ <L0>
+			281: R_M68HC11_16	symbol54
+0+0283 <L280> stab	148,x
+0+0285 <L281> std	\*0+0+ <L0>
+			286: R_M68HC11_8	Z179
+0+0287 <L282> std	175,x
+0+0289 <L283> std	0+0+ <L0>
+			28a: R_M68HC11_16	symbol226
+0+028c <L284> std	240,x
+0+028e <L285> stop
+0+028f <L286> sts	\*0+0+ <L0>
+			290: R_M68HC11_8	Z228
+0+0291 <L287> sts	158,x
+0+0293 <L288> sts	0+0+ <L0>
+			294: R_M68HC11_16	symbol79
+0+0296 <L289> sts	50,x
+0+0298 <L290> stx	\*0+0+ <L0>
+			299: R_M68HC11_8	Z21
+0+029a <L291> stx	73,x
+0+029c <L292> stx	0+0+ <L0>
+			29d: R_M68HC11_16	symbol253
+0+029f <L293> stx	130,x
+0+02a1 <L294> sty	\*0+0+ <L0>
+			2a3: R_M68HC11_8	Z78
+0+02a4 <L295> sty	169,x
+0+02a7 <L296> sty	0+0+ <L0>
+			2a9: R_M68HC11_16	symbol8
+0+02ab <L297> sty	112,x
+0+02ae <L298> suba	#212
+0+02b0 <L299> suba	\*0+0+ <L0>
+			2b1: R_M68HC11_8	Z178
+0+02b2 <L300> suba	138,x
+0+02b4 <L301> suba	0+0+ <L0>
+			2b5: R_M68HC11_16	symbol41
+0+02b7 <L302> suba	84,x
+0+02b9 <L303> subb	#72
+0+02bb <L304> subb	\*0+0+ <L0>
+			2bc: R_M68HC11_8	Z154
+0+02bd <L305> subb	10,x
+0+02bf <L306> subb	0+0+ <L0>
+			2c0: R_M68HC11_16	symbol188
+0+02c2 <L307> subb	213,x
+0+02c4 <L308> subd	#0+f10e <L330\+0xee27>
+0+02c7 <L309> subd	\*0+0+ <L0>
+			2c8: R_M68HC11_8	Z24
+0+02c9 <L310> subd	168,x
+0+02cb <L311> subd	0+0+ <L0>
+			2cc: R_M68HC11_16	symbol68
+0+02ce <L312> subd	172,x
+0+02d0 <L313> swi
+0+02d1 <L314> tab
+0+02d2 <L315> tap
+0+02d3 <L316> tba
+	...
+0+02d5 <L318> tpa
+0+02d6 <L319> tst	91,x
+0+02d8 <L320> tst	0+0+ <L0>
+			2d9: R_M68HC11_16	symbol243
+0+02db <L321> tst	142,x
+0+02dd <L322> tsta
+0+02de <L323> tstb
+0+02df <L324> tsx
+0+02e0 <L325> tsy
+0+02e2 <L326> txs
+0+02e3 <L327> tys
+0+02e5 <L328> wai
+0+02e6 <L329> xgdx
+0+02e7 <L330> xgdy
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/all_insns.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/all_insns.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/all_insns.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/all_insns.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,101 @@
+;# Example of XGATE instructions
+
+_start:
+L0:	ADC R6, R2, R2
+L1:	ADD R6, R2, R2
+L2:	ADDL R2, #5
+L3: ADDH R2, #5
+L4:	AND R6, R2, R2
+L5: ANDH R6, #5
+L6: ANDL R4, #5
+L7: ASR R3, #5
+L8: ASR R2, R7
+L9: BCC L2
+L10:	BCS L3
+L11:	BEQ L4
+L12:	BFEXT R1, R2, R5
+L13:	BFFO R2, R4
+L14:	BFINS R3, R1, R2
+L15:	BFINSI R1, R4, R2
+L16:	BFINSX R5, R1, R2
+L17:	BGE L5
+L18:	BGT L6
+L19:	BHI L7
+L20:	BHS L8
+L21:	BITH R4, #5
+L22:	BITL R3, #5
+L23:	BLE L9
+L24:	BLO L10
+L25:	BLS L11
+L26:	BLT L12
+L27:	BMI L13
+L28:	BNE L14
+L29:	BPL L15
+L30:	BRA L16
+L31:	BRK
+L32:	BVC L17
+L33:	BVS L18
+L34:	CMP R1, R2
+L35:	CMPL R2, #5
+L36:	COM R1, R2
+L37:	COM R4
+L38:	CPC R1, R2
+L39:	CPCH R3, #5
+L40:	CSEM #2
+L41:	CSEM R3
+L42:	CSL R5, #3
+L43:	CSL R2, R6
+L44:	CSR R4, #3
+L45:	CSR R2, R6
+L46:	JAL R5
+L47:	LDB R2, (R4, #5)
+L48:	LDB R2, (R4, R2)
+L49:	LDB R2, (R4, R2+)
+L50:	LDB R2, (R4, -R2)
+L51:	LDH R2, #5
+L52:	LDL R2, #5
+L53:	LDW R2, (R1, #3)
+L54:	LDW R6, (R2, R5)
+L55:	LDW R2, (R4, R2+)
+L56:	LDW R2, (R4, -R2)
+L57:	LSL R2, #4
+L58:	LSL R2, R6
+L59:	LSR R2, #3
+L60:	LSR R2, R3
+L61:	MOV R2, R3
+L62:	NEG R2, R3
+L63:	NEG R2
+L64:	NOP
+L65:	OR R2, R4, R6
+L66:	ORH R2, #5
+L67:	ORL R2, #5
+L68:	PAR R2
+L69:	ROL R2, #3
+L70:	ROL R2, R5
+L71:	ROR R2, #3
+L72:	ROR R2, R3
+L73:	RTS
+L74:	SBC R2, R1, R2
+L75:	SSEM #2
+L76:	SSEM R2
+L77:	SEX R2
+L78:	SIF
+L79:	SIF R2
+L80:	STB R2, (R4, #5)
+L81:	STB R2, (R4, R2)
+L82:	STB R2, (R4, R2+)
+L83:	STB R2, (R4, -R2)
+L84:	STW R2, (R4, #5)
+L85:	STW R2, (R4, R2)
+L86:	STW R2, (R4, R2+)
+L87:	STW R2, (R4, -R2)
+L88:	SUB R2, R1, R2
+L89:	SUBH R2, #5
+L90:	SUBL R2, #5
+L91:    TFR R2, CCR
+L92:	TFR CCR, R5
+L93:	TFR R2, PC
+L94:	TST R6
+L95:	XNOR R2, R1, R2
+L96:	XNORH R2, #5
+L97:	XNORL R2, #5
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/branchs12.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/branchs12.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/branchs12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/branchs12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,225 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 branchs
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+0+00 <start> bgt	0+48 <L1>
+[	]+0: R_M68HC12_RL_JUMP	\*ABS\*
+0+02 <start\+0x2> bge	0+48 <L1>
+[	]+2: R_M68HC12_RL_JUMP	\*ABS\*
+0+04 <start\+0x4> ble	0+48 <L1>
+[	]+4: R_M68HC12_RL_JUMP	\*ABS\*
+0+06 <start\+0x6> blt	0+48 <L1>
+[	]+6: R_M68HC12_RL_JUMP	\*ABS\*
+0+08 <start\+0x8> bhi	0+48 <L1>
+[	]+8: R_M68HC12_RL_JUMP	\*ABS\*
+0+0a <start\+0xa> bcc	0+48 <L1>
+[	]+a: R_M68HC12_RL_JUMP	\*ABS\*
+0+0c <start\+0xc> bcc	0+48 <L1>
+[	]+c: R_M68HC12_RL_JUMP	\*ABS\*
+0+0e <start\+0xe> beq	0+48 <L1>
+[	]+e: R_M68HC12_RL_JUMP	\*ABS\*
+0+10 <start\+0x10> bls	0+48 <L1>
+[	]+10: R_M68HC12_RL_JUMP	\*ABS\*
+0+12 <start\+0x12> bcs	0+48 <L1>
+[	]+12: R_M68HC12_RL_JUMP	\*ABS\*
+0+14 <start\+0x14> bcs	0+48 <L1>
+[	]+14: R_M68HC12_RL_JUMP	\*ABS\*
+0+16 <start\+0x16> bmi	0+48 <L1>
+[	]+16: R_M68HC12_RL_JUMP	\*ABS\*
+0+18 <start\+0x18> bvs	0+48 <L1>
+[	]+18: R_M68HC12_RL_JUMP	\*ABS\*
+0+1a <start\+0x1a> bra	0+48 <L1>
+[	]+1a: R_M68HC12_RL_JUMP	\*ABS\*
+0+1c <start\+0x1c> bvc	0+48 <L1>
+[	]+1c: R_M68HC12_RL_JUMP	\*ABS\*
+0+1e <start\+0x1e> bne	0+48 <L1>
+[	]+1e: R_M68HC12_RL_JUMP	\*ABS\*
+0+20 <start\+0x20> bpl	0+48 <L1>
+[	]+20: R_M68HC12_RL_JUMP	\*ABS\*
+0+22 <start\+0x22> brn	0+48 <L1>
+[	]+22: R_M68HC12_RL_JUMP	\*ABS\*
+0+24 <start\+0x24> bgt	0+00 <start>
+[	]+24: R_M68HC12_RL_JUMP	\*ABS\*
+0+26 <start\+0x26> bge	0+00 <start>
+[	]+26: R_M68HC12_RL_JUMP	\*ABS\*
+0+28 <start\+0x28> ble	0+00 <start>
+[	]+28: R_M68HC12_RL_JUMP	\*ABS\*
+0+2a <start\+0x2a> blt	0+00 <start>
+[	]+2a: R_M68HC12_RL_JUMP	\*ABS\*
+0+2c <start\+0x2c> bhi	0+00 <start>
+[	]+2c: R_M68HC12_RL_JUMP	\*ABS\*
+0+2e <start\+0x2e> bcc	0+00 <start>
+[	]+2e: R_M68HC12_RL_JUMP	\*ABS\*
+0+30 <start\+0x30> bcc	0+00 <start>
+[	]+30: R_M68HC12_RL_JUMP	\*ABS\*
+0+32 <start\+0x32> beq	0+00 <start>
+[	]+32: R_M68HC12_RL_JUMP	\*ABS\*
+0+34 <start\+0x34> bls	0+00 <start>
+[	]+34: R_M68HC12_RL_JUMP	\*ABS\*
+0+36 <start\+0x36> bcs	0+00 <start>
+[	]+36: R_M68HC12_RL_JUMP	\*ABS\*
+0+38 <start\+0x38> bcs	0+00 <start>
+[	]+38: R_M68HC12_RL_JUMP	\*ABS\*
+0+3a <start\+0x3a> bmi	0+00 <start>
+[	]+3a: R_M68HC12_RL_JUMP	\*ABS\*
+0+3c <start\+0x3c> bvs	0+00 <start>
+[	]+3c: R_M68HC12_RL_JUMP	\*ABS\*
+0+3e <start\+0x3e> bra	0+00 <start>
+[	]+3e: R_M68HC12_RL_JUMP	\*ABS\*
+0+40 <start\+0x40> bvc	0+00 <start>
+[	]+40: R_M68HC12_RL_JUMP	\*ABS\*
+0+42 <start\+0x42> bne	0+00 <start>
+[	]+42: R_M68HC12_RL_JUMP	\*ABS\*
+0+44 <start\+0x44> bpl	0+00 <start>
+[	]+44: R_M68HC12_RL_JUMP	\*ABS\*
+0+46 <start\+0x46> brn	0+00 <start>
+[	]+46: R_M68HC12_RL_JUMP	\*ABS\*
+0+48 <L1> lbgt	0+1e7 <L2>
+[	]+48: R_M68HC12_RL_JUMP	\*ABS\*
+0+4c <L1\+0x4> lbge	0+1e7 <L2>
+[	]+4c: R_M68HC12_RL_JUMP	\*ABS\*
+0+50 <L1\+0x8> lble	0+1e7 <L2>
+[	]+50: R_M68HC12_RL_JUMP	\*ABS\*
+0+54 <L1\+0xc> lblt	0+1e7 <L2>
+[	]+54: R_M68HC12_RL_JUMP	\*ABS\*
+0+58 <L1\+0x10> lbhi	0+1e7 <L2>
+[	]+58: R_M68HC12_RL_JUMP	\*ABS\*
+0+5c <L1\+0x14> lbcc	0+1e7 <L2>
+[	]+5c: R_M68HC12_RL_JUMP	\*ABS\*
+0+60 <L1\+0x18> lbcc	0+1e7 <L2>
+[	]+60: R_M68HC12_RL_JUMP	\*ABS\*
+0+64 <L1\+0x1c> lbeq	0+1e7 <L2>
+[	]+64: R_M68HC12_RL_JUMP	\*ABS\*
+0+68 <L1\+0x20> lbls	0+1e7 <L2>
+[	]+68: R_M68HC12_RL_JUMP	\*ABS\*
+0+6c <L1\+0x24> lbcs	0+1e7 <L2>
+[	]+6c: R_M68HC12_RL_JUMP	\*ABS\*
+0+70 <L1\+0x28> lbcs	0+1e7 <L2>
+[	]+70: R_M68HC12_RL_JUMP	\*ABS\*
+0+74 <L1\+0x2c> lbmi	0+1e7 <L2>
+[	]+74: R_M68HC12_RL_JUMP	\*ABS\*
+0+78 <L1\+0x30> lbvs	0+1e7 <L2>
+[	]+78: R_M68HC12_RL_JUMP	\*ABS\*
+0+7c <L1\+0x34> lbra	0+1e7 <L2>
+[	]+7c: R_M68HC12_RL_JUMP	\*ABS\*
+0+80 <L1\+0x38> lbvc	0+1e7 <L2>
+[	]+80: R_M68HC12_RL_JUMP	\*ABS\*
+0+84 <L1\+0x3c> lbne	0+1e7 <L2>
+[	]+84: R_M68HC12_RL_JUMP	\*ABS\*
+0+88 <L1\+0x40> lbpl	0+1e7 <L2>
+[	]+88: R_M68HC12_RL_JUMP	\*ABS\*
+0+8c <L1\+0x44> lbrn	0+1e7 <L2>
+[	]+8c: R_M68HC12_RL_JUMP	\*ABS\*
+0+90 <L1\+0x48> lbgt	0+00 <start>
+[	]+90: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+92: R_M68HC12_PCREL_16	undefined
+0+94 <L1\+0x4c> lbge	0+00 <start>
+[	]+94: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+96: R_M68HC12_PCREL_16	undefined
+0+98 <L1\+0x50> lble	0+00 <start>
+[	]+98: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+9a: R_M68HC12_PCREL_16	undefined
+0+9c <L1\+0x54> lblt	0+00 <start>
+[	]+9c: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+9e: R_M68HC12_PCREL_16	undefined
+0+a0 <L1\+0x58> lbhi	0+00 <start>
+[	]+a0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+a2: R_M68HC12_PCREL_16	undefined
+0+a4 <L1\+0x5c> lbcc	0+00 <start>
+[	]+a4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+a6: R_M68HC12_PCREL_16	undefined
+0+a8 <L1\+0x60> lbcc	0+00 <start>
+[	]+a8: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+aa: R_M68HC12_PCREL_16	undefined
+0+ac <L1\+0x64> lbeq	0+00 <start>
+[	]+ac: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ae: R_M68HC12_PCREL_16	undefined
+0+b0 <L1\+0x68> lbls	0+00 <start>
+[	]+b0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+b2: R_M68HC12_PCREL_16	undefined
+0+b4 <L1\+0x6c> lbcs	0+00 <start>
+[	]+b4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+b6: R_M68HC12_PCREL_16	undefined
+0+b8 <L1\+0x70> lbcs	0+00 <start>
+[	]+b8: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ba: R_M68HC12_PCREL_16	undefined
+0+bc <L1\+0x74> lbmi	0+00 <start>
+[	]+bc: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+be: R_M68HC12_PCREL_16	undefined
+0+c0 <L1\+0x78> lbvs	0+00 <start>
+[	]+c0: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c2: R_M68HC12_PCREL_16	undefined
+0+c4 <L1\+0x7c> jmp	0+00 <start>
+[	]+c4: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c5: R_M68HC12_16	undefined
+0+c7 <L1\+0x7f> lbvc	0+00 <start>
+[	]+c7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+c9: R_M68HC12_PCREL_16	undefined
+0+cb <L1\+0x83> lbne	0+00 <start>
+[	]+cb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+cd: R_M68HC12_PCREL_16	undefined
+0+cf <L1\+0x87> lbpl	0+00 <start>
+[	]+cf: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d1: R_M68HC12_PCREL_16	undefined
+0+d3 <L1\+0x8b> lbrn	0+00 <start>
+[	]+d3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d5: R_M68HC12_PCREL_16	undefined
+0+d7 <L1\+0x8f> lbgt	0+10 <start\+0x10>
+[	]+d7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+d9: R_M68HC12_PCREL_16	undefined
+0+db <L1\+0x93> lbge	0+10 <start\+0x10>
+[	]+db: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+dd: R_M68HC12_PCREL_16	undefined
+0+df <L1\+0x97> lble	0+10 <start\+0x10>
+[	]+df: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e1: R_M68HC12_PCREL_16	undefined
+0+e3 <L1\+0x9b> lblt	0+10 <start\+0x10>
+[	]+e3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e5: R_M68HC12_PCREL_16	undefined
+0+e7 <L1\+0x9f> lbhi	0+10 <start\+0x10>
+[	]+e7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+e9: R_M68HC12_PCREL_16	undefined
+0+eb <L1\+0xa3> lbcc	0+10 <start\+0x10>
+[	]+eb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+ed: R_M68HC12_PCREL_16	undefined
+0+ef <L1\+0xa7> lbcc	0+10 <start\+0x10>
+[	]+ef: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f1: R_M68HC12_PCREL_16	undefined
+0+f3 <L1\+0xab> lbeq	0+10 <start\+0x10>
+[	]+f3: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f5: R_M68HC12_PCREL_16	undefined
+0+f7 <L1\+0xaf> lbls	0+10 <start\+0x10>
+[	]+f7: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+f9: R_M68HC12_PCREL_16	undefined
+0+fb <L1\+0xb3> lbcs	0+10 <start\+0x10>
+[	]+fb: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+fd: R_M68HC12_PCREL_16	undefined
+0+ff <L1\+0xb7> lbcs	0+10 <start\+0x10>
+[	]+ff: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+101: R_M68HC12_PCREL_16	undefined
+0+103 <L1\+0xbb> lbmi	0+10 <start\+0x10>
+[	]+103: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+105: R_M68HC12_PCREL_16	undefined
+0+107 <L1\+0xbf> lbvs	0+10 <start\+0x10>
+[	]+107: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+109: R_M68HC12_PCREL_16	undefined
+0+10b <L1\+0xc3> lbra	0+10 <start\+0x10>
+[	]+10b: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+10d: R_M68HC12_PCREL_16	undefined
+0+10f <L1\+0xc7> lbvc	0+10 <start\+0x10>
+[	]+10f: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+111: R_M68HC12_PCREL_16	undefined
+0+113 <L1\+0xcb> lbne	0+10 <start\+0x10>
+[	]+113: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+115: R_M68HC12_PCREL_16	undefined
+0+117 <L1\+0xcf> lbpl	0+10 <start\+0x10>
+[	]+117: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+119: R_M68HC12_PCREL_16	undefined
+0+11b <L1\+0xd3> lbrn	0+10 <start\+0x10>
+[	]+11b: R_M68HC12_RL_JUMP	\*ABS\*
+[	]+11d: R_M68HC12_PCREL_16	undefined
+	...
+0+1e7 <L2> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/branchs12.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/branchs12.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/branchs12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/branchs12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,111 @@
+#
+# Try to verify all branchs for 68HC12
+# Ensures that PC-relative relocations are correct.
+#
+	sect .text
+	globl start
+
+start:
+L0:
+	;; Branchs to defined symbols, positive offset < 128
+	bgt	L1
+	bge	L1
+	ble	L1
+	blt	L1
+	bhi	L1
+	bhs	L1
+	bcc	L1
+	beq	L1
+	bls	L1
+	blo	L1
+	bcs	L1
+	bmi	L1
+	bvs	L1
+	bra	L1
+	bvc	L1
+	bne	L1
+	bpl	L1
+	brn	L1
+
+	;; Branchs to defined symbols, negative offset > -128
+	bgt	L0
+	bge	L0
+	ble	L0
+	blt	L0
+	bhi	L0
+	bhs	L0
+	bcc	L0
+	beq	L0
+	bls	L0
+	blo	L0
+	bcs	L0
+	bmi	L0
+	bvs	L0
+	bra	L0
+	bvc	L0
+	bne	L0
+	bpl	L0
+	brn	L0
+L1:
+	;; Branchs to defined symbols, positive offset > -128
+	lbgt	L2
+	lbge	L2
+	lble	L2
+	lblt	L2
+	lbhi	L2
+	lbhs	L2
+	lbcc	L2
+	lbeq	L2
+	lbls	L2
+	lblo	L2
+	lbcs	L2
+	lbmi	L2
+	lbvs	L2
+	lbra	L2
+	lbvc	L2
+	lbne	L2
+	lbpl	L2
+	lbrn	L2
+
+	;; Branchs to undefined symbols, translated into lbcc
+	bgt	undefined
+	bge	undefined
+	ble	undefined
+	blt	undefined
+	bhi	undefined
+	bhs	undefined
+	bcc	undefined
+	beq	undefined
+	bls	undefined
+	blo	undefined
+	bcs	undefined
+	bmi	undefined
+	bvs	undefined
+	bra	undefined
+	bvc	undefined
+	bne	undefined
+	bpl	undefined
+	brn	undefined
+
+	;; Far branchs to undefined symbols
+	lbgt	undefined+16
+	lbge	undefined+16
+	lble	undefined+16
+	lblt	undefined+16
+	lbhi	undefined+16
+	lbhs	undefined+16
+	lbcc	undefined+16
+	lbeq	undefined+16
+	lbls	undefined+16
+	lblo	undefined+16
+	lbcs	undefined+16
+	lbmi	undefined+16
+	lbvs	undefined+16
+	lbra	undefined+16
+	lbvc	undefined+16
+	lbne	undefined+16
+	lbpl	undefined+16
+	lbrn	undefined+16
+	.skip	200
+L2:
+	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/bug-1825.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/bug-1825.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/bug-1825.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/bug-1825.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,129 @@
+#objdump: -S -r
+#as: -m68hc12 -gdwarf2
+#name: 68HC12 PC-relative addressing modes (bug-1825)
+
+.*:     file format elf32\-m68hc12
+
+Disassembly of section \.text:
+
+0+ <_main>:
+;;; .*
+;;; 
+	\.sect \.text
+	\.globl _main
+_main:
+	nop
+   0:	a7          	nop
+	ldx	L1,pc		; Assemble to 5\-bit > 0 offset
+   1:	ee c2       	ldx	2,PC \{5 <L1>\}
+	bra	L2
+   3:	20 02       	bra	7 <L2>
+			3: R_M68HC12_RL_JUMP	\*ABS\*
+
+0+5 <L1>:
+   5:	aa bb       	oraa	5,SP\-
+
+0+7 <L2>:
+L1:
+	.dc.w	0xaabb
+L2:
+	subd	L1,pc		; Assemble to 5\-bit < 0 offset
+   7:	a3 dc       	subd	\-4,PC \{5 <L1>\}
+
+0+9 <L3>:
+   9:	a7          	nop
+   a:	a7          	nop
+   b:	a7          	nop
+   c:	a7          	nop
+   d:	a7          	nop
+   e:	a7          	nop
+   f:	a7          	nop
+  10:	a7          	nop
+  11:	a7          	nop
+  12:	a7          	nop
+  13:	a7          	nop
+  14:	a7          	nop
+  15:	a7          	nop
+  16:	a7          	nop
+L3:
+	.ds.b	14, 0xA7
+	ldab	L3,pc		; 5\-bit < 0 offset
+  17:	e6 d0       	ldab	\-16,PC \{9 <L3>\}
+	ldab	L4,pc		; 5\-bit > 0 offset
+  19:	e6 cf       	ldab	15,PC \{2a <L4>\}
+	...
+
+0+2a <L4>:
+	...
+	.skip	15
+L4:
+	.skip	128
+	subd	L4,pc		; 9\-bit < 0 offset
+  aa:	a3 f9 7d    	subd	\-131,PC \{2a <L4>\}
+	addd	L5,pc		; 9\-bit > 0 offset
+  ad:	e3 f8 80    	addd	128,PC \{130 <L5>\}
+	...
+
+0+130 <L5>:
+	...
+ 22c:	00          	bgnd
+	.skip	128
+L5:
+	.skip	256\-3
+	orab	L5,pc		; 9 bit < 0 offset \(min value\)
+ 22d:	ea f9 00    	orab	\-256,PC \{130 <L5>\}
+	oraa	L6,pc		; 9 bit > 0 offset \(max value\)
+ 230:	aa f8 ff    	oraa	255,PC \{332 <L6>\}
+	...
+
+0+332 <L6>:
+	...
+ 42e:	00          	bgnd
+ 42f:	00          	bgnd
+	.skip	255
+L6:
+	.skip	256\-2
+	orab	L6,pc		; 16 bit < 0 offset
+ 430:	ea fa fe fe 	orab	\-258,PC \{332 <L6>\}
+	anda	_main,pc	; 16 bit < 0 offset
+ 434:	a4 fa fb c8 	anda	\-1080,PC \{0 <_main>\}
+	andb	L7,pc
+ 438:	e4 fa 01 00 	andb	256,PC \{53c <L7>\}
+	...
+
+0+53c <L7>:
+	.skip	256
+L7:
+	stab	external,pc	; External 16\-bit PCREL
+ 53c:	6b fa fa c0 	stab	\-1344,PC \{0 <_main>\}
+			53e: R_M68HC12_PCREL_16	external
+	ldd	_table,pc
+ 540:	ec cf       	ldd	15,PC \{551 <_table>\}
+	addd	_table\+2,pc
+ 542:	e3 cf       	addd	15,PC \{553 <_table\+0x2>\}
+	subd	_table\+4,pc
+ 544:	a3 cf       	subd	15,PC \{555 <_table\+0x4>\}
+	addd	_table\+8,pc
+ 546:	e3 f8 10    	addd	16,PC \{559 <_table\+0x8>\}
+	addd	_table\+12,pc
+ 549:	e3 f8 11    	addd	17,PC \{55d <_table\+0xc>\}
+	addd	_table\+16,pc
+ 54c:	e3 f8 12    	addd	18,PC \{561 <_table\+0x10>\}
+	rts
+ 54f:	3d          	rts
+	nop
+ 550:	a7          	nop
+
+0+551 <_table>:
+	...
+_table:
+	.ds.b	16,0
+	leax	_table,sp	; 16\-bit absolute reloc
+ 561:	1a f2 00 00 	leax	0,SP
+			563: R_M68HC12_16	_table
+	leay	_table,x
+ 565:	19 e2 00 00 	leay	0,X
+			567: R_M68HC12_16	_table
+	leax	_table,y
+ 569:	1a ea 00 00 	leax	0,Y
+			56b: R_M68HC12_16	_table
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/bug-1825.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/bug-1825.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/bug-1825.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/bug-1825.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,49 @@
+;;; Bug #1825: gas assemble PC-relative indexed addressing modes incorrectly
+;;; http://savannah.gnu.org/bugs/?func=detailbug&bug_id=1825&group_id=2424
+;;; 
+	.sect .text
+	.globl _main
+_main:
+	nop
+	ldx	L1,pc		; Assemble to 5-bit > 0 offset
+	bra	L2
+L1:
+	.dc.w	0xaabb
+L2:
+	subd	L1,pc		; Assemble to 5-bit < 0 offset
+L3:
+	.ds.b	14, 0xA7
+	ldab	L3,pc		; 5-bit < 0 offset
+	ldab	L4,pc		; 5-bit > 0 offset
+	.skip	15
+L4:
+	.skip	128
+	subd	L4,pc		; 9-bit < 0 offset
+	addd	L5,pc		; 9-bit > 0 offset
+	.skip	128
+L5:
+	.skip	256-3
+	orab	L5,pc		; 9 bit < 0 offset (min value)
+	oraa	L6,pc		; 9 bit > 0 offset (max value)
+	.skip	255
+L6:
+	.skip	256-2
+	orab	L6,pc		; 16 bit < 0 offset
+	anda	_main,pc	; 16 bit < 0 offset
+	andb	L7,pc
+	.skip	256
+L7:
+	stab	external,pc	; External 16-bit PCREL
+	ldd	_table,pc
+	addd	_table+2,pc
+	subd	_table+4,pc
+	addd	_table+8,pc
+	addd	_table+12,pc
+	addd	_table+16,pc
+	rts
+	nop
+_table:
+	.ds.b	16,0
+	leax	_table,sp	; 16-bit absolute reloc
+	leay	_table,x
+	leax	_table,y
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/indexed12.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/indexed12.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/indexed12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/indexed12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,204 @@
+#objdump: -S
+#as: -m68hc12 -gdwarf2
+#name: 68HC12 indexed addressing mode with 5, 9 and 16-bit offsets (indexed12)
+#source: indexed12.s
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+ <_main>:
+;; with a 5, 9 and 16-bit offset.
+;;
+	.sect .text
+	.globl _main
+_main:
+	nop
+   0:	a7          	nop
+;;; Global check \(1st\)
+	ldab	L1\-_main,x	; Offset/const of these 2 insns must be
+   1:	e6 e0 93    	ldab	147,X
+	ldaa	#L1\-_main	; identical \(likewise for 2nd global check\)
+   4:	86 93       	ldaa	#147
+;;; Test gas relax with difference of symbols \(same section\)
+	ldaa	L2\-L1,x		; \-> ldaa 2,x \(5\-bit offset\), text seg
+   6:	a6 02       	ldaa	2,X
+	adda	L1\-L2,y		; \-> adda \-2,y \(5\-bit offset\), text seg
+   8:	ab 5e       	adda	\-2,Y
+
+	orab	L7\-L6,sp	; \-> orab 8,sp  \(5\-bit offset\), text seg
+   a:	ea 88       	orab	8,SP
+	anda	L8\-L7,sp	; \-> anda 15,sp \(5\-bit offset\), text seg
+   c:	a4 8f       	anda	15,SP
+	eora	L7\-L8,sp	; \-> eora \-15,sp \(5\-bit offset\), text seg
+   e:	a8 91       	eora	\-15,SP
+	eorb	L7\-L9,sp	; \-> eorb \-16,sp \(5\-bit offset\), text seg
+  10:	e8 90       	eorb	\-16,SP
+
+	andb	L9\-L7,sp	; \-> andb 16,sp \(9\-bit offset\), text seg
+  12:	e4 f0 10    	andb	16,SP
+	staa	L7\-L10,x	; \-> staa \-17,x \(9\-bit offset\), text seg
+  15:	6a e1 ef    	staa	\-17,X
+	stab	L11\-L10,y	; \-> stab 128,y \(9\-bit offset\), text seg
+  18:	6b e8 80    	stab	128,Y
+	stab	L10\-L11,y	; \-> stab \-128,y \(9\-bit offset\), text seg
+  1b:	6b e9 80    	stab	\-128,Y
+	stab	L11\-L10\+1,y	; \-> stab 129,y \(9\-bit offset\), text seg
+  1e:	6b e8 81    	stab	129,Y
+	stab	L10\-L11\-1,y	; \-> stab \-129,y \(9\-bit offset\), text seg
+  21:	6b e9 7f    	stab	\-129,Y
+	stab	L11\-1\-L10,y	; \-> stab 127,y \(9\-bit offset\), text seg
+  24:	6b e8 7f    	stab	127,Y
+	stab	L10\-1\-L11,y	; \-> stab \-129,y \(9\-bit offset\), text seg
+  27:	6b e9 7f    	stab	\-129,Y
+
+	tst	L12\-L10,x	; \-> tst 255,x \(9\-bit offset\), text seg
+  2a:	e7 e0 ff    	tst	255,X
+	tst	L10\-L12,x	; \-> tst \-255,x \(9\-bit offset\), text seg
+  2d:	e7 e1 01    	tst	\-255,X
+	tst	L12\-L10\+1,x	; \-> tst 256,x \(16\-bit offset\), text seg
+  30:	e7 e2 01 00 	tst	256,X
+	mina	L13\-L10,x	; \-> mina 256,x \(16\-bit offset\)
+  34:	18 19 e2 01 	mina	256,X
+  38:	00 
+	mina	L10\-L13,x	; \-> mina \-256,x \(9\-bit offset\)
+  39:	18 19 e1 00 	mina	\-256,X
+
+	maxa	L14\-L10,x	; \-> maxa 257,x \(16\-bit offset\)
+  3d:	18 18 e2 01 	maxa	257,X
+  41:	01 
+	maxa	L10\-L14,x	; \-> maxa \-257,x \(16\-bit offset\)
+  42:	18 18 e2 fe 	maxa	\-257,X
+  46:	ff 
+
+;;; Test gas relax with difference of symbols \(different section\)
+	ldaa	D2\-D1,x		; \-> ldaa 2,x \(5\-bit offset\), data seg
+  47:	a6 02       	ldaa	2,X
+	adda	D1\-D2,y		; \-> adda \-2,y \(5\-bit offset\), data seg
+  49:	ab 5e       	adda	\-2,Y
+
+	orab	D7\-D6,sp	; \-> orab 8,sp  \(5\-bit offset\), data seg
+  4b:	ea 88       	orab	8,SP
+	anda	D8\-D7,sp	; \-> anda 15,sp \(5\-bit offset\), data seg
+  4d:	a4 8f       	anda	15,SP
+	eora	D7\-D8,sp	; \-> eora \-15,sp \(5\-bit offset\), data seg
+  4f:	a8 91       	eora	\-15,SP
+	eorb	D7\-D9,sp	; \-> eorb \-16,sp \(5\-bit offset\), data seg
+  51:	e8 90       	eorb	\-16,SP
+
+	andb	D9\-D7,sp	; \-> andb 16,sp \(9\-bit offset\), data seg
+  53:	e4 f0 10    	andb	16,SP
+	staa	D7\-D10,x	; \-> staa \-17,x \(9\-bit offset\), data seg
+  56:	6a e1 ef    	staa	\-17,X
+	stab	D11\-D10,y	; \-> stab 128,y \(9\-bit offset\), data seg
+  59:	6b e8 80    	stab	128,Y
+	stab	D10\-D11,y	; \-> stab \-128,y \(9\-bit offset\), data seg
+  5c:	6b e9 80    	stab	\-128,Y
+	stab	D11\-D10\+1,y	; \-> stab 129,y \(9\-bit offset\), data seg
+  5f:	6b e8 81    	stab	129,Y
+	stab	D10\-D11\+1,y	; \-> stab \-127,y \(9\-bit offset\), data seg
+  62:	6b e9 81    	stab	\-127,Y
+	stab	D11\-1\-D10,y	; \-> stab 127,y \(9\-bit offset\), data seg
+  65:	6b e8 7f    	stab	127,Y
+	stab	D10\-1\-D11,y	; \-> stab \-129,y \(9\-bit offset\), data seg
+  68:	6b e9 7f    	stab	\-129,Y
+
+	tst	D12\-D10,x	; \-> tst 255,x \(9\-bit offset\), data seg
+  6b:	e7 e0 ff    	tst	255,X
+	tst	D10\-D12,x	; \-> tst \-255,x \(9\-bit offset\), data seg
+  6e:	e7 e1 01    	tst	\-255,X
+	tst	D12\-D10\+1,x	; \-> tst 256,x \(16\-bit offset\), data seg
+  71:	e7 e2 01 00 	tst	256,X
+	mina	D13\-D10,x	; \-> mina 256,x \(16\-bit offset\)
+  75:	18 19 e2 01 	mina	256,X
+  79:	00 
+	mina	D10\-D13,x	; \-> mina \-256,x \(9\-bit offset\)
+  7a:	18 19 e1 00 	mina	\-256,X
+
+	maxa	D14\-D10,x	; \-> maxa 257,x \(16\-bit offset\)
+  7e:	18 18 e2 01 	maxa	257,X
+  82:	01 
+	maxa	D10\-D14,x	; \-> maxa \-257,x \(16\-bit offset\)
+  83:	18 18 e2 fe 	maxa	\-257,X
+  87:	ff 
+
+;;; Global check \(2nd\)
+	ldab	L1\-_main,x
+  88:	e6 e0 93    	ldab	147,X
+	ldaa	#L1\-_main
+  8b:	86 93       	ldaa	#147
+
+;;; Indexed addressing with external symbol
+	ldab	_external\+128,x
+  8d:	e6 e2 00 80 	ldab	128,X
+	bra	L2
+  91:	20 02       	bra	95 <L2>
+
+0+93 <L1>:
+  93:	aa bb       	oraa	5,SP\-
+
+0+95 <L2>:
+  95:	a7          	nop
+  96:	a7          	nop
+  97:	a7          	nop
+  98:	a7          	nop
+  99:	a7          	nop
+  9a:	a7          	nop
+  9b:	a7          	nop
+  9c:	a7          	nop
+
+0+9d <L7>:
+  9d:	a7          	nop
+  9e:	a7          	nop
+  9f:	a7          	nop
+  a0:	a7          	nop
+  a1:	a7          	nop
+  a2:	a7          	nop
+  a3:	a7          	nop
+  a4:	a7          	nop
+  a5:	a7          	nop
+  a6:	a7          	nop
+  a7:	a7          	nop
+  a8:	a7          	nop
+  a9:	a7          	nop
+  aa:	a7          	nop
+  ab:	a7          	nop
+
+0+ac <L8>:
+L6:
+	.ds.b	8, 0xa7
+L7:
+	.ds.b	15, 0xa7
+L8:
+	nop
+  ac:	a7          	nop
+
+0+ad <L9>:
+L9:
+	nop
+  ad:	a7          	nop
+
+0+ae <L10>:
+	...
+
+0+12e <L11>:
+	...
+
+0+1ad <L12>:
+L10:
+	.skip	128
+L11:
+	.skip	127
+L12:
+	nop
+ 1ad:	a7          	nop
+
+0+1ae <L13>:
+L13:
+	nop
+ 1ae:	a7          	nop
+
+0+1af <L14>:
+L14:
+	rts
+ 1af:	3d          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/indexed12.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/indexed12.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/indexed12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/indexed12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,115 @@
+;;
+;; This file verifies the 68HC12 indexed addressing modes
+;; with a 5, 9 and 16-bit offset.
+;;
+	.sect .text
+	.globl _main
+_main:
+	nop
+;;; Global check (1st)
+	ldab	L1-_main,x	; Offset/const of these 2 insns must be
+	ldaa	#L1-_main	; identical (likewise for 2nd global check)
+;;; Test gas relax with difference of symbols (same section)
+	ldaa	L2-L1,x		; -> ldaa 2,x (5-bit offset), text seg
+	adda	L1-L2,y		; -> adda -2,y (5-bit offset), text seg
+
+	orab	L7-L6,sp	; -> orab 8,sp  (5-bit offset), text seg
+	anda	L8-L7,sp	; -> anda 15,sp (5-bit offset), text seg
+	eora	L7-L8,sp	; -> eora -15,sp (5-bit offset), text seg
+	eorb	L7-L9,sp	; -> eorb -16,sp (5-bit offset), text seg
+
+	andb	L9-L7,sp	; -> andb 16,sp (9-bit offset), text seg
+	staa	L7-L10,x	; -> staa -17,x (9-bit offset), text seg
+	stab	L11-L10,y	; -> stab 128,y (9-bit offset), text seg
+	stab	L10-L11,y	; -> stab -128,y (9-bit offset), text seg
+	stab	L11-L10+1,y	; -> stab 129,y (9-bit offset), text seg
+	stab	L10-L11-1,y	; -> stab -129,y (9-bit offset), text seg
+	stab	L11-1-L10,y	; -> stab 127,y (9-bit offset), text seg
+	stab	L10-1-L11,y	; -> stab -129,y (9-bit offset), text seg
+
+	tst	L12-L10,x	; -> tst 255,x (9-bit offset), text seg
+	tst	L10-L12,x	; -> tst -255,x (9-bit offset), text seg
+	tst	L12-L10+1,x	; -> tst 256,x (16-bit offset), text seg
+	mina	L13-L10,x	; -> mina 256,x (16-bit offset)
+	mina	L10-L13,x	; -> mina -256,x (9-bit offset)
+
+	maxa	L14-L10,x	; -> maxa 257,x (16-bit offset)
+	maxa	L10-L14,x	; -> maxa -257,x (16-bit offset)
+
+;;; Test gas relax with difference of symbols (different section)
+	ldaa	D2-D1,x		; -> ldaa 2,x (5-bit offset), data seg
+	adda	D1-D2,y		; -> adda -2,y (5-bit offset), data seg
+
+	orab	D7-D6,sp	; -> orab 8,sp  (5-bit offset), data seg
+	anda	D8-D7,sp	; -> anda 15,sp (5-bit offset), data seg
+	eora	D7-D8,sp	; -> eora -15,sp (5-bit offset), data seg
+	eorb	D7-D9,sp	; -> eorb -16,sp (5-bit offset), data seg
+
+	andb	D9-D7,sp	; -> andb 16,sp (9-bit offset), data seg
+	staa	D7-D10,x	; -> staa -17,x (9-bit offset), data seg
+	stab	D11-D10,y	; -> stab 128,y (9-bit offset), data seg
+	stab	D10-D11,y	; -> stab -128,y (9-bit offset), data seg
+	stab	D11-D10+1,y	; -> stab 129,y (9-bit offset), data seg
+	stab	D10-D11+1,y	; -> stab -127,y (9-bit offset), data seg
+	stab	D11-1-D10,y	; -> stab 127,y (9-bit offset), data seg
+	stab	D10-1-D11,y	; -> stab -129,y (9-bit offset), data seg
+
+	tst	D12-D10,x	; -> tst 255,x (9-bit offset), data seg
+	tst	D10-D12,x	; -> tst -255,x (9-bit offset), data seg
+	tst	D12-D10+1,x	; -> tst 256,x (16-bit offset), data seg
+	mina	D13-D10,x	; -> mina 256,x (16-bit offset)
+	mina	D10-D13,x	; -> mina -256,x (9-bit offset)
+
+	maxa	D14-D10,x	; -> maxa 257,x (16-bit offset)
+	maxa	D10-D14,x	; -> maxa -257,x (16-bit offset)
+
+;;; Global check (2nd)
+	ldab	L1-_main,x
+	ldaa	#L1-_main
+
+;;; Indexed addressing with external symbol
+	ldab	_external+128,x
+	bra	L2
+L1:
+	.dc.w	0xaabb
+L2:
+L6:
+	.ds.b	8, 0xa7
+L7:
+	.ds.b	15, 0xa7
+L8:
+	nop
+L9:
+	nop
+L10:
+	.skip	128
+L11:
+	.skip	127
+L12:
+	nop
+L13:
+	nop
+L14:
+	rts
+
+	.sect .data
+D1:
+	.dc.w	0xaabb
+D2:
+D6:
+	.ds.b	8, 0xa7
+D7:
+	.ds.b	15, 0xa7
+D8:
+	nop
+D9:
+	nop
+D10:
+	.skip	128
+D11:
+	.skip	127
+D12:
+	nop
+D13:
+	nop
+D14:
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/insns-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/insns-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,114 @@
+#objdump: -S
+#as: -m68hc11 -gdwarf2
+#name: Dwarf2 test on insns.s
+#source: insns.s
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+
+00000000 <_start>:
+#...
+	.globl _start
+	.sect .text
+
+_start:
+	lds #stack\+1024
+   0:	8e 04 00    	lds	#400 <stack_end>
+	ldx #1
+   3:	ce 00 01    	ldx	#1 <_start\+0x1>
+
+0+06 <Loop>:
+Loop:	
+	jsr test
+   6:	bd 00 00    	jsr	0 <_start>
+	dex
+   9:	09          	dex
+	bne Loop
+   a:	26 fa       	bne	6 <Loop>
+
+0000000c <Stop>:
+   c:	cd 03       	.byte	0xcd, 0x03
+Stop:
+	
+	.byte 0xcd
+	.byte 3	
+	bra _start
+   e:	20 f0       	bra	0 <_start>
+
+00000010 <test>:
+
+test:
+	ldd #2
+  10:	cc 00 02    	ldd	#2 <_start\+0x2>
+	jsr test2
+  13:	bd 00 00    	jsr	0 <_start>
+	rts
+  16:	39          	rts
+
+00000017 <test2>:
+
+D_low = 50
+value = 23
+		
+	.globl test2
+test2:
+	ldx value,y
+  17:	cd ee 17    	ldx	23,y
+	std value,x
+  1a:	ed 17       	std	23,x
+	ldd ,x
+  1c:	ec 00       	ldd	0,x
+	sty ,y
+  1e:	18 ef 00    	sty	0,y
+	stx ,y
+  21:	cd ef 00    	stx	0,y
+	brclr 6,x,#4,test2
+  24:	1f 06 04 ef 	brclr	6,x #\$04 17 <test2>
+	brclr 12,x #8 test2
+  28:	1f 0c 08 eb 	brclr	12,x #\$08 17 <test2>
+	ldd \*ZD1
+  2c:	dc 00       	ldd	\*0 <_start>
+	ldx \*ZD1\+2
+  2e:	de 02       	ldx	\*2 <_start\+0x2>
+	clr \*ZD2
+  30:	7f 00 00    	clr	0 <_start>
+	clr \*ZD2\+1
+  33:	7f 00 01    	clr	1 <_start\+0x1>
+	bne .-4
+  36:	26 fc       	bne	34 <test2\+0x1d>
+	beq .\+2
+  38:	27 02       	beq	3c <test2\+0x25>
+	bclr \*ZD1\+1, #32
+  3a:	15 01 20    	bclr	\*1 <_start\+0x1> #\$20
+	brclr \*ZD2\+2, #40, test2
+  3d:	13 02 28 d6 	brclr	\*2 <_start\+0x2> #\$28 17 <test2>
+	ldy #24\+_start-44
+  41:	18 ce ff ec 	ldy	#ffec <stack_end\+0xfbec>
+	ldd B_low,y
+  45:	18 ec 0c    	ldd	12,y
+	addd A_low,y
+  48:	18 e3 2c    	addd	44,y
+	addd D_low,y
+  4b:	18 e3 32    	addd	50,y
+	subd A_low
+  4e:	b3 00 2c    	subd	2c <test2\+0x15>
+	subd #A_low
+  51:	83 00 2c    	subd	#2c <test2\+0x15>
+	jmp Stop
+  54:	7e 00 00    	jmp	0 <_start>
+
+00000057 <L1>:
+L1:	
+	anda #%lo\(test2\)
+  57:	84 17       	anda	#23
+	andb #%hi\(test2\)
+  59:	c4 00       	andb	#0
+	ldab #%page\(test2\)	; Check that the relocs are against symbol
+  5b:	c6 00       	ldab	#0
+	ldy  #%addr\(test2\)	; otherwise linker relaxation fails
+  5d:	18 ce 00 00 	ldy	#0 <_start>
+	rts
+  61:	39          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/insns.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/insns.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,69 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: insns
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <_start> lds	#0+0400 <stack_end>
+[	]+1: R_M68HC11_16	stack
+0+0003 <_start\+0x3> ldx	#0+0001 <_start\+0x1>
+0+0006 <Loop> jsr	0+0+ <_start>
+[	]+6: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+7: R_M68HC11_16	test
+0+0009 <Loop\+0x3> dex
+0+000a <Loop\+0x4> bne	0+0006 <Loop>
+[	]+a: R_M68HC11_RL_JUMP	\*ABS\*
+0+000c <Stop> .byte	0xcd, 0x03
+0+000e <Stop\+0x2> bra	0+0+ <_start>
+[	]+e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0010 <test> ldd	#0+0002 <_start\+0x2>
+0+0013 <test\+0x3> jsr	0+0+ <_start>
+[	]+13: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+14: R_M68HC11_16	test2
+0+0016 <test\+0x6> rts
+0+0017 <test2> ldx	23,y
+0+001a <test2\+0x3> std	23,x
+0+001c <test2\+0x5> ldd	0,x
+0+001e <test2\+0x7> sty	0,y
+0+0021 <test2\+0xa> stx	0,y
+0+0024 <test2\+0xd> brclr	6,x #\$04 0+0017 <test2>
+[	]+24: R_M68HC11_RL_JUMP	\*ABS\*
+0+0028 <test2\+0x11> brclr	12,x #\$08 0+0017 <test2>
+[	]+28: R_M68HC11_RL_JUMP	\*ABS\*
+0+002c <test2\+0x15> ldd	\*0+0+ <_start>
+[	]+2d: R_M68HC11_8	ZD1
+0+002e <test2\+0x17> ldx	\*0+0002 <_start\+0x2>
+[	]+2f: R_M68HC11_8	ZD1
+0+0030 <test2\+0x19> clr	0+0+ <_start>
+[	]+31: R_M68HC11_16	ZD2
+0+0033 <test2\+0x1c> clr	0+0001 <_start\+0x1>
+[	]+34: R_M68HC11_16	ZD2
+0+0036 <test2\+0x1f> bne	0+0034 <test2\+0x1d>
+0+0038 <test2\+0x21> beq	0+003c <test2\+0x25>
+0+003a <test2\+0x23> bclr	\*0+0001 <_start\+0x1> #\$20
+[	]+3b: R_M68HC11_8	ZD1
+0+003d <test2\+0x26> brclr	\*0+0002 <_start\+0x2> #\$28 0+0017 <test2>
+[	]+3d: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3e: R_M68HC11_8	ZD2
+0+0041 <test2\+0x2a> ldy	#0+ffec <stack_end\+0xfbec>
+[	]+43: R_M68HC11_16	_start
+0+0045 <test2\+0x2e> ldd	12,y
+0+0048 <test2\+0x31> addd	44,y
+0+004b <test2\+0x34> addd	50,y
+0+004e <test2\+0x37> subd	0+002c <test2\+0x15>
+0+0051 <test2\+0x3a> subd	#0+002c <test2\+0x15>
+0+0054 <test2\+0x3d> jmp	0+0+ <_start>
+[	]+54: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+55: R_M68HC11_16	Stop
+0+0057 <L1> anda	#23
+[	]+58: R_M68HC11_LO8	\.text
+0+0059 <L1\+0x2> andb	#0
+[	]+5a: R_M68HC11_HI8	\.text
+0+5b <L1\+0x4> ldab	#0
+[	]+5c: R_M68HC11_PAGE	test2
+0+5d <L1\+0x6> ldy	#0+ <_start>
+[	]+5f: R_M68HC11_LO16	test2
+0+61 <L1\+0xa> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/insns.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/insns.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,65 @@
+# Test for correct generation of 68HC11 insns.
+	
+	.globl _start
+	.sect .text
+
+_start:
+	lds #stack+1024
+	ldx #1
+Loop:	
+	jsr test
+	dex
+	bne Loop
+Stop:
+	
+	.byte 0xcd
+	.byte 3	
+	bra _start
+
+test:
+	ldd #2
+	jsr test2
+	rts
+
+B_low = 12
+A_low = 44
+D_low = 50
+value = 23
+		
+	.globl test2
+test2:
+	ldx value,y
+	std value,x
+	ldd ,x
+	sty ,y
+	stx ,y
+	brclr 6,x,#4,test2
+	brclr 12,x #8 test2
+	ldd *ZD1
+	ldx *ZD1+2
+	clr *ZD2
+	clr *ZD2+1
+	bne .-4
+	beq .+2
+	bclr *ZD1+1, #32
+	brclr *ZD2+2, #40, test2
+	ldy #24+_start-44
+	ldd B_low,y
+	addd A_low,y
+	addd D_low,y
+	subd A_low
+	subd #A_low
+	jmp Stop
+L1:	
+	anda #%lo(test2)
+	andb #%hi(test2)
+	ldab #%page(test2)	; Check that the relocs are against symbol
+	ldy  #%addr(test2)	; otherwise linker relaxation fails
+	rts
+
+	.sect .data
+
+	.sect .bss
+stack:
+	.space	1024
+stack_end:
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/insns12.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns12.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/insns12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,85 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 specific instructions (insns12)
+
+.*:  +file format elf32-m68hc12
+
+Disassembly of section .text:
+0+ <call_test> call	0+ <call_test> \{0+ <call_test>, 0\}
+			0: R_M68HC12_RL_JUMP	\*ABS\*
+			1: R_M68HC12_24	_foo
+0+4 <call_test\+0x4> call	0+ <call_test> \{0+ <call_test>, 1\}
+			4: R_M68HC12_RL_JUMP	\*ABS\*
+			5: R_M68HC12_LO16	_foo
+0+8 <call_test\+0x8> call	0+ <call_test> \{0+ <call_test>, 0\}
+			8: R_M68HC12_RL_JUMP	\*ABS\*
+			9: R_M68HC12_LO16	_foo
+			b: R_M68HC12_PAGE	foo_page
+0+c <call_test\+0xc> call	0,X, 3
+			c: R_M68HC12_RL_JUMP	\*ABS\*
+0+f <call_test\+0xf> call	4,Y, 12
+			f: R_M68HC12_RL_JUMP	\*ABS\*
+0+12 <call_test\+0x12> call	7,SP, 13
+			12: R_M68HC12_RL_JUMP	\*ABS\*
+0+15 <call_test\+0x15> call	12,X, 0
+			15: R_M68HC12_RL_JUMP	\*ABS\*
+			17: R_M68HC12_PAGE	foo_page
+0+18 <call_test\+0x18> call	4,Y, 0
+			18: R_M68HC12_RL_JUMP	\*ABS\*
+			1a: R_M68HC12_PAGE	foo_page
+0+1b <call_test\+0x1b> call	7,SP, 0
+			1b: R_M68HC12_RL_JUMP	\*ABS\*
+			1d: R_M68HC12_PAGE	foo_page
+0+1e <call_test\+0x1e> call	\[D,X\]
+			1e: R_M68HC12_RL_JUMP	\*ABS\*
+0+20 <call_test\+0x20> ldab	\[32767,SP\]
+0+24 <call_test\+0x24> call	\[2048,SP\]
+			24: R_M68HC12_RL_JUMP	\*ABS\*
+0+28 <call_test\+0x28> call	\[0,X\]
+			28: R_M68HC12_RL_JUMP	\*ABS\*
+			2a: R_M68HC12_16	_foo
+0+2c <call_test\+0x2c> rtc
+0+2d <special_test> emacs	0+ <call_test>
+			2f: R_M68HC12_16	_foo
+0+31 <special_test\+0x4> maxa	0,X
+0+34 <special_test\+0x7> maxa	819,Y
+0+39 <special_test\+0xc> maxa	\[D,X\]
+0+3c <special_test\+0xf> maxa	\[0,X\]
+			3f: R_M68HC12_16	_foo
+0+41 <special_test\+0x14> maxm	0,X
+0+44 <special_test\+0x17> maxm	819,Y
+0+49 <special_test\+0x1c> maxm	\[D,X\]
+0+4c <special_test\+0x1f> maxm	\[0,X\]
+			4f: R_M68HC12_16	_foo
+0+51 <special_test\+0x24> emaxd	0,X
+0+54 <special_test\+0x27> emaxd	819,Y
+0+59 <special_test\+0x2c> emaxd	\[D,X\]
+0+5c <special_test\+0x2f> emaxd	\[0,X\]
+			5f: R_M68HC12_16	_foo
+0+61 <special_test\+0x34> emaxm	0,X
+0+64 <special_test\+0x37> emaxm	819,Y
+0+69 <special_test\+0x3c> emaxm	\[D,X\]
+0+6c <special_test\+0x3f> emaxm	\[0,X\]
+			6f: R_M68HC12_16	_foo
+0+71 <special_test\+0x44> mina	0,X
+0+74 <special_test\+0x47> mina	819,Y
+0+79 <special_test\+0x4c> mina	\[D,X\]
+0+7c <special_test\+0x4f> mina	\[0,X\]
+			7f: R_M68HC12_16	_foo
+0+81 <special_test\+0x54> minm	0,X
+0+84 <special_test\+0x57> minm	819,Y
+0+89 <special_test\+0x5c> minm	\[D,X\]
+0+8c <special_test\+0x5f> minm	\[0,X\]
+			8f: R_M68HC12_16	_foo
+0+91 <special_test\+0x64> emind	0,X
+0+94 <special_test\+0x67> emind	819,Y
+0+99 <special_test\+0x6c> emind	\[D,X\]
+0+9c <special_test\+0x6f> emind	\[0,X\]
+			9f: R_M68HC12_16	_foo
+0+a1 <special_test\+0x74> emul
+0+a2 <special_test\+0x75> emuls
+0+a4 <special_test\+0x77> etbl	3,X
+0+a7 <special_test\+0x7a> etbl	4,PC \{0+ae <special_test\+0x81>\}
+0+aa <special_test\+0x7d> rev
+0+ac <special_test\+0x7f> revw
+0+ae <special_test\+0x81> wav
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/insns12.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns12.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/insns12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/insns12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,71 @@
+# Test for correct generation of 68HC12 specific insns.
+
+	.sect .text
+
+;; Test the call insns
+call_test:
+	call	_foo		; 24-bit reloc
+	call	_foo,1		; 16-bit reloc, immediate page specification
+	call	_foo,%page(foo_page)	; 16-bit reloc and 8-bit page reloc
+	call	0,x,3		; 8-bit page reloc
+	call	4,y,12
+	call	7,sp,13
+	call	12,x,%page(foo_page)	; 8-bit page reloc
+	call	4,y,%page(foo_page)
+	call	7,sp,%page(foo_page)
+	call	[d,x]		; No reloc
+	ldab	[32767,sp]
+	call	[2048,sp]	; No reloc
+	call	[_foo,x]	; 16-bit reloc
+	rtc
+;; Test special insn
+special_test:
+	emacs	_foo	; Wonderful, Emacs as a single instruction!
+
+;; Min instruction
+	maxa	0,x
+	maxa	819,y
+	maxa	[d,x]
+	maxa	[_foo,x]
+
+	maxm	0,x
+	maxm	819,y
+	maxm	[d,x]
+	maxm	[_foo,x]
+
+	emaxd	0,x
+	emaxd	819,y
+	emaxd	[d,x]
+	emaxd	[_foo,x]
+
+	emaxm	0,x
+	emaxm	819,y
+	emaxm	[d,x]
+	emaxm	[_foo,x]
+
+;; Min instruction
+	mina	0,x
+	mina	819,y
+	mina	[d,x]
+	mina	[_foo,x]
+
+	minm	0,x
+	minm	819,y
+	minm	[d,x]
+	minm	[_foo,x]
+
+	emind	0,x
+	emind	819,y
+	emind	[d,x]
+	emind	[_foo,x]
+;; Mul
+	emul
+	emuls
+	etbl	3,x
+	etbl	4,pc
+
+;;
+	rev
+	revw
+	wav
+;;
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,91 @@
+#objdump: -S
+#as: -m68hc11 -gdwarf2
+#name: Dwarf2 test on lbranch.s
+#source: lbranch.s
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+
+0+00 <_rcall>:
+#...
+	.globl	_rcall
+	.globl _start
+_start:
+_rcall:
+	ldaa	#0x10		;86 10
+   0:	86 10       	ldaa	#16
+	jbra	Lend		; Must be switched to a jmp
+   2:	7e 00 00    	jmp	0 <_rcall>
+	jbsr	toto		; -> to a jsr
+   5:	bd 00 00    	jsr	0 <_rcall>
+	jbne	toto		; -> to a beq\+jmp
+   8:	27 03       	beq	d <_rcall\+0xd>
+   a:	7e 00 00    	jmp	0 <_rcall>
+	jbeq	toto		; -> to a bne\+jmp
+   d:	26 03       	bne	12 <_rcall\+0x12>
+   f:	7e 00 00    	jmp	0 <_rcall>
+	jbcs	toto		; -> to a bcc\+jmp
+  12:	24 03       	bcc	17 <_rcall\+0x17>
+  14:	7e 00 00    	jmp	0 <_rcall>
+	jbcc	toto		; -> to a bcs\+jmp
+  17:	25 03       	bcs	1c <_rcall\+0x1c>
+  19:	7e 00 00    	jmp	0 <_rcall>
+	xgdx
+  1c:	8f          	xgdx
+	xgdx
+  1d:	8f          	xgdx
+	beq	bidule		; -> to a bne\+jmp
+  1e:	26 03       	bne	23 <_rcall\+0x23>
+  20:	7e 00 00    	jmp	0 <_rcall>
+	bcs	bidule		; -> to a bcc\+jmp
+  23:	24 03       	bcc	28 <_rcall\+0x28>
+  25:	7e 00 00    	jmp	0 <_rcall>
+	bcc	bidule		; -> to a bcs\+jmp
+  28:	25 03       	bcs	2d <_rcall\+0x2d>
+  2a:	7e 00 00    	jmp	0 <_rcall>
+	xgdx
+  2d:	8f          	xgdx
+	jbra	200
+  2e:	7e 00 c8    	jmp	c8 <_rcall\+0xc8>
+	jbsr	1923
+  31:	bd 07 83    	jsr	783 <L0\+0x602>
+	bne	Lend		; -> to a beq\+jmp
+  34:	27 03       	beq	39 <_rcall\+0x39>
+  36:	7e 00 00    	jmp	0 <_rcall>
+	jbsr	toto
+  39:	bd 00 00    	jsr	0 <_rcall>
+	jbeq	toto
+  3c:	26 03       	bne	41 <_rcall\+0x41>
+  3e:	7e 00 00    	jmp	0 <_rcall>
+	...
+	.skip 200
+	ldaa	\*dir		;96 33
+ 109:	96 00       	ldaa	\*0 <_rcall>
+
+0000010b <Lend>:
+Lend:
+	bhi	external_op
+ 10b:	23 03       	bls	110 <Lend\+0x5>
+ 10d:	7e 00 00    	jmp	0 <_rcall>
+	bls	external_op
+ 110:	22 03       	bhi	115 <Lend\+0xa>
+ 112:	7e 00 00    	jmp	0 <_rcall>
+	bsr	out
+ 115:	bd 00 00    	jsr	0 <_rcall>
+	ldx	#12
+ 118:	ce 00 0c    	ldx	#c <_rcall\+0xc>
+
+0000011b <toto>:
+toto:	
+	rts
+ 11b:	39          	rts
+	...
+
+00000180 <bidule>:
+	.skip 100
+bidule:
+	rts
+ 180:	39          	rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,80 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc11
+#name: lbranch
+
+# Test handling of basic instructions.
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+0+ <_rcall> ldaa	#16
+0+0002 <_rcall\+0x2> jmp	0+0+ <_rcall>
+[	]+2: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3: R_M68HC11_16	Lend
+0+0005 <_rcall\+0x5> jsr	0+0+ <_rcall>
+[	]+5: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+6: R_M68HC11_16	toto
+0+0008 <_rcall\+0x8> beq	0+000d <_rcall\+0xd>
+[	]+8: R_M68HC11_RL_JUMP	\*ABS\*
+0+000a <_rcall\+0xa> jmp	0+0+ <_rcall>
+[	]+b: R_M68HC11_16	toto
+0+000d <_rcall\+0xd> bne	0+0012 <_rcall\+0x12>
+[	]+d: R_M68HC11_RL_JUMP	\*ABS\*
+0+000f <_rcall\+0xf> jmp	0+0+ <_rcall>
+[	]+10: R_M68HC11_16	toto
+0+0012 <_rcall\+0x12> bcc	0+0017 <_rcall\+0x17>
+[	]+12: R_M68HC11_RL_JUMP	\*ABS\*
+0+0014 <_rcall\+0x14> jmp	0+0+ <_rcall>
+[	]+15: R_M68HC11_16	toto
+0+0017 <_rcall\+0x17> bcs	0+001c <_rcall\+0x1c>
+[	]+17: R_M68HC11_RL_JUMP	\*ABS\*
+0+0019 <_rcall\+0x19> jmp	0+0+ <_rcall>
+[	]+1a: R_M68HC11_16	toto
+0+001c <_rcall\+0x1c> xgdx
+0+001d <_rcall\+0x1d> xgdx
+0+001e <_rcall\+0x1e> bne	0+0023 <_rcall\+0x23>
+[	]+1e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0020 <_rcall\+0x20> jmp	0+0+ <_rcall>
+[	]+21: R_M68HC11_16	bidule
+0+0023 <_rcall\+0x23> bcc	0+0028 <_rcall\+0x28>
+[	]+23: R_M68HC11_RL_JUMP	\*ABS\*
+0+0025 <_rcall\+0x25> jmp	0+0+ <_rcall>
+[	]+26: R_M68HC11_16	bidule
+0+0028 <_rcall\+0x28> bcs	0+002d <_rcall\+0x2d>
+[	]+28: R_M68HC11_RL_JUMP	\*ABS\*
+0+002a <_rcall\+0x2a> jmp	0+0+ <_rcall>
+[	]+2b: R_M68HC11_16	bidule
+0+002d <_rcall\+0x2d> xgdx
+0+002e <_rcall\+0x2e> jmp	0+00c8 <_rcall\+0xc8>
+[	]+2e: R_M68HC11_RL_JUMP	\*ABS\*
+0+0031 <_rcall\+0x31> jsr	0+0783 <bidule\+0x603>
+[	]+31: R_M68HC11_RL_JUMP	\*ABS\*
+0+0034 <_rcall\+0x34> beq	0+0039 <_rcall\+0x39>
+[	]+34: R_M68HC11_RL_JUMP	\*ABS\*
+0+0036 <_rcall\+0x36> jmp	0+0+ <_rcall>
+[	]+37: R_M68HC11_16	Lend
+0+0039 <_rcall\+0x39> jsr	0+0+ <_rcall>
+[	]+39: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+3a: R_M68HC11_16	toto
+0+003c <_rcall\+0x3c> bne	0+0041 <_rcall\+0x41>
+[	]+3c: R_M68HC11_RL_JUMP	\*ABS\*
+0+003e <_rcall\+0x3e> jmp	0+0+ <_rcall>
+[	]+3f: R_M68HC11_16	toto
+	...
+0+0109 <_rcall\+0x109> ldaa	\*0+0+ <_rcall>
+[	]+10a: R_M68HC11_8	.page0
+0+010b <Lend> bls	0+0110 <Lend\+0x5>
+[	]+10b: R_M68HC11_RL_JUMP	\*ABS\*
+0+010d <Lend\+0x2> jmp	0+0+ <_rcall>
+[	]+10e: R_M68HC11_16	external_op
+0+0110 <Lend\+0x5> bhi	0+0115 <Lend\+0xa>
+[	]+110: R_M68HC11_RL_JUMP	\*ABS\*
+0+0112 <Lend\+0x7> jmp	0+0+ <_rcall>
+[	]+113: R_M68HC11_16	external_op
+0+0115 <Lend\+0xa> jsr	0+0+ <_rcall>
+[	]+115: R_M68HC11_RL_JUMP	\*ABS\*
+[	]+116: R_M68HC11_16	out
+0+0118 <Lend\+0xd> ldx	#0+000c <_rcall\+0xc>
+0+011b <toto> rts
+	...
+0+0180 <bidule> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/lbranch.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/lbranch.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,41 @@
+# Test for the 68HC11 long branch switch
+	.text
+	.globl	_rcall
+	.globl _start
+_start:
+_rcall:
+	ldaa	#0x10		;86 10
+	jbra	Lend		; Must be switched to a jmp
+	jbsr	toto		; -> to a jsr
+	jbne	toto		; -> to a beq+jmp
+	jbeq	toto		; -> to a bne+jmp
+	jbcs	toto		; -> to a bcc+jmp
+	jbcc	toto		; -> to a bcs+jmp
+	xgdx
+	xgdx
+	beq	bidule		; -> to a bne+jmp
+	bcs	bidule		; -> to a bcc+jmp
+	bcc	bidule		; -> to a bcs+jmp
+	xgdx
+	jbra	200
+	jbsr	1923
+	bne	Lend		; -> to a beq+jmp
+	jbsr	toto
+	jbeq	toto
+	.skip 200
+	ldaa	*dir		;96 33
+Lend:
+	bhi	external_op
+	bls	external_op
+	bsr	out
+	ldx	#12
+toto:	
+	rts
+	.skip 100
+bidule:
+	rts
+	.sect ".page0"
+dir:
+	.long 0
+	
+	; END
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/m68hc11.exp binutils-2.20-sean/gas/testsuite/gas/mc9xgate/m68hc11.exp
--- binutils-2.20/gas/testsuite/gas/mc9xgate/m68hc11.exp	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/m68hc11.exp	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,183 @@
+#
+# Some generic m68HC11 tests
+#
+if ![istarget "m68hc11-*-*"] then {
+    if ![istarget "m6811-*-*"] then {
+	if ![istarget "m68hc12-*-*"] then {
+	    if ![istarget "m6812-*-*"] then {
+		return
+	    }
+	}
+    }
+}
+
+# Simple test for --print-opcodes (list of supported opcodes)
+# We don't check the list result but just the syntax and the
+# number it 
+proc gas_m68hc11_opcode_list { flags expect_count } {
+    global comp_output
+
+    set testname "Opcode list generation \[$flags\]"
+    gas_run "x.s" "--print-opcodes $flags" ""
+
+    set lines [split $comp_output "\n"]
+    set cnt [llength $lines]
+    verbose -log "Found $cnt opcodes"
+    if { $cnt == $expect_count } then {
+        pass $testname
+    } else {
+        fail $testname
+    }
+}
+
+gas_m68hc11_opcode_list "-m68hc11" 149
+gas_m68hc11_opcode_list "-m68hc12" 192
+gas_m68hc11_opcode_list "-m68hcs12" 192
+
+
+# Test for a message produced when assembling a file
+proc gas_m68hc11_message { kind options line expect } {
+    global srcdir
+    global subdir
+
+    regsub -all "\n" "$line: $expect" " " title
+
+    # Make a file containing the instructions to assemble.
+    set fd [open "$srcdir/$subdir/tst-m68hc1x.s" "w"]
+    puts -nonewline $fd "$line"
+    close $fd
+
+    verbose -log "Test: $title"
+    gas_start "tst-m68hc1x.s" "$options"
+    set ok 0
+    while 1 {
+	expect {
+	    -re ".*: Assembler messages:\n" { }
+	    -re ".*1: $kind: $expect" { incr ok; break }
+	    timeout       { perror "timeout\n"; break }
+	    eof		  { verbose "EOF from gas"; break }
+	}
+    }
+    #sleep 1 # Uncomment this line when using gcov
+    gas_finish
+    if { $ok > 0 } then {
+	pass $title
+    } else {
+	fail $title
+    }
+    catch "exec rm -f $srcdir/$subdir/tst-m68hc1x.s"
+}
+
+# Test for an error message produced by gas
+proc gas_m68hc11_error { options line expect } {
+    gas_m68hc11_message "Error" $options $line $expect
+}
+
+# Test for a warning message produced by gas
+proc gas_m68hc11_warning { options line expect } {
+    gas_m68hc11_message "Warning" $options $line $expect
+}
+
+# ------------------
+# 68HC11 error tests
+gas_m68hc11_error "" "puld\n" "Opcode .puld. is not recognized"
+gas_m68hc11_error "" "ldab\n" "Invalid operand for .ldab."
+gas_m68hc11_error "" "ldab 256,x\n" "Operand out of 8-bit range:.*256"
+gas_m68hc11_error "" "ldab 257,y\n" "Operand out of 8-bit range:.*257"
+gas_m68hc11_error "" "ldab -1,y\n" "Operand out of 8-bit range:.*-1"
+gas_m68hc11_error "" "ldab bar,y\nbar=300" "value of 300 too large for field of 1 byte"
+gas_m68hc11_error "" "jmp \#23\n" "Immediate operand is not allowed"
+gas_m68hc11_error "" "ldab \[d,pc\]\n" "Indirect indexed addressing is not valid for 68HC11"
+gas_m68hc11_error "" "ldab ,t\n" "Spurious .,. or bad indirect register"
+gas_m68hc11_error "" "ldab 1,t\n" "Garbage at end of instruction:.*,t"
+gas_m68hc11_error "" "ldab 1,,x\n" "Garbage at end of instruction:.*,x"
+gas_m68hc11_error "" "ldab 1,+x\n" "Pre-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,-x\n" "Pre-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,x+\n" "Post-increment mode is not valid"
+gas_m68hc11_error "" "ldab 1,x-\n" "Post-decrement mode is not valid"
+gas_m68hc11_error "" "ldd \#65536\n" "Operand out of 16-bit range"
+gas_m68hc11_error "--short-branchs" "bne 200\n" \
+    "Operand out of range for a relative branch"
+gas_m68hc11_error "" "bar\n" "Opcode .bar. is not recognized."
+gas_m68hc11_error "--print-insn-syntax" "bne\n" \
+    "Instruction formats for .bne..*"
+
+# ------------------
+# 68HC12 error tests
+gas_m68hc11_error "-m68hc12" "ldab x,y\n" "Invalid accumulator register"
+gas_m68hc11_error "-m68hc12" "ldab \[d,y\n" \
+    "Missing .\]. to close indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab 0,\n" "Garbage at end of instruction: .,."
+gas_m68hc11_error "-m68hc12" "ldab \[d\]\n" \
+    "Missing second register or offset for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[d x\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[d d\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab \[pc d\]\n" \
+    "Missing second register for indexed-indirect mode"
+gas_m68hc11_error "-m68hc12" "ldab 65536,x\n" \
+    "Offset out of 16-bit range:"
+gas_m68hc11_error "-m68hc12 -S" "ibeq d,500\n" \
+    "Operand out of range for a relative branch"
+gas_m68hc11_error "-m68hc12" "ibeq pc,3\n" \
+    "Invalid register for dbcc/tbcc instruction"
+gas_m68hc11_error "-m68hc12 -S" "ibeq pc,500\n" \
+    "Invalid register for dbcc/tbcc instruction"
+gas_m68hc11_error "-m68hc12" "orab 9,+x\n" \
+    "Increment/decrement value is out of range"
+gas_m68hc11_error "-m68hc12" "orab -9,x-\n" \
+    "Increment/decrement value is out of range"
+gas_m68hc11_error "-m68hc12" "orab -3,-pc\n" \
+    "Invalid register for post/pre increment"
+gas_m68hc11_error "-m68hc12" "trap \#0\n" "Trap id .0. is out of range"
+gas_m68hc11_error "-m68hc12" "trap \#300\n" "Trap id .300. is out of range"
+gas_m68hc11_error "-m68hc12" "trap \#bar\n" "The trap id must be a constant"
+gas_m68hc11_error "-m68hc12" "sex x,d\n" \
+    "Invalid source register for this instruction, use .tfr."
+gas_m68hc11_error "-m68hc12" "tfr pc,a\n" "Invalid source register"
+gas_m68hc11_error "-m68hc12" "movb 200,x,3,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 200"
+gas_m68hc11_error "-m68hc12" "movb 2,x,300,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 2,x,bar,y\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb bar,y,2,x\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 200,pc,3,y\n" \
+    "Offset out of 5-bit range for movw/movb insn: 200"
+gas_m68hc11_error "-m68hc12" "movb 2,x,300,pc\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb 2,x,bar,pc\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+gas_m68hc11_error "-m68hc12" "movb bar,pc,2,x\nbar=300\n" \
+    "Offset out of 5-bit range for movw/movb insn: 300"
+
+# ------------------
+# Specific commands
+gas_m68hc11_warning "" ".mode \"bar\"\n" "Invalid mode: .bar."
+gas_m68hc11_error "" ".relax 23\n" "bad .relax format"
+gas_m68hc11_error "" ".relax bar-23\n" "bad .relax format"
+gas_m68hc11_error "" ".far bar bar\n" "junk at end of line"
+
+
+run_dump_test insns
+run_dump_test lbranch
+run_dump_test all_insns
+run_dump_test insns-dwarf2
+run_dump_test lbranch-dwarf2
+run_dump_test abi-m68hc11-16-64
+run_dump_test abi-m68hc11-16-32
+run_dump_test abi-m68hc11-32-64
+
+# Compliance with Motorola Assembly Language Input Standard
+run_dump_test malis
+
+# Some 68HC12 tests
+run_dump_test opers12
+run_dump_test opers12-dwarf2
+run_dump_test branchs12
+run_dump_test insns12
+run_dump_test indexed12
+run_dump_test bug-1825
+run_dump_test movb
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/malis-include.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis-include.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/malis-include.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis-include.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,19 @@
+;;
+;; This file verifies the compliance with the Motorola specification:
+;; 
+;; MOTOROLA STANDARDS
+;; Document #1001, Version 1.0
+;; SPECIFICATION FOR Motorola 8- and 16-Bit ASSEMBLY LANGUAGE INPUT STANDARD
+;; 26, October 1999
+;;
+;; Available at:
+;; 
+;; http://www.mcu.motsps.com/dev_tools/hc12/eabi/m8-16alis.pdf
+;;
+;; Lines starting with '#' represent instructions that fail in GAS.
+;;
+;;
+;;	Section 8.2.12.6 Include File - include
+	section .text
+value:	set	1
+	ldy	#value
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/malis.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/malis.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,37 @@
+#objdump: -d --prefix-addresses
+#as: -m68hc11 --mri -I$srcdir/$subdir
+#name: Motorola Assembly Language Input Standard
+
+# Test compliance with MALIS
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+000 <L0> ldaa	1,x
+0+002 <L1> ldaa	#44
+0+004 <L_txt2> ldx	#0+000 <L0>
+0+007 <L_constant> ldaa	#123
+0+009 <L_constant\+0x2> ldaa	#233
+0+00b <L_constant\+0x4> ldab	#138
+0+00d <L_constant\+0x6> ldab	#7
+0+00f <L_constant\+0x8> ldaa	#60
+0+011 <L_constant\+0xa> ldaa	#255
+0+013 <L12> ldaa	#174
+0+015 <L13> ldaa	#178
+0+017 <L11> ldx	#0+0af <entry\+0x6c>
+0+01a <L11\+0x3> ldx	#0+001 <L0\+0x1>
+0+01d <L11\+0x6> ldx	#0+001 <L0\+0x1>
+0+020 <L11\+0x9> ldx	#0+000 <L0>
+0+023 <L11\+0xc> ldab	#210
+0+025 <L_if> ldx	#0+001 <L0\+0x1>
+0+028 <L_if\+0x3> ldaa	#31
+0+02a <L_if\+0x5> ldaa	#4
+0+02c <L_if\+0x7> ldx	#0+017 <L11>
+0+02f <L_if\+0xa> ldx	#0+004 <L_txt2>
+0+032 <L_if\+0xd> ldy	#0+001 <L0\+0x1>
+0+036 <L_if\+0x11> ldy	#0+001 <L0\+0x1>
+0+03a <L_if\+0x15> ldaa	#23
+0+03c <L_if\+0x17> staa	0+018 <L11\+0x1>
+0+03f <L_if\+0x1a> rts
+0+040 <L_if\+0x1b> ldaa	0+017 <L11>
+0+043 <entry> rts
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/malis.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/malis.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/malis.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,240 @@
+;;
+;; This file verifies the compliance with the Motorola specification:
+;; 
+;; MOTOROLA STANDARDS
+;; Document #1001, Version 1.0
+;; SPECIFICATION FOR Motorola 8- and 16-Bit ASSEMBLY LANGUAGE INPUT STANDARD
+;; 26, October 1999
+;;
+;; Available at:
+;; 
+;; http://www.mcu.motsps.com/dev_tools/hc12/eabi/m8-16alis.pdf
+;;
+;; Lines starting with '#' represent instructions that fail in GAS.
+;;
+;;
+;; Section 8.2 INPUTS
+	;; Validated within the whole file
+	
+;; Section 8.2.1 Character Set
+	;; TBD
+
+;; Section 8.2.2 Assembly Language Statement
+	;; Validated within the whole file
+
+;; Section 8.2.3 Comments
+	; Motorola comment
+	;; This file is full of comments
+
+;; Section 8.2.5 Location Counter
+	section .text
+
+_start:
+L0:	*			; L0 set to 0 (relative to text)
+	ldaa	1,x
+L1:	equ	*		; L1 set to 2 (relative to text)
+
+;; Section 8.2.6 Sections
+	section .data
+	section .text
+	section empty
+	section .text
+
+;; Section 8.2.7 Expressions
+L2:	equ	23		; Absolute = 0x17
+L3:	equ	L0-23		; Simple relocatable
+
+;; Section 8.2.7.1 Primary Expression
+L4:	equ	45		; Numeric  = 0x2d
+L5:	equ	L0		; Symbolic
+
+;; Section 8.2.7.2 Absolute Expression
+L_txt:	ldaa	#44
+L_txt2:
+L6:	equ	-L4		; unary expr		0xffffffd3
+L7:	equ	L6+1000		; binary expr		0x03bb
+L8:	equ	L6-12		;			0xffffffc7
+L9:	equ	L_txt2-L_txt	; reloc - reloc		2 = sizeof(ldaa #44)
+
+;; Section 8.2.7.3 Simple Relocatable Expressions
+L10:	equ	_start		; symbol		0 + text
+L11:	equ	L10+23		; reloc+abs		0x17 + text
+L12:	equ	L11-4		; reloc-abs		0x13 + text
+L13:	equ	L12+L9		; reloc+abs		0x15 + text
+
+;; Section 8.2.8 Symbols
+	section .text
+Text_Symbol:
+	ldx	#Data_Symbol
+
+	section .data
+Data_Symbol:
+
+;; Section 8.2.8.1 Labels
+L_label_shall_be_significant_to_at_least_32_chars:
+	dc.b	1
+L_label_lower:			; Labels are case sensitive
+	dc.b	2
+L_Label_Lower:
+	dc.b	3
+
+;; Section 8.2.9 Constants
+;
+;	Section 8.2.9.1	Decimal Constants
+	section .text
+L_constant:
+	ldaa	#123		; -> ldaa #0x7b
+	ldaa	#-23		; -> ldaa #0xe9
+	
+;;	Section 8.2.9.2	Binary Constants
+	ldab	#%10001010	; -> ldab #0x8A
+	ldab	#%0111		; -> ldab #0x07
+
+;;	Section 8.2.9.3	Octal Constants
+	ldaa	#@74		; -> ldaa 0x3c
+	ldaa	#@377		; -> ldaa 0xff
+
+;;	Section 8.2.9.4	Hexadecimal Constants
+	ldaa	#$ae		; -> ldaa 0xae
+	ldaa	#$B2		; -> ldaa 0xb2
+
+;;	Section 8.2.9.5	String Constants
+	section	.data
+#	ascii	'"Single quote string"'
+	ascii	"'Double quote string'"
+
+;;	Section 8.2.9.6 Floating Point Constants
+;;	No specification
+L_float:	float	3.241592e-2
+
+;;	Section 8.2.10	Operators
+	section .text
+L_operator:
+	ldx	#(((1<<3)&(1<<3)|2)<<4)+(4*4-1)
+	ldx	#(L2>=23)&1-(L2<=23)&1+(L2==23)&1 ; -> ldx #1
+	ldx	#(L2>23)&1-(L2<23)&1+(L2==23)&1   ; -> ldx #0
+	ldx	#1-1+1-1+1-1
+	ldab	#~L4		; -> ldab #0xd2
+#	ldab	#<_start	; force to 8-bit
+#	ldx	#>_start	; force to 16-bit
+#	ldab	#page(_start)	; 68HC12 page number of symbol
+
+;; Section 8.2.11 Instructions
+;;	Defined by other tests
+
+;; Section 8.2.12 Assembler Directives
+;; 
+;; Section 8.2.12.1 Conditional Directives
+;;
+# The specification says we are allowed to have spaces in expressions.
+# This does not work with GAS in mri mode, the instruction 'if L2 < 24'
+# is in fact treated as 'if L2'.
+L_if:
+	if L2<24		; true
+	ldx	#1		; -> ldx #1
+	else
+	ldx	#2
+	endif
+	if L2<23||L2>23||L2==22+1 ; true
+	if L2<23		; false
+	ldaa	#0
+	endif
+	if L2>23		; false
+	ldaa	#1
+	endif
+	if L2 == 23		; true
+	ldaa	#L2+8		; -> ldaa #31
+	endif
+	if L2+2<23+2		; false
+	if L2+4>23+4
+	ldaa	#1
+	elseif L2==23
+	ldaa	#2
+	else
+	ldaa	#3
+	endif
+	elseif L2==23		; true
+	ldaa	#4		; -> ldaa #4
+	else
+	ldaa	#5
+	endif
+	endif
+	ifdef L1		; true
+	ldx	#23		; -> ldx #0x17
+	endif
+	ifndef L_undef		; true
+	ldx	#4		; -> ldx #4
+	endif
+
+;;	Section 8.2.12.2 Define Constant -dc
+	section	.data
+L_const_data:
+	dc.b	(1<<3)|2	; 0x0a
+	dc.w	(1<<9)+2	; 0x02 0x02
+	dc.l	$12345678
+	dc.b	10
+	dc.l	(1<<9)*(3<<12)
+#	dc.b	"Hello"
+#	dc.w	"World"
+#	dc.l	"!!!"
+
+;;	Section 8.2.12.3 Define Constant Block -dcb
+	dcb.b	3,2
+	dcb.w	2,$55AA
+	dcb.l	2,$12345678
+	dcb.b	10,2
+	dcb.w	5,$55AA
+	dcb.l	2,$12345678
+#	dcb.b	4, 12		; Fails in GAS due to space
+
+;;	Section 8.2.12.4 Define Storage - ds
+	ds.b	4
+	ds.w	2
+	ds.l	1
+	ds	2
+
+;;	Section 8.2.12.5 Equate Symbol Value - equ
+L_equ1:	equ	(1<<8)+3
+L_equ2:	equ	L_equ1*3
+L_equ3:	equ	L_equ2-L_equ1
+
+;;	Section 8.2.12.6 Include File - include
+#	include 'malis-include.s'
+#	include "malis-include.s"
+	include malis-include.s
+	include malis-include.s
+
+;;	Section 8.2.12.7 Origin - org
+	section .text
+#	org	$100
+	ldaa	#23
+#	org	$200
+	staa	24
+#	org	$0
+	rts
+
+;;	Section 8.2.12.8 Define Section - section
+	section .text
+	ldaa	23
+
+	section .data
+	dc.b	23
+
+;;	Section 8.2.12.9 Set Value of Symbol - set
+s1:	set	3
+s1:	set	4
+s2:	set	s1+2
+s3:	set	s2+4
+
+;; Section 8.2.12.10 External Symbol Definition - xdef
+	xdef	s1
+	xdef	s2
+	xdef	entry
+
+;; Section 8.2.12.11 External Symbol Reference - xref
+	section	.text
+	xref	printf
+	xrefb	write
+entry:
+	rts
+
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/movb.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/movb.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/movb.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/movb.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,451 @@
+#objdump: -D
+#as: -m68hc12
+#name: 68HC12 movb movw instructions
+
+.*:  +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+00 <\.text>:
+[ ]+ 0:	86 00[ ]+ 	ldaa	#0
+[ ]+ 2:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ 6:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ a:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+ e:	86 01[ ]+ 	ldaa	#1
+[ ]+10:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+14:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+18:	18 0a 0f 0f 	movb	15,X, 15,X
+[ ]+1c:	86 02[ ]+ 	ldaa	#2
+[ ]+1e:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+22:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+26:	18 0a 0f 10 	movb	15,X, \-16,X
+[ ]+2a:	86 03[ ]+ 	ldaa	#3
+[ ]+2c:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+30:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+34:	18 0a 10 0f 	movb	\-16,X, 15,X
+[ ]+38:	86 04[ ]+ 	ldaa	#4
+[ ]+3a:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+3e:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+42:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+46:	86 05[ ]+ 	ldaa	#5
+[ ]+48:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+4c:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+50:	18 02 0f 0f 	movw	15,X, 15,X
+[ ]+54:	86 06[ ]+ 	ldaa	#6
+[ ]+56:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+5a:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+5e:	18 02 0f 10 	movw	15,X, \-16,X
+[ ]+62:	86 07[ ]+ 	ldaa	#7
+[ ]+64:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+68:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+6c:	18 02 10 0f 	movw	\-16,X, 15,X
+[ ]+70:	86 08[ ]+ 	ldaa	#8
+[ ]+72:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+76:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+7a:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+7e:	86 09[ ]+ 	ldaa	#9
+[ ]+80:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+84:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+88:	18 0a 4f 4f 	movb	15,Y, 15,Y
+[ ]+8c:	86 0a[ ]+ 	ldaa	#10
+[ ]+8e:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+92:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+96:	18 0a 4f 50 	movb	15,Y, \-16,Y
+[ ]+9a:	86 0b[ ]+ 	ldaa	#11
+[ ]+9c:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a0:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a4:	18 0a 50 4f 	movb	\-16,Y, 15,Y
+[ ]+a8:	86 0c[ ]+	ldaa	#12
+[ ]+aa:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+ae:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+b2:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+b6:	86 0d[ ]+ 	ldaa	#13
+[ ]+b8:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+bc:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+c0:	18 02 4f 4f 	movw	15,Y, 15,Y
+[ ]+c4:	86 0e[ ]+ 	ldaa	#14
+[ ]+c6:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+ca:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+ce:	18 02 4f 50 	movw	15,Y, \-16,Y
+[ ]+d2:	86 0f[ ]+ 	ldaa	#15
+[ ]+d4:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+d8:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+dc:	18 02 50 4f 	movw	\-16,Y, 15,Y
+[ ]+e0:	86 10[ ]+ 	ldaa	#16
+[ ]+e2:	18 0a 4f cf 	movb	15,Y, 15,PC \{f5 <cat2\+0xe6>\}
+[ ]+e6:	18 0a 4f cf 	movb	15,Y, 15,PC \{f9 <cat2\+0xea>\}
+[ ]+ea:	18 0a 4f cf 	movb	15,Y, 15,PC \{fd <cat2\+0xee>\}
+[ ]+ee:	86 11[ ]+ 	ldaa	#17
+[ ]+f0:	18 0a 4f cf 	movb	15,Y, 15,PC \{103 <cat2\+0xf4>\}
+[ ]+f4:	18 0a 4f cf 	movb	15,Y, 15,PC \{107 <cat2\+0xf8>\}
+[ ]+f8:	18 0a 4f cf 	movb	15,Y, 15,PC \{10b <cat2\+0xfc>\}
+[ ]+fc:	86 12[ ]+ 	ldaa	#18
+[ ]+fe:	18 0a 4f d0 	movb	15,Y, \-16,PC \{f2 <cat2\+0xe3>\}
+ 102:	18 0a 4f d0 	movb	15,Y, \-16,PC \{f6 <cat2\+0xe7>\}
+ 106:	18 0a 4f d0 	movb	15,Y, \-16,PC \{fa <cat2\+0xeb>\}
+ 10a:	86 13[ ]+ 	ldaa	#19
+ 10c:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{11f <cat2\+0x110>\}
+ 110:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{123 <cat2\+0x114>\}
+ 114:	18 0a 50 cf 	movb	\-16,Y, 15,PC \{127 <cat2\+0x118>\}
+ 118:	86 14[ ]+ 	ldaa	#20
+ 11a:	18 02 4f cf 	movw	15,Y, 15,PC \{12d <cat2\+0x11e>\}
+ 11e:	18 02 4f cf 	movw	15,Y, 15,PC \{131 <cat2\+0x122>\}
+ 122:	18 02 4f cf 	movw	15,Y, 15,PC \{135 <cat2\+0x126>\}
+ 126:	86 15[ ]+ 	ldaa	#21
+ 128:	18 02 4f cf 	movw	15,Y, 15,PC \{13b <cat2\+0x12c>\}
+ 12c:	18 02 4f cf 	movw	15,Y, 15,PC \{13f <cat2\+0x130>\}
+ 130:	18 02 4f cf 	movw	15,Y, 15,PC \{143 <cat2\+0x134>\}
+ 134:	86 16[ ]+ 	ldaa	#22
+ 136:	18 02 4f d0 	movw	15,Y, \-16,PC \{12a <cat2\+0x11b>\}
+ 13a:	18 02 4f d0 	movw	15,Y, \-16,PC \{12e <cat2\+0x11f>\}
+ 13e:	18 02 4f d0 	movw	15,Y, \-16,PC \{132 <cat2\+0x123>\}
+ 142:	86 17[ ]+ 	ldaa	#23
+ 144:	18 02 50 cf 	movw	\-16,Y, 15,PC \{157 <cat2\+0x148>\}
+ 148:	18 02 50 cf 	movw	\-16,Y, 15,PC \{15b <cat2\+0x14c>\}
+ 14c:	18 02 50 cf 	movw	\-16,Y, 15,PC \{15f <cat2\+0x150>\}
+ 150:	86 18[ ]+ 	ldaa	#24
+ 152:	18 0a 8f cf 	movb	15,SP, 15,PC \{165 <cat2\+0x156>\}
+ 156:	18 0a 8f cf 	movb	15,SP, 15,PC \{169 <cat2\+0x15a>\}
+ 15a:	18 0a 8f cf 	movb	15,SP, 15,PC \{16d <cat2\+0x15e>\}
+ 15e:	86 19[ ]+ 	ldaa	#25
+ 160:	18 0a 8f cf 	movb	15,SP, 15,PC \{173 <cat2\+0x164>\}
+ 164:	18 0a 8f cf 	movb	15,SP, 15,PC \{177 <cat2\+0x168>\}
+ 168:	18 0a 8f cf 	movb	15,SP, 15,PC \{17b <cat2\+0x16c>\}
+ 16c:	86 1a[ ]+ 	ldaa	#26
+ 16e:	18 0a 8f d0 	movb	15,SP, \-16,PC \{162 <cat2\+0x153>\}
+ 172:	18 0a 8f d0 	movb	15,SP, \-16,PC \{166 <cat2\+0x157>\}
+ 176:	18 0a 8f d0 	movb	15,SP, \-16,PC \{16a <cat2\+0x15b>\}
+ 17a:	86 1b[ ]+ 	ldaa	#27
+ 17c:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{18f <cat2\+0x180>\}
+ 180:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{193 <cat2\+0x184>\}
+ 184:	18 0a 90 cf 	movb	\-16,SP, 15,PC \{197 <cat2\+0x188>\}
+ 188:	86 1c[ ]+ 	ldaa	#28
+ 18a:	18 02 8f cf 	movw	15,SP, 15,PC \{19d <cat2\+0x18e>\}
+ 18e:	18 02 8f cf 	movw	15,SP, 15,PC \{1a1 <cat2\+0x192>\}
+ 192:	18 02 8f cf 	movw	15,SP, 15,PC \{1a5 <cat2\+0x196>\}
+ 196:	86 1d[ ]+ 	ldaa	#29
+ 198:	18 02 8f cf 	movw	15,SP, 15,PC \{1ab <cat2\+0x19c>\}
+ 19c:	18 02 8f cf 	movw	15,SP, 15,PC \{1af <cat2\+0x1a0>\}
+ 1a0:	18 02 8f cf 	movw	15,SP, 15,PC \{1b3 <cat2\+0x1a4>\}
+ 1a4:	86 1e[ ]+ 	ldaa	#30
+ 1a6:	18 02 8f d0 	movw	15,SP, \-16,PC \{19a <cat2\+0x18b>\}
+ 1aa:	18 02 8f d0 	movw	15,SP, \-16,PC \{19e <cat2\+0x18f>\}
+ 1ae:	18 02 8f d0 	movw	15,SP, \-16,PC \{1a2 <cat2\+0x193>\}
+ 1b2:	86 1f[ ]+ 	ldaa	#31
+ 1b4:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1c7 <cat2\+0x1b8>\}
+ 1b8:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1cb <cat2\+0x1bc>\}
+ 1bc:	18 02 90 cf 	movw	\-16,SP, 15,PC \{1cf <cat2\+0x1c0>\}
+ 1c0:	86 20[ ]+ 	ldaa	#32
+ 1c2:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1c6:	00 
+ 1c7:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1cb:	00 
+ 1cc:	18 09 0f 10 	movb	1000 <cat2\+0xff1>, 15,X
+ 1d0:	00 
+ 1d1:	86 21[ ]+ 	ldaa	#33
+ 1d3:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1d7:	00 
+ 1d8:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1dc:	00 
+ 1dd:	18 0d 0f 10 	movb	15,X, 1000 <cat2\+0xff1>
+ 1e1:	00 
+ 1e2:	86 22[ ]+ 	ldaa	#34
+ 1e4:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1e8:	00 
+ 1e9:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1ed:	00 
+ 1ee:	18 09 10 10 	movb	1000 <cat2\+0xff1>, \-16,X
+ 1f2:	00 
+ 1f3:	86 23[ ]+ 	ldaa	#35
+ 1f5:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 1f9:	00 
+ 1fa:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 1fe:	00 
+ 1ff:	18 0d 10 10 	movb	\-16,X, 1000 <cat2\+0xff1>
+ 203:	00 
+ 204:	86 24[ ]+ 	ldaa	#36
+ 206:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 20a:	02 
+ 20b:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 20f:	02 
+ 210:	18 01 0f 10 	movw	1002 <cat2\+0xff3>, 15,X
+ 214:	02 
+ 215:	86 25[ ]+ 	ldaa	#37
+ 217:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 21b:	02 
+ 21c:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 220:	02 
+ 221:	18 05 0f 10 	movw	15,X, 1002 <cat2\+0xff3>
+ 225:	02 
+ 226:	86 26[ ]+ 	ldaa	#38
+ 228:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 22c:	02 
+ 22d:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 231:	02 
+ 232:	18 01 10 10 	movw	1002 <cat2\+0xff3>, \-16,X
+ 236:	02 
+ 237:	86 27[ ]+ 	ldaa	#39
+ 239:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 23d:	02 
+ 23e:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 242:	02 
+ 243:	18 05 10 10 	movw	\-16,X, 1002 <cat2\+0xff3>
+ 247:	02 
+ 248:	86 28[ ]+ 	ldaa	#40
+ 24a:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 24e:	00 
+ 24f:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 253:	00 
+ 254:	18 09 4f 10 	movb	1000 <cat2\+0xff1>, 15,Y
+ 258:	00 
+ 259:	86 29[ ]+ 	ldaa	#41
+ 25b:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 25f:	00 
+ 260:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 264:	00 
+ 265:	18 0d 4f 10 	movb	15,Y, 1000 <cat2\+0xff1>
+ 269:	00 
+ 26a:	86 2a[ ]+ 	ldaa	#42
+ 26c:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 270:	00 
+ 271:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 275:	00 
+ 276:	18 09 50 10 	movb	1000 <cat2\+0xff1>, \-16,Y
+ 27a:	00 
+ 27b:	86 2b[ ]+ 	ldaa	#43
+ 27d:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 281:	00 
+ 282:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 286:	00 
+ 287:	18 0d 50 10 	movb	\-16,Y, 1000 <cat2\+0xff1>
+ 28b:	00 
+ 28c:	86 2c[ ]+ 	ldaa	#44
+ 28e:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 292:	02 
+ 293:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 297:	02 
+ 298:	18 01 4f 10 	movw	1002 <cat2\+0xff3>, 15,Y
+ 29c:	02 
+ 29d:	86 2d[ ]+ 	ldaa	#45
+ 29f:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2a3:	02 
+ 2a4:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2a8:	02 
+ 2a9:	18 05 4f 10 	movw	15,Y, 1002 <cat2\+0xff3>
+ 2ad:	02 
+ 2ae:	86 2e[ ]+ 	ldaa	#46
+ 2b0:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2b4:	02 
+ 2b5:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2b9:	02 
+ 2ba:	18 01 50 10 	movw	1002 <cat2\+0xff3>, \-16,Y
+ 2be:	02 
+ 2bf:	86 2f[ ]+ 	ldaa	#47
+ 2c1:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2c5:	02 
+ 2c6:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2ca:	02 
+ 2cb:	18 05 50 10 	movw	\-16,Y, 1002 <cat2\+0xff3>
+ 2cf:	02 
+ 2d0:	86 30[ ]+ 	ldaa	#48
+ 2d2:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2e4 <cat2\+0x2d5>\}
+ 2d6:	00 
+ 2d7:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2e9 <cat2\+0x2da>\}
+ 2db:	00 
+ 2dc:	18 09 cf 10 	movb	1000 <cat2\+0xff1>, 15,PC \{2ee <cat2\+0x2df>\}
+ 2e0:	00 
+ 2e1:	86 31[ ]+ 	ldaa	#49
+ 2e3:	18 0d cf 10 	movb	15,PC \{2f5 <cat2\+0x2e6>\}, 1000 <cat2\+0xff1>
+ 2e7:	00 
+ 2e8:	18 0d cf 10 	movb	15,PC \{2fa <cat2\+0x2eb>\}, 1000 <cat2\+0xff1>
+ 2ec:	00 
+ 2ed:	18 0d cf 10 	movb	15,PC \{2ff <cat2\+0x2f0>\}, 1000 <cat2\+0xff1>
+ 2f1:	00 
+ 2f2:	86 32[ ]+ 	ldaa	#50
+ 2f4:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2e7 <cat2\+0x2d8>\}
+ 2f8:	00 
+ 2f9:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2ec <cat2\+0x2dd>\}
+ 2fd:	00 
+ 2fe:	18 09 d0 10 	movb	1000 <cat2\+0xff1>, \-16,PC \{2f1 <cat2\+0x2e2>\}
+ 302:	00 
+ 303:	86 33[ ]+ 	ldaa	#51
+ 305:	18 0d d0 10 	movb	\-16,PC \{2f8 <cat2\+0x2e9>\}, 1000 <cat2\+0xff1>
+ 309:	00 
+ 30a:	18 0d d0 10 	movb	\-16,PC \{2fd <cat2\+0x2ee>\}, 1000 <cat2\+0xff1>
+ 30e:	00 
+ 30f:	18 0d d0 10 	movb	\-16,PC \{302 <cat2\+0x2f3>\}, 1000 <cat2\+0xff1>
+ 313:	00 
+ 314:	86 34[ ]+ 	ldaa	#52
+ 316:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{328 <cat2\+0x319>\}
+ 31a:	02 
+ 31b:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{32d <cat2\+0x31e>\}
+ 31f:	02 
+ 320:	18 01 cf 10 	movw	1002 <cat2\+0xff3>, 15,PC \{332 <cat2\+0x323>\}
+ 324:	02 
+ 325:	86 35[ ]+ 	ldaa	#53
+ 327:	18 05 cf 10 	movw	15,PC \{339 <cat2\+0x32a>\}, 1002 <cat2\+0xff3>
+ 32b:	02 
+ 32c:	18 05 cf 10 	movw	15,PC \{33e <cat2\+0x32f>\}, 1002 <cat2\+0xff3>
+ 330:	02 
+ 331:	18 05 cf 10 	movw	15,PC \{343 <cat2\+0x334>\}, 1002 <cat2\+0xff3>
+ 335:	02 
+ 336:	86 36[ ]+ 	ldaa	#54
+ 338:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{32b <cat2\+0x31c>\}
+ 33c:	02 
+ 33d:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{330 <cat2\+0x321>\}
+ 341:	02 
+ 342:	18 01 d0 10 	movw	1002 <cat2\+0xff3>, \-16,PC \{335 <cat2\+0x326>\}
+ 346:	02 
+ 347:	86 37[ ]+ 	ldaa	#55
+ 349:	18 05 d0 10 	movw	\-16,PC \{33c <cat2\+0x32d>\}, 1002 <cat2\+0xff3>
+ 34d:	02 
+ 34e:	18 05 d0 10 	movw	\-16,PC \{341 <cat2\+0x332>\}, 1002 <cat2\+0xff3>
+ 352:	02 
+ 353:	18 05 d0 10 	movw	\-16,PC \{346 <cat2\+0x337>\}, 1002 <cat2\+0xff3>
+ 357:	02 
+ 358:	86 38[ ]+ 	ldaa	#56
+ 35a:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 35e:	00 
+ 35f:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 363:	00 
+ 364:	18 09 8f 10 	movb	1000 <cat2\+0xff1>, 15,SP
+ 368:	00 
+ 369:	86 39[ ]+ 	ldaa	#57
+ 36b:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 36f:	00 
+ 370:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 374:	00 
+ 375:	18 0d 8f 10 	movb	15,SP, 1000 <cat2\+0xff1>
+ 379:	00 
+ 37a:	86 3a[ ]+ 	ldaa	#58
+ 37c:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 380:	00 
+ 381:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 385:	00 
+ 386:	18 09 90 10 	movb	1000 <cat2\+0xff1>, \-16,SP
+ 38a:	00 
+ 38b:	86 3b[ ]+ 	ldaa	#59
+ 38d:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 391:	00 
+ 392:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 396:	00 
+ 397:	18 0d 90 10 	movb	\-16,SP, 1000 <cat2\+0xff1>
+ 39b:	00 
+ 39c:	86 3c[ ]+ 	ldaa	#60
+ 39e:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3a2:	02 
+ 3a3:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3a7:	02 
+ 3a8:	18 01 8f 10 	movw	1002 <cat2\+0xff3>, 15,SP
+ 3ac:	02 
+ 3ad:	86 3d[ ]+ 	ldaa	#61
+ 3af:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3b3:	02 
+ 3b4:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3b8:	02 
+ 3b9:	18 05 8f 10 	movw	15,SP, 1002 <cat2\+0xff3>
+ 3bd:	02 
+ 3be:	86 3e[ ]+ 	ldaa	#62
+ 3c0:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3c4:	02 
+ 3c5:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3c9:	02 
+ 3ca:	18 01 90 10 	movw	1002 <cat2\+0xff3>, \-16,SP
+ 3ce:	02 
+ 3cf:	86 3f[ ]+ 	ldaa	#63
+ 3d1:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3d5:	02 
+ 3d6:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3da:	02 
+ 3db:	18 05 90 10 	movw	\-16,SP, 1002 <cat2\+0xff3>
+ 3df:	02 
+ 3e0:	86 40[ ]+ 	ldaa	#64
+ 3e2:	18 08 07 aa 	movb	#170, 7,X
+ 3e6:	18 08 07 aa 	movb	#170, 7,X
+ 3ea:	18 08 07 aa 	movb	#170, 7,X
+ 3ee:	86 41[ ]+ 	ldaa	#65
+ 3f0:	18 08 18 aa 	movb	#170, \-8,X
+ 3f4:	18 08 18 aa 	movb	#170, \-8,X
+ 3f8:	18 08 18 aa 	movb	#170, \-8,X
+ 3fc:	86 42[ ]+ 	ldaa	#66
+ 3fe:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 402:	44 
+ 403:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 407:	44 
+ 408:	18 00 07 00 	movw	#44 <cat2\+0x35>, 7,X
+ 40c:	44 
+ 40d:	86 43[ ]+ 	ldaa	#67
+ 40f:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 413:	44 
+ 414:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 418:	44 
+ 419:	18 00 18 00 	movw	#44 <cat2\+0x35>, \-8,X
+ 41d:	44 
+ 41e:	86 44[ ]+ 	ldaa	#68
+ 420:	18 08 47 aa 	movb	#170, 7,Y
+ 424:	18 08 47 aa 	movb	#170, 7,Y
+ 428:	18 08 47 aa 	movb	#170, 7,Y
+ 42c:	86 45[ ]+ 	ldaa	#69
+ 42e:	18 08 58 aa 	movb	#170, \-8,Y
+ 432:	18 08 58 aa 	movb	#170, \-8,Y
+ 436:	18 08 58 aa 	movb	#170, \-8,Y
+ 43a:	86 46[ ]+ 	ldaa	#70
+ 43c:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 440:	44 
+ 441:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 445:	44 
+ 446:	18 00 47 00 	movw	#44 <cat2\+0x35>, 7,Y
+ 44a:	44 
+ 44b:	86 47[ ]+ 	ldaa	#71
+ 44d:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 451:	44 
+ 452:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 456:	44 
+ 457:	18 00 58 00 	movw	#44 <cat2\+0x35>, \-8,Y
+ 45b:	44 
+ 45c:	86 48[ ]+ 	ldaa	#72
+ 45e:	18 08 c7 aa 	movb	#170, 7,PC \{468 <cat2\+0x459>\}
+ 462:	18 08 c7 aa 	movb	#170, 7,PC \{46c <cat2\+0x45d>\}
+ 466:	18 08 c7 aa 	movb	#170, 7,PC \{470 <cat2\+0x461>\}
+ 46a:	86 49[ ]+ 	ldaa	#73
+ 46c:	18 08 d8 aa 	movb	#170, \-8,PC \{467 <cat2\+0x458>\}
+ 470:	18 08 d8 aa 	movb	#170, \-8,PC \{46b <cat2\+0x45c>\}
+ 474:	18 08 d8 aa 	movb	#170, \-8,PC \{46f <cat2\+0x460>\}
+ 478:	86 4a[ ]+ 	ldaa	#74
+ 47a:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{484 <cat2\+0x475>\}
+ 47e:	44 
+ 47f:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{489 <cat2\+0x47a>\}
+ 483:	44 
+ 484:	18 00 c7 00 	movw	#44 <cat2\+0x35>, 7,PC \{48e <cat2\+0x47f>\}
+ 488:	44 
+ 489:	86 4b[ ]+ 	ldaa	#75
+ 48b:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{486 <cat2\+0x477>\}
+ 48f:	44 
+ 490:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{48b <cat2\+0x47c>\}
+ 494:	44 
+ 495:	18 00 d8 00 	movw	#44 <cat2\+0x35>, \-8,PC \{490 <cat2\+0x481>\}
+ 499:	44 
+ 49a:	86 4c[ ]+ 	ldaa	#76
+ 49c:	18 08 87 aa 	movb	#170, 7,SP
+ 4a0:	18 08 87 aa 	movb	#170, 7,SP
+ 4a4:	18 08 87 aa 	movb	#170, 7,SP
+ 4a8:	86 4d[ ]+ 	ldaa	#77
+ 4aa:	18 08 98 aa 	movb	#170, \-8,SP
+ 4ae:	18 08 98 aa 	movb	#170, \-8,SP
+ 4b2:	18 08 98 aa 	movb	#170, \-8,SP
+ 4b6:	86 4e[ ]+ 	ldaa	#78
+ 4b8:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4bc:	44 
+ 4bd:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4c1:	44 
+ 4c2:	18 00 87 00 	movw	#44 <cat2\+0x35>, 7,SP
+ 4c6:	44 
+ 4c7:	86 4f[ ]+ 	ldaa	#79
+ 4c9:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4cd:	44 
+ 4ce:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4d2:	44 
+ 4d3:	18 00 98 00 	movw	#44 <cat2\+0x35>, \-8,SP
+ 4d7:	44 
+ 4d8:	86 50[ ]+ 	ldaa	#80
+
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/movb.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/movb.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/movb.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/movb.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,333 @@
+	dog2=15
+	dog3=-16
+	dog4=7
+	dog5=-8
+	;; idx - idx
+	ldaa #0
+	movb 15,x,dog2,x
+	movb 15,x,cat2,x
+	movb 15,x,15,x
+	ldaa #1
+	movb dog2,x,15,x
+	movb cat2,x,15,x
+	movb 15,x,15,x
+	ldaa #2
+	movb 15,x,dog3,x
+	movb 15,x,cat3,x	
+	movb 15,x,-16,x
+	ldaa #3		
+	movb dog3,x,15,x
+	movb cat3,x,15,x	
+	movb -16,x,15,x
+	ldaa #4
+	movw 15,x,dog2,x
+	movw 15,x,cat2,x
+	movw 15,x,15,x
+	ldaa #5
+	movw dog2,x,15,x
+	movw cat2,x,15,x
+	movw 15,x,15,x
+	ldaa #6
+	movw 15,x,dog3,x
+	movw 15,x,cat3,x
+	movw 15,x,-16,x
+	ldaa #7
+	movw dog3,x,15,x
+	movw cat3,x,15,x
+	movw -16,x,15,x
+	ldaa #8
+	movb 15,y,dog2,y
+	movb 15,y,cat2,y
+	movb 15,y,15,y
+	ldaa #9
+	movb dog2,y,15,y
+	movb cat2,y,15,y
+	movb 15,y,15,y
+	ldaa #10
+	movb 15,y,dog3,y
+	movb 15,y,cat3,y
+	movb 15,y,-16,y
+	ldaa #11
+	movb dog3,y,15,y
+	movb cat3,y,15,y
+	movb -16,y,15,y
+	ldaa #12
+	movw 15,y,dog2,y
+	movw 15,y,cat2,y
+	movw 15,y,15,y
+	ldaa #13
+	movw dog2,y,15,y
+	movw cat2,y,15,y
+	movw 15,y,15,y
+	ldaa #14
+	movw 15,y,dog3,y
+	movw 15,y,cat3,y
+	movw 15,y,-16,y
+	ldaa #15
+	movw dog3,y,15,y
+	movw cat3,y,15,y
+	movw -16,y,15,y
+	ldaa #16
+	movb 15,y,dog2,pc
+	movb 15,y,cat2,pc
+	movb 15,y,15,pc
+	ldaa #17
+	movb dog2,y,15,pc
+	movb cat2,y,15,pc
+	movb 15,y,15,pc
+	ldaa #18
+	movb 15,y,dog3,pc
+	movb 15,y,cat3,pc
+	movb 15,y,-16,pc
+	ldaa #19
+	movb dog3,y,15,pc
+	movb cat3,y,15,pc
+	movb -16,y,15,pc
+	ldaa #20
+	movw 15,y,dog2,pc
+	movw 15,y,cat2,pc
+	movw 15,y,15,pc
+	ldaa #21
+	movw dog2,y,15,pc
+	movw cat2,y,15,pc
+	movw 15,y,15,pc
+	ldaa #22
+	movw 15,y,dog3,pc
+	movw 15,y,cat3,pc
+	movw 15,y,-16,pc
+	ldaa #23
+	movw dog3,y,15,pc
+	movw cat3,y,15,pc
+	movw -16,y,15,pc
+	ldaa #24
+	movb 15,sp,dog2,pc
+	movb 15,sp,cat2,pc
+	movb 15,sp,15,pc
+	ldaa #25
+	movb dog2,sp,15,pc
+	movb cat2,sp,15,pc
+	movb 15,sp,15,pc
+	ldaa #26
+	movb 15,sp,dog3,pc
+	movb 15,sp,cat3,pc
+	movb 15,sp,-16,pc
+	ldaa #27
+	movb dog3,sp,15,pc
+	movb cat3,sp,15,pc
+	movb -16,sp,15,pc
+	ldaa #28
+	movw 15,sp,dog2,pc
+	movw 15,sp,cat2,pc
+	movw 15,sp,15,pc
+	ldaa #29
+	movw dog2,sp,15,pc
+	movw cat2,sp,15,pc
+	movw 15,sp,15,pc
+	ldaa #30
+	movw 15,sp,dog3,pc
+	movw 15,sp,cat3,pc
+	movw 15,sp,-16,pc
+	ldaa #31
+	movw dog3,sp,15,pc
+	movw cat3,sp,15,pc
+	movw -16,sp,15,pc
+	ldaa #32
+	;; ext - idx
+	;; idx - ext
+	movb 0x1000,dog2,x
+	movb 0x1000,cat2,x
+	movb 0x1000,15,x
+	ldaa #33
+	movb dog2,x,0x1000
+	movb cat2,x,0x1000
+	movb 15,x,0x1000
+	ldaa #34
+	movb 0x1000,dog3,x
+	movb 0x1000,cat3,x
+	movb 0x1000,-16,x
+	ldaa #35
+	movb dog3,x,0x1000
+	movb cat3,x,0x1000
+	movb -16,x,0x1000
+	ldaa #36
+	movw 0x1002,dog2,x
+	movw 0x1002,cat2,x
+	movw 0x1002,15,x
+	ldaa #37
+	movw dog2,x,0x1002
+	movw cat2,x,0x1002
+	movw 15,x,0x1002
+	ldaa #38
+	movw 0x1002,dog3,x
+	movw 0x1002,cat3,x
+	movw 0x1002,-16,x
+	ldaa #39
+	movw dog3,x,0x1002
+	movw cat3,x,0x1002
+	movw -16,x,0x1002
+	ldaa #40
+	movb 0x1000,dog2,y
+	movb 0x1000,cat2,y
+	movb 0x1000,15,y
+	ldaa #41
+	movb dog2,y,0x1000
+	movb cat2,y,0x1000
+	movb 15,y,0x1000
+	ldaa #42
+	movb 0x1000,dog3,y
+	movb 0x1000,cat3,y
+	movb 0x1000,-16,y
+	ldaa #43
+	movb dog3,y,0x1000
+	movb cat3,y,0x1000
+	movb -16,y,0x1000
+	ldaa #44
+	movw 0x1002,dog2,y
+	movw 0x1002,cat2,y
+	movw 0x1002,15,y
+	ldaa #45
+	movw dog2,y,0x1002
+	movw cat2,y,0x1002
+	movw 15,y,0x1002
+	ldaa #46
+	movw 0x1002,dog3,y
+	movw 0x1002,cat3,y
+	movw 0x1002,-16,y
+	ldaa #47
+	movw dog3,y,0x1002
+	movw cat3,y,0x1002
+	movw -16,y,0x1002
+	ldaa #48
+	movb 0x1000,dog2,pc
+	movb 0x1000,cat2,pc
+	movb 0x1000,15,pc
+	ldaa #49
+	movb dog2,pc,0x1000
+	movb cat2,pc,0x1000
+	movb 15,pc,0x1000
+	ldaa #50
+	movb 0x1000,dog3,pc
+	movb 0x1000,cat3,pc
+	movb 0x1000,-16,pc
+	ldaa #51
+	movb dog3,pc,0x1000
+	movb cat3,pc,0x1000
+	movb -16,pc,0x1000
+	ldaa #52
+	movw 0x1002,dog2,pc
+	movw 0x1002,cat2,pc
+	movw 0x1002,15,pc
+	ldaa #53
+	movw dog2,pc,0x1002
+	movw cat2,pc,0x1002
+	movw 15,pc,0x1002
+	ldaa #54
+	movw 0x1002,dog3,pc
+	movw 0x1002,cat3,pc
+	movw 0x1002,-16,pc
+	ldaa #55
+	movw dog3,pc,0x1002
+	movw cat3,pc,0x1002
+	movw -16,pc,0x1002
+	ldaa #56
+	movb 0x1000,dog2,sp
+	movb 0x1000,cat2,sp
+	movb 0x1000,15,sp
+	ldaa #57
+	movb dog2,sp,0x1000
+	movb cat2,sp,0x1000
+	movb 15,sp,0x1000
+	ldaa #58
+	movb 0x1000,dog3,sp
+	movb 0x1000,cat3,sp
+	movb 0x1000,-16,sp
+	ldaa #59
+	movb dog3,sp,0x1000
+	movb cat3,sp,0x1000
+	movb -16,sp,0x1000
+	ldaa #60
+	movw 0x1002,dog2,sp
+	movw 0x1002,cat2,sp
+	movw 0x1002,15,sp
+	ldaa #61
+	movw dog2,sp,0x1002
+	movw cat2,sp,0x1002
+	movw 15,sp,0x1002
+	ldaa #62
+	movw 0x1002,dog3,sp
+	movw 0x1002,cat3,sp
+	movw 0x1002,-16,sp
+	ldaa #63
+	movw dog3,sp,0x1002
+	movw cat3,sp,0x1002
+	movw -16,sp,0x1002
+	ldaa #64
+	;; imm - idx
+	movb #0xaa,dog4,x
+	movb #0xaa,cat4,x
+	movb #0xaa,7,x
+	ldaa #65
+	movb #0xaa,dog5,x
+	movb #0xaa,cat5,x
+	movb #0xaa,-8,x
+	ldaa #66
+	movw #0x44,dog4,x
+	movw #0x44,cat4,x
+	movw #0x44,7,x
+	ldaa #67
+	movw #0x44,dog5,x
+	movw #0x44,cat5,x
+	movw #0x44,-8,x
+	ldaa #68
+	movb #0xaa,dog4,y
+	movb #0xaa,cat4,y
+	movb #0xaa,7,y
+	ldaa #69
+	movb #0xaa,dog5,y
+	movb #0xaa,cat5,y
+	movb #0xaa,-8,y
+	ldaa #70
+	movw #0x44,dog4,y
+	movw #0x44,cat4,y
+	movw #0x44,7,y
+	ldaa #71
+	movw #0x44,dog5,y
+	movw #0x44,cat5,y
+	movw #0x44,-8,y
+	ldaa #72
+	movb #0xaa,dog4,pc
+	movb #0xaa,cat4,pc
+	movb #0xaa,7,pc
+	ldaa #73
+	movb #0xaa,dog5,pc
+	movb #0xaa,cat5,pc
+	movb #0xaa,-8,pc
+	ldaa #74
+	movw #0x44,dog4,pc
+	movw #0x44,cat4,pc
+	movw #0x44,7,pc
+	ldaa #75
+	movw #0x44,dog5,pc
+	movw #0x44,cat5,pc
+	movw #0x44,-8,pc
+	ldaa #76
+	movb #0xaa,dog4,sp
+	movb #0xaa,cat4,sp
+	movb #0xaa,7,sp
+	ldaa #77
+	movb #0xaa,dog5,sp
+	movb #0xaa,cat5,sp
+	movb #0xaa,-8,sp
+	ldaa #78
+	movw #0x44,dog4,sp
+	movw #0x44,cat4,sp
+	movw #0x44,7,sp
+	ldaa #79
+	movw #0x44,dog5,sp
+	movw #0x44,cat5,sp
+	movw #0x44,-8,sp
+	ldaa #80
+	cat2=15
+	cat3=-16
+	cat4=7
+	cat5=-8
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/opers12-dwarf2.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12-dwarf2.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/opers12-dwarf2.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12-dwarf2.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,242 @@
+#objdump: -S
+#as: -m68hc12 -gdwarf2
+#name: Dwarf2 test on opers12.s
+#source: opers12.s
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+
+0+00 <start>:
+#...
+	sect .text
+	globl start
+
+start:
+	anda	\[12,x\]		; Indexed indirect
+   0:	a4 e3 00 0c 	anda	\[12,X\]
+	ldaa	#10
+   4:	86 0a       	ldaa	#10
+	ldx	L1
+   6:	fe 00 00    	ldx	0 <start>
+
+0+09 <L1>:
+L1:	ldy	,x
+   9:	ed 00       	ldy	0,X
+	addd	1,y		; Offset from register
+   b:	e3 41       	addd	1,Y
+	subd	\-1,y
+   d:	a3 5f       	subd	\-1,Y
+	eora	15,y
+   f:	a8 4f       	eora	15,Y
+	eora	\-16,y
+  11:	a8 50       	eora	\-16,Y
+	eorb	16,y
+  13:	e8 e8 10    	eorb	16,Y
+	eorb	\-17,y
+  16:	e8 e9 ef    	eorb	\-17,Y
+	oraa	128,sp
+  19:	aa f0 80    	oraa	128,SP
+	orab	\-128,sp
+  1c:	ea f1 80    	orab	\-128,SP
+	orab	255,x
+  1f:	ea e0 ff    	orab	255,X
+	orab	\-256,x
+  22:	ea e1 00    	orab	\-256,X
+	anda	256,x
+  25:	a4 e2 01 00 	anda	256,X
+	andb	\-257,x
+  29:	e4 e2 fe ff 	andb	\-257,X
+	anda	\[12,x\]		; Indexed indirect \(16\-bit offset\)
+  2d:	a4 e3 00 0c 	anda	\[12,X\]
+	ldaa	\[257,y\]
+  31:	a6 eb 01 01 	ldaa	\[257,Y\]
+	ldab	\[32767,sp\]
+  35:	e6 f3 7f ff 	ldab	\[32767,SP\]
+	ldd	\[32768,pc\]
+  39:	ec fb 80 00 	ldd	\[32768,PC\]
+	ldd	L1,pc
+  3d:	ec f9 c9    	ldd	-55,PC \{9 <L1>\}
+	std	a,x		; Two\-reg index
+  40:	6c e4       	std	A,X
+	ldx	b,x
+  42:	ee e5       	ldx	B,X
+	stx	d,y
+  44:	6e ee       	stx	D,Y
+	addd	1,\+x		; Pre\-Auto inc
+  46:	e3 20       	addd	1,\+X
+	addd	2,\+x
+  48:	e3 21       	addd	2,\+X
+	addd	8,\+x
+  4a:	e3 27       	addd	8,\+X
+	addd	1,sp\+		; Post\-Auto inc
+  4c:	e3 b0       	addd	1,SP\+
+	addd	2,sp\+
+  4e:	e3 b1       	addd	2,SP\+
+	addd	8,sp\+
+  50:	e3 b7       	addd	8,SP\+
+	subd	1,\-y		; Pre\-Auto dec
+  52:	a3 6f       	subd	1,\-Y
+	subd	2,\-y
+  54:	a3 6e       	subd	2,\-Y
+	subd	8,\-y
+  56:	a3 68       	subd	8,\-Y
+	addd	1,y\-		; Post\-Auto dec
+  58:	e3 7f       	addd	1,Y\-
+	addd	2,y\-
+  5a:	e3 7e       	addd	2,Y\-
+	addd	8,y\-
+  5c:	e3 78       	addd	8,Y\-
+	std	\[d,x\]		; Indexed indirect with two reg index
+  5e:	6c e7       	std	\[D,X\]
+	std	\[d,y\]
+  60:	6c ef       	std	\[D,Y\]
+	std	\[d,sp\]
+  62:	6c f7       	std	\[D,SP\]
+	std	\[d,pc\]
+  64:	6c ff       	std	\[D,PC\]
+	beq	L1
+  66:	27 a1       	beq	9 <L1>
+	lbeq	start
+  68:	18 27 ff 94 	lbeq	0 <start>
+	lbcc	L2
+  6c:	18 24 00 4c 	lbcc	bc <L2>
+;;
+;; Move insn with various operands
+;; 
+	movb	start, 1,x
+  70:	18 09 01 00 	movb	0 <start>, 1,X
+  74:	00 
+	movw	1,x, start
+  75:	18 05 01 00 	movw	1,X, 0 <start>
+  79:	00 
+	movb	start, 1,\+x
+  7a:	18 09 20 00 	movb	0 <start>, 1,\+X
+  7e:	00 
+	movb	start, 1,\-x
+  7f:	18 09 2f 00 	movb	0 <start>, 1,\-X
+  83:	00 
+	movb	#23, 1,\-sp
+  84:	18 08 af 17 	movb	#23, 1,\-SP
+	movb	L1, L2
+  88:	18 0c 00 00 	movb	0 <start>, 0 <start>
+  8c:	00 00 
+	movb	L1, a,x
+  8e:	18 09 e4 00 	movb	0 <start>, A,X
+  92:	00 
+	movw	L1, b,x
+  93:	18 01 e5 00 	movw	0 <start>, B,X
+  97:	00 
+	movw	L1, d,x
+  98:	18 01 e6 00 	movw	0 <start>, D,X
+  9c:	00 
+	movw	d,x, a,x
+  9d:	18 02 e6 e4 	movw	D,X, A,X
+	movw	b,sp, d,pc
+  a1:	18 02 f5 fe 	movw	B,SP, D,PC
+	movw	b,sp, L1
+  a5:	18 05 f5 00 	movw	B,SP, 0 <start>
+  a9:	00 
+	movw	b,sp, 1,x
+  aa:	18 02 f5 01 	movw	B,SP, 1,X
+	movw	d,x, a,y
+  ae:	18 02 e6 ec 	movw	D,X, A,Y
+	trap	#0x30
+  b2:	18 30       	trap	#48
+	trap	#0x39
+  b4:	18 39       	trap	#57
+	trap	#0x40
+  b6:	18 40       	trap	#64
+	trap	#0x80
+  b8:	18 80       	trap	#128
+	trap	#255
+  ba:	18 ff       	trap	#255
+
+0+bc <L2>:
+L2:	
+	movw 1,x,2,x
+  bc:	18 02 01 02 	movw	1,X, 2,X
+	movw \-1,\-1
+  c0:	18 04 ff ff 	movw	ffff <bb\+0xd7ff>, ffff <bb\+0xd7ff>
+  c4:	ff ff 
+	movw \-1,1,x
+  c6:	18 01 01 ff 	movw	ffff <bb\+0xd7ff>, 1,X
+  ca:	ff 
+	movw #\-1,1,x
+  cb:	18 00 01 ff 	movw	#ffff <bb\+0xd7ff>, 1,X
+  cf:	ff 
+	movw 3,8
+  d0:	18 04 00 03 	movw	3 <start\+0x3>, 8 <start\+0x8>
+  d4:	00 08 
+	movw #3,3
+  d6:	18 03 00 03 	movw	#3 <start\+0x3>, 3 <start\+0x3>
+  da:	00 03 
+	movw #3,1,x
+  dc:	18 00 01 00 	movw	#3 <start\+0x3>, 1,X
+  e0:	03 
+	movw 3,1,x
+  e1:	18 01 01 00 	movw	3 <start\+0x3>, 1,X
+  e5:	03 
+	movw 3,\+2,x
+  e6:	18 01 02 00 	movw	3 <start\+0x3>, 2,X
+  ea:	03 
+	movw 4,\-2,x
+  eb:	18 01 1e 00 	movw	4 <start\+0x4>, \-2,X
+  ef:	04 
+	rts
+  f0:	3d          	rts
+
+0+f1 <post_indexed_pb>:
+;;
+;; Post\-index byte with relocation
+;; 
+post_indexed_pb:
+t1:
+	leas	abort,x
+  f1:	1b e2 00 00 	leas	0,X
+
+0+f5 <t2>:
+t2:
+	leax	t2\-t1,y
+  f5:	1a 44       	leax	4,Y
+	leax	toto,x
+  f7:	1a e0 64    	leax	100,X
+	leas	toto\+titi,sp
+  fa:	1b f0 6e    	leas	110,SP
+	leay	titi,x
+  fd:	19 0a       	leay	10,X
+	leas	bb,y
+  ff:	1b ea 28 00 	leas	10240,Y
+	leas	min5b,pc
+ 103:	1b d0       	leas	-16,PC \{f5 <t2>\}
+	leas	max5b,pc
+ 105:	1b cf       	leas	15,PC \{116 <t2\+0x21>\}
+	leas	min9b,pc
+ 107:	1b fa ff 00 	leas	-256,PC \{b <L1\+0x2>\}
+	leas	max9b,pc
+ 10b:	1b f8 ff    	leas	255,PC \{20d <L0\+0xd9>\}
+
+;;
+;; Disassembler bug with movb
+;;
+	movb	#23,0x2345
+ 10e:	18 0b 17 23 	movb	#23, 2345 <L0\+0x2211>
+ 112:	45 
+	movb	#40,12,sp
+ 113:	18 08 8c 28 	movb	#40, 12,SP
+	movb	#39,3,\+sp
+ 117:	18 08 a2 27 	movb	#39, 3,\+SP
+	movb	#20,14,sp
+ 11b:	18 08 8e 14 	movb	#20, 14,SP
+	movw	#0x3210,0x3456
+ 11f:	18 03 32 10 	movw	#3210 <bb\+0xa10>, 3456 <bb\+0xc56>
+ 123:	34 56 
+	movw	#0x4040,12,sp
+ 125:	18 00 8c 40 	movw	#4040 <bb\+0x1840>, 12,SP
+ 129:	40 
+	movw	#0x3900,3,\+sp
+ 12a:	18 00 a2 39 	movw	#3900 <bb\+0x1100>, 3,\+SP
+ 12e:	00 
+	movw	#0x2000,14,sp
+ 12f:	18 00 8e 20 	movw	#2000 <L0\+0x1ecc>, 14,SP
+ 133:	00 
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/opers12.d binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12.d
--- binutils-2.20/gas/testsuite/gas/mc9xgate/opers12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12.d	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,113 @@
+#objdump: -d --prefix-addresses --reloc
+#as: -m68hc12
+#name: 68HC12 specific addressing modes (opers12)
+
+.*: +file format elf32\-m68hc12
+
+Disassembly of section .text:
+0+0+ <start> anda	\[12,X\]
+0+0004 <start\+0x4> ldaa	#10
+0+0006 <start\+0x6> ldx	0+0+ <start>
+[	]+7: R_M68HC12_16	L1
+0+0009 <L1> ldy	0,X
+0+000b <L1\+0x2> addd	1,Y
+0+000d <L1\+0x4> subd	\-1,Y
+0+000f <L1\+0x6> eora	15,Y
+0+0011 <L1\+0x8> eora	\-16,Y
+0+0013 <L1\+0xa> eorb	16,Y
+0+0016 <L1\+0xd> eorb	\-17,Y
+0+0019 <L1\+0x10> oraa	128,SP
+0+001c <L1\+0x13> orab	\-128,SP
+0+001f <L1\+0x16> orab	255,X
+0+0022 <L1\+0x19> orab	\-256,X
+0+0025 <L1\+0x1c> anda	256,X
+0+0029 <L1\+0x20> andb	\-257,X
+0+002d <L1\+0x24> anda	\[12,X\]
+0+0031 <L1\+0x28> ldaa	\[257,Y\]
+0+0035 <L1\+0x2c> ldab	\[32767,SP\]
+0+0039 <L1\+0x30> ldd	\[32768,PC\]
+0+003d <L1\+0x34> ldd	\-55,PC \{0+9 <L1>\}
+0+0040 <L1\+0x37> std	A,X
+0+0042 <L1\+0x39> ldx	B,X
+0+0044 <L1\+0x3b> stx	D,Y
+0+0046 <L1\+0x3d> addd	1,\+X
+0+0048 <L1\+0x3f> addd	2,\+X
+0+004a <L1\+0x41> addd	8,\+X
+0+004c <L1\+0x43> addd	1,SP\+
+0+004e <L1\+0x45> addd	2,SP\+
+0+0050 <L1\+0x47> addd	8,SP\+
+0+0052 <L1\+0x49> subd	1,\-Y
+0+0054 <L1\+0x4b> subd	2,\-Y
+0+0056 <L1\+0x4d> subd	8,\-Y
+0+0058 <L1\+0x4f> addd	1,Y\-
+0+005a <L1\+0x51> addd	2,Y\-
+0+005c <L1\+0x53> addd	8,Y\-
+0+005e <L1\+0x55> std	\[D,X\]
+0+0060 <L1\+0x57> std	\[D,Y\]
+0+0062 <L1\+0x59> std	\[D,SP\]
+0+0064 <L1\+0x5b> std	\[D,PC\]
+0+0066 <L1\+0x5d> beq	0+0009 <L1>
+[	]+66: R_M68HC12_RL_JUMP	\*ABS\*
+0+0068 <L1\+0x5f> lbeq	0+0+ <start>
+[	]+68: R_M68HC12_RL_JUMP	\*ABS\*
+0+006c <L1\+0x63> lbcc	0+00bc <L2>
+[	]+6c: R_M68HC12_RL_JUMP	\*ABS\*
+0+0070 <L1\+0x67> movb	0+0+ <start>, 1,X
+[	]+73: R_M68HC12_16	start
+0+0075 <L1\+0x6c> movw	1,X, 0+0+ <start>
+[	]+78: R_M68HC12_16	start
+0+007a <L1\+0x71> movb	0+0+ <start>, 1,\+X
+[	]+7d: R_M68HC12_16	start
+0+007f <L1\+0x76> movb	0+0+ <start>, 1,\-X
+[	]+82: R_M68HC12_16	start
+0+0084 <L1\+0x7b> movb	#23, 1,\-SP
+0+0088 <L1\+0x7f> movb	0+0+ <start>, 0+0+ <start>
+[	]+8a: R_M68HC12_16	L1
+[	]+8c: R_M68HC12_16	L2
+0+008e <L1\+0x85> movb	0+0+ <start>, A,X
+[	]+91: R_M68HC12_16	L1
+0+0093 <L1\+0x8a> movw	0+0+ <start>, B,X
+[	]+96: R_M68HC12_16	L1
+0+0098 <L1\+0x8f> movw	0+0+ <start>, D,X
+[	]+9b: R_M68HC12_16	L1
+0+009d <L1\+0x94> movw	D,X, A,X
+0+00a1 <L1\+0x98> movw	B,SP, D,PC
+0+00a5 <L1\+0x9c> movw	B,SP, 0+0+ <start>
+[	]+a8: R_M68HC12_16	L1
+0+00aa <L1\+0xa1> movw	B,SP, 1,X
+0+00ae <L1\+0xa5> movw	D,X, A,Y
+0+00b2 <L1\+0xa9> trap	#48
+0+00b4 <L1\+0xab> trap	#57
+0+00b6 <L1\+0xad> trap	#64
+0+00b8 <L1\+0xaf> trap	#128
+0+00ba <L1\+0xb1> trap	#255
+0+00bc <L2> movw	1,X, 2,X
+0+00c0 <L2\+0x4> movw	0+ffff <bb\+0xd7ff>, 0+ffff <bb\+0xd7ff>
+0+00c6 <L2\+0xa> movw	0+ffff <bb\+0xd7ff>, 1,X
+0+00cb <L2\+0xf> movw	#0+ffff <bb\+0xd7ff>, 1,X
+0+00d0 <L2\+0x14> movw	0+0003 <start\+0x3>, 0+0008 <start\+0x8>
+0+00d6 <L2\+0x1a> movw	#0+0003 <start\+0x3>, 0+0003 <start\+0x3>
+0+00dc <L2\+0x20> movw	#0+0003 <start\+0x3>, 1,X
+0+00e1 <L2\+0x25> movw	0+0003 <start\+0x3>, 1,X
+0+00e6 <L2\+0x2a> movw	0+0003 <start\+0x3>, 2,X
+0+00eb <L2\+0x2f> movw	0+0004 <start\+0x4>, \-2,X
+0+00f0 <L2\+0x34> rts
+0+00f1 <post_indexed_pb> leas	0,X
+[	]+f3: R_M68HC12_16	abort
+0+00f5 <t2> leax	4,Y
+0+00f7 <t2\+0x2> leax	100,X
+0+00fa <t2\+0x5> leas	110,SP
+0+00fd <t2\+0x8> leay	10,X
+0+00ff <t2\+0xa> leas	10240,Y
+0+0103 <t2\+0xe> leas	-16,PC \{0+f5 <t2>\}
+0+0105 <t2\+0x10> leas	15,PC \{0+116 <t2\+0x21>\}
+0+0107 <t2\+0x12> leas	-256,PC \{0+b <L1\+0x2>\}
+0+010b <t2\+0x16> leas	255,PC \{0+20d <max9b\+0x10e>\}
+0+010e <t2\+0x19> movb	#23, 0+2345 <max9b\+0x2246>
+0+0113 <t2\+0x1e> movb	#40, 12,SP
+0+0117 <t2\+0x22> movb	#39, 3,\+SP
+0+011b <t2\+0x26> movb	#20, 14,SP
+0+011f <t2\+0x2a> movw	#0+3210 <bb\+0xa10>, 0+3456 <bb\+0xc56>
+0+0125 <t2\+0x30> movw	#0+4040 <bb\+0x1840>, 12,SP
+0+012a <t2\+0x35> movw	#0+3900 <bb\+0x1100>, 3,\+SP
+0+012f <t2\+0x3a> movw	#0+2000 <max9b\+0x1f01>, 14,SP
diff -rupN binutils-2.20/gas/testsuite/gas/mc9xgate/opers12.s binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12.s
--- binutils-2.20/gas/testsuite/gas/mc9xgate/opers12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/gas/testsuite/gas/mc9xgate/opers12.s	2010-10-01 14:37:31.000000000 -0600
@@ -0,0 +1,122 @@
+
+#
+# Try to verify all operand modes for 68HC12
+#
+	sect .text
+	globl start
+
+start:
+	anda	[12,x]		; Indexed indirect
+	ldaa	#10
+	ldx	L1
+L1:	ldy	,x
+	addd	1,y		; Offset from register
+	subd	-1,y
+	eora	15,y
+	eora	-16,y
+	eorb	16,y
+	eorb	-17,y
+	oraa	128,sp
+	orab	-128,sp
+	orab	255,x
+	orab	-256,x
+	anda	256,x
+	andb	-257,x
+	anda	[12,x]		; Indexed indirect (16-bit offset)
+	ldaa	[257,y]
+	ldab	[32767,sp]
+	ldd	[32768,pc]
+	ldd	L1,pc
+	std	a,x		; Two-reg index
+	ldx	b,x
+	stx	d,y
+	addd	1,+x		; Pre-Auto inc
+	addd	2,+x
+	addd	8,+x
+	addd	1,sp+		; Post-Auto inc
+	addd	2,sp+
+	addd	8,sp+
+	subd	1,-y		; Pre-Auto dec
+	subd	2,-y
+	subd	8,-y
+	addd	1,y-		; Post-Auto dec
+	addd	2,y-
+	addd	8,y-
+	std	[d,x]		; Indexed indirect with two reg index
+	std	[d,y]
+	std	[d,sp]
+	std	[d,pc]
+	beq	L1
+	lbeq	start
+	lbcc	L2
+;;
+;; Move insn with various operands
+;; 
+	movb	start, 1,x
+	movw	1,x, start
+	movb	start, 1,+x
+	movb	start, 1,-x
+	movb	#23, 1,-sp
+	movb	L1, L2
+	movb	L1, a,x
+	movw	L1, b,x
+	movw	L1, d,x
+	movw	d,x, a,x
+	movw	b,sp, d,pc
+	movw	b,sp, L1
+	movw	b,sp, 1,x
+	movw	d,x, a,y
+	trap	#0x30
+	trap	#0x39
+	trap	#0x40
+	trap	#0x80
+	trap	#255
+L2:	
+	movw 1,x,2,x
+	movw -1,-1
+	movw -1,1,x
+	movw #-1,1,x
+	movw 3,8
+	movw #3,3
+	movw #3,1,x
+	movw 3,1,x
+	movw 3,+2,x
+	movw 4,-2,x
+	rts
+;;
+;; Post-index byte with relocation
+;; 
+post_indexed_pb:
+t1:
+	leas	abort,x
+t2:
+	leax	t2-t1,y
+	leax	toto,x
+	leas	toto+titi,sp
+	leay	titi,x
+	leas	bb,y
+	leas	min5b,pc
+	leas	max5b,pc
+	leas	min9b,pc
+	leas	max9b,pc
+
+;;
+;; Disassembler bug with movb
+;;
+	movb	#23,0x2345
+	movb	#40,12,sp
+	movb	#39,3,+sp
+	movb	#20,14,sp
+	movw	#0x3210,0x3456
+	movw	#0x4040,12,sp
+	movw	#0x3900,3,+sp
+	movw	#0x2000,14,sp
+#	movb	#111,start
+
+titi = 10
+toto = 100
+min5b= -16
+max5b= 15
+min9b= -256
+max9b= 255
+bb = 10240
diff -rupN binutils-2.20/include/dis-asm.h binutils-2.20-sean/include/dis-asm.h
--- binutils-2.20/include/dis-asm.h	2009-08-06 11:38:03.000000000 -0600
+++ binutils-2.20-sean/include/dis-asm.h	2010-10-01 14:37:32.000000000 -0600
@@ -259,6 +259,8 @@ extern int print_insn_m32c	        (bfd_
 extern int print_insn_m32r		(bfd_vma, disassemble_info *);
 extern int print_insn_m68hc11		(bfd_vma, disassemble_info *);
 extern int print_insn_m68hc12		(bfd_vma, disassemble_info *);
+extern int print_insn_mc9s12x		(bfd_vma, disassemble_info *);
+extern int print_insn_mc9xgate		(bfd_vma, disassemble_info *);
 extern int print_insn_m68k		(bfd_vma, disassemble_info *);
 extern int print_insn_m88k		(bfd_vma, disassemble_info *);
 extern int print_insn_maxq_big		(bfd_vma, disassemble_info *);
diff -rupN binutils-2.20/include/elf/common.h binutils-2.20-sean/include/elf/common.h
--- binutils-2.20/include/elf/common.h	2009-08-09 07:42:26.000000000 -0600
+++ binutils-2.20-sean/include/elf/common.h	2010-10-01 14:37:32.000000000 -0600
@@ -291,6 +291,8 @@
 #define EM_TILE64	187	/* Tilera TILE64 multicore architecture family */
 #define EM_TILEPRO	188	/* Tilera TILEPro multicore architecture family */
 #define EM_MICROBLAZE	189	/* Xilinx MicroBlaze 32-bit RISC soft processor core */
+#define EM_MC9S12X	 190	/* Motorola M68HC12 */
+#define EM_MC9XGATE	 192	/* Motorola M68HC12 */
 
 /* If it is necessary to assign new unofficial EM_* values, please pick large
    random numbers (0x8523, 0xa7f2, etc.) to minimize the chances of collision
diff -rupN binutils-2.20/include/elf/mc9s12x.h binutils-2.20-sean/include/elf/mc9s12x.h
--- binutils-2.20/include/elf/mc9s12x.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/include/elf/mc9s12x.h	2010-10-01 14:37:32.000000000 -0600
@@ -0,0 +1,107 @@
+/* m68hc11 & m68hc12 ELF support for BFD.
+   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+#ifndef _ELF_MC9S12X_H
+#define _ELF_MC9S12X_H
+
+#include "elf/reloc-macros.h"
+
+/* mc9s12x.h */
+
+/* Relocation types.  */
+START_RELOC_NUMBERS (elf_mc9s12x_reloc_type)
+  RELOC_NUMBER (R_MC9S12X_NONE, 0)
+  RELOC_NUMBER (R_MC9S12X_8, 1)
+  RELOC_NUMBER (R_MC9S12X_HI8, 2)
+  RELOC_NUMBER (R_MC9S12X_LO8, 3)
+  RELOC_NUMBER (R_MC9S12X_PCREL_8, 4)
+  RELOC_NUMBER (R_MC9S12X_16, 5)
+  RELOC_NUMBER (R_MC9S12X_32, 6)
+  RELOC_NUMBER (R_MC9S12X_3B, 7)
+  RELOC_NUMBER (R_MC9S12X_PCREL_16, 8)
+
+     /* These are GNU extensions to enable C++ vtable garbage collection.  */
+  RELOC_NUMBER (R_MC9S12X_GNU_VTINHERIT, 9)
+  RELOC_NUMBER (R_MC9S12X_GNU_VTENTRY, 10)
+
+  RELOC_NUMBER (R_MC9S12X_24, 11)
+  RELOC_NUMBER (R_MC9S12X_LO16, 12)
+  RELOC_NUMBER (R_MC9S12X_PAGE, 13)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_9, 14)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_10, 15)
+  RELOC_NUMBER (R_MC9XGATE_IMM8_LO, 16)
+  RELOC_NUMBER (R_MC9XGATE_IMM8_HI, 17)
+  RELOC_NUMBER (R_MC9XGATE_IMM3, 18)
+  RELOC_NUMBER (R_MC9XGATE_IMM4, 19)
+
+     /* GNU extension for linker relaxation.
+        Mark beginning of a jump instruction (any form).  */
+  RELOC_NUMBER (R_MC9S12X_RL_JUMP, 20)
+
+     /* Mark beginning of Gcc relaxation group instruction.  */
+  RELOC_NUMBER (R_MC9S12X_RL_GROUP, 21)
+END_RELOC_NUMBERS (R_MC9S12X_max)
+
+/* Processor specific flags for the ELF header e_flags field.  */
+
+/* ABI identification.  */
+#define EF_MC9S12X_ABI  0x00000000F
+
+/* Integers are 32-bit long.  */
+#define E_MC9S12X_I32   0x000000001
+
+/* Doubles are 64-bit long.  */
+#define E_MC9S12X_F64   0x000000002
+
+/* Uses 68HC12 memory banks.  */
+#define E_MC9S12X_BANKS 0x000000004
+
+#define EF_MC9S12X_MACH_MASK 0xF0
+#define EF_MC9S12X_GENERIC   0x00 /* Generic 68HC12/backward compatibility.  */
+//#define EF_MC9S12X_MACH      0x10 /* 68HC12 microcontroller.  */
+#define EF_MC9S12X_MACH     0x20 /* 68HCS12 microcontroller.  */
+//#define EF_MC9S12X_MACH(mach) ((mach) & EF_MC9S12X_MACH_MASK)
+
+/* True if we can merge machines.  A generic HC12 can work on any proc
+   but once we have specific code, merge is not possible.  */
+
+#define EF_MC9S12X_CAN_MERGE_MACH EF_MC9S12X_MACH   /* effectively disable merger since this is s12x ONLY */
+//#define EF_MC9S12X_CAN_MERGE_MACH EF_MC9S12X_MACH
+/*
+#define EF_MC9S12X_CAN_MERGE_MACH(mach1, mach2) \
+  ((EF_MC9S12X_MACH (mach1) == EF_MC9S12X_MACH (mach2)) \
+   || (EF_MC9S12X_MACH (mach1) == EF_MC9S12X_GENERIC) \
+   || (EF_MC9S12X_MACH (mach2) == EF_MC9S12X_GENERIC))
+
+#define EF_MC9S12X_MERGE_MACH(mach1, mach2) \
+  (((EF_MC9S12X_MACH (mach1) == EF_MC9S12X_MACH (mach2)) \
+    || (EF_MC9S12X_MACH (mach1) == EF_MC9S12X_GENERIC)) ? \
+      EF_MC9S12X_MACH (mach2) : EF_MC9S12X_MACH (mach1))
+*/
+
+/* Special values for the st_other field in the symbol table.  These
+   are used for 68HC12 to identify far functions (must be called with
+   'call' and returns with 'rtc').  */
+#define STO_MC9S12X_FAR 0x80
+
+/* Identify interrupt handlers.  This is used by the debugger to
+   correctly compute the stack frame.  */
+#define STO_MC9S12X_INTERRUPT 0x40
+     
+#endif
diff -rupN binutils-2.20/include/elf/mc9xgate.h binutils-2.20-sean/include/elf/mc9xgate.h
--- binutils-2.20/include/elf/mc9xgate.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/include/elf/mc9xgate.h	2010-10-01 14:37:32.000000000 -0600
@@ -0,0 +1,107 @@
+/* m68hc11 & m68hc12 ELF support for BFD.
+   Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
+
+   This file is part of BFD, the Binary File Descriptor library.
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+   (at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+#ifndef _ELF_MC9XGATE_H
+#define _ELF_MC9XGATE_H
+
+#include "elf/reloc-macros.h"
+
+/* mc9xgate.h */
+/* Relocation types. */
+/* Relocation types.  */
+START_RELOC_NUMBERS (elf_mc9xgate_reloc_type)
+  RELOC_NUMBER (R_MC9XGATE_NONE, 0)
+  RELOC_NUMBER (R_MC9XGATE_8, 1)
+  RELOC_NUMBER (R_MC9XGATE_HI8, 2)
+  RELOC_NUMBER (R_MC9XGATE_LO8, 3)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_8, 4)
+  RELOC_NUMBER (R_MC9XGATE_16, 5)
+  RELOC_NUMBER (R_MC9XGATE_32, 6)
+  RELOC_NUMBER (R_MC9XGATE_3B, 7)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_16, 8)
+
+     /* These are GNU extensions to enable C++ vtable garbage collection.  */
+  RELOC_NUMBER (R_MC9XGATE_GNU_VTINHERIT, 9)
+  RELOC_NUMBER (R_MC9XGATE_GNU_VTENTRY, 10)
+
+  RELOC_NUMBER (R_MC9XGATE_24, 11)
+  RELOC_NUMBER (R_MC9XGATE_LO16, 12)
+  RELOC_NUMBER (R_MC9XGATE_PAGE, 13)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_9, 14)
+  RELOC_NUMBER (R_MC9XGATE_PCREL_10, 15)
+  RELOC_NUMBER (R_MC9XGATE_IMM8_LO, 16)
+  RELOC_NUMBER (R_MC9XGATE_IMM8_HI, 17)
+  RELOC_NUMBER (R_MC9XGATE_IMM3, 18)
+  RELOC_NUMBER (R_MC9XGATE_IMM4, 19)
+
+     /* GNU extension for linker relaxation.
+        Mark beginning of a jump instruction (any form).  */
+  RELOC_NUMBER (R_MC9XGATE_RL_JUMP, 20)
+
+     /* Mark beginning of Gcc relaxation group instruction.  */
+  RELOC_NUMBER (R_MC9XGATE_RL_GROUP, 21)
+END_RELOC_NUMBERS (R_MC9XGATE_max)
+
+/* Processor specific flags for the ELF header e_flags field.  */
+
+/* ABI identification.  */
+#define EF_MC9XGATE_ABI  0x00000000F
+
+/* Integers are 32-bit long.  */
+#define E_MC9XGATE_I32   0x000000001
+
+/* Doubles are 64-bit long.  */
+#define E_MC9XGATE_F64   0x000000002
+
+/* Uses 68HC12 memory banks.  */
+#define E_MC9XGATE_BANKS 0x000000004
+
+#define EF_MC9XGATE_MACH_MASK 0xF0
+#define EF_MC9XGATE_GENERIC   0x00 /* Generic 68HC12/backward compatibility.  */
+//#define EF_MC9XGATE_MACH      0x10 /* 68HC12 microcontroller.  */
+#define EF_MC9XGATE_MACH     0x20 /* 68HCS12 microcontroller.  */
+//#define EF_MC9XGATE_MACH(mach) ((mach) & EF_MC9XGATE_MACH_MASK)
+
+/* True if we can merge machines.  A generic HC12 can work on any proc
+   but once we have specific code, merge is not possible.  */
+
+#define EF_MC9XGATE_CAN_MERGE_MACH EF_MC9XGATE_MACH   /* effectively disable merger since this is s12x ONLY */
+//#define EF_MC9XGATE_CAN_MERGE_MACH EF_MC9XGATE_MACH
+/*
+#define EF_MC9XGATE_CAN_MERGE_MACH(mach1, mach2) \
+  ((EF_MC9XGATE_MACH (mach1) == EF_MC9XGATE_MACH (mach2)) \
+   || (EF_MC9XGATE_MACH (mach1) == EF_MC9XGATE_GENERIC) \
+   || (EF_MC9XGATE_MACH (mach2) == EF_MC9XGATE_GENERIC))
+
+#define EF_MC9XGATE_MERGE_MACH(mach1, mach2) \
+  (((EF_MC9XGATE_MACH (mach1) == EF_MC9XGATE_MACH (mach2)) \
+    || (EF_MC9XGATE_MACH (mach1) == EF_MC9XGATE_GENERIC)) ? \
+      EF_MC9XGATE_MACH (mach2) : EF_MC9XGATE_MACH (mach1))
+*/
+
+/* Special values for the st_other field in the symbol table.  These
+   are used for 68HC12 to identify far functions (must be called with
+   'call' and returns with 'rtc').  */
+#define STO_MC9XGATE_FAR 0x80
+
+/* Identify interrupt handlers.  This is used by the debugger to
+   correctly compute the stack frame.  */
+#define STO_MC9XGATE_INTERRUPT 0x40
+     
+#endif
diff -rupN binutils-2.20/include/opcode/mc9s12x.h binutils-2.20-sean/include/opcode/mc9s12x.h
--- binutils-2.20/include/opcode/mc9s12x.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/include/opcode/mc9s12x.h	2010-10-01 14:37:32.000000000 -0600
@@ -0,0 +1,438 @@
+/* m68hc11.h -- Header file for Motorola 68HC11 & 68HC12 opcode table
+   Copyright 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+This file is part of GDB, GAS, and the GNU binutils.
+
+GDB, GAS, and the GNU binutils are free software; you can redistribute
+them and/or modify them under the terms of the GNU General Public
+License as published by the Free Software Foundation; either version
+1, or (at your option) any later version.
+
+GDB, GAS, and the GNU binutils are distributed in the hope that they
+will be useful, but WITHOUT ANY WARRANTY; without even the implied
+warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+the GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this file; see the file COPYING.  If not, write to the Free
+Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+/*
+ * :1: error: "MC9S12X_JMP" redefined
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:311:1: error: this is the location of the previous definition
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:315:1: error: "MC9S12X_BSR" redefined
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:312:1: error: this is the location of the previous definition
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:316:1: error: "MC9S12X_JSR" redefined
+ *
+ *
+ *
+ */
+
+#ifndef _OPCODE_MC9S12X_H
+#define _OPCODE_MC9S12X_H
+
+/* Flags for the definition of the 68HC11 & 68HC12 CCR.  */
+#define MC9S12X_S_BIT     0x80	/* Stop disable */
+#define MC9S12X_X_BIT     0x40	/* X-interrupt mask */
+#define MC9S12X_H_BIT     0x20	/* Half carry flag */
+#define MC9S12X_I_BIT     0x10	/* I-interrupt mask */
+#define MC9S12X_N_BIT     0x08	/* Negative */
+#define MC9S12X_Z_BIT     0x04	/* Zero */
+#define MC9S12X_V_BIT     0x02	/* Overflow */
+#define MC9S12X_C_BIT     0x01	/* Carry */
+
+/* 68HC11 register address offsets (range 0..0x3F or 0..64).
+   The absolute address of the I/O register depends on the setting
+   of the MC9S12X_INIT register.  At init time, the I/O registers are
+   mapped at 0x1000.  Address of registers is then:
+
+   0x1000 + MC9S12X_xxx
+*/
+#define MC9S12X_PORTA     0x00	/* Port A register */
+#define MC9S12X__RES1	0x01	/* Unused/Reserved */
+#define MC9S12X_PIOC	0x02	/* Parallel I/O Control register */
+#define MC9S12X_PORTC	0x03	/* Port C register */
+#define MC9S12X_PORTB	0x04	/* Port B register */
+#define MC9S12X_PORTCL	0x05	/* Alternate latched port C */
+#define MC9S12X__RES6	0x06	/* Unused/Reserved */
+#define MC9S12X_DDRC	0x07	/* Data direction register for port C */
+#define MC9S12X_PORTD	0x08	/* Port D register */
+#define MC9S12X_DDRD	0x09	/* Data direction register for port D */
+#define MC9S12X_PORTE	0x0A	/* Port E input register */
+#define MC9S12X_CFORC	0x0B	/* Compare Force Register */
+#define MC9S12X_OC1M	0x0C	/* OC1 Action Mask register */
+#define MC9S12X_OC1D	0x0D	/* OC1 Action Data register */
+#define MC9S12X_TCTN	0x0E	/* Timer Counter Register */
+#define MC9S12X_TCTN_H	0x0E	/* "	 "	 " High part */
+#define MC9S12X_TCTN_L	0x0F	/* "	 "	 " Low part */
+#define MC9S12X_TIC1	0x10	/* Input capture 1 register */
+#define MC9S12X_TIC1_H	0x10	/* "	 "	 " High part */
+#define MC9S12X_TIC1_L	0x11	/* "	 "	 " Low part */
+#define MC9S12X_TIC2	0x12	/* Input capture 2 register */
+#define MC9S12X_TIC2_H	0x12	/* "	 "	 " High part */
+#define MC9S12X_TIC2_L	0x13	/* "	 "	 " Low part */
+#define MC9S12X_TIC3	0x14	/* Input capture 3 register */
+#define MC9S12X_TIC3_H	0x14	/* "	 "	 " High part */
+#define MC9S12X_TIC3_L	0x15	/* "	 "	 " Low part */
+#define MC9S12X_TOC1	0x16	/* Output Compare 1 register */
+#define MC9S12X_TOC1_H	0x16	/* "	 "	 " High part */
+#define MC9S12X_TOC1_L	0x17	/* "	 "	 " Low part */
+#define MC9S12X_TOC2	0x18	/* Output Compare 2 register */
+#define MC9S12X_TOC2_H	0x18	/* "	 "	 " High part */
+#define MC9S12X_TOC2_L	0x19	/* "	 "	 " Low part */
+#define MC9S12X_TOC3	0x1A	/* Output Compare 3 register */
+#define MC9S12X_TOC3_H	0x1A	/* "	 "	 " High part */
+#define MC9S12X_TOC3_L	0x1B	/* "	 "	 " Low part */
+#define MC9S12X_TOC4	0x1C	/* Output Compare 4 register */
+#define MC9S12X_TOC4_H	0x1C	/* "	 "	 " High part */
+#define MC9S12X_TOC4_L	0x1D	/* "	 "	 " Low part */
+#define MC9S12X_TOC5	0x1E	/* Output Compare 5 register */
+#define MC9S12X_TOC5_H	0x1E	/* "	 "	 " High part */
+#define MC9S12X_TOC5_L	0x1F	/* "	 "	 " Low part */
+#define MC9S12X_TCTL1	0x20	/* Timer Control register 1 */
+#define MC9S12X_TCTL2	0x21	/* Timer Control register 2 */
+#define MC9S12X_TMSK1	0x22	/* Timer Interrupt Mask Register 1 */
+#define MC9S12X_TFLG1	0x23	/* Timer Interrupt Flag Register 1 */
+#define MC9S12X_TMSK2	0x24	/* Timer Interrupt Mask Register 2 */
+#define MC9S12X_TFLG2	0x25	/* Timer Interrupt Flag Register 2 */
+#define MC9S12X_PACTL	0x26	/* Pulse Accumulator Control Register */
+#define MC9S12X_PACNT	0x27	/* Pulse Accumulator Count Register */
+#define MC9S12X_SPCR	0x28	/* SPI Control register */
+#define MC9S12X_SPSR	0x29	/* SPI Status register */
+#define MC9S12X_SPDR	0x2A	/* SPI Data register */
+#define MC9S12X_BAUD	0x2B	/* SCI Baud register */
+#define MC9S12X_SCCR1	0x2C	/* SCI Control register 1 */
+#define MC9S12X_SCCR2	0x2D	/* SCI Control register 2 */
+#define MC9S12X_SCSR	0x2E	/* SCI Status register */
+#define MC9S12X_SCDR	0x2F	/* SCI Data (Read => RDR, Write => TDR) */
+#define MC9S12X_ADCTL	0x30	/* A/D Control register */
+#define MC9S12X_ADR1	0x31	/* A/D, Analog Result register 1 */
+#define MC9S12X_ADR2	0x32	/* A/D, Analog Result register 2 */
+#define MC9S12X_ADR3	0x33	/* A/D, Analog Result register 3 */
+#define MC9S12X_ADR4	0x34	/* A/D, Analog Result register 4 */
+#define MC9S12X__RES35	0x35
+#define MC9S12X__RES36	0x36
+#define MC9S12X__RES37	0x37
+#define MC9S12X__RES38	0x38
+#define MC9S12X_OPTION	0x39	/* System Configuration Options */
+#define MC9S12X_COPRST	0x3A	/* Arm/Reset COP Timer Circuitry */
+#define MC9S12X_PPROG	0x3B	/* EEPROM Programming Control Register */
+#define MC9S12X_HPRIO	0x3C	/* Highest priority I-Bit int and misc */
+#define MC9S12X_INIT	0x3D	/* Ram and I/O mapping register */
+#define MC9S12X_TEST1	0x3E	/* Factory test control register */
+#define MC9S12X_CONFIG	0x3F	/* COP, ROM and EEPROM enables */
+
+
+/* Flags of the CONFIG register (in EEPROM).  */
+#define MC9S12X_NOSEC     0x08    /* Security mode disable */
+#define MC9S12X_NOCOP     0x04    /* COP system disable */
+#define MC9S12X_ROMON     0x02    /* Enable on-chip rom */
+#define MC9S12X_EEON      0x01    /* Enable on-chip eeprom */
+
+/* Flags of the PPROG register.  */
+#define MC9S12X_BYTE	0x10	/* Byte mode */
+#define MC9S12X_ROW       0x08	/* Row mode */
+#define MC9S12X_ERASE	0x04	/* Erase mode select (1 = erase, 0 = read) */
+#define MC9S12X_EELAT     0x02	/* EEPROM Latch Control */
+#define MC9S12X_EEPGM     0x01	/* EEPROM Programming Voltage Enable */
+
+/* Flags of the PIOC register.  */
+#define MC9S12X_STAF	0x80	/* Strobe A Interrupt Status Flag */
+#define MC9S12X_STAI	0x40	/* Strobe A Interrupt Enable Mask */
+#define MC9S12X_CWOM	0x20	/* Port C Wire OR mode */
+#define MC9S12X_HNDS	0x10	/* Handshake mode */
+#define MC9S12X_OIN	0x08	/* Output or Input handshaking */
+#define MC9S12X_PLS	0x04	/* Pulse/Interlocked Handshake Operation */
+#define MC9S12X_EGA	0x02	/* Active Edge for Strobe A */
+#define MC9S12X_INVB	0x01	/* Invert Strobe B */
+
+/* Flags of the SCCR1 register.  */
+#define MC9S12X_R8	0x80	/* Receive Data bit 8 */
+#define MC9S12X_T8	0x40	/* Transmit data bit 8 */
+#define MC9S12X__SCCR1_5  0x20	/* Unused */
+#define MC9S12X_M		0x10	/* SCI Character length */
+#define MC9S12X_WAKE	0x08	/* Wake up method select (0=idle, 1=addr mark) */
+
+/* Flags of the SCCR2 register.  */
+#define MC9S12X_TIE	0x80	/* Transmit Interrupt enable */
+#define MC9S12X_TCIE	0x40	/* Transmit Complete Interrupt Enable */
+#define MC9S12X_RIE	0x20	/* Receive Interrupt Enable */
+#define MC9S12X_ILIE	0x10	/* Idle Line Interrupt Enable */
+#define MC9S12X_TE	0x08	/* Transmit Enable */
+#define MC9S12X_RE	0x04	/* Receive Enable */
+#define MC9S12X_RWU	0x02	/* Receiver Wake Up */
+#define MC9S12X_SBK	0x01	/* Send Break */
+
+/* Flags of the SCSR register.  */
+#define MC9S12X_TDRE	0x80	/* Transmit Data Register Empty */
+#define MC9S12X_TC	0x40	/* Transmit Complete */
+#define MC9S12X_RDRF	0x20	/* Receive Data Register Full */
+#define MC9S12X_IDLE	0x10	/* Idle Line Detect */
+#define MC9S12X_OR	0x08	/* Overrun Error */
+#define MC9S12X_NF	0x04	/* Noise Flag */
+#define MC9S12X_FE	0x02	/* Framing Error */
+#define MC9S12X__SCSR_0	0x01	/* Unused */
+
+/* Flags of the BAUD register.  */
+#define MC9S12X_TCLR	0x80	/* Clear Baud Rate (TEST mode) */
+#define MC9S12X__BAUD_6	0x40	/* Not used */
+#define MC9S12X_SCP1	0x20	/* SCI Baud rate prescaler select */
+#define MC9S12X_SCP0	0x10
+#define MC9S12X_RCKB	0x08	/* Baud Rate Clock Check (TEST mode) */
+#define MC9S12X_SCR2	0x04	/* SCI Baud rate select */
+#define MC9S12X_SCR1	0x02
+#define MC9S12X_SCR0	0x01
+
+#define MC9S12X_BAUD_DIV_1	(0)
+#define MC9S12X_BAUD_DIV_3	(MC9S12X_SCP0)
+#define MC9S12X_BAUD_DIV_4	(MC9S12X_SCP1)
+#define MC9S12X_BAUD_DIV_13	(MC9S12X_SCP1|MC9S12X_SCP0)
+
+/* Flags of the SPCR register.  */
+#define MC9S12X_SPIE	0x80	/* Serial Peripheral Interrupt Enable */
+#define MC9S12X_SPE	0x40	/* Serial Peripheral System Enable */
+#define MC9S12X_DWOM	0x20	/* Port D Wire-OR mode option */
+#define MC9S12X_MSTR	0x10	/* Master Mode Select */
+#define MC9S12X_CPOL	0x08	/* Clock Polarity */
+#define MC9S12X_CPHA	0x04	/* Clock Phase */
+#define MC9S12X_SPR1	0x02	/* SPI Clock Rate Select */
+#define MC9S12X_SPR0	0x01
+
+/* Flags of the SPSR register.  */
+#define MC9S12X_SPIF	0x80	/* SPI Transfer Complete flag */
+#define MC9S12X_WCOL	0x40	/* Write Collision */
+#define MC9S12X_MODF	0x10	/* Mode Fault */
+
+/* Flags of the ADCTL register.  */
+#define MC9S12X_CCF	0x80	/* Conversions Complete Flag */
+#define MC9S12X_SCAN	0x20	/* Continuous Scan Control */
+#define MC9S12X_MULT	0x10	/* Multiple Channel/Single Channel Control */
+#define MC9S12X_CD	0x08	/* Channel Select D */
+#define MC9S12X_CC	0x04	/*                C */
+#define MC9S12X_CB	0x02	/*                B */
+#define MC9S12X_CA	0x01	/*                A */
+
+/* Flags of the CFORC register.  */
+#define MC9S12X_FOC1	0x80	/* Force Output Compare 1 */
+#define MC9S12X_FOC2	0x40	/*			2 */
+#define MC9S12X_FOC3	0x20	/*			3 */
+#define MC9S12X_FOC4	0x10	/*			4 */
+#define MC9S12X_FOC5	0x08	/*			5 */
+
+/* Flags of the OC1M register.  */
+#define MC9S12X_OC1M7	0x80	/* Output Compare 7 */
+#define MC9S12X_OC1M6	0x40	/*                6 */
+#define MC9S12X_OC1M5	0x20	/*                5 */
+#define MC9S12X_OC1M4	0x10	/*                4 */
+#define MC9S12X_OC1M3	0x08	/*                3 */
+
+/* Flags of the OC1D register.  */
+#define MC9S12X_OC1D7	0x80
+#define MC9S12X_OC1D6	0x40
+#define MC9S12X_OC1D5	0x20
+#define MC9S12X_OC1D4	0x10
+#define MC9S12X_OC1D3	0x08
+
+/* Flags of the TCTL1 register.  */
+#define MC9S12X_OM2	0x80	/* Output Mode 2 */
+#define MC9S12X_OL2	0x40	/* Output Level 2 */
+#define MC9S12X_OM3	0x20
+#define MC9S12X_OL3	0x10
+#define MC9S12X_OM4	0x08
+#define MC9S12X_OL4	0x04
+#define MC9S12X_OM5	0x02
+#define MC9S12X_OL5	0x01
+
+/* Flags of the TCTL2 register.  */
+#define MC9S12X_EDG1B	0x20	/* Input Edge Capture Control 1 */
+#define MC9S12X_EDG1A	0x10
+#define MC9S12X_EDG2B	0x08	/* Input 2 */
+#define MC9S12X_EDG2A	0x04
+#define MC9S12X_EDG3B	0x02	/* Input 3 */
+#define MC9S12X_EDG3A	0x01
+
+/* Flags of the TMSK1 register.  */
+#define MC9S12X_OC1I	0x80	/* Output Compare 1 Interrupt */
+#define MC9S12X_OC2I	0x40	/*		  2	      */
+#define MC9S12X_OC3I	0x20	/*		  3	      */
+#define MC9S12X_OC4I	0x10	/*		  4	      */
+#define MC9S12X_OC5I	0x08	/*		  5	      */
+#define MC9S12X_IC1I	0x04	/* Input Capture  1 Interrupt */
+#define MC9S12X_IC2I	0x02	/*		  2	      */
+#define MC9S12X_IC3I	0x01	/*		  3	      */
+
+/* Flags of the TFLG1 register.  */
+#define MC9S12X_OC1F	0x80	/* Output Compare 1 Flag */
+#define MC9S12X_OC2F	0x40	/*		  2	 */
+#define MC9S12X_OC3F	0x20	/*		  3	 */
+#define MC9S12X_OC4F	0x10	/*		  4	 */
+#define MC9S12X_OC5F	0x08	/*		  5	 */
+#define MC9S12X_IC1F	0x04	/* Input Capture  1 Flag */
+#define MC9S12X_IC2F	0x02	/*		  2	 */
+#define MC9S12X_IC3F	0x01	/*		  3	 */
+
+/* Flags of Timer Interrupt Mask Register 2 (TMSK2).  */
+#define MC9S12X_TOI       0x80    /* Timer Overflow Interrupt Enable */
+#define MC9S12X_RTII      0x40    /* RTI Interrupt Enable */
+#define MC9S12X_PAOVI     0x20    /* Pulse Accumulator Overflow Interrupt En. */
+#define MC9S12X_PAII      0x10    /* Pulse Accumulator Interrupt Enable */
+#define MC9S12X_PR1       0x02    /* Timer prescaler */
+#define MC9S12X_PR0       0x01    /* Timer prescaler */
+#define MC9S12X_TPR_1     0x00    /* " " prescale div 1 */
+#define MC9S12X_TPR_4     0x01    /* " " prescale div 4 */
+#define MC9S12X_TPR_8     0x02    /* " " prescale div 8 */
+#define MC9S12X_TPR_16    0x03    /* " " prescale div 16 */
+
+/* Flags of Timer Interrupt Flag Register 2 (MC9S12X_TFLG2).  */
+#define MC9S12X_TOF       0x80    /* Timer overflow bit */
+#define MC9S12X_RTIF      0x40    /* Read time interrupt flag */
+#define MC9S12X_PAOVF     0x20    /* Pulse accumulator overflow Interrupt flag */
+#define MC9S12X_PAIF      0x10    /* Pulse accumulator Input Edge " " " */
+
+/* Flags of Pulse Accumulator Control Register (PACTL).  */
+#define MC9S12X_DDRA7     0x80    /* Data direction for port A bit 7 */
+#define MC9S12X_PAEN      0x40    /* Pulse accumulator system enable */
+#define MC9S12X_PAMOD     0x20    /* Pulse accumulator mode */
+#define MC9S12X_PEDGE     0x10    /* Pulse accumulator edge control */
+#define MC9S12X_RTR1      0x02    /* RTI Interrupt rates select */
+#define MC9S12X_RTR0      0x01    /* " " " " */
+
+/* Flags of the Options register.  */
+#define MC9S12X_ADPU      0x80    /* A/D Powerup */
+#define MC9S12X_CSEL      0x40    /* A/D/EE Charge pump clock source select */
+#define MC9S12X_IRQE      0x20    /* IRQ Edge/Level sensitive */
+#define MC9S12X_DLY       0x10    /* Stop exit turn on delay */
+#define MC9S12X_CME       0x08    /* Clock Monitor enable */
+#define MC9S12X_CR1       0x02    /* COP timer rate select */
+#define MC9S12X_CR0       0x01    /* COP timer rate select */
+
+/* Flags of the HPRIO register.  */
+#define MC9S12X_RBOOT	0x80	/* Read Bootstrap ROM */
+#define MC9S12X_SMOD	0x40	/* Special Mode */
+#define MC9S12X_MDA	0x20	/* Mode Select A */
+#define MC9S12X_IRV	0x10	/* Internal Read Visibility */
+#define MC9S12X_PSEL3	0x08	/* Priority Select */
+#define MC9S12X_PSEL2	0x04
+#define MC9S12X_PSEL1	0x02
+#define MC9S12X_PSEL0	0x01
+
+/* Some insns used by gas to turn relative branches into absolute ones.  */
+#define MC9S12X_BRA	0x20
+#define MC9S12X_JMP	0x7e
+#define MC9S12X_BSR	0x8d
+#define MC9S12X_JSR	0xbd
+#define MC9S12X_JMP2       0x06
+#define MC9S12X_BSR2       0x07
+#define MC9S12X_JSR2       0x16
+
+/* Instruction code pages. Code page 1 is the default.  */
+/*#define	MC9S12X_OPCODE_PAGE1	0x00*/
+#define	MC9S12X_OPCODE_PAGE2	0x18
+#define	MC9S12X_OPCODE_PAGE3	0x1A
+#define	MC9S12X_OPCODE_PAGE4	0xCD
+
+
+/* 68HC11 operands formats as stored in the MC9S12X_opcode table.  These
+   flags do not correspond to anything in the 68HC11 or 68HC12.
+   They are only used by GAS to recognize operands.  */
+#define MC9S12X_OP_NONE         0        /* No operand */
+#define MC9S12X_OP_DIRECT       0x0001   /* Page 0 addressing:   *<val-8bits>  */
+#define MC9S12X_OP_IMM8         0x0002   /*  8 bits immediat:    #<val-8bits>  */
+#define MC9S12X_OP_IMM16        0x0004   /* 16 bits immediat:    #<val-16bits> */
+#define MC9S12X_OP_IND16        0x0008   /* Indirect abs:        <val-16>      */
+#define MC9S12X_OP_IND16_P2     0x0010   /* Second parameter indirect abs.     */
+#define MC9S12X_OP_REG          0x0020   /* Register operand 1                 */
+#define MC9S12X_OP_REG_2        0x0040   /* Register operand 2                 */
+
+#define MC9S12X_OP_IX           0x0080   /* Indirect IX:         <val-8>,x     */
+#define MC9S12X_OP_IY           0x0100   /* Indirect IY:         <val-8>,y     */
+#define MC9S12X_OP_IDX          0x0200   /* Indirect: N,r N,[+-]r[+-] N:5-bits */  //was SAVE
+#define MC9S12X_OP_IDX_1        0x0400   /* N,r N:9-bits  */
+#define MC9S12X_OP_IDX_2        0x0800   /* N,r N:16-bits */
+#define MC9S12X_OP_D_IDX        0x1000   /* Indirect indexed: [D,r] */
+#define MC9S12X_OP_D_IDX_2      0x2000   /* [N,r] N:16-bits */
+#define MC9S12X_OP_PAGE         0x4000   /* Page number */
+#define MC9S12X_OP_MASK         0x07FFF
+#define MC9S12X_OP_BRANCH       0x00008000 /* Branch, jsr, call */
+#define MC9S12X_OP_BITMASK      0x00010000 /* Bitmask:             #<val-8>    */
+#define MC9S12X_OP_JUMP_REL     0x00020000 /* Pc-Relative:         <val-8>     */
+#define MC9S12X_OP_JUMP_REL16   0x00040000 /* Pc-relative:         <val-16>    */
+#define MC9S12X_OP_PAGE1        0x0000
+#define MC9S12X_OP_PAGE2        0x00080000 /* Need a page2 opcode before       */
+#define MC9S12X_OP_PAGE3        0x00100000 /* Need a page3 opcode before       */
+#define MC9S12X_OP_PAGE4        0x00200000 /* Need a page4 opcode before       */
+#define MC9S12X_MAX_OPERANDS    3     /* Max operands: brset <dst> <mask> <b> */
+
+#define MC9S12X_ACC_OFFSET      0x00400000 /* A,r B,r D,r			    */
+#define MC9S12X_ACC_IND         0x00800000 /* [D,r]			    */
+#define MC9S12X_PRE_INC         0x01000000 /* n,+r   n = -8..8		    */
+#define MC9S12X_PRE_DEC         0x02000000 /* n,-r			    */
+#define MC9S12X_POST_INC        0x04000000 /* n,r+			    */
+#define MC9S12X_POST_DEC        0x08000000 /* n,r-			    */
+#define MC9S12X_INDEXED_IND     0x10000000 /* [n,r]  n = 16-bits		    */
+#define MC9S12X_INDEXED         0x20000000 /* n,r    n = 5, 9 or 16-bits	    */
+#define MC9S12X_OP_IDX_P2       0x40000000
+
+/* Markers to identify some instructions.  */
+#define MC9S12X_OP_EXG_MARKER   0x01000000 /* exg r1,r2 */
+#define MC9S12X_OP_TFR_MARKER   0x02000000 /* tfr r1,r2 */
+#define MC9S12X_OP_SEX_MARKER   0x04000000 /* sex r1,r2 */
+
+#define MC9S12X_OP_EQ_MARKER    0x80000000 /* dbeq/ibeq/tbeq */
+#define MC9S12X_OP_DBCC_MARKER  0x04000000 /* dbeq/dbne */
+#define MC9S12X_OP_IBCC_MARKER  0x02000000 /* ibeq/ibne */
+#define MC9S12X_OP_TBCC_MARKER  0x01000000
+
+#define MC9S12X_OP_TRAP_ID      0x80000000 /* trap #N */
+
+#define MC9S12X_OP_HIGH_ADDR    0x01000000 /* Used internally by gas.  */
+#define MC9S12X_OP_LOW_ADDR     0x02000000
+
+#define MC9S12X_BANK_VIRT 0x010000
+#define MC9S12X_BANK_MASK 0x00003fff
+#define MC9S12X_BANK_BASE 0x00008000
+#define MC9S12X_BANK_SHIFT 14
+#define MC9S12X_BANK_PAGE_MASK 0x0ff
+
+
+/* CPU identification.  */
+#define cpu6811 0x01
+#define cpu6812 0x02
+#define cpumc9s12x 0x06  /* was 0x4 somewhere it is bit-wised to 0x06 otherwise objdump will see it as UNKNOWN*/
+
+/* The opcode table is an array of struct m68hc11_opcode.  */
+struct mc9s12x_opcode {
+  const char*    name;     /* Op-code name */
+  long           format;
+  unsigned char  size;
+  unsigned char  opcode;
+  unsigned char  cycles_low;
+  unsigned char  cycles_high;
+  unsigned char  set_flags_mask;
+  unsigned char  clr_flags_mask;
+  unsigned char  chg_flags_mask;
+  unsigned char  arch;
+};
+
+/* Alias definition for 68HC12.  */
+struct mc9s12x_opcode_alias
+{
+  const char*   name;
+  const char*   translation;
+  unsigned char size;
+  unsigned char code1;
+  unsigned char code2;
+};
+
+/* The opcode table.  The table contains all the opcodes (all pages).
+   You can't rely on the order.  */
+extern const struct mc9s12x_opcode mc9s12x_opcodes[];
+extern const int mc9s12x_num_opcodes;
+
+/* Alias table for 68HC12.  It translates some 68HC11 insn which are not
+   implemented in 68HC12 but have equivalent translations.  */
+extern const struct mc9s12x_opcode_alias mc9s12x_alias[];
+extern const int mc9s12x_num_alias;
+
+#endif /* _OPCODE_M68HC11_H */
diff -rupN binutils-2.20/include/opcode/mc9s12x.h-bakcup binutils-2.20-sean/include/opcode/mc9s12x.h-bakcup
--- binutils-2.20/include/opcode/mc9s12x.h-bakcup	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/include/opcode/mc9s12x.h-bakcup	2010-10-01 14:37:32.000000000 -0600
@@ -0,0 +1,427 @@
+/* m68hc11.h -- Header file for Motorola 68HC11 & 68HC12 opcode table
+   Copyright 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+This file is part of GDB, GAS, and the GNU binutils.
+
+GDB, GAS, and the GNU binutils are free software; you can redistribute
+them and/or modify them under the terms of the GNU General Public
+License as published by the Free Software Foundation; either version
+1, or (at your option) any later version.
+
+GDB, GAS, and the GNU binutils are distributed in the hope that they
+will be useful, but WITHOUT ANY WARRANTY; without even the implied
+warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+the GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this file; see the file COPYING.  If not, write to the Free
+Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+#ifndef _OPCODE_MC9S12X_H
+#define _OPCODE_MC9S12X_H
+
+/* Flags for the definition of the 68HC11 & 68HC12 CCR.  */
+#define MC9S12X_S_BIT     0x80	/* Stop disable */
+#define MC9S12X_X_BIT     0x40	/* X-interrupt mask */
+#define MC9S12X_H_BIT     0x20	/* Half carry flag */
+#define MC9S12X_I_BIT     0x10	/* I-interrupt mask */
+#define MC9S12X_N_BIT     0x08	/* Negative */
+#define MC9S12X_Z_BIT     0x04	/* Zero */
+#define MC9S12X_V_BIT     0x02	/* Overflow */
+#define MC9S12X_C_BIT     0x01	/* Carry */
+
+/* 68HC11 register address offsets (range 0..0x3F or 0..64).
+   The absolute address of the I/O register depends on the setting
+   of the M6811_INIT register.  At init time, the I/O registers are
+   mapped at 0x1000.  Address of registers is then:
+	TODO figure out why these are defined here, simulator mayble.......
+   0x1000 + M6811_xxx
+*/
+#define MC9S12X_PORTA     0x00	/* Port A register */
+#define MC9S12X__RES1	0x01	/* Unused/Reserved */
+#define MC9S12X_PIOC	0x02	/* Parallel I/O Control register */
+#define MC9S12X_PORTC	0x03	/* Port C register */
+#define MC9S12X_PORTB	0x04	/* Port B register */
+#define MC9S12X_PORTCL	0x05	/* Alternate latched port C */
+#define MC9S12X__RES6	0x06	/* Unused/Reserved */
+#define MC9S12X_DDRC	0x07	/* Data direction register for port C */
+#define MC9S12X_PORTD	0x08	/* Port D register */
+#define MC9S12X_DDRD	0x09	/* Data direction register for port D */
+#define MC9S12X_PORTE	0x0A	/* Port E input register */
+#define MC9S12X_CFORC	0x0B	/* Compare Force Register */
+#define MC9S12X_OC1M	0x0C	/* OC1 Action Mask register */
+#define MC9S12X_OC1D	0x0D	/* OC1 Action Data register */
+#define MC9S12X_TCTN	0x0E	/* Timer Counter Register */
+#define MC9S12X_TCTN_H	0x0E	/* "	 "	 " High part */
+#define MC9S12X_TCTN_L	0x0F	/* "	 "	 " Low part */
+#define MC9S12X_TIC1	0x10	/* Input capture 1 register */
+#define MC9S12X_TIC1_H	0x10	/* "	 "	 " High part */
+#define MC9S12X_TIC1_L	0x11	/* "	 "	 " Low part */
+#define MC9S12X_TIC2	0x12	/* Input capture 2 register */
+#define MC9S12X_TIC2_H	0x12	/* "	 "	 " High part */
+#define MC9S12X_TIC2_L	0x13	/* "	 "	 " Low part */
+#define MC9S12X_TIC3	0x14	/* Input capture 3 register */
+#define MC9S12X_TIC3_H	0x14	/* "	 "	 " High part */
+#define MC9S12X_TIC3_L	0x15	/* "	 "	 " Low part */
+#define MC9S12X_TOC1	0x16	/* Output Compare 1 register */
+#define MC9S12X_TOC1_H	0x16	/* "	 "	 " High part */
+#define MC9S12X_TOC1_L	0x17	/* "	 "	 " Low part */
+#define MC9S12X_TOC2	0x18	/* Output Compare 2 register */
+#define MC9S12X_TOC2_H	0x18	/* "	 "	 " High part */
+#define MC9S12X_TOC2_L	0x19	/* "	 "	 " Low part */
+#define MC9S12X_TOC3	0x1A	/* Output Compare 3 register */
+#define MC9S12X_TOC3_H	0x1A	/* "	 "	 " High part */
+#define MC9S12X_TOC3_L	0x1B	/* "	 "	 " Low part */
+#define MC9S12X_TOC4	0x1C	/* Output Compare 4 register */
+#define MC9S12X_TOC4_H	0x1C	/* "	 "	 " High part */
+#define MC9S12X_TOC4_L	0x1D	/* "	 "	 " Low part */
+#define MC9S12X_TOC5	0x1E	/* Output Compare 5 register */
+#define MC9S12X_TOC5_H	0x1E	/* "	 "	 " High part */
+#define MC9S12X_TOC5_L	0x1F	/* "	 "	 " Low part */
+#define MC9S12X_TCTL1	0x20	/* Timer Control register 1 */
+#define MC9S12X_TCTL2	0x21	/* Timer Control register 2 */
+#define MC9S12X_TMSK1	0x22	/* Timer Interrupt Mask Register 1 */
+#define MC9S12X_TFLG1	0x23	/* Timer Interrupt Flag Register 1 */
+#define MC9S12X_TMSK2	0x24	/* Timer Interrupt Mask Register 2 */
+#define MC9S12X_TFLG2	0x25	/* Timer Interrupt Flag Register 2 */
+#define MC9S12X_PACTL	0x26	/* Pulse Accumulator Control Register */
+#define MC9S12X_PACNT	0x27	/* Pulse Accumulator Count Register */
+#define MC9S12X_SPCR	0x28	/* SPI Control register */
+#define MC9S12X_SPSR	0x29	/* SPI Status register */
+#define MC9S12X_SPDR	0x2A	/* SPI Data register */
+#define MC9S12X_BAUD	0x2B	/* SCI Baud register */
+#define MC9S12X_SCCR1	0x2C	/* SCI Control register 1 */
+#define MC9S12X_SCCR2	0x2D	/* SCI Control register 2 */
+#define MC9S12X_SCSR	0x2E	/* SCI Status register */
+#define MC9S12X_SCDR	0x2F	/* SCI Data (Read => RDR, Write => TDR) */
+#define MC9S12X_ADCTL	0x30	/* A/D Control register */
+#define MC9S12X_ADR1	0x31	/* A/D, Analog Result register 1 */
+#define MC9S12X_ADR2	0x32	/* A/D, Analog Result register 2 */
+#define MC9S12X_ADR3	0x33	/* A/D, Analog Result register 3 */
+#define MC9S12X_ADR4	0x34	/* A/D, Analog Result register 4 */
+#define MC9S12X__RES35	0x35
+#define MC9S12X__RES36	0x36
+#define MC9S12X__RES37	0x37
+#define MC9S12X__RES38	0x38
+#define MC9S12X_OPTION	0x39	/* System Configuration Options */
+#define MC9S12X_COPRST	0x3A	/* Arm/Reset COP Timer Circuitry */
+#define MC9S12X_PPROG	0x3B	/* EEPROM Programming Control Register */
+#define MC9S12X_HPRIO	0x3C	/* Highest priority I-Bit int and misc */
+#define MC9S12X_INIT	0x3D	/* Ram and I/O mapping register */
+#define MC9S12X_TEST1	0x3E	/* Factory test control register */
+#define MC9S12X_CONFIG	0x3F	/* COP, ROM and EEPROM enables */
+
+
+/* Flags of the CONFIG register (in EEPROM).  */
+#define MC9S12X_NOSEC     0x08    /* Security mode disable */
+#define MC9S12X_NOCOP     0x04    /* COP system disable */
+#define MC9S12X_ROMON     0x02    /* Enable on-chip rom */
+#define MC9S12X_EEON      0x01    /* Enable on-chip eeprom */
+
+/* Flags of the PPROG register.  */
+#define MC9S12X_BYTE	0x10	/* Byte mode */
+#define MC9S12X_ROW       0x08	/* Row mode */
+#define MC9S12X_ERASE	0x04	/* Erase mode select (1 = erase, 0 = read) */
+#define MC9S12X_EELAT     0x02	/* EEPROM Latch Control */
+#define MC9S12X_EEPGM     0x01	/* EEPROM Programming Voltage Enable */
+
+/* Flags of the PIOC register.  */
+#define MC9S12X_STAF	0x80	/* Strobe A Interrupt Status Flag */
+#define MC9S12X_STAI	0x40	/* Strobe A Interrupt Enable Mask */
+#define MC9S12X_CWOM	0x20	/* Port C Wire OR mode */
+#define MC9S12X_HNDS	0x10	/* Handshake mode */
+#define MC9S12X_OIN	0x08	/* Output or Input handshaking */
+#define MC9S12X_PLS	0x04	/* Pulse/Interlocked Handshake Operation */
+#define MC9S12X_EGA	0x02	/* Active Edge for Strobe A */
+#define MC9S12X_INVB	0x01	/* Invert Strobe B */
+
+/* Flags of the SCCR1 register.  */
+#define MC9S12X_R8	0x80	/* Receive Data bit 8 */
+#define MC9S12X_T8	0x40	/* Transmit data bit 8 */
+#define MC9S12X__SCCR1_5  0x20	/* Unused */
+#define MC9S12X_M		0x10	/* SCI Character length */
+#define MC9S12X_WAKE	0x08	/* Wake up method select (0=idle, 1=addr mark) */
+
+/* Flags of the SCCR2 register.  */
+#define MC9S12X_TIE	0x80	/* Transmit Interrupt enable */
+#define MC9S12X_TCIE	0x40	/* Transmit Complete Interrupt Enable */
+#define MC9S12X_RIE	0x20	/* Receive Interrupt Enable */
+#define MC9S12X_ILIE	0x10	/* Idle Line Interrupt Enable */
+#define MC9S12X_TE	0x08	/* Transmit Enable */
+#define MC9S12X_RE	0x04	/* Receive Enable */
+#define MC9S12X_RWU	0x02	/* Receiver Wake Up */
+#define MC9S12X_SBK	0x01	/* Send Break */
+
+/* Flags of the SCSR register.  */
+#define MC9S12X_TDRE	0x80	/* Transmit Data Register Empty */
+#define MC9S12X_TC	0x40	/* Transmit Complete */
+#define MC9S12X_RDRF	0x20	/* Receive Data Register Full */
+#define MC9S12X_IDLE	0x10	/* Idle Line Detect */
+#define MC9S12X_OR	0x08	/* Overrun Error */
+#define MC9S12X_NF	0x04	/* Noise Flag */
+#define MC9S12X_FE	0x02	/* Framing Error */
+#define MC9S12X__SCSR_0	0x01	/* Unused */
+
+/* Flags of the BAUD register.  */
+#define MC9S12X_TCLR	0x80	/* Clear Baud Rate (TEST mode) */
+#define MC9S12X__BAUD_6	0x40	/* Not used */
+#define MC9S12X_SCP1	0x20	/* SCI Baud rate prescaler select */
+#define MC9S12X_SCP0	0x10
+#define MC9S12X_RCKB	0x08	/* Baud Rate Clock Check (TEST mode) */
+#define MC9S12X_SCR2	0x04	/* SCI Baud rate select */
+#define MC9S12X_SCR1	0x02
+#define MC9S12X_SCR0	0x01
+
+#define MC9S12X_BAUD_DIV_1	(0)
+#define MC9S12X_BAUD_DIV_3	(MC9S12X_SCP0)
+#define MC9S12X_BAUD_DIV_4	(MC9S12X_SCP1)
+#define MC9S12X_BAUD_DIV_13	(MC9S12X_SCP1|MC9S12X_SCP0)
+
+/* Flags of the SPCR register.  */
+#define MC9S12X_SPIE	0x80	/* Serial Peripheral Interrupt Enable */
+#define MC9S12X_SPE	0x40	/* Serial Peripheral System Enable */
+#define MC9S12X_DWOM	0x20	/* Port D Wire-OR mode option */
+#define MC9S12X_MSTR	0x10	/* Master Mode Select */
+#define MC9S12X_CPOL	0x08	/* Clock Polarity */
+#define MC9S12X_CPHA	0x04	/* Clock Phase */
+#define MC9S12X_SPR1	0x02	/* SPI Clock Rate Select */
+#define MC9S12X_SPR0	0x01
+
+/* Flags of the SPSR register.  */
+#define MC9S12X_SPIF	0x80	/* SPI Transfer Complete flag */
+#define MC9S12X_WCOL	0x40	/* Write Collision */
+#define MC9S12X_MODF	0x10	/* Mode Fault */
+
+/* Flags of the ADCTL register.  */
+#define MC9S12X_CCF	0x80	/* Conversions Complete Flag */
+#define MC9S12X_SCAN	0x20	/* Continuous Scan Control */
+#define MC9S12X_MULT	0x10	/* Multiple Channel/Single Channel Control */
+#define MC9S12X_CD	0x08	/* Channel Select D */
+#define MC9S12X_CC	0x04	/*                C */
+#define MC9S12X_CB	0x02	/*                B */
+#define MC9S12X_CA	0x01	/*                A */
+
+/* Flags of the CFORC register.  */
+#define MC9S12X_FOC1	0x80	/* Force Output Compare 1 */
+#define MC9S12X_FOC2	0x40	/*			2 */
+#define MC9S12X_FOC3	0x20	/*			3 */
+#define MC9S12X_FOC4	0x10	/*			4 */
+#define MC9S12X_FOC5	0x08	/*			5 */
+
+/* Flags of the OC1M register.  */
+#define MC9S12X_OC1M7	0x80	/* Output Compare 7 */
+#define MC9S12X_OC1M6	0x40	/*                6 */
+#define MC9S12X_OC1M5	0x20	/*                5 */
+#define MC9S12X_OC1M4	0x10	/*                4 */
+#define MC9S12X_OC1M3	0x08	/*                3 */
+
+/* Flags of the OC1D register.  */
+#define MC9S12X_OC1D7	0x80
+#define MC9S12X_OC1D6	0x40
+#define MC9S12X_OC1D5	0x20
+#define MC9S12X_OC1D4	0x10
+#define MC9S12X_OC1D3	0x08
+
+/* Flags of the TCTL1 register.  */
+#define MC9S12X_OM2	0x80	/* Output Mode 2 */
+#define MC9S12X_OL2	0x40	/* Output Level 2 */
+#define MC9S12X_OM3	0x20
+#define MC9S12X_OL3	0x10
+#define MC9S12X_OM4	0x08
+#define MC9S12X_OL4	0x04
+#define MC9S12X_OM5	0x02
+#define MC9S12X_OL5	0x01
+
+/* Flags of the TCTL2 register.  */
+#define MC9S12X_EDG1B	0x20	/* Input Edge Capture Control 1 */
+#define MC9S12X_EDG1A	0x10
+#define MC9S12X_EDG2B	0x08	/* Input 2 */
+#define MC9S12X_EDG2A	0x04
+#define MC9S12X_EDG3B	0x02	/* Input 3 */
+#define MC9S12X_EDG3A	0x01
+
+/* Flags of the TMSK1 register.  */
+#define MC9S12X_OC1I	0x80	/* Output Compare 1 Interrupt */
+#define MC9S12X_OC2I	0x40	/*		  2	      */
+#define MC9S12X_OC3I	0x20	/*		  3	      */
+#define MC9S12X_OC4I	0x10	/*		  4	      */
+#define MC9S12X_OC5I	0x08	/*		  5	      */
+#define MC9S12X_IC1I	0x04	/* Input Capture  1 Interrupt */
+#define MC9S12X_IC2I	0x02	/*		  2	      */
+#define MC9S12X_IC3I	0x01	/*		  3	      */
+
+/* Flags of the TFLG1 register.  */
+#define MC9S12X_OC1F	0x80	/* Output Compare 1 Flag */
+#define MC9S12X_OC2F	0x40	/*		  2	 */
+#define MC9S12X_OC3F	0x20	/*		  3	 */
+#define MC9S12X_OC4F	0x10	/*		  4	 */
+#define MC9S12X_OC5F	0x08	/*		  5	 */
+#define MC9S12X_IC1F	0x04	/* Input Capture  1 Flag */
+#define MC9S12X_IC2F	0x02	/*		  2	 */
+#define MC9S12X_IC3F	0x01	/*		  3	 */
+
+/* Flags of Timer Interrupt Mask Register 2 (TMSK2).  */
+#define MC9S12X_TOI       0x80    /* Timer Overflow Interrupt Enable */
+#define MC9S12X_RTII      0x40    /* RTI Interrupt Enable */
+#define MC9S12X_PAOVI     0x20    /* Pulse Accumulator Overflow Interrupt En. */
+#define MC9S12X_PAII      0x10    /* Pulse Accumulator Interrupt Enable */
+#define MC9S12X_PR1       0x02    /* Timer prescaler */
+#define MC9S12X_PR0       0x01    /* Timer prescaler */
+#define MC9S12X_TPR_1     0x00    /* " " prescale div 1 */
+#define MC9S12X_TPR_4     0x01    /* " " prescale div 4 */
+#define MC9S12X_TPR_8     0x02    /* " " prescale div 8 */
+#define MC9S12X_TPR_16    0x03    /* " " prescale div 16 */
+
+/* Flags of Timer Interrupt Flag Register 2 (MC9S12X_TFLG2).  */
+#define MC9S12X_TOF       0x80    /* Timer overflow bit */
+#define MC9S12X_RTIF      0x40    /* Read time interrupt flag */
+#define MC9S12X_PAOVF     0x20    /* Pulse accumulator overflow Interrupt flag */
+#define MC9S12X_PAIF      0x10    /* Pulse accumulator Input Edge " " " */
+
+/* Flags of Pulse Accumulator Control Register (PACTL).  */
+#define MC9S12X_DDRA7     0x80    /* Data direction for port A bit 7 */
+#define MC9S12X_PAEN      0x40    /* Pulse accumulator system enable */
+#define MC9S12X_PAMOD     0x20    /* Pulse accumulator mode */
+#define MC9S12X_PEDGE     0x10    /* Pulse accumulator edge control */
+#define MC9S12X_RTR1      0x02    /* RTI Interrupt rates select */
+#define MC9S12X_RTR0      0x01    /* " " " " */
+
+/* Flags of the Options register.  */
+#define MC9S12X_ADPU      0x80    /* A/D Powerup */
+#define MC9S12X_CSEL      0x40    /* A/D/EE Charge pump clock source select */
+#define MC9S12X_IRQE      0x20    /* IRQ Edge/Level sensitive */
+#define MC9S12X_DLY       0x10    /* Stop exit turn on delay */
+#define MC9S12X_CME       0x08    /* Clock Monitor enable */
+#define MC9S12X_CR1       0x02    /* COP timer rate select */
+#define MC9S12X_CR0       0x01    /* COP timer rate select */
+
+/* Flags of the HPRIO register.  */
+#define MC9S12X_RBOOT	0x80	/* Read Bootstrap ROM */
+#define MC9S12X_SMOD	0x40	/* Special Mode */
+#define MC9S12X_MDA	0x20	/* Mode Select A */
+#define MC9S12X_IRV	0x10	/* Internal Read Visibility */
+#define MC9S12X_PSEL3	0x08	/* Priority Select */
+#define MC9S12X_PSEL2	0x04
+#define MC9S12X_PSEL1	0x02
+#define MC9S12X_PSEL0	0x01
+
+/* Some insns used by gas to turn relative branches into absolute ones.  */
+#define MC9S12X_BRA	0x20
+//#define MC9S12X_JMP	0x7e
+//#define MC9S12X_BSR	0x8d
+//#define MC9S12X_JSR  0xbd
+#define MC9S12X_JMP       0x06
+#define MC9S12X_BSR       0x07
+#define MC9S12X_JSR       0x16
+
+/* Instruction code pages. Code page 1 is the default.  */
+/*#define	MC9S12X_OPCODE_PAGE1	0x00*/
+#define	MC9S12X_OPCODE_PAGE2	0x18
+#define	MC9S12X_OPCODE_PAGE3	0x1A
+#define	MC9S12X_OPCODE_PAGE4	0xCD
+
+
+/* 68HC11 operands formats as stored in the MC9S12X_opcode table.  These
+   flags do not correspond to anything in the 68HC11 or 68HC12.
+   They are only used by GAS to recognize operands.  */
+#define MC9S12X_OP_NONE         0        /* No operand */
+#define MC9S12X_OP_DIRECT       0x0001   /* Page 0 addressing:   *<val-8bits>  */
+#define MC9S12X_OP_IMM8         0x0002   /*  8 bits immediat:    #<val-8bits>  */
+#define MC9S12X_OP_IMM16        0x0004   /* 16 bits immediat:    #<val-16bits> */
+#define MC9S12X_OP_IND16        0x0008   /* Indirect abs:        <val-16>      */
+#define MC9S12X_OP_IND16_P2     0x0010   /* Second parameter indirect abs.     */
+#define MC9S12X_OP_REG          0x0020   /* Register operand 1                 */
+#define MC9S12X_OP_REG_2        0x0040   /* Register operand 2                 */
+
+#define MC9S12X_OP_IX           0x0080   /* Indirect IX:         <val-8>,x     */
+#define MC9S12X_OP_IY           0x0100   /* Indirect IY:         <val-8>,y     */
+#define MC9S12X_OP_IDX          0x0200   /* Indirect: N,r N,[+-]r[+-] N:5-bits */
+#define MC9S12X_OP_IDX_1        0x0400   /* N,r N:9-bits  */
+#define MC9S12X_OP_IDX_2        0x0800   /* N,r N:16-bits */
+#define MC9S12X_OP_D_IDX        0x1000   /* Indirect indexed: [D,r] */
+#define MC9S12X_OP_D_IDX_2      0x2000   /* [N,r] N:16-bits */
+#define MC9S12X_OP_PAGE         0x4000   /* Page number */
+#define MC9S12X_OP_MASK         0x07FFF
+#define MC9S12X_OP_BRANCH       0x00008000 /* Branch, jsr, call */
+#define MC9S12X_OP_BITMASK      0x00010000 /* Bitmask:             #<val-8>    */
+#define MC9S12X_OP_JUMP_REL     0x00020000 /* Pc-Relative:         <val-8>     */
+#define MC9S12X_OP_JUMP_REL16   0x00040000 /* Pc-relative:         <val-16>    */
+#define MC9S12X_OP_PAGE1        0x0000
+#define MC9S12X_OP_PAGE2        0x00080000 /* Need a page2 opcode before       */
+#define MC9S12X_OP_PAGE3        0x00100000 /* Need a page3 opcode before       */
+#define MC9S12X_OP_PAGE4        0x00200000 /* Need a page4 opcode before       */
+#define MC9S12X_MAX_OPERANDS    3     /* Max operands: brset <dst> <mask> <b> */
+
+#define MC9S12X_ACC_OFFSET      0x00400000 /* A,r B,r D,r			    */
+#define MC9S12X_ACC_IND         0x00800000 /* [D,r]			    */
+#define MC9S12X_PRE_INC         0x01000000 /* n,+r   n = -8..8		    */
+#define MC9S12X_PRE_DEC         0x02000000 /* n,-r			    */
+#define MC9S12X_POST_INC        0x04000000 /* n,r+			    */
+#define MC9S12X_POST_DEC        0x08000000 /* n,r-			    */
+#define MC9S12X_INDEXED_IND     0x10000000 /* [n,r]  n = 16-bits		    */
+#define MC9S12X_INDEXED         0x20000000 /* n,r    n = 5, 9 or 16-bits	    */
+#define MC9S12X_OP_IDX_P2       0x40000000
+
+/* Markers to identify some instructions.  */
+#define MC9S12X_OP_EXG_MARKER   0x01000000 /* exg r1,r2 */
+#define MC9S12X_OP_TFR_MARKER   0x02000000 /* tfr r1,r2 */
+#define MC9S12X_OP_SEX_MARKER   0x04000000 /* sex r1,r2 */
+
+#define MC9S12X_OP_EQ_MARKER    0x80000000 /* dbeq/ibeq/tbeq */
+#define MC9S12X_OP_DBCC_MARKER  0x04000000 /* dbeq/dbne */
+#define MC9S12X_OP_IBCC_MARKER  0x02000000 /* ibeq/ibne */
+#define MC9S12X_OP_TBCC_MARKER  0x01000000
+
+#define MC9S12X_OP_TRAP_ID      0x80000000 /* trap #N */
+
+#define MC9S12X_OP_HIGH_ADDR    0x01000000 /* Used internally by gas.  */
+#define MC9S12X_OP_LOW_ADDR     0x02000000
+
+#define MC9S12X_BANK_VIRT 0x010000
+#define MC9S12X_BANK_MASK 0x00003fff
+#define MC9S12X_BANK_BASE 0x00008000
+#define MC9S12X_BANK_SHIFT 14
+#define MC9S12X_BANK_PAGE_MASK 0x0ff
+
+
+/* CPU identification.  */
+//#define cpu6811 0x01
+//#define cpu6812 0x02
+#define cpumc9s12x 0x02
+
+/* The opcode table is an array of struct m68hc11_opcode.  */
+struct mc9s12x_opcode {
+  const char*    name;     /* Op-code name */
+  long           format;
+  unsigned char  size;
+  unsigned char  opcode;
+  unsigned char  cycles_low;
+  unsigned char  cycles_high;
+  unsigned char  set_flags_mask;
+  unsigned char  clr_flags_mask;
+  unsigned char  chg_flags_mask;
+  unsigned char  arch;
+};
+
+/* Alias definition for 68HC12.  */
+struct mc9s12x_opcode_alias
+{
+  const char*   name;
+  const char*   translation;
+  unsigned char size;
+  unsigned char code1;
+  unsigned char code2;
+};
+
+/* The opcode table.  The table contains all the opcodes (all pages).
+   You can't rely on the order.  */
+extern const struct mc9s12x_opcode mc9s12x_opcodes[];
+extern const int mc9s12x_num_opcodes;
+
+/* Alias table for 68HC12.  It translates some 68HC11 insn which are not
+   implemented in 68HC12 but have equivalent translations.  */
+extern const struct mc9s12x_opcode_alias mc9s12x_alias[];
+extern const int mc9s12x_num_alias;
+
+#endif /* _OPCODE_M68HC11_H */
diff -rupN binutils-2.20/include/opcode/mc9xgate.h binutils-2.20-sean/include/opcode/mc9xgate.h
--- binutils-2.20/include/opcode/mc9xgate.h	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/include/opcode/mc9xgate.h	2010-10-01 14:37:32.000000000 -0600
@@ -0,0 +1,506 @@
+/* m68hc11.h -- Header file for Motorola 68HC11 & 68HC12 opcode table
+   Copyright 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+This file is part of GDB, GAS, and the GNU binutils.
+
+GDB, GAS, and the GNU binutils are free software; you can redistribute
+them and/or modify them under the terms of the GNU General Public
+License as published by the Free Software Foundation; either version
+1, or (at your option) any later version.
+
+GDB, GAS, and the GNU binutils are distributed in the hope that they
+will be useful, but WITHOUT ANY WARRANTY; without even the implied
+warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+the GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this file; see the file COPYING.  If not, write to the Free
+Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
+
+/*
+ * :1: error: "MC9S12X_JMP" redefined
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:311:1: error: this is the location of the previous definition
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:315:1: error: "MC9S12X_BSR" redefined
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:312:1: error: this is the location of the previous definition
+.././../../binutils-2.20/bfd/../include/opcode/mc9s12x.h:316:1: error: "MC9S12X_JSR" redefined
+ *
+ *
+ *
+ */
+
+#ifndef _OPCODE_MC9XGATE_H
+#define _OPCODE_MC9XGATE_H
+
+/* Flags for the definition of the 68HC11 & 68HC12 CCR.  */
+//#define MC9XGATE_S_BIT     0x80	/* Stop disable */
+//#define MC9XGATE_X_BIT     0x40	/* X-interrupt mask */
+//#define MC9XGATE_H_BIT     0x20	/* Half carry flag */
+//#define MC9XGATE_I_BIT     0x10	/* I-interrupt mask */
+//#define MC9XGATE_N_BIT     0x08	/* Negative */
+#define MC9XGATE_N_BIT   0x08	/* XGN - Sign Flag */
+#define MC9XGATE_Z_BIT   0x04	/* XGZ - Zero Flag */
+#define MC9XGATE_V_BIT   0x02	/* XGV - Overflow Flag */
+#define MC9XGATE_C_BIT   0x01	/* XGC - Carry Flag */
+
+/*
+                          Table 4-1 Access Detail Notation
+V — Vector fetch: always an aligned word read, lasts for at least one RISC core cycle
+P — Program word fetch: always an aligned word read, lasts for at least one RISC core cycle
+r — 8-bit data read: lasts for at least one RISC core cycle
+R — 16-bit data read: lasts for at least one RISC core cycle
+w — 8-bit data write: lasts for at least one RISC core cycle
+W — 16-bit data write: lasts for at least one RISC core cycle
+A — Alignment cycle: no read or write, lasts for zero or one RISC core cycles
+f — Free cycle: no read or write, lasts for one RISC core cycles
+*/
+
+#define MC9XGATE_CYCLE_V	0x01
+#define MC9XGATE_CYCLE_P	0x02
+#define MC9XGATE_CYCLE_r	0x04
+#define MC9XGATE_CYCLE_R	0x08
+#define MC9XGATE_CYCLE_w	0x10
+#define MC9XGATE_CYCLE_W	0x20
+#define MC9XGATE_CYCLE_A	0x40
+#define MC9XGATE_CYCLE_f	0x80
+
+
+/* Opcode format abbrivations */
+#define MC9XGATE_INH		0x0001  /* inherent */
+#define MC9XGATE_I			0x0002  /* 3-bit immediate address */
+#define MC9XGATE_R_I		0x0004  /* register followed by 4/8-bit immediate address */
+#define MC9XGATE_R_R		0x0008  /* register followed by a register */
+#define MC9XGATE_R_R_R		0x0010  /* register followed by two registers */
+#define MC9XGATE_R			0x0020  /* single register */
+#define MC9XGATE_PC			0x0040  /* pc relative 10 or 11 bit */
+#define MC9XGATE_R_C		0x0080
+#define MC9XGATE_C_R		0x0100
+#define MC9XGATE_R_P		0x0200
+#define MC9XGATE_R_R_O		0x0400
+#define MC9XGATE_R_R_I		0x0800
+#define MC9XGATE_PCREL		0x1000  /* Instruction is a PC relative instruction */
+
+
+/* 68HC11 register address offsets (range 0..0x3F or 0..64).
+   The absolute address of the I/O register depends on the setting
+   of the MC9XGATE_INIT register.  At init time, the I/O registers are
+   mapped at 0x1000.  Address of registers is then:
+
+   0x1000 + MC9XGATE_xxx
+   TODO Update to S12X specs
+*/
+#define MC9XGATE_PORTA  0x00	/* Port A register */
+#define MC9XGATE__RES1	0x01	/* Unused/Reserved */
+#define MC9XGATE_PIOC	0x02	/* Parallel I/O Control register */
+#define MC9XGATE_PORTC	0x03	/* Port C register */
+#define MC9XGATE_PORTB	0x04	/* Port B register */
+#define MC9XGATE_PORTCL	0x05	/* Alternate latched port C */
+#define MC9XGATE__RES6	0x06	/* Unused/Reserved */
+#define MC9XGATE_DDRC	0x07	/* Data direction register for port C */
+#define MC9XGATE_PORTD	0x08	/* Port D register */
+#define MC9XGATE_DDRD	0x09	/* Data direction register for port D */
+#define MC9XGATE_PORTE	0x0A	/* Port E input register */
+#define MC9XGATE_CFORC	0x0B	/* Compare Force Register */
+#define MC9XGATE_OC1M	0x0C	/* OC1 Action Mask register */
+#define MC9XGATE_OC1D	0x0D	/* OC1 Action Data register */
+#define MC9XGATE_TCTN	0x0E	/* Timer Counter Register */
+#define MC9XGATE_TCTN_H	0x0E	/* "	 "	 " High part */
+#define MC9XGATE_TCTN_L	0x0F	/* "	 "	 " Low part */
+#define MC9XGATE_TIC1	0x10	/* Input capture 1 register */
+#define MC9XGATE_TIC1_H	0x10	/* "	 "	 " High part */
+#define MC9XGATE_TIC1_L	0x11	/* "	 "	 " Low part */
+#define MC9XGATE_TIC2	0x12	/* Input capture 2 register */
+#define MC9XGATE_TIC2_H	0x12	/* "	 "	 " High part */
+#define MC9XGATE_TIC2_L	0x13	/* "	 "	 " Low part */
+#define MC9XGATE_TIC3	0x14	/* Input capture 3 register */
+#define MC9XGATE_TIC3_H	0x14	/* "	 "	 " High part */
+#define MC9XGATE_TIC3_L	0x15	/* "	 "	 " Low part */
+#define MC9XGATE_TOC1	0x16	/* Output Compare 1 register */
+#define MC9XGATE_TOC1_H	0x16	/* "	 "	 " High part */
+#define MC9XGATE_TOC1_L	0x17	/* "	 "	 " Low part */
+#define MC9XGATE_TOC2	0x18	/* Output Compare 2 register */
+#define MC9XGATE_TOC2_H	0x18	/* "	 "	 " High part */
+#define MC9XGATE_TOC2_L	0x19	/* "	 "	 " Low part */
+#define MC9XGATE_TOC3	0x1A	/* Output Compare 3 register */
+#define MC9XGATE_TOC3_H	0x1A	/* "	 "	 " High part */
+#define MC9XGATE_TOC3_L	0x1B	/* "	 "	 " Low part */
+#define MC9XGATE_TOC4	0x1C	/* Output Compare 4 register */
+#define MC9XGATE_TOC4_H	0x1C	/* "	 "	 " High part */
+#define MC9XGATE_TOC4_L	0x1D	/* "	 "	 " Low part */
+#define MC9XGATE_TOC5	0x1E	/* Output Compare 5 register */
+#define MC9XGATE_TOC5_H	0x1E	/* "	 "	 " High part */
+#define MC9XGATE_TOC5_L	0x1F	/* "	 "	 " Low part */
+#define MC9XGATE_TCTL1	0x20	/* Timer Control register 1 */
+#define MC9XGATE_TCTL2	0x21	/* Timer Control register 2 */
+#define MC9XGATE_TMSK1	0x22	/* Timer Interrupt Mask Register 1 */
+#define MC9XGATE_TFLG1	0x23	/* Timer Interrupt Flag Register 1 */
+#define MC9XGATE_TMSK2	0x24	/* Timer Interrupt Mask Register 2 */
+#define MC9XGATE_TFLG2	0x25	/* Timer Interrupt Flag Register 2 */
+#define MC9XGATE_PACTL	0x26	/* Pulse Accumulator Control Register */
+#define MC9XGATE_PACNT	0x27	/* Pulse Accumulator Count Register */
+#define MC9XGATE_SPCR	0x28	/* SPI Control register */
+#define MC9XGATE_SPSR	0x29	/* SPI Status register */
+#define MC9XGATE_SPDR	0x2A	/* SPI Data register */
+#define MC9XGATE_BAUD	0x2B	/* SCI Baud register */
+#define MC9XGATE_SCCR1	0x2C	/* SCI Control register 1 */
+#define MC9XGATE_SCCR2	0x2D	/* SCI Control register 2 */
+#define MC9XGATE_SCSR	0x2E	/* SCI Status register */
+#define MC9XGATE_SCDR	0x2F	/* SCI Data (Read => RDR, Write => TDR) */
+#define MC9XGATE_ADCTL	0x30	/* A/D Control register */
+#define MC9XGATE_ADR1	0x31	/* A/D, Analog Result register 1 */
+#define MC9XGATE_ADR2	0x32	/* A/D, Analog Result register 2 */
+#define MC9XGATE_ADR3	0x33	/* A/D, Analog Result register 3 */
+#define MC9XGATE_ADR4	0x34	/* A/D, Analog Result register 4 */
+#define MC9XGATE__RES35	0x35
+#define MC9XGATE__RES36	0x36
+#define MC9XGATE__RES37	0x37
+#define MC9XGATE__RES38	0x38
+#define MC9XGATE_OPTION	0x39	/* System Configuration Options */
+#define MC9XGATE_COPRST	0x3A	/* Arm/Reset COP Timer Circuitry */
+#define MC9XGATE_PPROG	0x3B	/* EEPROM Programming Control Register */
+#define MC9XGATE_HPRIO	0x3C	/* Highest priority I-Bit int and misc */
+#define MC9XGATE_INIT	0x3D	/* Ram and I/O mapping register */
+#define MC9XGATE_TEST1	0x3E	/* Factory test control register */
+#define MC9XGATE_CONFIG	0x3F	/* COP, ROM and EEPROM enables */
+
+
+/* Flags of the CONFIG register (in EEPROM).  */
+#define MC9XGATE_NOSEC     0x08    /* Security mode disable */
+#define MC9XGATE_NOCOP     0x04    /* COP system disable */
+#define MC9XGATE_ROMON     0x02    /* Enable on-chip rom */
+#define MC9XGATE_EEON      0x01    /* Enable on-chip eeprom */
+
+/* Flags of the PPROG register.  */
+#define MC9XGATE_BYTE	0x10	/* Byte mode */
+#define MC9XGATE_ROW       0x08	/* Row mode */
+#define MC9XGATE_ERASE	0x04	/* Erase mode select (1 = erase, 0 = read) */
+#define MC9XGATE_EELAT     0x02	/* EEPROM Latch Control */
+#define MC9XGATE_EEPGM     0x01	/* EEPROM Programming Voltage Enable */
+
+/* Flags of the PIOC register.  */
+#define MC9XGATE_STAF	0x80	/* Strobe A Interrupt Status Flag */
+#define MC9XGATE_STAI	0x40	/* Strobe A Interrupt Enable Mask */
+#define MC9XGATE_CWOM	0x20	/* Port C Wire OR mode */
+#define MC9XGATE_HNDS	0x10	/* Handshake mode */
+#define MC9XGATE_OIN	0x08	/* Output or Input handshaking */
+#define MC9XGATE_PLS	0x04	/* Pulse/Interlocked Handshake Operation */
+#define MC9XGATE_EGA	0x02	/* Active Edge for Strobe A */
+#define MC9XGATE_INVB	0x01	/* Invert Strobe B */
+
+/* Flags of the SCCR1 register.  */
+#define MC9XGATE_R8	0x80	/* Receive Data bit 8 */
+#define MC9XGATE_T8	0x40	/* Transmit data bit 8 */
+#define MC9XGATE__SCCR1_5  0x20	/* Unused */
+#define MC9XGATE_M		0x10	/* SCI Character length */
+#define MC9XGATE_WAKE	0x08	/* Wake up method select (0=idle, 1=addr mark) */
+
+/* Flags of the SCCR2 register.  */
+#define MC9XGATE_TIE	0x80	/* Transmit Interrupt enable */
+#define MC9XGATE_TCIE	0x40	/* Transmit Complete Interrupt Enable */
+#define MC9XGATE_RIE	0x20	/* Receive Interrupt Enable */
+#define MC9XGATE_ILIE	0x10	/* Idle Line Interrupt Enable */
+#define MC9XGATE_TE	0x08	/* Transmit Enable */
+#define MC9XGATE_RE	0x04	/* Receive Enable */
+#define MC9XGATE_RWU	0x02	/* Receiver Wake Up */
+#define MC9XGATE_SBK	0x01	/* Send Break */
+
+/* Flags of the SCSR register.  */
+#define MC9XGATE_TDRE	0x80	/* Transmit Data Register Empty */
+#define MC9XGATE_TC	0x40	/* Transmit Complete */
+#define MC9XGATE_RDRF	0x20	/* Receive Data Register Full */
+#define MC9XGATE_IDLE	0x10	/* Idle Line Detect */
+#define MC9XGATE_OR	0x08	/* Overrun Error */
+#define MC9XGATE_NF	0x04	/* Noise Flag */
+#define MC9XGATE_FE	0x02	/* Framing Error */
+#define MC9XGATE__SCSR_0	0x01	/* Unused */
+
+/* Flags of the BAUD register.  */
+#define MC9XGATE_TCLR	0x80	/* Clear Baud Rate (TEST mode) */
+#define MC9XGATE__BAUD_6	0x40	/* Not used */
+#define MC9XGATE_SCP1	0x20	/* SCI Baud rate prescaler select */
+#define MC9XGATE_SCP0	0x10
+#define MC9XGATE_RCKB	0x08	/* Baud Rate Clock Check (TEST mode) */
+#define MC9XGATE_SCR2	0x04	/* SCI Baud rate select */
+#define MC9XGATE_SCR1	0x02
+#define MC9XGATE_SCR0	0x01
+
+#define MC9XGATE_BAUD_DIV_1	(0)
+#define MC9XGATE_BAUD_DIV_3	(MC9XGATE_SCP0)
+#define MC9XGATE_BAUD_DIV_4	(MC9XGATE_SCP1)
+#define MC9XGATE_BAUD_DIV_13	(MC9XGATE_SCP1|MC9XGATE_SCP0)
+
+/* Flags of the SPCR register.  */
+#define MC9XGATE_SPIE	0x80	/* Serial Peripheral Interrupt Enable */
+#define MC9XGATE_SPE	0x40	/* Serial Peripheral System Enable */
+#define MC9XGATE_DWOM	0x20	/* Port D Wire-OR mode option */
+#define MC9XGATE_MSTR	0x10	/* Master Mode Select */
+#define MC9XGATE_CPOL	0x08	/* Clock Polarity */
+#define MC9XGATE_CPHA	0x04	/* Clock Phase */
+#define MC9XGATE_SPR1	0x02	/* SPI Clock Rate Select */
+#define MC9XGATE_SPR0	0x01
+
+/* Flags of the SPSR register.  */
+#define MC9XGATE_SPIF	0x80	/* SPI Transfer Complete flag */
+#define MC9XGATE_WCOL	0x40	/* Write Collision */
+#define MC9XGATE_MODF	0x10	/* Mode Fault */
+
+/* Flags of the ADCTL register.  */
+#define MC9XGATE_CCF	0x80	/* Conversions Complete Flag */
+#define MC9XGATE_SCAN	0x20	/* Continuous Scan Control */
+#define MC9XGATE_MULT	0x10	/* Multiple Channel/Single Channel Control */
+#define MC9XGATE_CD	0x08	/* Channel Select D */
+#define MC9XGATE_CC	0x04	/*                C */
+#define MC9XGATE_CB	0x02	/*                B */
+#define MC9XGATE_CA	0x01	/*                A */
+
+/* Flags of the CFORC register.  */
+#define MC9XGATE_FOC1	0x80	/* Force Output Compare 1 */
+#define MC9XGATE_FOC2	0x40	/*			2 */
+#define MC9XGATE_FOC3	0x20	/*			3 */
+#define MC9XGATE_FOC4	0x10	/*			4 */
+#define MC9XGATE_FOC5	0x08	/*			5 */
+
+/* Flags of the OC1M register.  */
+#define MC9XGATE_OC1M7	0x80	/* Output Compare 7 */
+#define MC9XGATE_OC1M6	0x40	/*                6 */
+#define MC9XGATE_OC1M5	0x20	/*                5 */
+#define MC9XGATE_OC1M4	0x10	/*                4 */
+#define MC9XGATE_OC1M3	0x08	/*                3 */
+
+/* Flags of the OC1D register.  */
+#define MC9XGATE_OC1D7	0x80
+#define MC9XGATE_OC1D6	0x40
+#define MC9XGATE_OC1D5	0x20
+#define MC9XGATE_OC1D4	0x10
+#define MC9XGATE_OC1D3	0x08
+
+/* Flags of the TCTL1 register.  */
+#define MC9XGATE_OM2	0x80	/* Output Mode 2 */
+#define MC9XGATE_OL2	0x40	/* Output Level 2 */
+#define MC9XGATE_OM3	0x20
+#define MC9XGATE_OL3	0x10
+#define MC9XGATE_OM4	0x08
+#define MC9XGATE_OL4	0x04
+#define MC9XGATE_OM5	0x02
+#define MC9XGATE_OL5	0x01
+
+/* Flags of the TCTL2 register.  */
+#define MC9XGATE_EDG1B	0x20	/* Input Edge Capture Control 1 */
+#define MC9XGATE_EDG1A	0x10
+#define MC9XGATE_EDG2B	0x08	/* Input 2 */
+#define MC9XGATE_EDG2A	0x04
+#define MC9XGATE_EDG3B	0x02	/* Input 3 */
+#define MC9XGATE_EDG3A	0x01
+
+/* Flags of the TMSK1 register.  */
+#define MC9XGATE_OC1I	0x80	/* Output Compare 1 Interrupt */
+#define MC9XGATE_OC2I	0x40	/*		  2	      */
+#define MC9XGATE_OC3I	0x20	/*		  3	      */
+#define MC9XGATE_OC4I	0x10	/*		  4	      */
+#define MC9XGATE_OC5I	0x08	/*		  5	      */
+#define MC9XGATE_IC1I	0x04	/* Input Capture  1 Interrupt */
+#define MC9XGATE_IC2I	0x02	/*		  2	      */
+#define MC9XGATE_IC3I	0x01	/*		  3	      */
+
+/* Flags of the TFLG1 register.  */
+#define MC9XGATE_OC1F	0x80	/* Output Compare 1 Flag */
+#define MC9XGATE_OC2F	0x40	/*		  2	 */
+#define MC9XGATE_OC3F	0x20	/*		  3	 */
+#define MC9XGATE_OC4F	0x10	/*		  4	 */
+#define MC9XGATE_OC5F	0x08	/*		  5	 */
+#define MC9XGATE_IC1F	0x04	/* Input Capture  1 Flag */
+#define MC9XGATE_IC2F	0x02	/*		  2	 */
+#define MC9XGATE_IC3F	0x01	/*		  3	 */
+
+/* Flags of Timer Interrupt Mask Register 2 (TMSK2).  */
+#define MC9XGATE_TOI       0x80    /* Timer Overflow Interrupt Enable */
+#define MC9XGATE_RTII      0x40    /* RTI Interrupt Enable */
+#define MC9XGATE_PAOVI     0x20    /* Pulse Accumulator Overflow Interrupt En. */
+#define MC9XGATE_PAII      0x10    /* Pulse Accumulator Interrupt Enable */
+#define MC9XGATE_PR1       0x02    /* Timer prescaler */
+#define MC9XGATE_PR0       0x01    /* Timer prescaler */
+#define MC9XGATE_TPR_1     0x00    /* " " prescale div 1 */
+#define MC9XGATE_TPR_4     0x01    /* " " prescale div 4 */
+#define MC9XGATE_TPR_8     0x02    /* " " prescale div 8 */
+#define MC9XGATE_TPR_16    0x03    /* " " prescale div 16 */
+
+/* Flags of Timer Interrupt Flag Register 2 (MC9XGATE_TFLG2).  */
+#define MC9XGATE_TOF       0x80    /* Timer overflow bit */
+#define MC9XGATE_RTIF      0x40    /* Read time interrupt flag */
+#define MC9XGATE_PAOVF     0x20    /* Pulse accumulator overflow Interrupt flag */
+#define MC9XGATE_PAIF      0x10    /* Pulse accumulator Input Edge " " " */
+
+/* Flags of Pulse Accumulator Control Register (PACTL).  */
+#define MC9XGATE_DDRA7     0x80    /* Data direction for port A bit 7 */
+#define MC9XGATE_PAEN      0x40    /* Pulse accumulator system enable */
+#define MC9XGATE_PAMOD     0x20    /* Pulse accumulator mode */
+#define MC9XGATE_PEDGE     0x10    /* Pulse accumulator edge control */
+#define MC9XGATE_RTR1      0x02    /* RTI Interrupt rates select */
+#define MC9XGATE_RTR0      0x01    /* " " " " */
+
+/* Flags of the Options register.  */
+#define MC9XGATE_ADPU      0x80    /* A/D Powerup */
+#define MC9XGATE_CSEL      0x40    /* A/D/EE Charge pump clock source select */
+#define MC9XGATE_IRQE      0x20    /* IRQ Edge/Level sensitive */
+#define MC9XGATE_DLY       0x10    /* Stop exit turn on delay */
+#define MC9XGATE_CME       0x08    /* Clock Monitor enable */
+#define MC9XGATE_CR1       0x02    /* COP timer rate select */
+#define MC9XGATE_CR0       0x01    /* COP timer rate select */
+
+/* Flags of the HPRIO register.  */
+#define MC9XGATE_RBOOT	0x80	/* Read Bootstrap ROM */
+#define MC9XGATE_SMOD	0x40	/* Special Mode */
+#define MC9XGATE_MDA	0x20	/* Mode Select A */
+#define MC9XGATE_IRV	0x10	/* Internal Read Visibility */
+#define MC9XGATE_PSEL3	0x08	/* Priority Select */
+#define MC9XGATE_PSEL2	0x04
+#define MC9XGATE_PSEL1	0x02
+#define MC9XGATE_PSEL0	0x01
+
+/* Some insns used by gas to turn relative branches into absolute ones.  */
+#define MC9XGATE_BRA	0x20
+#define MC9XGATE_JMP	0x7e
+#define MC9XGATE_BSR	0x8d
+#define MC9XGATE_JSR	0xbd
+#define MC9XGATE_JMP2       0x06
+#define MC9XGATE_BSR2       0x07
+#define MC9XGATE_JSR2       0x16
+
+/* Instruction code pages. Code page 1 is the default.  */
+/*#define	MC9XGATE_OPCODE_PAGE1	0x00*/
+#define	MC9XGATE_OPCODE_PAGE2	0x18
+#define	MC9XGATE_OPCODE_PAGE3	0x1A
+#define	MC9XGATE_OPCODE_PAGE4	0xCD
+
+
+/* 68HC11 operands formats as stored in the MC9XGATE_opcode table.  These
+   flags do not correspond to anything in the 68HC11 or 68HC12.
+   They are only used by GAS to recognize operands.  */
+#define MC9XGATE_OP_NONE         ""        /* No operand AKA Inherint*/
+#define MC9XGATE_OP_INH			 ""
+#define MC9XGATE_OP_TRI			 "r,r,r"
+#define MC9XGATE_OP_DYA			 "r,r"
+#define MC9XGATE_OP_IMM16mADD    "r,if; addl addh"
+#define MC9XGATE_OP_IMM16mCPC    "r,if; cmpl cpch"
+#define MC9XGATE_OP_IMM16mSUB    "r,if; subl subh"
+#define MC9XGATE_OP_IMM16mLDD    "r,if; ldl ldh"
+#define MC9XGATE_OP_IMM16        "r,if"
+#define MC9XGATE_OP_IMM8		 "r,i8"
+#define MC9XGATE_OP_IMM8m		 "r,m8"
+#define MC9XGATE_OP_IMM4         "r,i4"
+#define MC9XGATE_OP_IMM3		 "i3"
+#define MC9XGATE_OP_MON			 "r"
+#define MC9XGATE_OP_MON_R_C		 "r,c"
+#define MC9XGATE_OP_MON_C_R		 "c,r"
+#define MC9XGATE_OP_MON_R_P		 "r,p"
+#define MC9XGATE_OP_IDR			 "r,r,+"
+#define MC9XGATE_OP_IDO5		 "r,r,i5"
+#define MC9XGATE_OP_REL9		 "b9"
+#define MC9XGATE_OP_REL10		 "ba"
+#define MC9XGATE_OP_DYA_MON		 "=r,r"
+
+
+#define MC9XGATE_OP_DIRECT       0x0001   /* Page 0 addressing:   *<val-8bits>  */
+#define MC9XGATE_OP_IMM16_REMOVE        0x0009   /* THERE IS NO IMM16 16 bits immediat:    #<val-16bits> */
+#define MC9XGATE_OP_IND16        0x0010   /* Indirect abs:        <val-16>      */
+#define MC9XGATE_OP_IND16_P2     0x0020   /* Second parameter indirect abs.     */
+//#define MC9XGATE_OP_MON          0x0040   /* Monadic Addressing (MON) was Register operand 1                 */
+//#define MC9XGATE_OP_DYA          0x0080   /* Dyadic Addressing (DYA) was Register operand 2                 */
+//#define MC9XGATE_OP_TRI			 0x0100	  /* Triadic Addressing (TRI)									*/
+
+//#define MC9XGATE_OP_IDO5         0x0200   /* Indirect IX:         <val-8>,x     */
+//#define MC9XGATE_OP_IDR			 0x0400	  /* Index Register plus Register Offset (IDR) */
+//#define MC9XGATE_OP_IY           0x0100   /* Indirect IY:         <val-8>,y     */
+#define MC9XGATE_OP_IDX          0x0200   /* Indirect: N,r N,[+-]r[+-] N:5-bits */  //was SAVE
+#define MC9XGATE_OP_IDX_1        0x0400   /* N,r N:9-bits  */
+#define MC9XGATE_OP_IDX_2        0x0800   /* N,r N:16-bits */
+#define MC9XGATE_OP_D_IDX        0x1000   /* Indirect indexed: [D,r] */
+#define MC9XGATE_OP_D_IDX_2      0x2000   /* [N,r] N:16-bits */
+#define MC9XGATE_OP_PAGE         0x4000   /* Page number */
+#define MC9XGATE_OP_MASK         0x07FFF
+#define MC9XGATE_OP_BRANCH       0x00008000 /* Branch, jsr, call */
+#define MC9XGATE_OP_BITMASK      0x00010000 /* Bitmask:             #<val-8>    */
+#define MC9XGATE_OP_JUMP_REL_9     0x00020000 /* Relative Addressing 9 Bit Wide (REL9) was Pc-Relative:         <val-8>     */
+#define MC9XGATE_OP_JUMP_REL_10   0x00040000 /* Relative Addressing 10 Bit Wide (REL10) was Pc-relative:         <val-10>    */
+#define MC9XGATE_OP_PAGE1        0x0000
+#define MC9XGATE_OP_PAGE2        0x00080000 /* Need a page2 opcode before       */
+#define MC9XGATE_OP_PAGE3        0x00100000 /* Need a page3 opcode before       */
+#define MC9XGATE_OP_PAGE4        0x00200000 /* Need a page4 opcode before       */
+#define MC9XGATE_MAX_OPERANDS    3     /* Max operands: brset <dst> <mask> <b> */
+
+#define MC9XGATE_ACC_OFFSET      0x00400000 /* A,r B,r D,r			    */
+#define MC9XGATE_ACC_IND         0x00800000 /* [D,r]			    */
+#define MC9XGATE_PRE_INC         0x01000000 /* n,+r   n = -8..8		    */
+#define MC9XGATE_PRE_DEC         0x02000000 /* n,-r			    */
+#define MC9XGATE_POST_INC        0x04000000 /* n,r+			    */
+#define MC9XGATE_POST_DEC        0x08000000 /* n,r-			    */
+#define MC9XGATE_INDEXED_IND     0x10000000 /* [n,r]  n = 16-bits		    */
+#define MC9XGATE_INDEXED         0x20000000 /* n,r    n = 5, 9 or 16-bits	    */
+#define MC9XGATE_OP_IDX_P2       0x40000000
+
+/* Markers to identify some instructions.  */
+#define MC9XGATE_OP_EXG_MARKER   0x01000000 /* exg r1,r2 */
+#define MC9XGATE_OP_TFR_MARKER   0x02000000 /* tfr r1,r2 */
+#define MC9XGATE_OP_SEX_MARKER   0x04000000 /* sex r1,r2 */
+
+#define MC9XGATE_OP_EQ_MARKER    0x80000000 /* dbeq/ibeq/tbeq */
+#define MC9XGATE_OP_DBCC_MARKER  0x04000000 /* dbeq/dbne */
+#define MC9XGATE_OP_IBCC_MARKER  0x02000000 /* ibeq/ibne */
+#define MC9XGATE_OP_TBCC_MARKER  0x01000000
+
+#define MC9XGATE_OP_TRAP_ID      0x80000000 /* trap #N */
+
+#define MC9XGATE_OP_HIGH_ADDR    0x01000000 /* Used internally by gas.  */
+#define MC9XGATE_OP_LOW_ADDR     0x02000000
+
+#define MC9XGATE_BANK_VIRT 0x010000
+#define MC9XGATE_BANK_MASK 0x00003fff
+#define MC9XGATE_BANK_BASE 0x00008000
+#define MC9XGATE_BANK_SHIFT 14
+#define MC9XGATE_BANK_PAGE_MASK 0x0ff
+
+
+/* CPU identification.  */
+#define cpu6811 0x01
+#define cpu6812 0x02
+#define cpumc9xgate 0x06  /* was 0x4 somewhere it is bit-wised to 0x06 otherwise objdump will see it as UNKNOWN*/
+
+/* The opcode table is an array of struct mc9xgate_opcode.  */
+struct mc9xgate_opcode {
+	char*    name;     /* Op-code name  was const*/
+	char*    constraints; /* was const*/
+	char*    format;   /* format string was const*/
+	unsigned int sh_format; /* shorthand format */
+	unsigned int   size;   /* size in bytes , was in words */
+	unsigned int   bin_opcode;  /* binary opcode with operands masked off */
+	unsigned char  cycles_min; /* minimum cpu cycles needed */
+	unsigned char  cycles_max; /* maximum cpu cycles needed */
+	unsigned char  set_flags_mask; /* CCR flags set */
+	unsigned char  clr_flags_mask; /* CCR flags cleared */
+	unsigned char  chg_flags_mask; /* CCR flags changed */
+	unsigned char  arch; /* cpu type, may always be mc9s12 only */
+};
+
+
+/* Alias definition for 68HC12.  */
+struct mc9xgate_opcode_alias
+{
+  const char*   name;
+  const char*   translation;
+  unsigned char size;
+  unsigned char code1;
+  unsigned char code2;
+};
+
+/* The opcode table.  The table contains all the opcodes (all pages).
+   You can't rely on the order.  */
+extern struct mc9xgate_opcode mc9xgate_opcodes[];
+extern const int mc9xgate_num_opcodes;
+//extern struct mc9xgate_opcode_desc;
+
+/* Alias table for 68HC12.  It translates some 68HC11 insn which are not
+   implemented in 68HC12 but have equivalent translations.  */
+extern const struct mc9xgate_opcode_alias mc9xgate_alias[];
+extern const int mc9xgate_num_alias;
+
+#endif /* _OPCODE_MC9XGATE_H */
diff -rupN binutils-2.20/ld/Makefile.am binutils-2.20-sean/ld/Makefile.am
--- binutils-2.20/ld/Makefile.am	2009-09-01 14:56:51.000000000 -0600
+++ binutils-2.20-sean/ld/Makefile.am	2010-10-01 14:37:32.000000000 -0600
@@ -274,6 +274,10 @@ ALL_EMULATIONS = \
 	em68hc11elfb.o \
 	em68hc12elf.o \
 	em68hc12elfb.o \
+	emc9s12xelf.o \
+	emc9s12xelfb.o \
+	emc9xgateelf.o \
+	emc9xgateelfb.o \
 	em68k4knbsd.o \
 	em68kaout.o \
 	em68kaux.o \
@@ -1305,7 +1309,23 @@ em68hc12elf.c: $(srcdir)/emulparams/m68h
 em68hc12elfb.c: $(srcdir)/emulparams/m68hc12elfb.sh \
   $(srcdir)/emultempl/m68hc1xelf.em $(ELF_DEPS) \
   $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
-	${GENSCRIPTS} m68hc12elfb "$(tdir_m68hc12b)"
+	${GENSCRIPTS} m68hc12elfb "$(tdir_m68hc12b)"	
+emc9s12xelf.c: $(srcdir)/emulparams/mc9s12xelf.sh \
+  $(srcdir)/emultempl/mc9s12xelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9s12x.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9s12xelf "$(tdir_mc9s12x)"
+emc9s12xelfb.c: $(srcdir)/emulparams/mc9s12xelfb.sh \
+  $(srcdir)/emultempl/mc9s12xelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9s12x.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9s12xelfb "$(tdir_mc9s12xb)"	
+emc9xgateelf.c: $(srcdir)/emulparams/mc9xgateelf.sh \
+  $(srcdir)/emultempl/mc9xgateelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9xgate.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9xgateelf "$(tdir_mc9xgate)"
+emc9s12xelfb.c: $(srcdir)/emulparams/mc9xgateelfb.sh \
+  $(srcdir)/emultempl/mc9xgateelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9xgate.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9xgateelfb "$(tdir_mc9xgateb)"	
 em68k4knbsd.c:	$(srcdir)/emulparams/m68k4knbsd.sh \
   $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} m68k4knbsd "$(tdir_m68k4knbsd)"
diff -rupN binutils-2.20/ld/Makefile.in binutils-2.20-sean/ld/Makefile.in
--- binutils-2.20/ld/Makefile.in	2009-09-07 06:10:24.000000000 -0600
+++ binutils-2.20-sean/ld/Makefile.in	2010-10-01 14:37:32.000000000 -0600
@@ -560,6 +560,10 @@ ALL_EMULATIONS = \
 	em68hc11elfb.o \
 	em68hc12elf.o \
 	em68hc12elfb.o \
+	emc9s12xelf.o \
+	emc9s12xelfb.o \
+	emc9xgateelf.o \
+	emc9xgateelfb.o \
 	em68k4knbsd.o \
 	em68kaout.o \
 	em68kaux.o \
@@ -1093,6 +1097,10 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc11elfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elf.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68hc12elfb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emc9s12xelf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emc9s12xelfb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emc9xgateelf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emc9xgateelfb.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68k4knbsd.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kaout.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em68kaux.Po@am__quote@
@@ -2647,6 +2655,22 @@ em68hc12elfb.c: $(srcdir)/emulparams/m68
   $(srcdir)/emultempl/m68hc1xelf.em $(ELF_DEPS) \
   $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} m68hc12elfb "$(tdir_m68hc12b)"
+emc9s12xelf.c: $(srcdir)/emulparams/mc9s12xelf.sh \
+  $(srcdir)/emultempl/mc9s12xelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9s12x.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9s12xelf "$(tdir_mc9s12x)"
+emc9s12xelfb.c: $(srcdir)/emulparams/mc9s12xelfb.sh \
+  $(srcdir)/emultempl/mc9s12xelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9s12x.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9s12xelfb "$(tdir_mc9s12xb)"
+emc9xgateelf.c: $(srcdir)/emulparams/mc9xgateelf.sh \
+  $(srcdir)/emultempl/mc9xgateelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9xgate.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9xgateelf "$(tdir_mc9xgate)"
+emc9xgateelfb.c: $(srcdir)/emulparams/mc9xgateelfb.sh \
+  $(srcdir)/emultempl/mc9xgateelf.em $(ELF_DEPS) \
+  $(srcdir)/scripttempl/elfmc9xgate.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} mc9xgateelfb "$(tdir_mc9xgateb)"
 em68k4knbsd.c:	$(srcdir)/emulparams/m68k4knbsd.sh \
   $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} m68k4knbsd "$(tdir_m68k4knbsd)"
diff -rupN binutils-2.20/ld/configure.tgt binutils-2.20-sean/ld/configure.tgt
--- binutils-2.20/ld/configure.tgt	2009-08-06 11:38:03.000000000 -0600
+++ binutils-2.20-sean/ld/configure.tgt	2010-10-01 14:37:32.000000000 -0600
@@ -322,6 +322,10 @@ m68hc11-*-*|m6811-*-*)	targ_emul=m68hc11
 			targ_extra_emuls="m68hc11elfb m68hc12elf m68hc12elfb" ;;
 m68hc12-*-*|m6812-*-*)	targ_emul=m68hc12elf 
 			targ_extra_emuls="m68hc12elfb m68hc11elf m68hc11elfb" ;;
+mc9s12x-*-*)	targ_emul=mc9s12xelf 
+			targ_extra_emuls="mc9s12xelfb mc9s12xelf mc9s12xelfb" ;;
+mc9xgate-*-*)	targ_emul=mc9xgateelf 
+			targ_extra_emuls="mc9xgateelfb mc9xgateelf mc9xgateelfb" ;;
 m68*-sun-sunos[34]*)	targ_emul=sun3 ;;
 m68*-wrs-vxworks*)	targ_emul=sun3 ;;
 m68*-ericsson-ose)	targ_emul=sun3 ;;
diff -rupN binutils-2.20/ld/emulparams/mc9s12xelf.sh binutils-2.20-sean/ld/emulparams/mc9s12xelf.sh
--- binutils-2.20/ld/emulparams/mc9s12xelf.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9s12xelf.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,18 @@
+MACHINE=
+SCRIPT_NAME=elfmc9s12x
+OUTPUT_FORMAT="elf32-mc9s12x"
+ROM_START_ADDR=0x08000
+ROM_SIZE=0x8000
+RAM_START_ADDR=0x01100
+RAM_SIZE=0x6F00
+EEPROM_START_ADDR=0x0800
+EEPROM_SIZE=2048
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9s12x
+MAXPAGESIZE=32
+EMBEDDED=yes
+GENERIC_BOARD=no
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9s12xelf
diff -rupN binutils-2.20/ld/emulparams/mc9s12xelfb.sh binutils-2.20-sean/ld/emulparams/mc9s12xelfb.sh
--- binutils-2.20/ld/emulparams/mc9s12xelfb.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9s12xelfb.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,12 @@
+MACHINE=
+SCRIPT_NAME=elfmc9s12x
+OUTPUT_FORMAT="elf32-mc9s12x"
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9s12x
+MAXPAGESIZE=32
+GENERIC_BOARD=yes
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9s12xelf
+
diff -rupN binutils-2.20/ld/emulparams/mc9s12xgateelf.sh binutils-2.20-sean/ld/emulparams/mc9s12xgateelf.sh
--- binutils-2.20/ld/emulparams/mc9s12xgateelf.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9s12xgateelf.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,18 @@
+MACHINE=
+SCRIPT_NAME=elfmc9s12x
+OUTPUT_FORMAT="elf32-mc9s12x"
+ROM_START_ADDR=0x08000
+ROM_SIZE=0x8000
+RAM_START_ADDR=0x01100
+RAM_SIZE=0x6F00
+EEPROM_START_ADDR=0x0800
+EEPROM_SIZE=2048
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9s12x
+MAXPAGESIZE=32
+EMBEDDED=yes
+GENERIC_BOARD=no
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9s12xelf
diff -rupN binutils-2.20/ld/emulparams/mc9s12xgateelfb.sh binutils-2.20-sean/ld/emulparams/mc9s12xgateelfb.sh
--- binutils-2.20/ld/emulparams/mc9s12xgateelfb.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9s12xgateelfb.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,12 @@
+MACHINE=
+SCRIPT_NAME=elfmc9s12x
+OUTPUT_FORMAT="elf32-mc9s12x"
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9s12x
+MAXPAGESIZE=32
+GENERIC_BOARD=yes
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9s12xelf
+
diff -rupN binutils-2.20/ld/emulparams/mc9xgateelf.sh binutils-2.20-sean/ld/emulparams/mc9xgateelf.sh
--- binutils-2.20/ld/emulparams/mc9xgateelf.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9xgateelf.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,18 @@
+MACHINE=
+SCRIPT_NAME=elfmc9xgate
+OUTPUT_FORMAT="elf32-mc9xgate"
+ROM_START_ADDR=0x08000
+ROM_SIZE=0x8000
+RAM_START_ADDR=0x01100
+RAM_SIZE=0x6F00
+EEPROM_START_ADDR=0x0800
+EEPROM_SIZE=2048
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9xgate
+MAXPAGESIZE=32
+EMBEDDED=yes
+GENERIC_BOARD=no
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9xgateelf
diff -rupN binutils-2.20/ld/emulparams/mc9xgateelfb.sh binutils-2.20-sean/ld/emulparams/mc9xgateelfb.sh
--- binutils-2.20/ld/emulparams/mc9xgateelfb.sh	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emulparams/mc9xgateelfb.sh	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,12 @@
+MACHINE=
+SCRIPT_NAME=elfmc9xgate
+OUTPUT_FORMAT="elf32-mc9xgate"
+TEXT_MEMORY=text
+DATA_MEMORY=data
+EEPROM_MEMORY=eeprom
+ARCH=mc9xgate
+MAXPAGESIZE=32
+GENERIC_BOARD=yes
+TEMPLATE_NAME=elf32
+EXTRA_EM_FILE=mc9xgateelf
+
diff -rupN binutils-2.20/ld/emultempl/mc9s12xelf.em binutils-2.20-sean/ld/emultempl/mc9s12xelf.em
--- binutils-2.20/ld/emultempl/mc9s12xelf.em	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emultempl/mc9s12xelf.em	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,375 @@
+# This shell script emits a C file. -*- C -*-
+#   Copyright 1991, 1993, 1994, 1997, 1999, 2000, 2001, 2002, 2003, 2005, 2007,
+#   2008, 2009 Free Software Foundation, Inc.
+#
+# This file is part of the GNU Binutils.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+# MA 02110-1301, USA.
+#
+
+# This file is sourced from elf32.em, and defines extra m68hc12-elf
+# and m68hc11-elf specific routines.  It is used to generate the
+# HC11/HC12 trampolines to call a far function by using a normal 'jsr/bsr'.
+#
+# - The HC11/HC12 relocations are checked to see if there is a
+#   R_M68HC11_16 relocation to a symbol marked with STO_M68HC12_FAR.
+#   This relocation cannot be made on the symbol but must be made on
+#   its trampoline
+#   The trampolines to generate are collected during this pass
+#   (See elf32_m68hc11_size_stubs)
+#
+# - The trampolines are generated in a ".tramp" section.  The generation
+#   takes care of HC11 and HC12 specificities.
+#   (See elf32_m68hc11_build_stubs)
+#
+# - During relocation the R_M68HC11_16 relocation to the far symbols
+#   are redirected to the trampoline that was generated.
+#
+# Copied from hppaelf and adapted for M68HC11/M68HC12 specific needs.
+#
+fragment <<EOF
+
+#include "ldctor.h"
+#include "elf32-mc9s12x.h"
+
+static asection *mc9s12xelf_add_stub_section (const char *, asection *);
+
+/* Fake input file for stubs.  */
+static lang_input_statement_type *stub_file;
+
+/* By default the HC11/HC12 trampolines to call a far function using
+   a normal 'bsr' and 'jsr' convention are generated during the link.
+   The --no-trampoline option prevents that.  */
+static int no_trampoline = 0;
+
+/* Name of memory bank window in the MEMORY description.
+   This is set by --bank-window option.  */
+static const char* bank_window_name = 0;
+
+static void
+mc9s12x_elf_${EMULATION_NAME}_before_allocation (void)
+{
+  lang_memory_region_type* region;
+  int ret;
+
+  gld${EMULATION_NAME}_before_allocation ();
+
+  /* If generating a relocatable output file, then we don't
+     have to generate the trampolines.  */
+  if (link_info.relocatable)
+    return;
+
+  ret = elf32_mc9s12x_setup_section_lists (link_info.output_bfd, &link_info);
+  if (ret != 0 && no_trampoline == 0)
+    {
+      if (ret < 0)
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+
+      /* Call into the BFD backend to do the real work.  */
+      if (!elf32_mc9s12x_size_stubs (link_info.output_bfd,
+				     stub_file->the_bfd,
+				     &link_info,
+				     &mc9s12xelf_add_stub_section))
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+    }
+
+  if (bank_window_name == 0)
+    return;
+
+  /* The 'bank_window_name' memory region is a special region that describes
+     the memory bank window to access to paged memory.  For 68HC12
+     this is fixed and should be:
+
+     window (rx) : ORIGIN = 0x8000, LENGTH = 16K
+
+     But for 68HC11 this is board specific.  The definition of such
+     memory region allows to control how this paged memory is accessed.  */
+  region = lang_memory_region_lookup (bank_window_name, FALSE);
+
+  /* Check the length to see if it was defined in the script.  */
+  if (region->length != 0)
+    {
+      struct mc9s12x_page_info *pinfo;
+      unsigned i;
+
+      /* Get default values  */
+      mc9s12x_elf_get_bank_parameters (&link_info);
+      pinfo = &mc9s12x_elf_hash_table (&link_info)->pinfo;
+
+      /* And override them with the region definition.  */
+      pinfo->bank_size = region->length;
+      pinfo->bank_shift = 0;
+      for (i = pinfo->bank_size; i != 0; i >>= 1)
+	pinfo->bank_shift++;
+      pinfo->bank_shift--;
+      pinfo->bank_size = 1L << pinfo->bank_shift;
+      pinfo->bank_mask = (1 << pinfo->bank_shift) - 1;
+      pinfo->bank_physical = region->origin;
+      pinfo->bank_physical_end = region->origin + pinfo->bank_size;
+
+      if (pinfo->bank_size != region->length)
+	{
+	  einfo (_("warning: the size of the 'window' memory region "
+		   "is not a power of 2\n"));
+	  einfo (_("warning: its size %d is truncated to %d\n"),
+		 region->length, pinfo->bank_size);
+	}
+    }
+}
+
+/* This is called before the input files are opened.  We create a new
+   fake input file to hold the stub sections.  */
+
+static void
+mc9s12xelf_create_output_section_statements (void)
+{
+  stub_file = lang_add_input_file ("linker stubs",
+				   lang_input_file_is_fake_enum,
+				   NULL);
+  stub_file->the_bfd = bfd_create ("linker stubs", link_info.output_bfd);
+  if (stub_file->the_bfd == NULL
+      || !bfd_set_arch_mach (stub_file->the_bfd,
+			     bfd_get_arch (link_info.output_bfd),
+			     bfd_get_mach (link_info.output_bfd)))
+    {
+      einfo ("%X%P: can not create BFD %E\n");
+      return;
+    }
+
+  ldlang_add_file (stub_file);
+}
+
+
+struct hook_stub_info
+{
+  lang_statement_list_type add;
+  asection *input_section;
+};
+
+/* Traverse the linker tree to find the spot where the stub goes.  */
+
+static bfd_boolean
+hook_in_stub (struct hook_stub_info *info, lang_statement_union_type **lp)
+{
+  lang_statement_union_type *l;
+  bfd_boolean ret;
+
+  for (; (l = *lp) != NULL; lp = &l->header.next)
+    {
+      switch (l->header.type)
+	{
+	case lang_constructors_statement_enum:
+	  ret = hook_in_stub (info, &constructor_list.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_output_section_statement_enum:
+	  ret = hook_in_stub (info,
+			      &l->output_section_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_wild_statement_enum:
+	  ret = hook_in_stub (info, &l->wild_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_group_statement_enum:
+	  ret = hook_in_stub (info, &l->group_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_input_section_enum:
+	  if (l->input_section.section == info->input_section
+	      || strcmp (bfd_get_section_name (output_section,
+					       l->input_section.section),
+			 bfd_get_section_name (output_section,
+					       info->input_section)) == 0)
+	    {
+	      /* We've found our section.  Insert the stub immediately
+		 before its associated input section.  */
+	      *lp = info->add.head;
+	      *(info->add.tail) = l;
+	      return TRUE;
+	    }
+	  break;
+
+	case lang_data_statement_enum:
+	case lang_reloc_statement_enum:
+	case lang_object_symbols_statement_enum:
+	case lang_output_statement_enum:
+	case lang_target_statement_enum:
+	case lang_input_statement_enum:
+	case lang_assignment_statement_enum:
+	case lang_padding_statement_enum:
+	case lang_address_statement_enum:
+	case lang_fill_statement_enum:
+	  break;
+
+	default:
+	  FAIL ();
+	  break;
+	}
+    }
+  return FALSE;
+}
+
+
+/* Call-back for elf32_m68hc11_size_stubs.  */
+
+/* Create a new stub section, and arrange for it to be linked
+   immediately before INPUT_SECTION.  */
+   
+/* TODO make sure this function is named correctly */
+
+static asection *
+mc9s12xelf_add_stub_section (const char *stub_sec_name,
+			     asection *tramp_section)
+{
+  asection *stub_sec;
+  flagword flags;
+  asection *output_section;
+  const char *secname;
+  lang_output_section_statement_type *os;
+  struct hook_stub_info info;
+
+  flags = (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_CODE
+	   | SEC_HAS_CONTENTS | SEC_RELOC | SEC_IN_MEMORY | SEC_KEEP);
+  stub_sec = bfd_make_section_anyway_with_flags (stub_file->the_bfd,
+						 stub_sec_name, flags);
+  if (stub_sec == NULL)
+    goto err_ret;
+
+  output_section = tramp_section->output_section;
+  secname = bfd_get_section_name (output_section->owner, output_section);
+  os = lang_output_section_find (secname);
+
+  /* Try to put the new section at the same place as an existing
+     .tramp section.  Such .tramp section exists in most cases and
+     contains the trampoline code.  This way we put the generated trampoline
+     at the correct place.  */
+  info.input_section = tramp_section;
+  lang_list_init (&info.add);
+  lang_add_section (&info.add, stub_sec, os);
+
+  if (info.add.head == NULL)
+    goto err_ret;
+
+  if (hook_in_stub (&info, &os->children.head))
+    return stub_sec;
+
+ err_ret:
+  einfo ("%X%P: can not make stub section: %E\n");
+  return NULL;
+}
+
+/* For the 68HC12 we use this opportunity to build linker stubs.  */
+
+static void
+mc9s12xelf_after_allocation (void)
+{
+  /* Now build the linker stubs.  */
+  if (stub_file->the_bfd->sections != NULL)
+    {
+      /* Call again the trampoline analyzer to initialize the trampoline
+	 stubs with the correct symbol addresses.  Since there could have
+	 been relaxation, the symbol addresses that were found during
+	 first call may no longer be correct.  */
+      if (!elf32_mc9s12x_size_stubs (link_info.output_bfd,
+				     stub_file->the_bfd,
+				     &link_info, 0))
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+      if (!elf32_mc9s12x_build_stubs (link_info.output_bfd, &link_info))
+	einfo ("%X%P: can not build stubs: %E\n");
+    }
+
+  gld${EMULATION_NAME}_after_allocation ();
+}
+
+
+/* Avoid processing the fake stub_file in vercheck, stat_needed and
+   check_needed routines.  */
+
+static void (*real_func) (lang_input_statement_type *);
+
+static void mc9s12x_for_each_input_file_wrapper (lang_input_statement_type *l)
+{
+  if (l != stub_file)
+    (*real_func) (l);
+}
+
+static void
+mc9s12x_lang_for_each_input_file (void (*func) (lang_input_statement_type *))
+{
+  real_func = func;
+  lang_for_each_input_file (&mc9s12x_for_each_input_file_wrapper);
+}
+
+#define lang_for_each_input_file mc9s12x_lang_for_each_input_file
+
+EOF
+
+# Define some shell vars to insert bits of code into the standard elf
+# parse_args and list_options functions.
+#
+PARSE_AND_LIST_PROLOGUE='
+#define OPTION_NO_TRAMPOLINE		300
+#define OPTION_BANK_WINDOW		301
+'
+
+# The options are repeated below so that no abbreviations are allowed.
+# Otherwise -s matches stub-group-size
+PARSE_AND_LIST_LONGOPTS='
+  { "no-trampoline", no_argument, NULL, OPTION_NO_TRAMPOLINE },
+  { "bank-window",   required_argument, NULL, OPTION_BANK_WINDOW },
+'
+
+PARSE_AND_LIST_OPTIONS='
+  fprintf (file, _(
+"  --no-trampoline             Do not generate the far trampolines used to call\n"
+"                                a far function using 'jsr' or 'bsr'.\n"
+"  --bank-window NAME          Specify the name of the memory region describing\n"
+"                                the layout of the memory bank window.\n"
+		   ));
+'
+
+PARSE_AND_LIST_ARGS_CASES='
+    case OPTION_NO_TRAMPOLINE:
+      no_trampoline = 1;
+      break;
+    case OPTION_BANK_WINDOW:
+      bank_window_name = optarg;
+      break;
+'
+
+# Put these extra m68hc11elf routines in ld_${EMULATION_NAME}_emulation
+#
+LDEMUL_BEFORE_ALLOCATION=mc9s12x_elf_${EMULATION_NAME}_before_allocation
+LDEMUL_AFTER_ALLOCATION=mc9s12xelf_after_allocation
+LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS=mc9s12xelf_create_output_section_statements
diff -rupN binutils-2.20/ld/emultempl/mc9xgateelf.em binutils-2.20-sean/ld/emultempl/mc9xgateelf.em
--- binutils-2.20/ld/emultempl/mc9xgateelf.em	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/emultempl/mc9xgateelf.em	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,375 @@
+# This shell script emits a C file. -*- C -*-
+#   Copyright 1991, 1993, 1994, 1997, 1999, 2000, 2001, 2002, 2003, 2005, 2007,
+#   2008, 2009 Free Software Foundation, Inc.
+#
+# This file is part of the GNU Binutils.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+# MA 02110-1301, USA.
+#
+
+# This file is sourced from elf32.em, and defines extra m68hc12-elf
+# and m68hc11-elf specific routines.  It is used to generate the
+# HC11/HC12 trampolines to call a far function by using a normal 'jsr/bsr'.
+#
+# - The HC11/HC12 relocations are checked to see if there is a
+#   R_M68HC11_16 relocation to a symbol marked with STO_M68HC12_FAR.
+#   This relocation cannot be made on the symbol but must be made on
+#   its trampoline
+#   The trampolines to generate are collected during this pass
+#   (See elf32_m68hc11_size_stubs)
+#
+# - The trampolines are generated in a ".tramp" section.  The generation
+#   takes care of HC11 and HC12 specificities.
+#   (See elf32_m68hc11_build_stubs)
+#
+# - During relocation the R_M68HC11_16 relocation to the far symbols
+#   are redirected to the trampoline that was generated.
+#
+# Copied from hppaelf and adapted for M68HC11/M68HC12 specific needs.
+#
+fragment <<EOF
+
+#include "ldctor.h"
+#include "elf32-mc9xgate.h"
+
+static asection *mc9xgateelf_add_stub_section (const char *, asection *);
+
+/* Fake input file for stubs.  */
+static lang_input_statement_type *stub_file;
+
+/* By default the HC11/HC12 trampolines to call a far function using
+   a normal 'bsr' and 'jsr' convention are generated during the link.
+   The --no-trampoline option prevents that.  */
+static int no_trampoline = 0;
+
+/* Name of memory bank window in the MEMORY description.
+   This is set by --bank-window option.  */
+static const char* bank_window_name = 0;
+
+static void
+mc9xgate_elf_${EMULATION_NAME}_before_allocation (void)
+{
+  lang_memory_region_type* region;
+  int ret;
+
+  gld${EMULATION_NAME}_before_allocation ();
+
+  /* If generating a relocatable output file, then we don't
+     have to generate the trampolines.  */
+  if (link_info.relocatable)
+    return;
+
+  ret = elf32_mc9xgate_setup_section_lists (link_info.output_bfd, &link_info);
+  if (ret != 0 && no_trampoline == 0)
+    {
+      if (ret < 0)
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+
+      /* Call into the BFD backend to do the real work.  */
+      if (!elf32_mc9xgate_size_stubs (link_info.output_bfd,
+				     stub_file->the_bfd,
+				     &link_info,
+				     &mc9xgateelf_add_stub_section))
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+    }
+
+  if (bank_window_name == 0)
+    return;
+
+  /* The 'bank_window_name' memory region is a special region that describes
+     the memory bank window to access to paged memory.  For 68HC12
+     this is fixed and should be:
+
+     window (rx) : ORIGIN = 0x8000, LENGTH = 16K
+
+     But for 68HC11 this is board specific.  The definition of such
+     memory region allows to control how this paged memory is accessed.  */
+  region = lang_memory_region_lookup (bank_window_name, FALSE);
+
+  /* Check the length to see if it was defined in the script.  */
+  if (region->length != 0)
+    {
+      struct mc9xgate_page_info *pinfo;
+      unsigned i;
+
+      /* Get default values  */
+      mc9xgate_elf_get_bank_parameters (&link_info);
+      pinfo = &mc9xgate_elf_hash_table (&link_info)->pinfo;
+
+      /* And override them with the region definition.  */
+      pinfo->bank_size = region->length;
+      pinfo->bank_shift = 0;
+      for (i = pinfo->bank_size; i != 0; i >>= 1)
+	pinfo->bank_shift++;
+      pinfo->bank_shift--;
+      pinfo->bank_size = 1L << pinfo->bank_shift;
+      pinfo->bank_mask = (1 << pinfo->bank_shift) - 1;
+      pinfo->bank_physical = region->origin;
+      pinfo->bank_physical_end = region->origin + pinfo->bank_size;
+
+      if (pinfo->bank_size != region->length)
+	{
+	  einfo (_("warning: the size of the 'window' memory region "
+		   "is not a power of 2\n"));
+	  einfo (_("warning: its size %d is truncated to %d\n"),
+		 region->length, pinfo->bank_size);
+	}
+    }
+}
+
+/* This is called before the input files are opened.  We create a new
+   fake input file to hold the stub sections.  */
+
+static void
+mc9xgateelf_create_output_section_statements (void)
+{
+  stub_file = lang_add_input_file ("linker stubs",
+				   lang_input_file_is_fake_enum,
+				   NULL);
+  stub_file->the_bfd = bfd_create ("linker stubs", link_info.output_bfd);
+  if (stub_file->the_bfd == NULL
+      || !bfd_set_arch_mach (stub_file->the_bfd,
+			     bfd_get_arch (link_info.output_bfd),
+			     bfd_get_mach (link_info.output_bfd)))
+    {
+      einfo ("%X%P: can not create BFD %E\n");
+      return;
+    }
+
+  ldlang_add_file (stub_file);
+}
+
+
+struct hook_stub_info
+{
+  lang_statement_list_type add;
+  asection *input_section;
+};
+
+/* Traverse the linker tree to find the spot where the stub goes.  */
+
+static bfd_boolean
+hook_in_stub (struct hook_stub_info *info, lang_statement_union_type **lp)
+{
+  lang_statement_union_type *l;
+  bfd_boolean ret;
+
+  for (; (l = *lp) != NULL; lp = &l->header.next)
+    {
+      switch (l->header.type)
+	{
+	case lang_constructors_statement_enum:
+	  ret = hook_in_stub (info, &constructor_list.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_output_section_statement_enum:
+	  ret = hook_in_stub (info,
+			      &l->output_section_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_wild_statement_enum:
+	  ret = hook_in_stub (info, &l->wild_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_group_statement_enum:
+	  ret = hook_in_stub (info, &l->group_statement.children.head);
+	  if (ret)
+	    return ret;
+	  break;
+
+	case lang_input_section_enum:
+	  if (l->input_section.section == info->input_section
+	      || strcmp (bfd_get_section_name (output_section,
+					       l->input_section.section),
+			 bfd_get_section_name (output_section,
+					       info->input_section)) == 0)
+	    {
+	      /* We've found our section.  Insert the stub immediately
+		 before its associated input section.  */
+	      *lp = info->add.head;
+	      *(info->add.tail) = l;
+	      return TRUE;
+	    }
+	  break;
+
+	case lang_data_statement_enum:
+	case lang_reloc_statement_enum:
+	case lang_object_symbols_statement_enum:
+	case lang_output_statement_enum:
+	case lang_target_statement_enum:
+	case lang_input_statement_enum:
+	case lang_assignment_statement_enum:
+	case lang_padding_statement_enum:
+	case lang_address_statement_enum:
+	case lang_fill_statement_enum:
+	  break;
+
+	default:
+	  FAIL ();
+	  break;
+	}
+    }
+  return FALSE;
+}
+
+
+/* Call-back for elf32_m68hc11_size_stubs.  */
+
+/* Create a new stub section, and arrange for it to be linked
+   immediately before INPUT_SECTION.  */
+   
+/* TODO make sure this function is named correctly */
+
+static asection *
+mc9xgateelf_add_stub_section (const char *stub_sec_name,
+			     asection *tramp_section)
+{
+  asection *stub_sec;
+  flagword flags;
+  asection *output_section;
+  const char *secname;
+  lang_output_section_statement_type *os;
+  struct hook_stub_info info;
+
+  flags = (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_CODE
+	   | SEC_HAS_CONTENTS | SEC_RELOC | SEC_IN_MEMORY | SEC_KEEP);
+  stub_sec = bfd_make_section_anyway_with_flags (stub_file->the_bfd,
+						 stub_sec_name, flags);
+  if (stub_sec == NULL)
+    goto err_ret;
+
+  output_section = tramp_section->output_section;
+  secname = bfd_get_section_name (output_section->owner, output_section);
+  os = lang_output_section_find (secname);
+
+  /* Try to put the new section at the same place as an existing
+     .tramp section.  Such .tramp section exists in most cases and
+     contains the trampoline code.  This way we put the generated trampoline
+     at the correct place.  */
+  info.input_section = tramp_section;
+  lang_list_init (&info.add);
+  lang_add_section (&info.add, stub_sec, os);
+
+  if (info.add.head == NULL)
+    goto err_ret;
+
+  if (hook_in_stub (&info, &os->children.head))
+    return stub_sec;
+
+ err_ret:
+  einfo ("%X%P: can not make stub section: %E\n");
+  return NULL;
+}
+
+/* For the 68HC12 we use this opportunity to build linker stubs.  */
+
+static void
+mc9xgateelf_after_allocation (void)
+{
+  /* Now build the linker stubs.  */
+  if (stub_file->the_bfd->sections != NULL)
+    {
+      /* Call again the trampoline analyzer to initialize the trampoline
+	 stubs with the correct symbol addresses.  Since there could have
+	 been relaxation, the symbol addresses that were found during
+	 first call may no longer be correct.  */
+      if (!elf32_mc9xgate_size_stubs (link_info.output_bfd,
+				     stub_file->the_bfd,
+				     &link_info, 0))
+	{
+	  einfo ("%X%P: can not size stub section: %E\n");
+	  return;
+	}
+      if (!elf32_mc9xgate_build_stubs (link_info.output_bfd, &link_info))
+	einfo ("%X%P: can not build stubs: %E\n");
+    }
+
+  gld${EMULATION_NAME}_after_allocation ();
+}
+
+
+/* Avoid processing the fake stub_file in vercheck, stat_needed and
+   check_needed routines.  */
+
+static void (*real_func) (lang_input_statement_type *);
+
+static void mc9xgate_for_each_input_file_wrapper (lang_input_statement_type *l)
+{
+  if (l != stub_file)
+    (*real_func) (l);
+}
+
+static void
+mc9xgate_lang_for_each_input_file (void (*func) (lang_input_statement_type *))
+{
+  real_func = func;
+  lang_for_each_input_file (&mc9xgate_for_each_input_file_wrapper);
+}
+
+#define lang_for_each_input_file mc9xgate_lang_for_each_input_file
+
+EOF
+
+# Define some shell vars to insert bits of code into the standard elf
+# parse_args and list_options functions.
+#
+PARSE_AND_LIST_PROLOGUE='
+#define OPTION_NO_TRAMPOLINE		300
+#define OPTION_BANK_WINDOW		301
+'
+
+# The options are repeated below so that no abbreviations are allowed.
+# Otherwise -s matches stub-group-size
+PARSE_AND_LIST_LONGOPTS='
+  { "no-trampoline", no_argument, NULL, OPTION_NO_TRAMPOLINE },
+  { "bank-window",   required_argument, NULL, OPTION_BANK_WINDOW },
+'
+
+PARSE_AND_LIST_OPTIONS='
+  fprintf (file, _(
+"  --no-trampoline             Do not generate the far trampolines used to call\n"
+"                                a far function using 'jsr' or 'bsr'.\n"
+"  --bank-window NAME          Specify the name of the memory region describing\n"
+"                                the layout of the memory bank window.\n"
+		   ));
+'
+
+PARSE_AND_LIST_ARGS_CASES='
+    case OPTION_NO_TRAMPOLINE:
+      no_trampoline = 1;
+      break;
+    case OPTION_BANK_WINDOW:
+      bank_window_name = optarg;
+      break;
+'
+
+# Put these extra m68hc11elf routines in ld_${EMULATION_NAME}_emulation
+#
+LDEMUL_BEFORE_ALLOCATION=mc9xgate_elf_${EMULATION_NAME}_before_allocation
+LDEMUL_AFTER_ALLOCATION=mc9xgateelf_after_allocation
+LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS=mc9xgateelf_create_output_section_statements
diff -rupN binutils-2.20/ld/ldlang.c binutils-2.20-sean/ld/ldlang.c
--- binutils-2.20/ld/ldlang.c	2009-10-14 03:26:29.000000000 -0600
+++ binutils-2.20-sean/ld/ldlang.c	2010-10-01 14:37:33.000000000 -0600
@@ -5662,9 +5662,11 @@ lang_check (void)
 	    pfn = bfd_set_error_handler (ignore_bfd_errors);
 	  if (! bfd_merge_private_bfd_data (input_bfd, link_info.output_bfd))
 	    {
-	      if (command_line.warn_mismatch)
+	      if (command_line.warn_mismatch){
 		einfo (_("%P%X: failed to merge target specific data"
 			 " of file %B\n"), input_bfd);
+	      printf("\n input was %d output was %d", input_bfd->arch_info->arch, link_info.output_bfd->arch_info->arch);
+	      }
 	    }
 	  if (! command_line.warn_mismatch)
 	    bfd_set_error_handler (pfn);
diff -rupN binutils-2.20/ld/scripttempl/elfmc9s12x.sc binutils-2.20-sean/ld/scripttempl/elfmc9s12x.sc
--- binutils-2.20/ld/scripttempl/elfmc9s12x.sc	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/scripttempl/elfmc9s12x.sc	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,463 @@
+#
+# Unusual variables checked by this code:
+#	NOP - four byte opcode for no-op (defaults to 0)
+#	DATA_ADDR - if end-of-text-plus-one-page isn't right for data start
+#	OTHER_READWRITE_SECTIONS - other than .data .bss .ctors .sdata ...
+#		(e.g., .PARISC.global)
+#	OTHER_SECTIONS - at the end
+#	EXECUTABLE_SYMBOLS - symbols that must be defined for an
+#		executable (e.g., _DYNAMIC_LINK)
+#	TEXT_START_SYMBOLS - symbols that appear at the start of the
+#		.text section.
+#	DATA_START_SYMBOLS - symbols that appear at the start of the
+#		.data section.
+#	OTHER_BSS_SYMBOLS - symbols that appear at the start of the
+#		.bss section besides __bss_start.
+#	EMBEDDED - whether this is for an embedded system. 
+#
+# When adding sections, do note that the names of some sections are used
+# when specifying the start address of the next.
+#
+test -z "$ENTRY" && ENTRY=_start
+test -z "${BIG_OUTPUT_FORMAT}" && BIG_OUTPUT_FORMAT=${OUTPUT_FORMAT}
+test -z "${LITTLE_OUTPUT_FORMAT}" && LITTLE_OUTPUT_FORMAT=${OUTPUT_FORMAT}
+if [ -z "$MACHINE" ]; then OUTPUT_ARCH=${ARCH}; else OUTPUT_ARCH=${ARCH}:${MACHINE}; fi
+test "$LD_FLAG" = "N" && DATA_ADDR=.
+
+CTOR=".ctors ${CONSTRUCTING-0} : 
+  {
+    ${CONSTRUCTING+ PROVIDE (__CTOR_LIST__ = .); }
+    ${CONSTRUCTING+${CTOR_START}}
+    KEEP (*(.ctors))
+
+    ${CONSTRUCTING+${CTOR_END}}
+    ${CONSTRUCTING+ PROVIDE(__CTOR_END__ = .); }
+  } ${RELOCATING+ > ${TEXT_MEMORY}}"
+
+DTOR="  .dtors	${CONSTRUCTING-0} :
+  {
+    ${CONSTRUCTING+ PROVIDE(__DTOR_LIST__ = .); }
+    KEEP (*(.dtors))
+    ${CONSTRUCTING+ PROVIDE(__DTOR_END__ = .); }
+  } ${RELOCATING+ > ${TEXT_MEMORY}}"
+
+
+VECTORS="
+  /* If the 'vectors_addr' symbol is defined, it indicates the start address
+     of interrupt vectors.  This depends on the 68HC11 operating mode:
+
+			Addr
+     Single chip	0xffc0
+     Extended mode	0xffc0
+     Bootstrap		0x00c0
+     Test		0xbfc0
+
+     In general, the vectors address is 0xffc0.  This can be overriden 
+     with the '-defsym vectors_addr=0xbfc0' ld option.
+
+     Note: for the bootstrap mode, the interrupt vectors are at 0xbfc0 but
+     they are redirected to 0x00c0 by the internal PROM.  Application's vectors
+     must also consist of jump instructions (see Motorola's manual).  */
+
+  PROVIDE (_vectors_addr = DEFINED (vectors_addr) ? vectors_addr : 0xffc0);
+  .vectors DEFINED (vectors_addr) ? vectors_addr : 0xffc0 :
+  {
+    KEEP (*(.vectors))
+  }"
+
+#
+# We provide two emulations: a fixed on that defines some memory banks
+# and a configurable one that includes a user provided memory definition.
+#
+case $GENERIC_BOARD in
+  yes|1|YES)
+	MEMORY_DEF="
+/* Get memory banks definition from some user configuration file.
+   This file must be located in some linker directory (search path
+   with -L<dir>). See fixed memory banks emulation script.  */
+INCLUDE memory.x;
+"
+	;;
+  *)
+MEMORY_DEF="
+/* Fixed definition of the available memory banks.
+   See generic emulation script for a user defined configuration.  */
+MEMORY
+{
+  page0 (rwx) : ORIGIN = 0x0, LENGTH = 256
+  text  (rx)  : ORIGIN = ${ROM_START_ADDR}, LENGTH = ${ROM_SIZE}
+  data        : ORIGIN = ${RAM_START_ADDR}, LENGTH = ${RAM_SIZE}
+  eeprom      : ORIGIN = ${EEPROM_START_ADDR}, LENGTH = ${EEPROM_SIZE}
+}
+
+/* Setup the stack on the top of the data memory bank.  */
+PROVIDE (_stack = ${RAM_START_ADDR} + ${RAM_SIZE} - 1);
+"
+	;;
+esac
+
+STARTUP_CODE="
+    /* Startup code.  */
+    KEEP (*(.install0))	/* Section should setup the stack pointer.  */
+    KEEP (*(.install1))	/* Place holder for applications.  */
+    KEEP (*(.install2))	/* Optional installation of data sections in RAM.  */
+    KEEP (*(.install3))	/* Place holder for applications.  */
+    KEEP (*(.install4))	/* Section that calls the main.  */
+"
+
+FINISH_CODE="
+    /* Finish code.  */
+    KEEP (*(.fini0))	/* Beginning of finish code (_exit symbol).  */
+    KEEP (*(.fini1))	/* Place holder for applications.  */
+    KEEP (*(.fini2))	/* C++ destructors.  */
+    KEEP (*(.fini3))	/* Place holder for applications.  */
+    KEEP (*(.fini4))	/* Runtime exit.  */
+"
+
+PRE_COMPUTE_DATA_SIZE="
+/* SCz: this does not work yet... This is supposed to force the loading
+   of _map_data.o (from libgcc.a) when the .data section is not empty.
+   By doing so, this should bring the code that copies the .data section
+   from ROM to RAM at init time.
+
+  ___pre_comp_data_size = SIZEOF(.data);
+  __install_data_sections = ___pre_comp_data_size > 0 ?
+		__map_data_sections : 0;
+*/
+"
+
+INSTALL_RELOC="
+  .install0 0 : { *(.install0) }
+  .install1 0 : { *(.install1) }
+  .install2 0 : { *(.install2) }
+  .install3 0 : { *(.install3) }
+  .install4 0 : { *(.install4) }
+"
+
+FINISH_RELOC="
+  .fini0 0 : { *(.fini0) }
+  .fini1 0 : { *(.fini1) }
+  .fini2 0 : { *(.fini2) }
+  .fini3 0 : { *(.fini3) }
+  .fini4 0 : { *(.fini4) }
+"
+
+BSS_DATA_RELOC="
+  .data1 0 : { *(.data1) }
+
+  /* We want the small data sections together, so single-instruction offsets
+     can access them all, and initialized data all before uninitialized, so
+     we can shorten the on-disk segment size.  */
+  .sdata   0 : { *(.sdata) }
+  .sbss    0 : { *(.sbss) }
+  .scommon 0 : { *(.scommon) }
+"
+
+SOFT_REGS_RELOC="
+  .softregs 0 : { *(.softregs) }
+"
+
+cat <<EOF
+${RELOCATING+/* Linker script for 68HC12 executable (PROM).  */}
+${RELOCATING-/* Linker script for 68HC12 object file (ld -r).  */}
+
+OUTPUT_FORMAT("${OUTPUT_FORMAT}", "${BIG_OUTPUT_FORMAT}",
+	      "${LITTLE_OUTPUT_FORMAT}")
+OUTPUT_ARCH(${OUTPUT_ARCH})
+${RELOCATING+ENTRY(${ENTRY})}
+
+${RELOCATING+${LIB_SEARCH_DIRS}}
+${RELOCATING+${EXECUTABLE_SYMBOLS}}
+${RELOCATING+${MEMORY_DEF}}
+
+SECTIONS
+{
+  .hash        ${RELOCATING-0} : { *(.hash)		}
+  .dynsym      ${RELOCATING-0} : { *(.dynsym)		}
+  .dynstr      ${RELOCATING-0} : { *(.dynstr)		}
+  .gnu.version		${RELOCATING-0} : { *(.gnu.version) }
+  .gnu.version_d	${RELOCATING-0} : { *(.gnu.version_d) }
+  .gnu.version_r	${RELOCATING-0} : { *(.gnu.version_r) }
+
+  .rel.text    ${RELOCATING-0} :
+    {
+      *(.rel.text)
+      ${RELOCATING+*(.rel.text.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.t.*)}
+    }
+  .rela.text   ${RELOCATING-0} :
+    {
+      *(.rela.text)
+      ${RELOCATING+*(.rela.text.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.t.*)}
+    }
+  .rel.data    ${RELOCATING-0} :
+    {
+      *(.rel.data)
+      ${RELOCATING+*(.rel.data.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.d.*)}
+    }
+  .rela.data   ${RELOCATING-0} :
+    {
+      *(.rela.data)
+      ${RELOCATING+*(.rela.data.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.d.*)}
+    }
+  .rel.rodata  ${RELOCATING-0} :
+    {
+      *(.rel.rodata)
+      ${RELOCATING+*(.rel.rodata.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.r.*)}
+    }
+  .rela.rodata ${RELOCATING-0} :
+    {
+      *(.rela.rodata)
+      ${RELOCATING+*(.rela.rodata.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.r.*)}
+    }
+  .rel.sdata   ${RELOCATING-0} :
+    {
+      *(.rel.sdata)
+      ${RELOCATING+*(.rel.sdata.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.s.*)}
+    }
+  .rela.sdata   ${RELOCATING-0} :
+    {
+      *(.rela.sdata)
+      ${RELOCATING+*(.rela.sdata.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.s.*)}
+    }
+  .rel.sbss    ${RELOCATING-0} :
+    { 
+      *(.rel.sbss)
+      ${RELOCATING+*(.rel.sbss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.sb.*)}
+    }
+  .rela.sbss   ${RELOCATING-0} :
+    {
+      *(.rela.sbss)
+      ${RELOCATING+*(.rela.sbss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.sb.*)}
+    }
+  .rel.bss     ${RELOCATING-0} : 
+    { 
+      *(.rel.bss)
+      ${RELOCATING+*(.rel.bss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.b.*)}
+    }
+  .rela.bss    ${RELOCATING-0} : 
+    { 
+      *(.rela.bss)
+      ${RELOCATING+*(.rela.bss.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.b.*)}
+    }
+  .rel.stext		${RELOCATING-0} : { *(.rel.stest) }
+  .rela.stext		${RELOCATING-0} : { *(.rela.stest) }
+  .rel.etext		${RELOCATING-0} : { *(.rel.etest) }
+  .rela.etext		${RELOCATING-0} : { *(.rela.etest) }
+  .rel.sdata		${RELOCATING-0} : { *(.rel.sdata) }
+  .rela.sdata		${RELOCATING-0} : { *(.rela.sdata) }
+  .rel.edata		${RELOCATING-0} : { *(.rel.edata) }
+  .rela.edata		${RELOCATING-0} : { *(.rela.edata) }
+  .rel.eit_v		${RELOCATING-0} : { *(.rel.eit_v) }
+  .rela.eit_v		${RELOCATING-0} : { *(.rela.eit_v) }
+  .rel.ebss		${RELOCATING-0} : { *(.rel.ebss) }
+  .rela.ebss		${RELOCATING-0} : { *(.rela.ebss) }
+  .rel.srodata		${RELOCATING-0} : { *(.rel.srodata) }
+  .rela.srodata		${RELOCATING-0} : { *(.rela.srodata) }
+  .rel.erodata		${RELOCATING-0} : { *(.rel.erodata) }
+  .rela.erodata		${RELOCATING-0} : { *(.rela.erodata) }
+  .rel.got		${RELOCATING-0} : { *(.rel.got) }
+  .rela.got		${RELOCATING-0} : { *(.rela.got) }
+  .rel.ctors		${RELOCATING-0} : { *(.rel.ctors) }
+  .rela.ctors		${RELOCATING-0} : { *(.rela.ctors) }
+  .rel.dtors		${RELOCATING-0} : { *(.rel.dtors) }
+  .rela.dtors		${RELOCATING-0} : { *(.rela.dtors) }
+  .rel.init		${RELOCATING-0} : { *(.rel.init) }
+  .rela.init		${RELOCATING-0} : { *(.rela.init) }
+  .rel.fini		${RELOCATING-0} : { *(.rel.fini) }
+  .rela.fini		${RELOCATING-0} : { *(.rela.fini) }
+  .rel.plt		${RELOCATING-0} : { *(.rel.plt) }
+  .rela.plt		${RELOCATING-0} : { *(.rela.plt) }
+
+  /* Concatenate .page0 sections.  Put them in the page0 memory bank
+     unless we are creating a relocatable file.  */
+  .page0 :
+  {
+    *(.page0)
+  } ${RELOCATING+ > page0}
+
+  /* Start of text section.  */
+  .stext ${RELOCATING-0} : 
+  {
+    *(.stext)
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .init	${RELOCATING-0} :
+  {
+    *(.init) 
+  } ${RELOCATING+=${NOP-0}}
+
+  ${RELOCATING-${INSTALL_RELOC}}
+  ${RELOCATING-${FINISH_RELOC}}
+
+  .text ${RELOCATING-0}:
+  {
+    /* Put startup code at beginning so that _start keeps same address.  */
+    ${RELOCATING+${STARTUP_CODE}}
+
+    ${RELOCATING+*(.init)}
+    *(.text)
+    ${RELOCATING+*(.text.*)}
+    /* .gnu.warning sections are handled specially by elf32.em.  */
+    *(.gnu.warning)
+    ${RELOCATING+*(.gnu.linkonce.t.*)}
+    ${RELOCATING+*(.tramp)}
+    ${RELOCATING+*(.tramp.*)}
+
+    ${RELOCATING+${FINISH_CODE}}
+
+    ${RELOCATING+_etext = .;}
+    ${RELOCATING+PROVIDE (etext = .);}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xa7a7a7a7}
+
+  .eh_frame ${RELOCATING-0} :
+  {
+    KEEP (*(.eh_frame))
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .gcc_except_table ${RELOCATING-0} :
+  {
+    *(.gcc_except_table)
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .rodata  ${RELOCATING-0} :
+  {
+    *(.rodata)
+    ${RELOCATING+*(.rodata.*)}
+    ${RELOCATING+*(.gnu.linkonce.r*)}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
+  .rodata1 ${RELOCATING-0} :
+  {
+    *(.rodata1)
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
+  /* Constructor and destructor tables are in ROM.  */
+  ${RELOCATING+${CTOR}}
+  ${RELOCATING+${DTOR}}
+
+  .jcr ${RELOCATING-0} :
+  {
+    KEEP (*(.jcr))
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  /* Start of the data section image in ROM.  */
+  ${RELOCATING+__data_image = .;}
+  ${RELOCATING+PROVIDE (__data_image = .);}
+
+  /* All read-only sections that normally go in PROM must be above.
+     We construct the DATA image section in PROM at end of all these
+     read-only sections.  The data image must be copied at init time.
+     Refer to GNU ld, Section 3.6.8.2 Output Section LMA.  */
+  .data  ${RELOCATING-0} : ${RELOCATING+AT (__data_image)}
+  {
+    ${RELOCATING+__data_section_start = .;}
+    ${RELOCATING+PROVIDE (__data_section_start = .);}
+
+    ${RELOCATING+${DATA_START_SYMBOLS}}
+    ${RELOCATING+*(.sdata)}
+    *(.data)
+    ${RELOCATING+*(.data.*)}
+    ${RELOCATING+*(.data1)}
+    ${RELOCATING+*(.gnu.linkonce.d.*)}
+    ${CONSTRUCTING+CONSTRUCTORS}
+
+    ${RELOCATING+_edata  =  .;}
+    ${RELOCATING+PROVIDE (edata = .);}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${DATA_MEMORY} =0xffffffff}
+
+  ${RELOCATING+__data_section_size = SIZEOF(.data);}
+  ${RELOCATING+PROVIDE (__data_section_size = SIZEOF(.data));}
+  ${RELOCATING+__data_image_end = __data_image + __data_section_size;}
+
+  ${RELOCATING+${PRE_COMPUTE_DATA_SIZE}}
+
+  /* .install ${RELOCATING-0}:
+  {
+    . = _data_image_end;
+  } ${RELOCATING+ > ${TEXT_MEMORY}} */
+
+  /* Relocation for some bss and data sections.  */
+  ${RELOCATING-${BSS_DATA_RELOC}}
+  ${RELOCATING-${SOFT_REGS_RELOC}}
+
+  .bss ${RELOCATING-0} :
+  {
+    ${RELOCATING+__bss_start = .;}
+    ${RELOCATING+*(.softregs)}
+    ${RELOCATING+*(.sbss)}
+    ${RELOCATING+*(.scommon)}
+
+    *(.dynbss)
+    *(.bss)
+    ${RELOCATING+*(.bss.*)}
+    ${RELOCATING+*(.gnu.linkonce.b.*)}
+    *(COMMON)
+    ${RELOCATING+PROVIDE (_end = .);}
+  } ${RELOCATING+ > ${DATA_MEMORY}}
+  ${RELOCATING+__bss_size = SIZEOF(.bss);}
+  ${RELOCATING+PROVIDE (__bss_size = SIZEOF(.bss));}
+
+  .eeprom ${RELOCATING-0} :
+  {
+    *(.eeprom)
+    *(.eeprom.*)
+  } ${RELOCATING+ > ${EEPROM_MEMORY}}
+
+  ${RELOCATING+${VECTORS}}
+
+  /* Stabs debugging sections.  */
+  .stab		 0 : { *(.stab) }
+  .stabstr	 0 : { *(.stabstr) }
+  .stab.excl	 0 : { *(.stab.excl) }
+  .stab.exclstr	 0 : { *(.stab.exclstr) }
+  .stab.index	 0 : { *(.stab.index) }
+  .stab.indexstr 0 : { *(.stab.indexstr) }
+
+  .comment	 0 : { *(.comment) }
+
+  /* DWARF debug sections.
+     Symbols in the DWARF debugging sections are relative to the beginning
+     of the section so we begin them at 0.
+     Treatment of DWARF debug section must be at end of the linker
+     script to avoid problems when there are undefined symbols. It's necessary
+     to avoid that the DWARF section is relocated before such undefined
+     symbols are found.  */
+
+  /* DWARF 1 */
+  .debug	 0 : { *(.debug) }
+  .line		 0 : { *(.line) }
+
+  /* GNU DWARF 1 extensions */
+  .debug_srcinfo 0 : { *(.debug_srcinfo) }
+  .debug_sfnames 0 : { *(.debug_sfnames) }
+
+  /* DWARF 1.1 and DWARF 2 */
+  .debug_aranges  0 : { *(.debug_aranges) }
+  .debug_pubnames 0 : { *(.debug_pubnames) }
+
+  /* DWARF 2 */
+  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
+  .debug_abbrev   0 : { *(.debug_abbrev) }
+  .debug_line     0 : { *(.debug_line) }
+  .debug_frame    0 : { *(.debug_frame) }
+  .debug_str      0 : { *(.debug_str) }
+  .debug_loc      0 : { *(.debug_loc) }
+  .debug_macinfo  0 : { *(.debug_macinfo) }
+}
+EOF
diff -rupN binutils-2.20/ld/scripttempl/elfmc9xgate.sc binutils-2.20-sean/ld/scripttempl/elfmc9xgate.sc
--- binutils-2.20/ld/scripttempl/elfmc9xgate.sc	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/scripttempl/elfmc9xgate.sc	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,463 @@
+#
+# Unusual variables checked by this code:
+#	NOP - four byte opcode for no-op (defaults to 0)
+#	DATA_ADDR - if end-of-text-plus-one-page isn't right for data start
+#	OTHER_READWRITE_SECTIONS - other than .data .bss .ctors .sdata ...
+#		(e.g., .PARISC.global)
+#	OTHER_SECTIONS - at the end
+#	EXECUTABLE_SYMBOLS - symbols that must be defined for an
+#		executable (e.g., _DYNAMIC_LINK)
+#	TEXT_START_SYMBOLS - symbols that appear at the start of the
+#		.text section.
+#	DATA_START_SYMBOLS - symbols that appear at the start of the
+#		.data section.
+#	OTHER_BSS_SYMBOLS - symbols that appear at the start of the
+#		.bss section besides __bss_start.
+#	EMBEDDED - whether this is for an embedded system. 
+#
+# When adding sections, do note that the names of some sections are used
+# when specifying the start address of the next.
+#
+test -z "$ENTRY" && ENTRY=_start
+test -z "${BIG_OUTPUT_FORMAT}" && BIG_OUTPUT_FORMAT=${OUTPUT_FORMAT}
+test -z "${LITTLE_OUTPUT_FORMAT}" && LITTLE_OUTPUT_FORMAT=${OUTPUT_FORMAT}
+if [ -z "$MACHINE" ]; then OUTPUT_ARCH=${ARCH}; else OUTPUT_ARCH=${ARCH}:${MACHINE}; fi
+test "$LD_FLAG" = "N" && DATA_ADDR=.
+
+CTOR=".ctors ${CONSTRUCTING-0} : 
+  {
+    ${CONSTRUCTING+ PROVIDE (__CTOR_LIST__ = .); }
+    ${CONSTRUCTING+${CTOR_START}}
+    KEEP (*(.ctors))
+
+    ${CONSTRUCTING+${CTOR_END}}
+    ${CONSTRUCTING+ PROVIDE(__CTOR_END__ = .); }
+  } ${RELOCATING+ > ${TEXT_MEMORY}}"
+
+DTOR="  .dtors	${CONSTRUCTING-0} :
+  {
+    ${CONSTRUCTING+ PROVIDE(__DTOR_LIST__ = .); }
+    KEEP (*(.dtors))
+    ${CONSTRUCTING+ PROVIDE(__DTOR_END__ = .); }
+  } ${RELOCATING+ > ${TEXT_MEMORY}}"
+
+
+VECTORS="
+  /* If the 'vectors_addr' symbol is defined, it indicates the start address
+     of interrupt vectors.  This depends on the 68HC11 operating mode:
+
+			Addr
+     Single chip	0xffc0
+     Extended mode	0xffc0
+     Bootstrap		0x00c0
+     Test		0xbfc0
+
+     In general, the vectors address is 0xffc0.  This can be overriden 
+     with the '-defsym vectors_addr=0xbfc0' ld option.
+
+     Note: for the bootstrap mode, the interrupt vectors are at 0xbfc0 but
+     they are redirected to 0x00c0 by the internal PROM.  Application's vectors
+     must also consist of jump instructions (see Motorola's manual).  */
+
+  PROVIDE (_vectors_addr = DEFINED (vectors_addr) ? vectors_addr : 0xffc0);
+  .vectors DEFINED (vectors_addr) ? vectors_addr : 0xffc0 :
+  {
+    KEEP (*(.vectors))
+  }"
+
+#
+# We provide two emulations: a fixed on that defines some memory banks
+# and a configurable one that includes a user provided memory definition.
+#
+case $GENERIC_BOARD in
+  yes|1|YES)
+	MEMORY_DEF="
+/* Get memory banks definition from some user configuration file.
+   This file must be located in some linker directory (search path
+   with -L<dir>). See fixed memory banks emulation script.  */
+INCLUDE memory.x;
+"
+	;;
+  *)
+MEMORY_DEF="
+/* Fixed definition of the available memory banks.
+   See generic emulation script for a user defined configuration.  */
+MEMORY
+{
+  page0 (rwx) : ORIGIN = 0x0, LENGTH = 256
+  text  (rx)  : ORIGIN = ${ROM_START_ADDR}, LENGTH = ${ROM_SIZE}
+  data        : ORIGIN = ${RAM_START_ADDR}, LENGTH = ${RAM_SIZE}
+  eeprom      : ORIGIN = ${EEPROM_START_ADDR}, LENGTH = ${EEPROM_SIZE}
+}
+
+/* Setup the stack on the top of the data memory bank.  */
+PROVIDE (_stack = ${RAM_START_ADDR} + ${RAM_SIZE} - 1);
+"
+	;;
+esac
+
+STARTUP_CODE="
+    /* Startup code.  */
+    KEEP (*(.install0))	/* Section should setup the stack pointer.  */
+    KEEP (*(.install1))	/* Place holder for applications.  */
+    KEEP (*(.install2))	/* Optional installation of data sections in RAM.  */
+    KEEP (*(.install3))	/* Place holder for applications.  */
+    KEEP (*(.install4))	/* Section that calls the main.  */
+"
+
+FINISH_CODE="
+    /* Finish code.  */
+    KEEP (*(.fini0))	/* Beginning of finish code (_exit symbol).  */
+    KEEP (*(.fini1))	/* Place holder for applications.  */
+    KEEP (*(.fini2))	/* C++ destructors.  */
+    KEEP (*(.fini3))	/* Place holder for applications.  */
+    KEEP (*(.fini4))	/* Runtime exit.  */
+"
+
+PRE_COMPUTE_DATA_SIZE="
+/* SCz: this does not work yet... This is supposed to force the loading
+   of _map_data.o (from libgcc.a) when the .data section is not empty.
+   By doing so, this should bring the code that copies the .data section
+   from ROM to RAM at init time.
+
+  ___pre_comp_data_size = SIZEOF(.data);
+  __install_data_sections = ___pre_comp_data_size > 0 ?
+		__map_data_sections : 0;
+*/
+"
+
+INSTALL_RELOC="
+  .install0 0 : { *(.install0) }
+  .install1 0 : { *(.install1) }
+  .install2 0 : { *(.install2) }
+  .install3 0 : { *(.install3) }
+  .install4 0 : { *(.install4) }
+"
+
+FINISH_RELOC="
+  .fini0 0 : { *(.fini0) }
+  .fini1 0 : { *(.fini1) }
+  .fini2 0 : { *(.fini2) }
+  .fini3 0 : { *(.fini3) }
+  .fini4 0 : { *(.fini4) }
+"
+
+BSS_DATA_RELOC="
+  .data1 0 : { *(.data1) }
+
+  /* We want the small data sections together, so single-instruction offsets
+     can access them all, and initialized data all before uninitialized, so
+     we can shorten the on-disk segment size.  */
+  .sdata   0 : { *(.sdata) }
+  .sbss    0 : { *(.sbss) }
+  .scommon 0 : { *(.scommon) }
+"
+
+SOFT_REGS_RELOC="
+  .softregs 0 : { *(.softregs) }
+"
+
+cat <<EOF
+${RELOCATING+/* Linker script for 68HC12 executable (PROM).  */}
+${RELOCATING-/* Linker script for 68HC12 object file (ld -r).  */}
+
+OUTPUT_FORMAT("${OUTPUT_FORMAT}", "${BIG_OUTPUT_FORMAT}",
+	      "${LITTLE_OUTPUT_FORMAT}")
+OUTPUT_ARCH(${OUTPUT_ARCH})
+${RELOCATING+ENTRY(${ENTRY})}
+
+${RELOCATING+${LIB_SEARCH_DIRS}}
+${RELOCATING+${EXECUTABLE_SYMBOLS}}
+${RELOCATING+${MEMORY_DEF}}
+
+SECTIONS
+{
+  .hash        ${RELOCATING-0} : { *(.hash)		}
+  .dynsym      ${RELOCATING-0} : { *(.dynsym)		}
+  .dynstr      ${RELOCATING-0} : { *(.dynstr)		}
+  .gnu.version		${RELOCATING-0} : { *(.gnu.version) }
+  .gnu.version_d	${RELOCATING-0} : { *(.gnu.version_d) }
+  .gnu.version_r	${RELOCATING-0} : { *(.gnu.version_r) }
+
+  .rel.text    ${RELOCATING-0} :
+    {
+      *(.rel.text)
+      ${RELOCATING+*(.rel.text.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.t.*)}
+    }
+  .rela.text   ${RELOCATING-0} :
+    {
+      *(.rela.text)
+      ${RELOCATING+*(.rela.text.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.t.*)}
+    }
+  .rel.data    ${RELOCATING-0} :
+    {
+      *(.rel.data)
+      ${RELOCATING+*(.rel.data.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.d.*)}
+    }
+  .rela.data   ${RELOCATING-0} :
+    {
+      *(.rela.data)
+      ${RELOCATING+*(.rela.data.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.d.*)}
+    }
+  .rel.rodata  ${RELOCATING-0} :
+    {
+      *(.rel.rodata)
+      ${RELOCATING+*(.rel.rodata.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.r.*)}
+    }
+  .rela.rodata ${RELOCATING-0} :
+    {
+      *(.rela.rodata)
+      ${RELOCATING+*(.rela.rodata.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.r.*)}
+    }
+  .rel.sdata   ${RELOCATING-0} :
+    {
+      *(.rel.sdata)
+      ${RELOCATING+*(.rel.sdata.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.s.*)}
+    }
+  .rela.sdata   ${RELOCATING-0} :
+    {
+      *(.rela.sdata)
+      ${RELOCATING+*(.rela.sdata.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.s.*)}
+    }
+  .rel.sbss    ${RELOCATING-0} :
+    { 
+      *(.rel.sbss)
+      ${RELOCATING+*(.rel.sbss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.sb.*)}
+    }
+  .rela.sbss   ${RELOCATING-0} :
+    {
+      *(.rela.sbss)
+      ${RELOCATING+*(.rela.sbss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.sb.*)}
+    }
+  .rel.bss     ${RELOCATING-0} : 
+    { 
+      *(.rel.bss)
+      ${RELOCATING+*(.rel.bss.*)}
+      ${RELOCATING+*(.rel.gnu.linkonce.b.*)}
+    }
+  .rela.bss    ${RELOCATING-0} : 
+    { 
+      *(.rela.bss)
+      ${RELOCATING+*(.rela.bss.*)}
+      ${RELOCATING+*(.rela.gnu.linkonce.b.*)}
+    }
+  .rel.stext		${RELOCATING-0} : { *(.rel.stest) }
+  .rela.stext		${RELOCATING-0} : { *(.rela.stest) }
+  .rel.etext		${RELOCATING-0} : { *(.rel.etest) }
+  .rela.etext		${RELOCATING-0} : { *(.rela.etest) }
+  .rel.sdata		${RELOCATING-0} : { *(.rel.sdata) }
+  .rela.sdata		${RELOCATING-0} : { *(.rela.sdata) }
+  .rel.edata		${RELOCATING-0} : { *(.rel.edata) }
+  .rela.edata		${RELOCATING-0} : { *(.rela.edata) }
+  .rel.eit_v		${RELOCATING-0} : { *(.rel.eit_v) }
+  .rela.eit_v		${RELOCATING-0} : { *(.rela.eit_v) }
+  .rel.ebss		${RELOCATING-0} : { *(.rel.ebss) }
+  .rela.ebss		${RELOCATING-0} : { *(.rela.ebss) }
+  .rel.srodata		${RELOCATING-0} : { *(.rel.srodata) }
+  .rela.srodata		${RELOCATING-0} : { *(.rela.srodata) }
+  .rel.erodata		${RELOCATING-0} : { *(.rel.erodata) }
+  .rela.erodata		${RELOCATING-0} : { *(.rela.erodata) }
+  .rel.got		${RELOCATING-0} : { *(.rel.got) }
+  .rela.got		${RELOCATING-0} : { *(.rela.got) }
+  .rel.ctors		${RELOCATING-0} : { *(.rel.ctors) }
+  .rela.ctors		${RELOCATING-0} : { *(.rela.ctors) }
+  .rel.dtors		${RELOCATING-0} : { *(.rel.dtors) }
+  .rela.dtors		${RELOCATING-0} : { *(.rela.dtors) }
+  .rel.init		${RELOCATING-0} : { *(.rel.init) }
+  .rela.init		${RELOCATING-0} : { *(.rela.init) }
+  .rel.fini		${RELOCATING-0} : { *(.rel.fini) }
+  .rela.fini		${RELOCATING-0} : { *(.rela.fini) }
+  .rel.plt		${RELOCATING-0} : { *(.rel.plt) }
+  .rela.plt		${RELOCATING-0} : { *(.rela.plt) }
+
+  /* Concatenate .page0 sections.  Put them in the page0 memory bank
+     unless we are creating a relocatable file.  */
+  .page0 :
+  {
+    *(.page0)
+  } ${RELOCATING+ > page0}
+
+  /* Start of text section.  */
+  .stext ${RELOCATING-0} : 
+  {
+    *(.stext)
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .init	${RELOCATING-0} :
+  {
+    *(.init) 
+  } ${RELOCATING+=${NOP-0}}
+
+  ${RELOCATING-${INSTALL_RELOC}}
+  ${RELOCATING-${FINISH_RELOC}}
+
+  .text ${RELOCATING-0}:
+  {
+    /* Put startup code at beginning so that _start keeps same address.  */
+    ${RELOCATING+${STARTUP_CODE}}
+
+    ${RELOCATING+*(.init)}
+    *(.text)
+    ${RELOCATING+*(.text.*)}
+    /* .gnu.warning sections are handled specially by elf32.em.  */
+    *(.gnu.warning)
+    ${RELOCATING+*(.gnu.linkonce.t.*)}
+    ${RELOCATING+*(.tramp)}
+    ${RELOCATING+*(.tramp.*)}
+
+    ${RELOCATING+${FINISH_CODE}}
+
+    ${RELOCATING+_etext = .;}
+    ${RELOCATING+PROVIDE (etext = .);}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xa7a7a7a7}
+
+  .eh_frame ${RELOCATING-0} :
+  {
+    KEEP (*(.eh_frame))
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .gcc_except_table ${RELOCATING-0} :
+  {
+    *(.gcc_except_table)
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  .rodata  ${RELOCATING-0} :
+  {
+    *(.rodata)
+    ${RELOCATING+*(.rodata.*)}
+    ${RELOCATING+*(.gnu.linkonce.r*)}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
+  .rodata1 ${RELOCATING-0} :
+  {
+    *(.rodata1)
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${TEXT_MEMORY} =0xffffffff}
+
+  /* Constructor and destructor tables are in ROM.  */
+  ${RELOCATING+${CTOR}}
+  ${RELOCATING+${DTOR}}
+
+  .jcr ${RELOCATING-0} :
+  {
+    KEEP (*(.jcr))
+  } ${RELOCATING+ > ${TEXT_MEMORY}}
+
+  /* Start of the data section image in ROM.  */
+  ${RELOCATING+__data_image = .;}
+  ${RELOCATING+PROVIDE (__data_image = .);}
+
+  /* All read-only sections that normally go in PROM must be above.
+     We construct the DATA image section in PROM at end of all these
+     read-only sections.  The data image must be copied at init time.
+     Refer to GNU ld, Section 3.6.8.2 Output Section LMA.  */
+  .data  ${RELOCATING-0} : ${RELOCATING+AT (__data_image)}
+  {
+    ${RELOCATING+__data_section_start = .;}
+    ${RELOCATING+PROVIDE (__data_section_start = .);}
+
+    ${RELOCATING+${DATA_START_SYMBOLS}}
+    ${RELOCATING+*(.sdata)}
+    *(.data)
+    ${RELOCATING+*(.data.*)}
+    ${RELOCATING+*(.data1)}
+    ${RELOCATING+*(.gnu.linkonce.d.*)}
+    ${CONSTRUCTING+CONSTRUCTORS}
+
+    ${RELOCATING+_edata  =  .;}
+    ${RELOCATING+PROVIDE (edata = .);}
+    ${RELOCATING+. = ALIGN(2);}
+  } ${RELOCATING+ > ${DATA_MEMORY} =0xffffffff}
+
+  ${RELOCATING+__data_section_size = SIZEOF(.data);}
+  ${RELOCATING+PROVIDE (__data_section_size = SIZEOF(.data));}
+  ${RELOCATING+__data_image_end = __data_image + __data_section_size;}
+
+  ${RELOCATING+${PRE_COMPUTE_DATA_SIZE}}
+
+  /* .install ${RELOCATING-0}:
+  {
+    . = _data_image_end;
+  } ${RELOCATING+ > ${TEXT_MEMORY}} */
+
+  /* Relocation for some bss and data sections.  */
+  ${RELOCATING-${BSS_DATA_RELOC}}
+  ${RELOCATING-${SOFT_REGS_RELOC}}
+
+  .bss ${RELOCATING-0} :
+  {
+    ${RELOCATING+__bss_start = .;}
+    ${RELOCATING+*(.softregs)}
+    ${RELOCATING+*(.sbss)}
+    ${RELOCATING+*(.scommon)}
+
+    *(.dynbss)
+    *(.bss)
+    ${RELOCATING+*(.bss.*)}
+    ${RELOCATING+*(.gnu.linkonce.b.*)}
+    *(COMMON)
+    ${RELOCATING+PROVIDE (_end = .);}
+  } ${RELOCATING+ > ${DATA_MEMORY}}
+  ${RELOCATING+__bss_size = SIZEOF(.bss);}
+  ${RELOCATING+PROVIDE (__bss_size = SIZEOF(.bss));}
+
+  .eeprom ${RELOCATING-0} :
+  {
+    *(.eeprom)
+    *(.eeprom.*)
+  } ${RELOCATING+ > ${EEPROM_MEMORY}}
+
+  ${RELOCATING+${VECTORS}}
+
+  /* Stabs debugging sections.  */
+  .stab		 0 : { *(.stab) }
+  .stabstr	 0 : { *(.stabstr) }
+  .stab.excl	 0 : { *(.stab.excl) }
+  .stab.exclstr	 0 : { *(.stab.exclstr) }
+  .stab.index	 0 : { *(.stab.index) }
+  .stab.indexstr 0 : { *(.stab.indexstr) }
+
+  .comment	 0 : { *(.comment) }
+
+  /* DWARF debug sections.
+     Symbols in the DWARF debugging sections are relative to the beginning
+     of the section so we begin them at 0.
+     Treatment of DWARF debug section must be at end of the linker
+     script to avoid problems when there are undefined symbols. It's necessary
+     to avoid that the DWARF section is relocated before such undefined
+     symbols are found.  */
+
+  /* DWARF 1 */
+  .debug	 0 : { *(.debug) }
+  .line		 0 : { *(.line) }
+
+  /* GNU DWARF 1 extensions */
+  .debug_srcinfo 0 : { *(.debug_srcinfo) }
+  .debug_sfnames 0 : { *(.debug_sfnames) }
+
+  /* DWARF 1.1 and DWARF 2 */
+  .debug_aranges  0 : { *(.debug_aranges) }
+  .debug_pubnames 0 : { *(.debug_pubnames) }
+
+  /* DWARF 2 */
+  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
+  .debug_abbrev   0 : { *(.debug_abbrev) }
+  .debug_line     0 : { *(.debug_line) }
+  .debug_frame    0 : { *(.debug_frame) }
+  .debug_str      0 : { *(.debug_str) }
+  .debug_loc      0 : { *(.debug_loc) }
+  .debug_macinfo  0 : { *(.debug_macinfo) }
+}
+EOF
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/adj-brset.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-brset.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/adj-brset.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-brset.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,32 @@
+#source: adj-brset.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> brclr	140,x \#\$c8 0+804a <L8>
+0+8004 <L1> addd	\*0+4 <_toto>
+0+8006 <L1\+0x2> brclr	20,x \#\$03 0+8004 <L1>
+0+800a <L1\+0x6> brclr	90,x \#\$63 0+801a <L3>
+0+800e <L2> addd	\*0+4 <_toto>
+0+8010 <L2\+0x2> brclr	19,y \#\$04 0+800e <L2>
+0+8015 <L2\+0x7> brclr	91,y \#\$62 0+8024 <L4>
+0+801a <L3> addd	\*0+4 <_toto>
+0+801c <L3\+0x2> brset	18,x \#\$05 0+801a <L3>
+0+8020 <L3\+0x6> brset	92,x \#\$61 0+8030 <L5>
+0+8024 <L4> addd	\*0+4 <_toto>
+0+8026 <L4\+0x2> brset	17,y \#\$06 0+8024 <L4>
+0+802b <L4\+0x7> brset	93,y \#\$60 0+8030 <L5>
+0+8030 <L5> addd	\*0+4 <_toto>
+0+8032 <L5\+0x2> brset	\*0+32 <_table> \#\$07 0+8030 <L5>
+0+8036 <L5\+0x6> brset	\*0+3c <_table\+0xa> \#\$5f 0+8044 <L7>
+0+803a <L6> addd	\*0+4 <_toto>
+0+803c <L6\+0x2> brclr	\*0+33 <_table\+0x1> \#\$08 0+803a <L6>
+0+8040 <L6\+0x6> brset	\*0+3d <_table\+0xb> \#\$5e 0+804a <L8>
+0+8044 <L7> addd	\*0+4 <_toto>
+0+8046 <L7\+0x2> brclr	\*0+33 <_table\+0x1> \#\$08 0+803a <L6>
+0+804a <L8> brclr	140,x \#\$c8 0+8000 <_start>
+0+804e <L8\+0x4> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/adj-brset.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-brset.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/adj-brset.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-brset.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,51 @@
+;;; Test 68HC11 linker relaxation and fixup of brclr/brset branches
+;;; 
+	.sect .text
+	.globl _start
+_start:
+start:
+	brclr	140,x#200,L8	; Branch adjustment covers the whole test
+;;; The 'addd' is relaxed and we win 1 byte.  The next brclr/brset
+;;; branch must be fixed and reduced by 1.  We check for different
+;;; addressing modes because the instruction has different opcode and
+;;; different lengths.
+L1:
+	addd	_toto
+	brclr	20,x,#3,L1
+	brclr	90,x,#99,L3	; Likewise with forward branch
+L2:
+	addd	_toto
+	brclr	19,y,#4,L2
+	brclr	91,y,#98,L4
+L3:
+	addd	_toto
+	brset	18,x,#5,L3
+	brset	92,x,#97,L5
+L4:
+	addd	_toto
+	brset	17,y,#6,L4
+	brset	93,y,#96,L5
+L5:
+	addd	_toto
+	brset	*_table,#7,L5
+	brset	*_table+10,#95,L7
+L6:
+	addd	_toto
+	brclr	*_table+1,#8,L6
+	brset	*_table+11,#94,L8
+L7:
+	addd	_toto
+	brclr	*_table+1,#8,L6
+L8:
+	brclr	140,x#200,_start ; Branch adjustment covers the whole test
+	rts
+
+	.sect	.page0
+_bar:
+	.long	0
+_toto:
+	.long	0
+	.skip	32
+stack:
+	.skip	10
+_table:
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/adj-jump.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-jump.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/adj-jump.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-jump.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,60 @@
+#source: adj-jump.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32\-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> bra	0+8074 <L3>
+	...
+0+8016 <_start\+0x16> bra	0+8074 <L3>
+0+8018 <L1> addd	0,x
+0+801a <L1\+0x2> bne	0+8018 <L1>
+0+801c <L1\+0x4> addd	\*0+4 <_toto>
+0+801e <L1\+0x6> beq	0+8018 <L1>
+0+8020 <L1\+0x8> addd	\*0+5 <_toto\+0x1>
+0+8022 <L1\+0xa> bne	0+8018 <L1>
+0+8024 <L1\+0xc> bgt	0+8018 <L1>
+0+8026 <L1\+0xe> bge	0+8018 <L1>
+0+8028 <L1\+0x10> beq	0+8018 <L1>
+0+802a <L1\+0x12> ble	0+8018 <L1>
+0+802c <L1\+0x14> blt	0+8018 <L1>
+0+802e <L1\+0x16> bhi	0+8018 <L1>
+0+8030 <L1\+0x18> bcc	0+8018 <L1>
+0+8032 <L1\+0x1a> beq	0+8018 <L1>
+0+8034 <L1\+0x1c> bls	0+8018 <L1>
+0+8036 <L1\+0x1e> bcs	0+8018 <L1>
+0+8038 <L1\+0x20> bcs	0+8018 <L1>
+0+803a <L1\+0x22> bmi	0+8018 <L1>
+0+803c <L1\+0x24> bvs	0+8018 <L1>
+0+803e <L1\+0x26> bcc	0+8018 <L1>
+0+8040 <L1\+0x28> bpl	0+8018 <L1>
+0+8042 <L1\+0x2a> bvc	0+8018 <L1>
+0+8044 <L1\+0x2c> bne	0+8018 <L1>
+0+8046 <L1\+0x2e> brn	0+8018 <L1>
+0+8048 <L1\+0x30> bra	0+8018 <L1>
+0+804a <L1\+0x32> addd	\*0+4 <_toto>
+0+804c <L1\+0x34> addd	\*0+4 <_toto>
+0+804e <L1\+0x36> addd	\*0+4 <_toto>
+0+8050 <L1\+0x38> addd	\*0+4 <_toto>
+0+8052 <L1\+0x3a> addd	\*0+4 <_toto>
+0+8054 <L1\+0x3c> addd	\*0+4 <_toto>
+0+8056 <L1\+0x3e> addd	\*0+4 <_toto>
+0+8058 <L1\+0x40> addd	\*0+4 <_toto>
+0+805a <L1\+0x42> addd	\*0+4 <_toto>
+0+805c <L1\+0x44> addd	\*0+4 <_toto>
+0+805e <L1\+0x46> addd	\*0+4 <_toto>
+0+8060 <L1\+0x48> addd	\*0+4 <_toto>
+0+8062 <L1\+0x4a> addd	\*0+4 <_toto>
+0+8064 <L1\+0x4c> addd	\*0+4 <_toto>
+0+8066 <L1\+0x4e> addd	\*0+4 <_toto>
+0+8068 <L2> bra	0+8000 <_start>
+0+806a <L2\+0x2> bne	0+8068 <L2>
+0+806c <L2\+0x4> beq	0+8074 <L3>
+0+806e <L2\+0x6> addd	\*0+4 <_toto>
+0+8070 <L2\+0x8> beq	0+8074 <L3>
+0+8072 <L2\+0xa> addd	\*0+4 <_toto>
+0+8074 <L3> addd	\*0+4 <_toto>
+0+8076 <L3\+0x2> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/adj-jump.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-jump.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/adj-jump.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/adj-jump.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,74 @@
+;;; Test 68HC11 linker relaxation and fixup of bcc/bra branches
+;;; 
+	.sect .text
+	.globl _start
+_start:
+	;; Next 'bra' is assembled as a 'jmp'.  It is relaxed to 'bra L3'
+	;; during a second pass of relax.
+	bra	L3
+	.skip	20
+	;; Next 'jmp' must be relaxed to a 'bra' during the first pass.
+	;; The branch offset must then be adjusted by consecutive relax.
+	jmp	L3
+L1:
+	addd	0,x
+	bne	L1		; Branch not adjusted
+	addd	_toto
+	beq	L1		; Backward branch, adjust -1
+	addd	_toto+1
+	jbne	L1		; Backward branch, adjust -2
+	bgt	L1		; All possible backward branchs, adjust -2
+	bge	L1
+	beq	L1
+	ble	L1
+	blt	L1
+	bhi	L1
+	bhs	L1
+	beq	L1
+	bls	L1
+	blo	L1
+	bcs	L1
+	bmi	L1
+	bvs	L1
+	bcc	L1
+	bpl	L1
+	bvc	L1
+	bne	L1
+	brn	L1
+	bra	L1
+	;; Relax several insn to reduce block by 15
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+	addd	_toto
+L2:
+	jmp	_start		; -> relax to bra _start
+	bne	L2		; Backward branch, adjust -1
+	beq	L3		; Forward branch, adjust -2
+	addd	_toto
+	beq	L3		; Forward branch, adjust -1
+	addd	_toto
+L3:
+	addd	_toto
+	rts
+
+	.sect	.page0
+_bar:
+	.long	0
+_toto:
+	.long	0
+	.skip	32
+stack:
+	.skip	10
+_table:
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1403.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1403.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1403.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1403.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,12 @@
+#source: bug-1403.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> bset	\*0+ <__bss_size> \#\$04
+0+8003 <L1> bra	0+8005 <toto>
+0+8005 <toto> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1403.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1403.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1403.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1403.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,20 @@
+;;; Bug #1403:	Branch adjustment to another section not correct when doing linker relaxation
+;;; http://savannah.gnu.org/bugs/?func=detailbug&bug_id=1403&group_id=2424
+;;; 
+	.sect .text
+	.globl _start
+_start:
+	.relax	L1
+	ldx	#table
+	bset	0,x #4
+L1:
+	bra	toto		; bra is assembled as a jmp and relaxed
+
+	.sect .page0
+	.globl table
+table:	.long 0
+
+	.sect	.text.toto
+	.globl	toto
+toto:
+	rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1417.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1417.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1417.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1417.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,15 @@
+#source: bug-1417.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> tst	0+ <__bss_size>
+0+8003 <_start\+0x3> bne	0+8007 <L1>
+0+8005 <_start\+0x5> bsr	0+800b <foo>
+0+8007 <L1> bset	\*0+ <__bss_size> \#\$04
+0+800a <L2> rts
+0+800b <foo> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1417.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1417.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-1417.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-1417.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,21 @@
+;;; Bug #1417:	Branch wrong after linker relaxation
+;;; http://savannah.gnu.org/bugs/?func=detailbug&bug_id=1417&group_id=2424
+;;; 
+	.sect .text
+	.globl _start
+_start:
+	tst	table
+	bne	L1		; Branch was adjusted but it must not
+	jsr	foo
+L1:
+	.relax	L2
+	ldx	#table		; Instruction removed
+	bset	0,x #4		; Changed to bset *table #4
+L2:
+	rts
+foo:
+	rts
+
+	.sect .page0
+	.globl table
+table:	.long 0
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-3331.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-3331.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-3331.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-3331.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,14 @@
+#source: bug-3331.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> ldx	#0+1100 <__data_section_start>
+0+8003 <_start\+0x3> bset	0,x \#\$04
+0+8006 <L1> ldd	\#0+2 <__bss_size\+0x2>
+0+8009 <L1\+0x3> std	\*0+ <__bss_size>
+0+800b <L1\+0x5> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/bug-3331.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-3331.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/bug-3331.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/bug-3331.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,23 @@
+;;; Bug #3331:	Invalid group relaxation, bset uses an invalid address
+;;; http://savannah.gnu.org/bugs/?func=detailbug&bug_id=3331&group_id=2424
+;;; 
+	.sect .text
+	.globl _start
+_start:
+	.relax	L1
+	ldx	#foo		;; This relax group must not be changed.
+	bset	0,x #4
+L1:
+	ldd	#2
+	std	table		;; This instruction uses a symbol in page0
+				;; and it triggered the relaxation of the
+				;; previous relax group
+	rts
+
+	.sect .page0
+	.globl table
+table:	.long 0
+
+	.sect .data
+	.globl foo
+foo:	.long 0
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc11.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc11.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc11.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc11.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,73 @@
+#source: far-hc11.s
+#as: -m68hc11
+#ld: -m m68hc11elf
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*:     file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <tramp._far_foo> pshb
+0+8001 <tramp._far_foo\+0x1> ldab	\#0
+0+8003 <tramp._far_foo\+0x3> ldy	\#0+6c <_far_foo>
+0+8007 <tramp._far_foo\+0x7> jmp	0+8056 <__far_trampoline>
+0+800a <tramp._far_bar> pshb
+0+800b <tramp._far_bar\+0x1> ldab	\#0
+0+800d <tramp._far_bar\+0x3> ldy	\#0+64 <stack>
+0+8011 <tramp._far_bar\+0x7> jmp	0+8056 <__far_trampoline>
+0+8014 <_start> lds	\#0+64 <stack>
+0+8017 <_start\+0x3> ldx	\#0+abcd <__data_image\+0x2b63>
+0+801a <_start\+0x6> pshx
+0+801b <_start\+0x7> ldd	\#0+1234 <__data_section_start\+0x134>
+0+801e <_start\+0xa> ldx	\#0+5678 <__data_section_start\+0x4578>
+0+8021 <_start\+0xd> jsr	0+800a <tramp._far_bar>
+0+8024 <_start\+0x10> cpx	\#0+1234 <__data_section_start\+0x134>
+0+8027 <_start\+0x13> bne	0+804e <fail>
+0+8029 <_start\+0x15> cpd	\#0+5678 <__data_section_start\+0x4578>
+0+802d <_start\+0x19> bne	0+804e <fail>
+0+802f <_start\+0x1b> pulx
+0+8030 <_start\+0x1c> cpx	\#0+abcd <__data_image\+0x2b63>
+0+8033 <_start\+0x1f> bne	0+804e <fail>
+0+8035 <_start\+0x21> ldd	\#0+8000 <tramp._far_foo>
+0+8038 <_start\+0x24> xgdx
+0+8039 <_start\+0x25> jsr	0,x
+0+803b <_start\+0x27> ldd	\#0+800a <tramp._far_bar>
+0+803e <_start\+0x2a> xgdy
+0+8040 <_start\+0x2c> jsr	0,y
+0+8043 <_start\+0x2f> ldaa	\#0
+0+8045 <_start\+0x31> ldy	\#0+73 <_far_no_tramp>
+0+8049 <_start\+0x35> bsr	0+8066 <__call_a16>
+0+804b <_start\+0x37> clra
+0+804c <_start\+0x38> clrb
+0+804d <_start\+0x39> wai
+0+804e <fail> ldd	\#0+1 <__bss_size\+0x1>
+0+8051 <fail\+0x3> wai
+0+8052 <fail\+0x4> bra	0+8014 <_start>
+0+8054 <__return> ins
+0+8055 <__return\+0x1> rts
+0+8056 <__far_trampoline> psha
+0+8057 <__far_trampoline\+0x1> psha
+0+8058 <__far_trampoline\+0x2> pshx
+0+8059 <__far_trampoline\+0x3> tsx
+0+805a <__far_trampoline\+0x4> ldab	4,x
+0+805c <__far_trampoline\+0x6> ldaa	2,x
+0+805e <__far_trampoline\+0x8> staa	4,x
+0+8060 <__far_trampoline\+0xa> pulx
+0+8061 <__far_trampoline\+0xb> pula
+0+8062 <__far_trampoline\+0xc> pula
+0+8063 <__far_trampoline\+0xd> jmp	0,y
+0+8066 <__call_a16> psha
+0+8067 <__call_a16\+0x1> jmp	0,y
+Disassembly of section .bank1:
+0+64 <_far_bar> jsr	0+6b <local_bank1>
+0+67 <_far_bar\+0x3> xgdx
+0+68 <_far_bar\+0x4> jmp	0+8054 <__return>
+0+6b <local_bank1> rts
+Disassembly of section .bank2:
+0+6c <_far_foo> jsr	0+72 <local_bank2>
+0+6f <_far_foo\+0x3> jmp	0+8054 <__return>
+0+72 <local_bank2> rts
+Disassembly of section .bank3:
+0+73 <_far_no_tramp> jsr	0+79 <local_bank3>
+0+76 <_far_no_tramp\+0x3> jmp	0+8054 <__return>
+0+79 <local_bank3> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc11.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc11.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc11.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc11.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,105 @@
+;;; Test 68HC11 FAR trampoline generation
+;;; 2 trampolines are generated:
+;;; - one for '_far_bar'
+;;; - one for '_far_foo'
+;;; 'far_no_tramp' does not have any trampoline generated.
+;;;
+	.sect .text
+	.globl _start
+_start:
+start:	
+	lds	#stack
+	ldx	#0xabcd
+	pshx
+	ldd	#0x1234
+	ldx	#0x5678
+	bsr	_far_bar	; Call to trampoline generated code
+	cpx	#0x1234
+	bne	fail		; X and D preserved (swapped by _far_bar)
+	cpd	#0x5678
+	bne	fail
+	pulx
+	cpx	#0xabcd		; Stack parameter preserved
+	bne	fail
+	ldd	#_far_foo	; Get address of trampoline handler
+	xgdx
+	jsr	0,x
+	ldd	#_far_bar	; Likewise (unique trampoline check)
+	xgdy
+	jsr	0,y
+	ldaa	#%page(_far_no_tramp)
+	ldy	#%addr(_far_no_tramp)
+	bsr	__call_a16	; No trampoline generated for _far_no_tramp
+	clra
+	clrb
+	wai
+fail:
+	ldd	#1
+	wai
+	bra	start
+	.global	__return
+__return:
+	ins
+	rts
+
+	.sect .bank1,"ax"
+	.globl _far_bar
+	.far _far_bar		; Must mark symbol as far
+_far_bar:
+	jsr	local_bank1
+	xgdx
+	jmp	__return
+
+local_bank1:
+	rts
+
+	.sect .bank2,"ax"
+	.globl _far_foo
+	.far _far_foo
+_far_foo:
+	jsr	local_bank2
+	jmp	__return
+
+local_bank2:
+	rts
+
+	.sect .bank3,"ax"
+	.globl _far_no_tramp
+	.far _far_no_tramp
+_far_no_tramp:
+	jsr	local_bank3
+	jmp	__return
+
+local_bank3:
+	rts
+
+	.sect .text
+	.globl __far_trampoline
+__far_trampoline:
+	psha				; (2) Save function parameter (high)
+	;; <Read current page in A>
+	psha				; (2)
+	;; <Set currenge page from B>
+	pshx				; (4)
+	tsx				; (3)
+	ldab	4,x			; (4) Restore function parameter (low)
+	ldaa	2,x			; (4) Get saved page number
+	staa	4,x			; (4) Save it below return PC
+	pulx				; (5)
+	pula				; (3)
+	pula				; (3) Restore function parameter (high)
+	jmp	0,y			; (4)
+
+	.globl __call_a16
+__call_a16:
+	;; xgdx				; (3)
+	;; <Read current page in A>	; (3) ldaa _current_page
+	psha				; (2)
+	;; <Set current page from B>	; (4) staa _current_page
+	;; xgdx				; (3)
+	jmp 0,y				; (4)
+
+	.sect .page0
+	.skip 100
+stack:
+
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,55 @@
+#source: far-hc12.s
+#as: -m68hc12
+#ld: -m m68hc12elf --script $srcdir/$subdir/far-hc12.ld
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*:     file format elf32\-m68hc12
+
+Disassembly of section .text:
+0+c000 <tramp\._far_foo> ldy	\#0+8000 <__bank_start>
+0+c003 <tramp\._far_foo\+0x3> call	0+c049 <__far_trampoline> \{0+c049 <__far_trampoline>, 1\}
+0+c007 <tramp\._far_bar> ldy	\#0+8000 <__bank_start>
+0+c00a <tramp\._far_bar\+0x3> call	0+c049 <__far_trampoline> \{0+c049 <__far_trampoline>, 0\}
+0+c00e <_start> lds	\#0+2063 <stack-0x1>
+0+c011 <_start\+0x3> ldx	\#0+abcd <__bank_start\+0x2bcd>
+0+c014 <_start\+0x6> pshx
+0+c015 <_start\+0x7> ldd	\#0+1234 <stack\-0xe30>
+0+c018 <_start\+0xa> ldx	\#0+5678 <__bank_size\+0x1678>
+0+c01b <_start\+0xd> jsr	0+c007 <tramp._far_bar>
+0+c01e <_start\+0x10> cpx	\#0+1234 <stack\-0xe30>
+0+c021 <_start\+0x13> bne	0+c043 <fail>
+0+c023 <_start\+0x15> cpd	\#0+5678 <__bank_size\+0x1678>
+0+c026 <_start\+0x18> bne	0+c043 <fail>
+0+c028 <_start\+0x1a> pulx
+0+c029 <_start\+0x1b> cpx	\#0+abcd <__bank_start\+0x2bcd>
+0+c02c <_start\+0x1e> bne	0+c043 <fail>
+0+c02e <_start\+0x20> ldd	\#0+c000 <tramp._far_foo>
+0+c031 <_start\+0x23> xgdx
+0+c033 <_start\+0x25> jsr	0,X
+0+c035 <_start\+0x27> ldd	\#0+c007 <tramp._far_bar>
+0+c038 <_start\+0x2a> xgdy
+0+c03a <_start\+0x2c> jsr	0,Y
+0+c03c <_start\+0x2e> call	0+18000 <_far_no_tramp> \{0+8000 <__bank_start>, 2\}
+0+c040 <_start\+0x32> clra
+0+c041 <_start\+0x33> clrb
+0+c042 <_start\+0x34> wai
+0+c043 <fail> ldd	\#0+1 <stack\-0x2063>
+0+c046 <fail\+0x3> wai
+0+c047 <fail\+0x4> bra	0+c00e <_start>
+0+c049 <__far_trampoline> movb	0,SP, 2,SP
+0+c04d <__far_trampoline\+0x4> leas	2,SP
+0+c04f <__far_trampoline\+0x6> jmp	0,Y
+Disassembly of section .bank1:
+0+10+ <_far_bar> jsr	0+10006 <local_bank1>
+0+10003 <_far_bar\+0x3> xgdx
+0+10005 <_far_bar\+0x5> rtc
+0+10006 <local_bank1> rts
+Disassembly of section .bank2:
+0+14000 <_far_foo> jsr	0+14004 <local_bank2>
+0+14003 <_far_foo\+0x3> rtc
+0+14004 <local_bank2> rts
+Disassembly of section .bank3:
+0+18000 <_far_no_tramp> jsr	0+18004 <local_bank3>
+0+18003 <_far_no_tramp\+0x3> rtc
+0+18004 <local_bank3> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.ld binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.ld
--- binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.ld	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.ld	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,18 @@
+ENTRY(_start)
+SECTIONS {
+  .text 0xc000 : {
+    *(.text)
+  }
+  .bank1 0x10000 : {
+    *(.bank1)
+  }
+  .bank2 0x14000 : {
+    *(.bank2)
+  }
+  .bank3 0x18000 : {
+    *(.bank3)
+  }
+  .bss 0x2000 : {
+    *(.bss)
+  }
+}
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/far-hc12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/far-hc12.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,83 @@
+;;; Test 68HC12 FAR trampoline generation
+;;; 2 trampolines are generated:
+;;; - one for '_far_bar'
+;;; - one for '_far_foo'
+;;; 'far_no_tramp' does not have any trampoline generated.
+;;;
+	.sect .text
+	.globl _start
+_start:
+start:	
+	lds	#stack-1
+	ldx	#0xabcd
+	pshx
+	ldd	#0x1234
+	ldx	#0x5678
+	bsr	_far_bar	; Call to trampoline generated code
+	cpx	#0x1234
+	bne	fail		; X and D preserved (swapped by _far_bar)
+	cpd	#0x5678
+	bne	fail
+	pulx
+	cpx	#0xabcd		; Stack parameter preserved
+	bne	fail
+	ldd	#_far_foo	; Get address of trampoline handler
+	xgdx
+	jsr	0,x
+	ldd	#_far_bar	; Likewise (unique trampoline check)
+	xgdy
+	jsr	0,y
+	call	_far_no_tramp	; No trampoline generated for _far_no_tramp
+	clra
+	clrb
+	wai
+fail:
+	ldd	#1
+	wai
+	bra	start
+
+	.sect .bank1,"ax"
+	.globl _far_bar
+	.far _far_bar		; Must mark symbol as far
+_far_bar:
+	jsr	local_bank1
+	xgdx
+	rtc
+
+local_bank1:
+	rts
+
+	.sect .bank2,"ax"
+	.globl _far_foo
+	.far _far_foo
+_far_foo:
+	jsr	local_bank2
+	rtc
+
+local_bank2:
+	rts
+
+	.sect .bank3,"ax"
+	.globl _far_no_tramp
+	.far _far_no_tramp
+_far_no_tramp:
+	jsr	local_bank3
+	rtc
+
+local_bank3:
+	rts
+
+	.sect .text
+	.globl __far_trampoline
+__far_trampoline:
+	movb	0,sp, 2,sp	; Copy page register below the caller's return
+	leas	2,sp		; address.
+	jmp	0,y		; We have a 'call/rtc' stack layout now
+				; and can jump to the far handler
+				; (whose memory bank is mapped due to the
+				; call to the trampoline).
+
+	.sect .bss
+	.skip 100
+stack:
+
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/link-hc12.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hc12.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/link-hc12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hc12.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,6 @@
+;;; Test 68HCS12 and 68HC12 mixes (compatible case)
+;;;
+	.sect .text
+	.globl main
+main:
+	rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/link-hcs12.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hcs12.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/link-hcs12.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hcs12.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,24 @@
+#source: link-hcs12.s -m68hcs12
+#source: link-hc12.s -m68hc12
+#as: -mshort
+#ld: -m m68hc12elf
+#objdump: -p -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*:     file format elf32\-m68hc12
+
+Program Header:
+    LOAD off    0x0+ vaddr 0x0+1000 paddr 0x0+1000 align 2\*\*12
+         filesz 0x0+100 memsz 0x0+100 flags rw-
+    LOAD off    0x0+1000 vaddr 0x0+8000 paddr 0x0+8000 align 2\*\*12
+         filesz 0x0+6 memsz 0x0+6 flags r-x
+    LOAD off    0x0+1100 vaddr 0x0+1100 paddr 0x0+8006 align 2\*\*12
+         filesz 0x0+ memsz 0x0+ flags rw-
+private flags = 22:\[abi=16\-bit int, 64\-bit double, cpu=HCS12\] \[memory=flat\]
+
+Disassembly of section .text:
+0+8000 <_start> jsr	0+8005 <main>
+0+8003 <_start\+0x3> bra	0+8000 <_start>
+0+8005 <main> rts
+
+
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/link-hcs12.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hcs12.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/link-hcs12.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/link-hcs12.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,7 @@
+;;; Test 68HCS12 and 68HC12 mixes (compatible case)
+;;;
+	.sect .text
+	.globl _start
+_start:
+	bsr	main
+	bra	_start
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/m68hc11.exp binutils-2.20-sean/ld/testsuite/ld-mc9s12x/m68hc11.exp
--- binutils-2.20/ld/testsuite/ld-mc9s12x/m68hc11.exp	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/m68hc11.exp	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,34 @@
+# Expect script for run_dump_test based ld-m68hc11 tests.
+#   Copyright 2002, 2005, 2007 Free Software Foundation, Inc.
+#
+# This file is part of the GNU Binutils.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+# MA 02110-1301, USA.
+#
+# Adapted from ld-sh/rd-sh.exp
+
+# Test 68HC11 relaxing.  This tests the assembler as well as the linker.
+
+if { ![istarget m6811-*-*] && ![istarget m6812-*-*] } {
+    return
+}
+
+set rd_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]
+foreach shtest $rd_test_list {
+    # We need to strip the ".d", but can leave the dirname.
+    verbose [file rootname $shtest]
+    run_dump_test [file rootname $shtest]
+}
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/relax-direct.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-direct.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/relax-direct.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-direct.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,63 @@
+#source: relax-direct.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> lds	\*0+28 <stack>
+0+8002 <_start\+0x2> ldd	\*0+ <__bss_size>
+0+8004 <_start\+0x4> beq	0+800f <F1>
+0+8006 <_start\+0x6> bne	0+800b <_start\+0xb>
+0+8008 <_start\+0x8> jmp	0+8138 <F2>
+0+800b <_start\+0xb> std	\*0+ <__bss_size>
+0+800d <_start\+0xd> jsr	\*0+ <__bss_size>
+0+800f <F1> addd	\*0+4 <_toto>
+0+8011 <F1\+0x2> bne	0+8000 <_start>
+0+8013 <F1\+0x4> addd	\*0+cc <_table\+0x9a>
+0+8015 <F1\+0x6> addd	0+114 <_stack_top\+0x1a>
+0+8018 <F1\+0x9> adca	\*0+34 <_table\+0x2>
+0+801a <F1\+0xb> adcb	\*0+35 <_table\+0x3>
+0+801c <F1\+0xd> adda	\*0+36 <_table\+0x4>
+0+801e <F1\+0xf> addb	\*0+37 <_table\+0x5>
+0+8020 <F1\+0x11> addd	\*0+38 <_table\+0x6>
+0+8022 <F1\+0x13> anda	\*0+39 <_table\+0x7>
+0+8024 <F1\+0x15> andb	\*0+3a <_table\+0x8>
+0+8026 <F1\+0x17> cmpa	\*0+3b <_table\+0x9>
+0+8028 <F1\+0x19> cmpb	\*0+3c <_table\+0xa>
+0+802a <F1\+0x1b> cpd	\*0+3d <_table\+0xb>
+0+802d <F1\+0x1e> cpx	\*0+3e <_table\+0xc>
+0+802f <F1\+0x20> cpy	\*0+3f <_table\+0xd>
+0+8032 <F1\+0x23> eora	\*0+40 <_table\+0xe>
+0+8034 <F1\+0x25> eorb	\*0+41 <_table\+0xf>
+0+8036 <F1\+0x27> jsr	\*0+42 <_table\+0x10>
+0+8038 <F1\+0x29> ldaa	\*0+43 <_table\+0x11>
+0+803a <F1\+0x2b> ldab	\*0+44 <_table\+0x12>
+0+803c <F1\+0x2d> ldd	\*0+45 <_table\+0x13>
+0+803e <F1\+0x2f> lds	\*0+46 <_table\+0x14>
+0+8040 <F1\+0x31> ldx	\*0+47 <_table\+0x15>
+0+8042 <F1\+0x33> ldy	\*0+48 <_table\+0x16>
+0+8045 <F1\+0x36> oraa	\*0+49 <_table\+0x17>
+0+8047 <F1\+0x38> orab	\*0+4a <_table\+0x18>
+0+8049 <F1\+0x3a> sbcb	\*0+4b <_table\+0x19>
+0+804b <F1\+0x3c> sbca	\*0+4c <_table\+0x1a>
+0+804d <F1\+0x3e> staa	\*0+4d <_table\+0x1b>
+0+804f <F1\+0x40> stab	\*0+4e <_table\+0x1c>
+0+8051 <F1\+0x42> std	\*0+4f <_table\+0x1d>
+0+8053 <F1\+0x44> sts	\*0+50 <_table\+0x1e>
+0+8055 <F1\+0x46> stx	\*0+51 <_table\+0x1f>
+0+8057 <F1\+0x48> sty	\*0+52 <_table\+0x20>
+0+805a <F1\+0x4b> suba	\*0+53 <_table\+0x21>
+0+805c <F1\+0x4d> subb	\*0+54 <_table\+0x22>
+0+805e <F1\+0x4f> subd	\*0+55 <_table\+0x23>
+0+8060 <F1\+0x51> bne	0+8000 <_start>
+0+8062 <F1\+0x53> bra	0+800f <F1>
+0+8064 <F1\+0x55> rts
+0+8065 <no_relax> addd	0+136 <_stack_top\+0x3c>
+0+8068 <no_relax\+0x3> std	0+122 <_stack_top\+0x28>
+0+806b <no_relax\+0x6> tst	0+5 <_toto\+0x1>
+0+806e <no_relax\+0x9> bne	0+8065 <no_relax>
+	...
+0+8138 <F2> jmp	0+8000 <_start>
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/relax-direct.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-direct.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/relax-direct.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-direct.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,84 @@
+;;; Test 68HC11 linker relaxation from extended addressing to direct
+;;; addressing modes
+;;; 
+	.sect .text
+	.globl _start
+_start:
+start:	
+	lds	stack
+	ldd	_bar
+	beq	F1
+	beq	F2
+	std	_bar
+	jsr	_bar
+F1:
+	addd	_toto
+	bne	start
+	;; All the following instructions will be relaxed and win 1 byte
+	;; for each.
+	addd	_toto+200
+	addd	stack+256-20
+	adca	_table+2
+	adcb	_table+3
+	adda	_table+4
+	addb	_table+5
+	addd	_table+6
+	anda	_table+7
+	andb	_table+8
+	cmpa	_table+9
+	cmpb	_table+10
+	cpd	_table+11
+	cpx	_table+12
+	cpy	_table+13
+	eora	_table+14
+	eorb	_table+15
+	jsr	_table+16
+	ldaa	_table+17
+	ldab	_table+18
+	ldd	_table+19
+	lds	_table+20
+	ldx	_table+21
+	ldy	_table+22
+	oraa	_table+23
+	orab	_table+24
+	sbcb	_table+25
+	sbca	_table+26
+	staa	_table+27
+	stab	_table+28
+	std	_table+29
+	sts	_table+30
+	stx	_table+31
+	sty	_table+32
+	suba	_table+33
+	subb	_table+34
+	subd	_table+35
+	;; 'bne' is assembled as far branch and must relax to 
+	;; a relative 8-bit branch.
+	bne	_start
+	;; Likewise for next branch
+	bra	F1
+	rts
+
+;;; The following instructions will not be relaxed
+no_relax:
+	addd	_stack_top+60
+	std	_stack_top+40
+	;; 'tst' does not support direct addressing mode.
+	tst	_toto+1
+	bne	no_relax
+	.skip	200
+F2:
+	bra	_start
+
+	.sect	.page0
+_bar:
+	.long	0
+_toto:
+	.long	0
+	.skip	32
+stack:
+	.skip	10
+_table:
+	.skip	200
+_stack_top:
+
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/relax-group.d binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-group.d
--- binutils-2.20/ld/testsuite/ld-mc9s12x/relax-group.d	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-group.d	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,63 @@
+#source: relax-group.s
+#as: -m68hc11
+#ld: --relax
+#objdump: -d --prefix-addresses -r
+#target: m6811-*-* m6812-*-*
+
+.*: +file format elf32-m68hc11
+
+Disassembly of section .text:
+0+8000 <_start> bset	\*0+ <__bss_size> #\$04
+0+8003 <L1x> bset	\*0+ <__bss_size> #\$04
+0+8006 <L1y> bset	\*0+3 <__bss_size\+0x3> #\$04
+0+8009 <L1y\+0x3> bset	\*0+4 <table4> #\$08
+0+800c <L2x> bset	\*0+3 <__bss_size\+0x3> #\$04
+0+800f <L2x\+0x3> bset	\*0+4 <table4> #\$08
+0+8012 <L2y> bset	\*0+6 <table4\+0x2> #\$04
+0+8015 <L2y\+0x3> bset	\*0+7 <table4\+0x3> #\$08
+0+8018 <L2y\+0x6> bset	\*0+8 <table8> #\$0c
+0+801b <L2y\+0x9> bset	\*0+9 <table8\+0x1> #\$0c
+0+801e <L2y\+0xc> bset	\*0+a <table8\+0x2> #\$0c
+0+8021 <L2y\+0xf> bset	\*0+b <table8\+0x3> #\$0c
+0+8024 <L3x> bset	\*0+6 <table4\+0x2> #\$04
+0+8027 <L3x\+0x3> bset	\*0+7 <table4\+0x3> #\$08
+0+802a <L3x\+0x6> bset	\*0+8 <table8> #\$0c
+0+802d <L3x\+0x9> bset	\*0+9 <table8\+0x1> #\$0c
+0+8030 <L3x\+0xc> bset	\*0+a <table8\+0x2> #\$0c
+0+8033 <L3x\+0xf> bset	\*0+b <table8\+0x3> #\$0c
+0+8036 <L3y> bra	0+8000 <_start>
+0+8038 <L3y\+0x2> ldx	#0+fe <end_table\+0xe8>
+0+803b <L3y\+0x5> bset	\*0+fe <end_table\+0xe8> #\$04
+0+803e <L3y\+0x8> bset	\*0+ff <end_table\+0xe9> #\$08
+0+8041 <L3y\+0xb> bset	2,x #\$0c
+0+8044 <L3y\+0xe> bset	3,x #\$0c
+0+8047 <L3y\+0x11> bset	4,x #\$0c
+0+804a <L3y\+0x14> bset	5,x #\$0c
+0+804d <L4x> ldy	#0+fe <end_table\+0xe8>
+0+8051 <L4x\+0x4> bset	\*0+fe <end_table\+0xe8> #\$04
+0+8054 <L4x\+0x7> bset	\*0+ff <end_table\+0xe9> #\$08
+0+8057 <L4x\+0xa> bset	2,y #\$0c
+0+805b <L4x\+0xe> bset	3,y #\$0c
+0+805f <L4x\+0x12> bset	4,y #\$0c
+0+8063 <L4x\+0x16> bset	5,y #\$0c
+0+8067 <L4y> bclr	\*0+a <table8\+0x2> #\$04
+0+806a <L4y\+0x3> bclr	\*0+b <table8\+0x3> #\$08
+0+806d <L5x> bclr	\*0+1a <end_table\+0x4> #\$04
+0+8070 <L5x\+0x3> bclr	\*0+1b <end_table\+0x5> #\$08
+0+8073 <L5y> brset	\*0+8 <table8> #\$04 0+8073 <L5y>
+0+8077 <L6x> brset	\*0+8 <table8> #\$04 0+8077 <L6x>
+0+807b <L7x> brset	\*0+8 <table8> #\$04 0+8094 <brend>
+0+807f <L8x> brset	\*0+8 <table8> #\$04 0+8094 <brend>
+0+8083 <L8y> brclr	\*0+8 <table8> #\$04 0+8083 <L8y>
+0+8087 <L9x> brclr	\*0+8 <table8> #\$04 0+8087 <L9x>
+0+808b <L9y> brclr	\*0+8 <table8> #\$04 0+8094 <brend>
+0+808f <L10x> brclr	\*0+8 <table8> #\$04 0+8094 <brend>
+0+8093 <L10y> nop
+0+8094 <brend> bset	0,x #\$04
+0+8097 <w2> ldx	#0+ <__bss_size>
+0+809a <w3> ldy	#0+8 <table8>
+0+809e <w4> rts
+0+809f <w5> ldx	#0+ <__bss_size>
+0+80a2 <w5\+0x3> bset	0,x #\$05
+0+80a5 <w5\+0x6> jmp	0+8000 <_start>
+0+80a8 <w5\+0x9> rts
diff -rupN binutils-2.20/ld/testsuite/ld-mc9s12x/relax-group.s binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-group.s
--- binutils-2.20/ld/testsuite/ld-mc9s12x/relax-group.s	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/ld/testsuite/ld-mc9s12x/relax-group.s	2010-10-01 14:37:33.000000000 -0600
@@ -0,0 +1,161 @@
+;;; Test 68HC11 linker relaxation (group relax)
+;;; 
+	.sect .text
+	.globl _start
+_start:
+;;;
+;;; The following group of instructions are adjusted.
+;;;
+	.relax	L1x
+	ldx	#table
+	bset	0,x #4
+L1x:
+	.relax	L1y
+	ldy	#table
+	bset	0,y #4
+L1y:
+	.relax	L2x
+	ldx	#table+3
+	bset	0,x #4
+	bset	1,x #8
+L2x:
+	.relax	L2y
+	ldy	#table+3
+	bset	0,y #4
+	bset	1,y #8
+L2y:
+	.relax	L3x
+	ldx	#table+6
+	bset	0,x #4
+	bset	1,x #8
+	bset	2,x #12
+	bset	3,x #12
+	bset	4,x #12
+	bset	5,x #12
+L3x:
+	.relax	L3y
+	ldy	#table+6
+	bset	0,y #4
+	bset	1,y #8
+	bset	2,y #12
+	bset	3,y #12
+	bset	4,y #12
+	bset	5,y #12
+L3y:
+	;; Next branch is always relative.  It must be adjusted while
+	;; above instructions are relaxed.
+	bra	_start
+;;;
+;;; This group has the first two bset insn relaxable while the
+;;; others are not.  The ldx/ldy must not be removed.
+;;; 
+	.relax	L4x
+	ldx	#table+0xfe
+	bset	0,x #4
+	bset	1,x #8
+	bset	2,x #12
+	bset	3,x #12
+	bset	4,x #12
+	bset	5,x #12
+L4x:
+	.relax	L4y
+	ldy	#table+0xfe
+	bset	0,y #4
+	bset	1,y #8
+	bset	2,y #12
+	bset	3,y #12
+	bset	4,y #12
+	bset	5,y #12
+L4y:
+;;;
+;;; Relax group for bclr
+;;; 
+	.relax	L5x
+	ldx	#table+10
+	bclr	0,x #4
+	bclr	1,x #8
+L5x:
+	.relax	L5y
+	ldy	#table+16
+	bclr	10,y #4
+	bclr	11,y #8
+L5y:
+;;;
+;;; Relax group for brset (with backward branch)
+;;; 
+	.relax	L6x
+	ldx	#table+8
+	brset	0,x #4 L5y
+L6x:
+	.relax	L7x
+	ldy	#table+8
+	brset	0,y #4 L6x
+L7x:
+;;;
+;;; Relax group for brset (with forward branch)
+;;; 
+	.relax	L8x
+	ldx	#table+8
+	brset	0,x #4 brend
+L8x:
+	.relax	L8y
+	ldy	#table+8
+	brset	0,y #4 brend
+L8y:
+;;;
+;;; Relax group for brclr (with backward branch)
+;;; 
+	.relax	L9x
+	ldx	#table+8
+	brclr	0,x #4 L8y
+L9x:
+	.relax	L9y
+	ldy	#table+8
+	brclr	0,y #4 L9x
+L9y:
+;;;
+;;; Relax group for brclr (with forward branch)
+;;; 
+	.relax	L10x
+	ldx	#table+8
+	brclr	0,x #4 brend
+L10x:
+	.relax	L10y
+	ldy	#table+8
+	brclr	0,y #4 brend
+L10y:
+	nop
+brend:
+;;;
+;;; The following are wrong use of .relax groups.
+;;;
+	.relax	w1
+w1:
+	.relax	w2
+	bset	0,x #4
+w2:
+	.relax w3
+	ldx	#table
+w3:
+	.relax w4
+	ldy	#table+8
+w4:
+	.relax w5
+	rts
+w5:
+;;;
+;;; Next insn is not in a .relax group
+	ldx	#table
+	bset	0,x #5
+	bra	_start
+	rts
+
+	.sect .page0
+	.globl table
+table:	.long 0
+table4:	.long 0
+table8:	.long 0
+	.skip	10
+end_table:
+	.long 0
+
diff -rupN binutils-2.20/opcodes/Makefile.am binutils-2.20-sean/opcodes/Makefile.am
--- binutils-2.20/opcodes/Makefile.am	2009-09-07 06:07:53.000000000 -0600
+++ binutils-2.20-sean/opcodes/Makefile.am	2010-10-01 14:37:34.000000000 -0600
@@ -150,6 +150,10 @@ TARGET_LIBOPCODES_CFILES = \
 	m32r-opinst.c \
 	m68hc11-dis.c \
 	m68hc11-opc.c \
+	mc9s12x-dis.c \
+	mc9s12x-opc.c \
+	mc9xgate-dis.c \
+	mc9xgate-opc.c \
 	m68k-dis.c \
 	m68k-opc.c \
 	m88k-dis.c \
diff -rupN binutils-2.20/opcodes/Makefile.in binutils-2.20-sean/opcodes/Makefile.in
--- binutils-2.20/opcodes/Makefile.in	2009-09-07 06:08:03.000000000 -0600
+++ binutils-2.20-sean/opcodes/Makefile.in	2010-10-01 14:37:34.000000000 -0600
@@ -420,6 +420,10 @@ TARGET_LIBOPCODES_CFILES = \
 	m32r-opinst.c \
 	m68hc11-dis.c \
 	m68hc11-opc.c \
+	mc9s12x-dis.c \
+	mc9s12x-opc.c \
+	mc9xgate-dis.c \
+	mc9xgate-opc.c \
 	m68k-dis.c \
 	m68k-opc.c \
 	m88k-dis.c \
@@ -790,6 +794,10 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/m68k-opc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/m88k-dis.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maxq-dis.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mc9s12x-dis.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mc9s12x-opc.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mc9xgate-dis.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mc9xgate-opc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mcore-dis.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mep-asm.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mep-desc.Plo@am__quote@
diff -rupN binutils-2.20/opcodes/autom4te.cache/output.0 binutils-2.20-sean/opcodes/autom4te.cache/output.0
--- binutils-2.20/opcodes/autom4te.cache/output.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/autom4te.cache/output.0	2010-10-01 14:37:34.000000000 -0600
@@ -0,0 +1,14851 @@
+@%:@! /bin/sh
+@%:@ Guess values for system-dependent variables and create Makefiles.
+@%:@ Generated by GNU Autoconf 2.64.
+@%:@ 
+@%:@ Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+@%:@ 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software
+@%:@ Foundation, Inc.
+@%:@ 
+@%:@ This configure script is free software; the Free Software Foundation
+@%:@ gives unlimited permission to copy, distribute and modify it.
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test "x$CONFIG_SHELL" = x; then
+  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '\${1+\"\$@\"}'='\"\$@\"'
+  setopt NO_GLOB_SUBST
+else
+  case \`(set -o) 2>/dev/null\` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+"
+  as_required="as_fn_return () { (exit \$1); }
+as_fn_success () { as_fn_return 0; }
+as_fn_failure () { as_fn_return 1; }
+as_fn_ret_success () { return 0; }
+as_fn_ret_failure () { return 1; }
+
+exitcode=0
+as_fn_success || { exitcode=1; echo as_fn_success failed.; }
+as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
+as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
+as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
+if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :
+  
+else
+  exitcode=1; echo positional parameters were not saved.
+fi
+test x\$exitcode = x0 || exit 1"
+  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
+  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
+  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
+  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
+test \$(( 1 + 1 )) = 2 || exit 1"
+  if (eval "$as_required") 2>/dev/null; then :
+  as_have_required=yes
+else
+  as_have_required=no
+fi
+  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :
+  
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_found=false
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  as_found=:
+  case $as_dir in @%:@(
+	 /*)
+	   for as_base in sh bash ksh sh5; do
+	     # Try only shells that exist, to save several forks.
+	     as_shell=$as_dir/$as_base
+	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  CONFIG_SHELL=$as_shell as_have_required=yes
+		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  break 2
+fi
+fi
+	   done;;
+       esac
+  as_found=false
+done
+$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
+	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
+  CONFIG_SHELL=$SHELL as_have_required=yes
+fi; }
+IFS=$as_save_IFS
+
+
+      if test "x$CONFIG_SHELL" != x; then :
+  # We cannot yet assume a decent shell, so we have to provide a
+	# neutralization value for shells without unset; and this also
+	# works around shells that cannot unset nonexistent variables.
+	BASH_ENV=/dev/null
+	ENV=/dev/null
+	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
+	export CONFIG_SHELL
+	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+    if test x$as_have_required = xno; then :
+  $as_echo "$0: This script requires a shell more modern than all"
+  $as_echo "$0: the shells that I found on your system."
+  if test x${ZSH_VERSION+set} = xset ; then
+    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
+    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
+  else
+    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
+$0: including any error possibly output before this
+$0: message. Then install a modern shell, or manually run
+$0: the script under such a shell if you do have one."
+  fi
+  exit 1
+fi
+fi
+fi
+SHELL=${CONFIG_SHELL-/bin/sh}
+export SHELL
+# Unset more variables known to interfere with behavior of common tools.
+CLICOLOR_FORCE= GREP_OPTIONS=
+unset CLICOLOR_FORCE GREP_OPTIONS
+
+## --------------------- ##
+## M4sh Shell Functions. ##
+## --------------------- ##
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+
+  as_lineno_1=$LINENO as_lineno_1a=$LINENO
+  as_lineno_2=$LINENO as_lineno_2a=$LINENO
+  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
+  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
+  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$lt_ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$lt_ECHO" | sed 's,\\\\\$\\$0,'$0','`
+  ;;
+esac
+
+ECHO=${lt_ECHO-echo}
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $ECHO works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "$0" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<_LT_EOF
+$*
+_LT_EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$lt_ECHO"; then
+  if test "X${echo_test_string+set}" != Xset; then
+    # find a string as large as possible, as long as the shell can cope with it
+    for cmd in 'sed 50q "$0"' 'sed 20q "$0"' 'sed 10q "$0"' 'sed 2q "$0"' 'echo test'; do
+      # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+      if { echo_test_string=`eval $cmd`; } 2>/dev/null &&
+	 { test "X$echo_test_string" = "X$echo_test_string"; } 2>/dev/null
+      then
+        break
+      fi
+    done
+  fi
+
+  if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+     echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+     test "X$echo_testing_string" = "X$echo_test_string"; then
+    :
+  else
+    # The Solaris, AIX, and Digital Unix default echo programs unquote
+    # backslashes.  This makes it impossible to quote backslashes using
+    #   echo "$something" | sed 's/\\/\\\\/g'
+    #
+    # So, first we look for a working echo in the user's PATH.
+
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for dir in $PATH /usr/ucb; do
+      IFS="$lt_save_ifs"
+      if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+         test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        ECHO="$dir/echo"
+        break
+      fi
+    done
+    IFS="$lt_save_ifs"
+
+    if test "X$ECHO" = Xecho; then
+      # We didn't find a better echo, so look for alternatives.
+      if test "X`{ print -r '\t'; } 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`{ print -r "$echo_test_string"; } 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        # This shell has a builtin print -r that does the trick.
+        ECHO='print -r'
+      elif { test -f /bin/ksh || test -f /bin/ksh$ac_exeext; } &&
+	   test "X$CONFIG_SHELL" != X/bin/ksh; then
+        # If we have ksh, try running configure again with it.
+        ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+        export ORIGINAL_CONFIG_SHELL
+        CONFIG_SHELL=/bin/ksh
+        export CONFIG_SHELL
+        exec $CONFIG_SHELL "$0" --no-reexec ${1+"$@"}
+      else
+        # Try using printf.
+        ECHO='printf %s\n'
+        if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+	   echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	  # Cool, printf works
+	  :
+        elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	  export CONFIG_SHELL
+	  SHELL="$CONFIG_SHELL"
+	  export SHELL
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        elif echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        else
+	  # maybe with a smaller string...
+	  prev=:
+
+	  for cmd in 'echo test' 'sed 2q "$0"' 'sed 10q "$0"' 'sed 20q "$0"' 'sed 50q "$0"'; do
+	    if { test "X$echo_test_string" = "X`eval $cmd`"; } 2>/dev/null
+	    then
+	      break
+	    fi
+	    prev="$cmd"
+	  done
+
+	  if test "$prev" != 'sed 50q "$0"'; then
+	    echo_test_string=`eval $prev`
+	    export echo_test_string
+	    exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "$0" ${1+"$@"}
+	  else
+	    # Oops.  We lost completely, so just stick with echo.
+	    ECHO=echo
+	  fi
+        fi
+      fi
+    fi
+  fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+lt_ECHO=$ECHO
+if test "X$lt_ECHO" = "X$CONFIG_SHELL $0 --fallback-echo"; then
+   lt_ECHO="$CONFIG_SHELL \\\$\$0 --fallback-echo"
+fi
+
+
+
+
+exec 7<&0 </dev/null 6>&1
+
+# Name of the host.
+# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_clean_files=
+ac_config_libobj_dir=.
+LIB@&t@OBJS=
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+
+# Identity of this package.
+PACKAGE_NAME=
+PACKAGE_TARNAME=
+PACKAGE_VERSION=
+PACKAGE_STRING=
+PACKAGE_BUGREPORT=
+PACKAGE_URL=
+
+ac_unique_file="z8k-dis.c"
+# Factoring default headers for most tests.
+ac_includes_default="\
+#include <stdio.h>
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+#ifdef HAVE_SYS_STAT_H
+# include <sys/stat.h>
+#endif
+#ifdef STDC_HEADERS
+# include <stdlib.h>
+# include <stddef.h>
+#else
+# ifdef HAVE_STDLIB_H
+#  include <stdlib.h>
+# endif
+#endif
+#ifdef HAVE_STRING_H
+# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+#  include <memory.h>
+# endif
+# include <string.h>
+#endif
+#ifdef HAVE_STRINGS_H
+# include <strings.h>
+#endif
+#ifdef HAVE_INTTYPES_H
+# include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#endif
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif"
+
+ac_subst_vars='am__EXEEXT_FALSE
+am__EXEEXT_TRUE
+LTLIBOBJS
+LIB@&t@OBJS
+BFD_MACHINES
+archdefs
+SHARED_DEPENDENCIES
+SHARED_LIBADD
+SHARED_LDFLAGS
+BUILD_LIB_DEPS
+BUILD_LIBS
+LIBM
+cgendir
+CGEN_MAINT_FALSE
+CGEN_MAINT_TRUE
+HDEFINES
+EXEEXT_FOR_BUILD
+CC_FOR_BUILD
+MSGMERGE
+MSGFMT
+MKINSTALLDIRS
+CATOBJEXT
+GENCAT
+INSTOBJEXT
+DATADIRNAME
+CATALOGS
+POSUB
+GMSGFMT
+XGETTEXT
+INCINTL
+LIBINTL_DEP
+LIBINTL
+USE_NLS
+bfdincludedir
+bfdlibdir
+target_noncanonical
+host_noncanonical
+INSTALL_LIBBFD_FALSE
+INSTALL_LIBBFD_TRUE
+MAINT
+MAINTAINER_MODE_FALSE
+MAINTAINER_MODE_TRUE
+NO_WERROR
+WARN_CFLAGS
+OTOOL64
+OTOOL
+LIPO
+NMEDIT
+DSYMUTIL
+lt_ECHO
+OBJDUMP
+LN_S
+NM
+ac_ct_DUMPBIN
+DUMPBIN
+LD
+FGREP
+SED
+LIBTOOL
+RANLIB
+AR
+EGREP
+GREP
+CPP
+am__fastdepCC_FALSE
+am__fastdepCC_TRUE
+CCDEPMODE
+AMDEPBACKSLASH
+AMDEP_FALSE
+AMDEP_TRUE
+am__quote
+am__include
+DEPDIR
+am__untar
+am__tar
+AMTAR
+am__leading_dot
+SET_MAKE
+AWK
+mkdir_p
+MKDIR_P
+INSTALL_STRIP_PROGRAM
+STRIP
+install_sh
+MAKEINFO
+AUTOHEADER
+AUTOMAKE
+AUTOCONF
+ACLOCAL
+VERSION
+PACKAGE
+CYGPATH_W
+am__isrc
+INSTALL_DATA
+INSTALL_SCRIPT
+INSTALL_PROGRAM
+OBJEXT
+EXEEXT
+ac_ct_CC
+CPPFLAGS
+LDFLAGS
+CFLAGS
+CC
+target_os
+target_vendor
+target_cpu
+target
+host_os
+host_vendor
+host_cpu
+host
+build_os
+build_vendor
+build_cpu
+build
+target_alias
+host_alias
+build_alias
+LIBS
+ECHO_T
+ECHO_N
+ECHO_C
+DEFS
+mandir
+localedir
+libdir
+psdir
+pdfdir
+dvidir
+htmldir
+infodir
+docdir
+oldincludedir
+includedir
+localstatedir
+sharedstatedir
+sysconfdir
+datadir
+datarootdir
+libexecdir
+sbindir
+bindir
+program_transform_name
+prefix
+exec_prefix
+PACKAGE_URL
+PACKAGE_BUGREPORT
+PACKAGE_STRING
+PACKAGE_VERSION
+PACKAGE_TARNAME
+PACKAGE_NAME
+PATH_SEPARATOR
+SHELL'
+ac_subst_files=''
+ac_user_opts='
+enable_option_checking
+enable_dependency_tracking
+enable_shared
+enable_static
+with_pic
+enable_fast_install
+with_gnu_ld
+enable_libtool_lock
+enable_targets
+enable_werror
+enable_build_warnings
+enable_maintainer_mode
+enable_install_libbfd
+enable_nls
+enable_cgen_maint
+'
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CPP'
+
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+ac_unrecognized_opts=
+ac_unrecognized_sep=
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+docdir='${datarootdir}/doc/${PACKAGE}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
+
+ac_prev=
+ac_dashdash=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval $ac_prev=\$ac_option
+    ac_prev=
+    continue
+  fi
+
+  case $ac_option in
+  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *)	ac_optarg=yes ;;
+  esac
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
+    datadir=$ac_optarg ;;
+
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
+
+  -enable-* | --enable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=\$ac_optarg ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst | --locals)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=\$ac_optarg ;;
+
+  -without-* | --without-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=no ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) as_fn_error "unrecognized option: \`$ac_option'
+Try \`$0 --help' for more information."
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    case $ac_envvar in #(
+      '' | [0-9]* | *[!_$as_cr_alnum]* )
+      as_fn_error "invalid variable name: \`$ac_envvar'" ;;
+    esac
+    eval $ac_envvar=\$ac_optarg
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  as_fn_error "missing argument to $ac_option"
+fi
+
+if test -n "$ac_unrecognized_opts"; then
+  case $enable_option_checking in
+    no) ;;
+    fatal) as_fn_error "unrecognized options: $ac_unrecognized_opts" ;;
+    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
+  esac
+fi
+
+# Check all directory arguments for consistency.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
+do
+  eval ac_val=\$$ac_var
+  # Remove trailing slashes.
+  case $ac_val in
+    */ )
+      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
+      eval $ac_var=\$ac_val;;
+  esac
+  # Be sure to have absolute directory names.
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
+  esac
+  as_fn_error "expected an absolute directory name for --$ac_var: $ac_val"
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    $as_echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used." >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  as_fn_error "working directory cannot be determined"
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  as_fn_error "pwd does not report name of working directory"
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$as_myself" ||
+$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_myself" : 'X\(//\)[^/]' \| \
+	 X"$as_myself" : 'X\(//\)$' \| \
+	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_myself" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r "$srcdir/$ac_unique_file"; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
+  as_fn_error "cannot find sources ($ac_unique_file) in $srcdir"
+fi
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error "$ac_msg"
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures this package to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+                          [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+                          [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR            user executables [EPREFIX/bin]
+  --sbindir=DIR           system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR        program executables [EPREFIX/libexec]
+  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+  --libdir=DIR            object code libraries [EPREFIX/lib]
+  --includedir=DIR        C header files [PREFIX/include]
+  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR           info documentation [DATAROOTDIR/info]
+  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR            man documentation [DATAROOTDIR/man]
+  --docdir=DIR            documentation root @<:@DATAROOTDIR/doc/PACKAGE@:>@
+  --htmldir=DIR           html documentation [DOCDIR]
+  --dvidir=DIR            dvi documentation [DOCDIR]
+  --pdfdir=DIR            pdf documentation [DOCDIR]
+  --psdir=DIR             ps documentation [DOCDIR]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+  --target=TARGET   configure for building compilers for TARGET [HOST]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-option-checking  ignore unrecognized --enable/--with options
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors
+  --enable-shared@<:@=PKGS@:>@  build shared libraries @<:@default=no@:>@
+  --enable-static@<:@=PKGS@:>@  build static libraries @<:@default=yes@:>@
+  --enable-fast-install@<:@=PKGS@:>@ 
+                          optimize for fast installation @<:@default=yes@:>@
+  --disable-libtool-lock  avoid locking (might break parallel builds)
+  --enable-targets        alternative target configurations
+  --enable-werror         treat compile warnings as errors
+  --enable-build-warnings enable build-time compiler warnings
+  --enable-maintainer-mode  enable make rules and dependencies not useful
+			  (and sometimes confusing) to the casual installer
+  --enable-install-libbfd controls installation of libbfd and related headers
+  --disable-nls           do not use Native Language Support
+  --enable-cgen-maint=dir    build cgen generated files
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-pic              try to use only PIC/non-PIC objects @<:@default=use
+                          both@:>@
+  --with-gnu-ld           assume the C compiler uses GNU ld @<:@default=no@:>@
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+Report bugs to the package provider.
+_ACEOF
+ac_status=$?
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d "$ac_dir" ||
+      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
+      continue
+    ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
+    else
+      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
+  done
+fi
+
+test -n "$ac_init_help" && exit $ac_status
+if $ac_init_version; then
+  cat <<\_ACEOF
+configure
+generated by GNU Autoconf 2.64
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit
+fi
+
+## ------------------------ ##
+## Autoconf initialization. ##
+## ------------------------ ##
+
+@%:@ ac_fn_c_try_compile LINENO
+@%:@ --------------------------
+@%:@ Try to compile conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext
+  if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_compile
+
+@%:@ ac_fn_c_try_link LINENO
+@%:@ -----------------------
+@%:@ Try to link conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_link ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext conftest$ac_exeext
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext && {
+	 test "$cross_compiling" = yes ||
+	 $as_test_x conftest$ac_exeext
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
+  # interfere with the next link command; also delete a directory that is
+  # left behind by Apple's compiler.  We do this before executing the actions.
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_link
+
+@%:@ ac_fn_c_try_cpp LINENO
+@%:@ ----------------------
+@%:@ Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_cpp ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+    ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_cpp
+
+@%:@ ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES
+@%:@ -------------------------------------------------------
+@%:@ Tests whether HEADER exists, giving a warning if it cannot be compiled using
+@%:@ the include files in INCLUDES and setting the cache variable VAR
+@%:@ accordingly.
+ac_fn_c_check_header_mongrel ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 usability" >&5
+$as_echo_n "checking $2 usability... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_header_compiler=yes
+else
+  ac_header_compiler=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler" >&5
+$as_echo "$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 presence" >&5
+$as_echo_n "checking $2 presence... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  ac_header_preproc=yes
+else
+  ac_header_preproc=no
+fi
+rm -f conftest.err conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc" >&5
+$as_echo "$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((
+  yes:no: )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&5
+$as_echo "$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+    ;;
+  no:yes:* )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled" >&5
+$as_echo "$as_me: WARNING: $2: present but cannot be compiled" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?" >&5
+$as_echo "$as_me: WARNING: $2:     check for missing prerequisite headers?" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation" >&5
+$as_echo "$as_me: WARNING: $2: see the Autoconf documentation" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&5
+$as_echo "$as_me: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+    ;;
+esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=\$ac_header_compiler"
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_header_mongrel
+
+@%:@ ac_fn_c_try_run LINENO
+@%:@ ----------------------
+@%:@ Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
+@%:@ that executables *can* be run.
+ac_fn_c_try_run ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: program exited with status $ac_status" >&5
+       $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+       ac_retval=$ac_status
+fi
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  return $ac_retval
+
+} @%:@ ac_fn_c_try_run
+
+@%:@ ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
+@%:@ -------------------------------------------------------
+@%:@ Tests whether HEADER exists and can be compiled using the include files in
+@%:@ INCLUDES, setting the cache variable VAR accordingly.
+ac_fn_c_check_header_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+@%:@include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_header_compile
+
+@%:@ ac_fn_c_check_func LINENO FUNC VAR
+@%:@ ----------------------------------
+@%:@ Tests whether FUNC exists, setting the cache variable VAR accordingly
+ac_fn_c_check_func ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $2 innocuous_$2
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $2 (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $2
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $2 ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$2 || defined __stub___$2
+choke me
+#endif
+
+int
+main ()
+{
+return $2 ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_func
+
+@%:@ ac_fn_c_check_decl LINENO SYMBOL VAR
+@%:@ ------------------------------------
+@%:@ Tests whether SYMBOL is declared, setting cache variable VAR accordingly.
+ac_fn_c_check_decl ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $2 is declared" >&5
+$as_echo_n "checking whether $2 is declared... " >&6; }
+if { as_var=$3; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+@%:@ifndef $2
+  (void) $2;
+@%:@endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} @%:@ ac_fn_c_check_decl
+cat >config.log <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+exec 5>>config.log
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    $as_echo "PATH: $as_dir"
+  done
+IFS=$as_save_IFS
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *\'*)
+      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
+    2)
+      as_fn_append ac_configure_args1 " '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      as_fn_append ac_configure_args " '$ac_arg'"
+      ;;
+    esac
+  done
+done
+{ ac_configure_args0=; unset ac_configure_args0;}
+{ ac_configure_args1=; unset ac_configure_args1;}
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    cat <<\_ASBOX
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+_ASBOX
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+  (set) 2>&1 |
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      sed -n \
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
+    echo
+
+    cat <<\_ASBOX
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+_ASBOX
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      $as_echo "$ac_var='\''$ac_val'\''"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      cat <<\_ASBOX
+## ------------------- ##
+## File substitutions. ##
+## ------------------- ##
+_ASBOX
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	$as_echo "$ac_var='\''$ac_val'\''"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      cat <<\_ASBOX
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+_ASBOX
+      echo
+      cat confdefs.h
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      $as_echo "$as_me: caught signal $ac_signal"
+    $as_echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -f -r conftest* confdefs.h
+
+$as_echo "/* confdefs.h */" > confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE_URL "$PACKAGE_URL"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer an explicitly selected file to automatically selected ones.
+ac_site_file1=NONE
+ac_site_file2=NONE
+if test -n "$CONFIG_SITE"; then
+  ac_site_file1=$CONFIG_SITE
+elif test "x$prefix" != xNONE; then
+  ac_site_file1=$prefix/share/config.site
+  ac_site_file2=$prefix/etc/config.site
+else
+  ac_site_file1=$ac_default_prefix/share/config.site
+  ac_site_file2=$ac_default_prefix/etc/config.site
+fi
+for ac_site_file in "$ac_site_file1" "$ac_site_file2"
+do
+  test "x$ac_site_file" = xNONE && continue
+  if test -r "$ac_site_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
+$as_echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file"
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special
+  # files actually), so we avoid doing that.
+  if test -f "$cache_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
+$as_echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
+    esac
+  fi
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
+$as_echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in $ac_precious_vars; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	# differences in whitespace do not lead to failure.
+	ac_old_val_w=`echo x $ac_old_val`
+	ac_new_val_w=`echo x $ac_new_val`
+	if test "$ac_old_val_w" != "$ac_new_val_w"; then
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
+$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	  ac_cache_corrupted=:
+	else
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
+$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
+	  eval $ac_var=\$ac_old_val
+	fi
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
+$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
+$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
+$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  as_fn_error "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
+fi
+## -------------------- ##
+## Main body of script. ##
+## -------------------- ##
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+
+
+
+
+ac_aux_dir=
+for ac_dir in "$srcdir" "$srcdir/.." "$srcdir/../.."; do
+  for ac_t in install-sh install.sh shtool; do
+    if test -f "$ac_dir/$ac_t"; then
+      ac_aux_dir=$ac_dir
+      ac_install_sh="$ac_aux_dir/$ac_t -c"
+      break 2
+    fi
+  done
+done
+if test -z "$ac_aux_dir"; then
+  as_fn_error "cannot find install-sh, install.sh, or shtool in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"" "$LINENO" 5
+fi
+
+# These three variables are undocumented and unsupported,
+# and are intended to be withdrawn in a future Autoconf release.
+# They can cause serious problems if a builder's source tree is in a directory
+# whose full name contains unusual characters.
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
+ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.
+
+
+# Make sure we can run config.sub.
+$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
+  as_fn_error "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
+$as_echo_n "checking build system type... " >&6; }
+if test "${ac_cv_build+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_build_alias=$build_alias
+test "x$ac_build_alias" = x &&
+  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
+test "x$ac_build_alias" = x &&
+  as_fn_error "cannot guess build type; you must specify one" "$LINENO" 5
+ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
+  as_fn_error "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
+$as_echo "$ac_cv_build" >&6; }
+case $ac_cv_build in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical build" "$LINENO" 5;;
+esac
+build=$ac_cv_build
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_build
+shift
+build_cpu=$1
+build_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+build_os=$*
+IFS=$ac_save_IFS
+case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
+$as_echo_n "checking host system type... " >&6; }
+if test "${ac_cv_host+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$host_alias" = x; then
+  ac_cv_host=$ac_cv_build
+else
+  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $host_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
+$as_echo "$ac_cv_host" >&6; }
+case $ac_cv_host in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical host" "$LINENO" 5;;
+esac
+host=$ac_cv_host
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_host
+shift
+host_cpu=$1
+host_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+host_os=$*
+IFS=$ac_save_IFS
+case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking target system type" >&5
+$as_echo_n "checking target system type... " >&6; }
+if test "${ac_cv_target+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$target_alias" = x; then
+  ac_cv_target=$ac_cv_host
+else
+  ac_cv_target=`$SHELL "$ac_aux_dir/config.sub" $target_alias` ||
+    as_fn_error "$SHELL $ac_aux_dir/config.sub $target_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_target" >&5
+$as_echo "$ac_cv_target" >&6; }
+case $ac_cv_target in
+*-*-*) ;;
+*) as_fn_error "invalid value of canonical target" "$LINENO" 5;;
+esac
+target=$ac_cv_target
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_target
+shift
+target_cpu=$1
+target_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+target_os=$*
+IFS=$ac_save_IFS
+case $target_os in *\ *) target_os=`echo "$target_os" | sed 's/ /-/g'`;; esac
+
+
+# The aliases save the names the user supplied, while $host etc.
+# will get canonicalized.
+test -n "$target_alias" &&
+  test "$program_prefix$program_suffix$program_transform_name" = \
+    NONENONEs,x,x, &&
+  program_prefix=${target_alias}-
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $@%:@ != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "no acceptable C compiler found in \$PATH
+See \`config.log' for more details." "$LINENO" 5; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out conftest.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
+$as_echo_n "checking for C compiler default output file name... " >&6; }
+ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+
+# The possible output files:
+ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"
+
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { { ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link_default") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
+	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
+	break;;
+    * )
+	break;;
+  esac
+done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
+else
+  ac_file=''
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
+$as_echo "$ac_file" >&6; }
+if test -z "$ac_file"; then :
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+{ as_fn_set_status 77
+as_fn_error "C compiler cannot create executables
+See \`config.log' for more details." "$LINENO" 5; }; }
+fi
+ac_exeext=$ac_cv_exeext
+
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
+$as_echo_n "checking whether the C compiler works... " >&6; }
+# If not cross compiling, check that we can run a simple program.
+if test "$cross_compiling" != yes; then
+  if { ac_try='./$ac_file'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." "$LINENO" 5; }
+    fi
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out conftest.out
+ac_clean_files=$ac_clean_files_save
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
+$as_echo_n "checking whether we are cross compiling... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
+$as_echo "$cross_compiling" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
+$as_echo_n "checking for suffix of executables... " >&6; }
+if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest$ac_cv_exeext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
+$as_echo "$ac_cv_exeext" >&6; }
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
+$as_echo_n "checking for suffix of object files... " >&6; }
+if test "${ac_cv_objext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
+$as_echo "$ac_cv_objext" >&6; }
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+  
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing strerror" >&5
+$as_echo_n "checking for library containing strerror... " >&6; }
+if test "${ac_cv_search_strerror+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char strerror ();
+int
+main ()
+{
+return strerror ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' cposix; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_strerror=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if test "${ac_cv_search_strerror+set}" = set; then :
+  break
+fi
+done
+if test "${ac_cv_search_strerror+set}" = set; then :
+  
+else
+  ac_cv_search_strerror=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_strerror" >&5
+$as_echo "$ac_cv_search_strerror" >&6; }
+ac_res=$ac_cv_search_strerror
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+  
+fi
+
+
+# We currently only use the version number for the name of any shared
+# library.  For user convenience, we always use the same version
+# number that BFD is using.
+BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
+
+am__api_version='1.11'
+
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+# Reject install programs that cannot install multiple files.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
+$as_echo_n "checking for a BSD-compatible install... " >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in @%:@((
+  ./ | .// | /[cC]/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    rm -rf conftest.one conftest.two conftest.dir
+	    echo one > conftest.one
+	    echo two > conftest.two
+	    mkdir conftest.dir
+	    if "$as_dir/$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir" &&
+	      test -s conftest.one && test -s conftest.two &&
+	      test -s conftest.dir/conftest.one &&
+	      test -s conftest.dir/conftest.two
+	    then
+	      ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	      break 3
+	    fi
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+
+  done
+IFS=$as_save_IFS
+
+rm -rf conftest.one conftest.two conftest.dir
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
+$as_echo "$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
+$as_echo_n "checking whether build environment is sane... " >&6; }
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Reject unsafe characters in $srcdir or the absolute working directory
+# name.  Accept space and tab only in the latter.
+am_lf='
+'
+case `pwd` in
+  *[\\\"\#\$\&\'\`$am_lf]*)
+    as_fn_error "unsafe absolute working directory name" "$LINENO" 5;;
+esac
+case $srcdir in
+  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
+    as_fn_error "unsafe srcdir value: \`$srcdir'" "$LINENO" 5;;
+esac
+
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
+   if test "$*" = "X"; then
+      # -L didn't work.
+      set X `ls -t "$srcdir/configure" conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$*" != "X $srcdir/configure conftest.file" \
+      && test "$*" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      as_fn_error "ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" "$LINENO" 5
+   fi
+
+   test "$2" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   as_fn_error "newly created file is older than distributed files!
+Check your system clock" "$LINENO" 5
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+test "$program_prefix" != NONE &&
+  program_transform_name="s&^&$program_prefix&;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
+# Double any \ or $.
+# By default was `s,x,x', remove it if useless.
+ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
+program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`
+
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+
+if test x"${MISSING+set}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
+  *)
+    MISSING="\${SHELL} $am_aux_dir/missing" ;;
+  esac
+fi
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`missing' script is too old or missing" >&5
+$as_echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
+fi
+
+if test x"${install_sh}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
+  *)
+    install_sh="\${SHELL} $am_aux_dir/install-sh"
+  esac
+fi
+
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+if test "$cross_compiling" != no; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+fi
+INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p" >&5
+$as_echo_n "checking for a thread-safe mkdir -p... " >&6; }
+if test -z "$MKDIR_P"; then
+  if test "${ac_cv_path_mkdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in mkdir gmkdir; do
+	 for ac_exec_ext in '' $ac_executable_extensions; do
+	   { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; } || continue
+	   case `"$as_dir/$ac_prog$ac_exec_ext" --version 2>&1` in #(
+	     'mkdir (GNU coreutils) '* | \
+	     'mkdir (coreutils) '* | \
+	     'mkdir (fileutils) '4.1*)
+	       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext
+	       break 3;;
+	   esac
+	 done
+       done
+  done
+IFS=$as_save_IFS
+
+fi
+
+  if test "${ac_cv_path_mkdir+set}" = set; then
+    MKDIR_P="$ac_cv_path_mkdir -p"
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for MKDIR_P within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    test -d ./--version && rmdir ./--version
+    MKDIR_P="$ac_install_sh -d"
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
+$as_echo "$MKDIR_P" >&6; }
+
+mkdir_p="$MKDIR_P"
+case $mkdir_p in
+  [\\/$]* | ?:[\\/]*) ;;
+  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
+esac
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
+$as_echo "$AWK" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
+set x ${MAKE-make}
+ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
+if { as_var=ac_cv_prog_make_${ac_make}_set; eval "test \"\${$as_var+set}\" = set"; }; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat >conftest.make <<\_ACEOF
+SHELL = /bin/sh
+all:
+	@echo '@@@%%%=$(MAKE)=@@@%%%'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
+case `${MAKE-make} -f conftest.make 2>/dev/null` in
+  *@@@%%%=?*=@@@%%%*)
+    eval ac_cv_prog_make_${ac_make}_set=yes;;
+  *)
+    eval ac_cv_prog_make_${ac_make}_set=no;;
+esac
+rm -f conftest.make
+fi
+if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  SET_MAKE=
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+
+DEPDIR="${am__leading_dot}deps"
+
+ac_config_commands="$ac_config_commands depfiles"
+
+
+am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo this is the am__doit target
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for style of include used by $am_make" >&5
+$as_echo_n "checking for style of include used by $am_make... " >&6; }
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# Ignore all kinds of additional output from `make'.
+case `$am_make -s -f confmf 2> /dev/null` in #(
+*the\ am__doit\ target*)
+  am__include=include
+  am__quote=
+  _am_result=GNU
+  ;;
+esac
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   case `$am_make -s -f confmf 2> /dev/null` in #(
+   *the\ am__doit\ target*)
+     am__include=.include
+     am__quote="\""
+     _am_result=BSD
+     ;;
+   esac
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $_am_result" >&5
+$as_echo "$_am_result" >&6; }
+rm -f confinc confmf
+
+@%:@ Check whether --enable-dependency-tracking was given.
+if test "${enable_dependency_tracking+set}" = set; then :
+  enableval=$enable_dependency_tracking; 
+fi
+
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+ if test "x$enable_dependency_tracking" != xno; then
+  AMDEP_TRUE=
+  AMDEP_FALSE='#'
+else
+  AMDEP_TRUE='#'
+  AMDEP_FALSE=
+fi
+
+
+if test "`cd $srcdir && pwd`" != "`pwd`"; then
+  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
+  # is not polluted with repeated "-I."
+  am__isrc=' -I$(srcdir)'
+  # test to see if srcdir already configured
+  if test -f $srcdir/config.status; then
+    as_fn_error "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
+  fi
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+
+
+# Define the identity of the package.
+ PACKAGE=opcodes
+ VERSION=${BFD_VERSION}
+
+
+cat >>confdefs.h <<_ACEOF
+@%:@define PACKAGE "$PACKAGE"
+_ACEOF
+
+ 
+cat >>confdefs.h <<_ACEOF
+@%:@define VERSION "$VERSION"
+_ACEOF
+
+# Some tools Automake needs.
+
+ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}
+
+
+AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}
+
+
+AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}
+
+
+AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}
+
+
+MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
+
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+# Always define AMTAR for backward compatibility.
+
+AMTAR=${AMTAR-"${am_missing_run}tar"}
+
+am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'
+
+
+
+
+depcc="$CC"   am_compiler_list=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
+$as_echo_n "checking dependency style of $depcc... " >&6; }
+if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CC_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  am__universal=false
+  case " $depcc " in #(
+     *\ -arch\ *\ -arch\ *) am__universal=true ;;
+     esac
+
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.  Also, some Intel
+    # versions had trouble with output in subdirs
+    am__obj=sub/conftest.${OBJEXT-o}
+    am__minus_obj="-o $am__obj"
+    case $depmode in
+    gcc)
+      # This depmode causes a compiler race in universal mode.
+      test "$am__universal" = false || continue
+      ;;
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    msvisualcpp | msvcmsys)
+      # This compiler won't grok `-c -o', but also, the minuso test has
+      # not run yet.  These depmodes are late enough in the game, and
+      # so weak that their functioning should not be impacted.
+      am__obj=conftest.${OBJEXT-o}
+      am__minus_obj=
+      ;;
+    none) break ;;
+    esac
+    if depmode=$depmode \
+       source=sub/conftest.c object=$am__obj \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_CC_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CC_dependencies_compiler_type=none
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
+$as_echo "$am_cv_CC_dependencies_compiler_type" >&6; }
+CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type
+
+ if 
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
+  am__fastdepCC_TRUE=
+  am__fastdepCC_FALSE='#'
+else
+  am__fastdepCC_TRUE='#'
+  am__fastdepCC_FALSE=
+fi
+
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $@%:@ != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "no acceptable C compiler found in \$PATH
+See \`config.log' for more details." "$LINENO" 5; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    rm -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+  
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+$as_echo_n "checking how to run the C preprocessor... " >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if test "${ac_cv_prog_CPP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@ifdef __STDC__
+@%:@ include <limits.h>
+@%:@else
+@%:@ include <assert.h>
+@%:@endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  break
+fi
+
+    done
+    ac_cv_prog_CPP=$CPP
+  
+fi
+  CPP=$ac_cv_prog_CPP
+else
+  ac_cv_prog_CPP=$CPP
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+$as_echo "$CPP" >&6; }
+ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@ifdef __STDC__
+@%:@ include <limits.h>
+@%:@else
+@%:@ include <assert.h>
+@%:@endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+@%:@include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error "C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." "$LINENO" 5; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
+$as_echo_n "checking for grep that handles long lines and -e... " >&6; }
+if test "${ac_cv_path_GREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$GREP"; then
+  ac_path_GREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in grep ggrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
+# Check for GNU ac_path_GREP and select it if it is found.
+  # Check for GNU $ac_path_GREP
+case `"$ac_path_GREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'GREP' >> "conftest.nl"
+    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_GREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_GREP="$ac_path_GREP"
+      ac_path_GREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_GREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_GREP"; then
+    as_fn_error "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_GREP=$GREP
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
+$as_echo "$ac_cv_path_GREP" >&6; }
+ GREP="$ac_cv_path_GREP"
+ 
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
+$as_echo_n "checking for egrep... " >&6; }
+if test "${ac_cv_path_EGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
+   then ac_cv_path_EGREP="$GREP -E"
+   else
+     if test -z "$EGREP"; then
+  ac_path_EGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in egrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
+# Check for GNU ac_path_EGREP and select it if it is found.
+  # Check for GNU $ac_path_EGREP
+case `"$ac_path_EGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'EGREP' >> "conftest.nl"
+    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_EGREP="$ac_path_EGREP"
+      ac_path_EGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_EGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_EGREP"; then
+    as_fn_error "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_EGREP=$EGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
+$as_echo "$ac_cv_path_EGREP" >&6; }
+ EGREP="$ac_cv_path_EGREP"
+ 
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
+$as_echo_n "checking for ANSI C header files... " >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdc=yes
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then :
+  :
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+  
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
+$as_echo "$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+  
+$as_echo "@%:@define STDC_HEADERS 1" >>confdefs.h
+
+fi
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
+"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+
+
+  ac_fn_c_check_header_mongrel "$LINENO" "minix/config.h" "ac_cv_header_minix_config_h" "$ac_includes_default"
+if test "x$ac_cv_header_minix_config_h" = x""yes; then :
+  MINIX=yes
+else
+  MINIX=
+fi
+
+
+  if test "$MINIX" = yes; then
+    
+$as_echo "@%:@define _POSIX_SOURCE 1" >>confdefs.h
+
+    
+$as_echo "@%:@define _POSIX_1_SOURCE 2" >>confdefs.h
+
+    
+$as_echo "@%:@define _MINIX 1" >>confdefs.h
+
+  fi
+
+  
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__" >&5
+$as_echo_n "checking whether it is safe to define __EXTENSIONS__... " >&6; }
+if test "${ac_cv_safe_to_define___extensions__+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#	  define __EXTENSIONS__ 1
+	  $ac_includes_default
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_safe_to_define___extensions__=yes
+else
+  ac_cv_safe_to_define___extensions__=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__" >&5
+$as_echo "$ac_cv_safe_to_define___extensions__" >&6; }
+  test $ac_cv_safe_to_define___extensions__ = yes &&
+    $as_echo "@%:@define __EXTENSIONS__ 1" >>confdefs.h
+
+  $as_echo "@%:@define _ALL_SOURCE 1" >>confdefs.h
+
+  $as_echo "@%:@define _GNU_SOURCE 1" >>confdefs.h
+
+  $as_echo "@%:@define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h
+
+  $as_echo "@%:@define _TANDEM_SOURCE 1" >>confdefs.h
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
+$as_echo "$ac_ct_RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+
+@%:@ Check whether --enable-shared was given.
+if test "${enable_shared+set}" = set; then :
+  enableval=$enable_shared; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_shared=no
+fi
+
+
+    
+    
+    
+    
+
+
+
+
+case `pwd` in
+  *\ * | *\	*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
+$as_echo "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
+esac
+
+
+
+macro_version='2.2.6'
+macro_revision='1.3012'
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+ltmain="$ac_aux_dir/ltmain.sh"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if test "${ac_cv_path_SED+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+test -z "$SED" && SED=sed
+Xsed="$SED -e 1s/^X//"
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5
+$as_echo_n "checking for fgrep... " >&6; }
+if test "${ac_cv_path_FGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1
+   then ac_cv_path_FGREP="$GREP -F"
+   else
+     if test -z "$FGREP"; then
+  ac_path_FGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in fgrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_FGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_FGREP" && $as_test_x "$ac_path_FGREP"; } || continue
+# Check for GNU ac_path_FGREP and select it if it is found.
+  # Check for GNU $ac_path_FGREP
+case `"$ac_path_FGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_FGREP="$ac_path_FGREP" ac_path_FGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'FGREP' >> "conftest.nl"
+    "$ac_path_FGREP" FGREP < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_FGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_FGREP="$ac_path_FGREP"
+      ac_path_FGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_FGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_FGREP"; then
+    as_fn_error "no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_FGREP=$FGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP" >&5
+$as_echo "$ac_cv_path_FGREP" >&6; }
+ FGREP="$ac_cv_path_FGREP"
+ 
+
+test -z "$GREP" && GREP=grep
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+
+@%:@ Check whether --with-gnu-ld was given.
+if test "${with_gnu_ld+set}" = set; then :
+  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+else
+  with_gnu_ld=no
+fi
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
+$as_echo_n "checking for ld used by $CC... " >&6; }
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [\\/]* | ?:[\\/]*)
+      re_direlt='/[^/][^/]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
+      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
+$as_echo_n "checking for GNU ld... " >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for non-GNU ld" >&5
+$as_echo_n "checking for non-GNU ld... " >&6; }
+fi
+if test "${lt_cv_path_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi
+fi
+
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+test -z "$LD" && as_fn_error "no acceptable ld found in \$PATH" "$LINENO" 5
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
+$as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
+if test "${lt_cv_prog_gnu_ld+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld" >&5
+$as_echo "$lt_cv_prog_gnu_ld" >&6; }
+with_gnu_ld=$lt_cv_prog_gnu_ld
+
+
+
+
+    
+    
+    
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)" >&5
+$as_echo_n "checking for BSD- or MS-compatible name lister (nm)... " >&6; }
+if test "${lt_cv_path_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  : ${lt_cv_path_NM=no}
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM" >&5
+$as_echo "$lt_cv_path_NM" >&6; }
+if test "$lt_cv_path_NM" != "no"; then
+  NM="$lt_cv_path_NM"
+else
+  # Didn't find any BSD compatible name lister, look for dumpbin.
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DUMPBIN"; then
+  ac_cv_prog_DUMPBIN="$DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DUMPBIN="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DUMPBIN=$ac_cv_prog_DUMPBIN
+if test -n "$DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DUMPBIN" >&5
+$as_echo "$DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$DUMPBIN" && break
+  done
+fi
+if test -z "$DUMPBIN"; then
+  ac_ct_DUMPBIN=$DUMPBIN
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DUMPBIN"; then
+  ac_cv_prog_ac_ct_DUMPBIN="$ac_ct_DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DUMPBIN="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN
+if test -n "$ac_ct_DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN" >&5
+$as_echo "$ac_ct_DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_DUMPBIN" && break
+done
+
+  if test "x$ac_ct_DUMPBIN" = x; then
+    DUMPBIN=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DUMPBIN=$ac_ct_DUMPBIN
+  fi
+fi
+
+  
+  if test "$DUMPBIN" != ":"; then
+    NM="$DUMPBIN"
+  fi
+fi
+test -z "$NM" && NM=nm
+
+
+    
+    
+    
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface" >&5
+$as_echo_n "checking the name lister ($NM) interface... " >&6; }
+if test "${lt_cv_nm_interface+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_nm_interface="BSD nm"
+  echo "int some_variable = 0;" > conftest.$ac_ext
+  (eval echo "\"\$as_me:__oline__: $ac_compile\"" >&5)
+  (eval "$ac_compile" 2>conftest.err)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:__oline__: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
+  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:__oline__: output\"" >&5)
+  cat conftest.out >&5
+  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
+    lt_cv_nm_interface="MS dumpbin"
+  fi
+  rm -f conftest*
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface" >&5
+$as_echo "$lt_cv_nm_interface" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
+$as_echo_n "checking whether ln -s works... " >&6; }
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
+$as_echo "no, using $LN_S" >&6; }
+fi
+
+# find the maximum length of command line arguments
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments" >&5
+$as_echo_n "checking the maximum length of command line arguments... " >&6; }
+if test "${lt_cv_sys_max_cmd_len+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+    i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw* | cegcc*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[	 ]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
+    if test -n "$lt_cv_sys_max_cmd_len"; then
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    else
+      # Make teststring a little bigger before we do anything with it.
+      # a 1K string should be a reasonable start.
+      for i in 1 2 3 4 5 6 7 8 ; do
+        teststring=$teststring$teststring
+      done
+      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+      # If test is not a shell built-in, we'll probably end up computing a
+      # maximum length that is only half of the actual maximum length, but
+      # we can't tell.
+      while { test "X"`$SHELL $0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
+	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
+	      test $i != 17 # 1/2 MB should be enough
+      do
+        i=`expr $i + 1`
+        teststring=$teststring$teststring
+      done
+      # Only check the string length outside the loop.
+      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
+      teststring=
+      # Add a significant safety factor because C++ compilers can tack on
+      # massive amounts of additional arguments before passing them to the
+      # linker.  It appears as though 1/2 is a usable value.
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    fi
+    ;;
+  esac
+
+fi
+
+if test -n $lt_cv_sys_max_cmd_len ; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len" >&5
+$as_echo "$lt_cv_sys_max_cmd_len" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: none" >&5
+$as_echo "none" >&6; }
+fi
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+    
+    
+    
+
+
+: ${CP="cp -f"}
+: ${MV="mv -f"}
+: ${RM="rm -f"}
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands some XSI constructs" >&5
+$as_echo_n "checking whether the shell understands some XSI constructs... " >&6; }
+# Try some XSI features
+xsi_shell=no
+( _lt_dummy="a/b/c"
+  test "${_lt_dummy##*/},${_lt_dummy%/*},"${_lt_dummy%"$_lt_dummy"}, \
+      = c,a/b,, \
+    && eval 'test $(( 1 + 1 )) -eq 2 \
+    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
+  && xsi_shell=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xsi_shell" >&5
+$as_echo "$xsi_shell" >&6; }
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands \"+=\"" >&5
+$as_echo_n "checking whether the shell understands \"+=\"... " >&6; }
+lt_shell_append=no
+( foo=bar; set foo baz; eval "$1+=\$2" && test "$foo" = barbaz ) \
+    >/dev/null 2>&1 \
+  && lt_shell_append=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_shell_append" >&5
+$as_echo "$lt_shell_append" >&6; }
+
+
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  lt_unset=unset
+else
+  lt_unset=false
+fi
+
+    
+    
+    
+
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  lt_SP2NL='tr \040 \012'
+  lt_NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  lt_SP2NL='tr \100 \n'
+  lt_NL2SP='tr \r\n \100\100'
+  ;;
+esac
+
+    
+    
+    
+
+    
+    
+    
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files" >&5
+$as_echo_n "checking for $LD option to reload object files... " >&6; }
+if test "${lt_cv_ld_reload_flag+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_reload_flag='-r'
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag" >&5
+$as_echo "$lt_cv_ld_reload_flag" >&6; }
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+
+    
+    
+    
+
+    
+    
+    
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
+set dummy ${ac_tool_prefix}objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OBJDUMP"; then
+  ac_ct_OBJDUMP=$OBJDUMP
+  # Extract the first word of "objdump", so it can be a program name with args.
+set dummy objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OBJDUMP"; then
+  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OBJDUMP="objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
+if test -n "$ac_ct_OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
+$as_echo "$ac_ct_OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OBJDUMP" = x; then
+    OBJDUMP="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OBJDUMP=$ac_ct_OBJDUMP
+  fi
+else
+  OBJDUMP="$ac_cv_prog_OBJDUMP"
+fi
+
+test -z "$OBJDUMP" && OBJDUMP=objdump
+
+    
+    
+    
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries" >&5
+$as_echo_n "checking how to recognize dependent libraries... " >&6; }
+if test "${lt_cv_deplibs_check_method+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix[4-9]*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[45]*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump',
+  # unless we find 'file', for example because we are cross-compiling.
+  if ( file / ) >/dev/null 2>&1; then
+    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+    lt_cv_file_magic_cmd='func_win32_libid'
+  else
+    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+    lt_cv_file_magic_cmd='$OBJDUMP -f'
+  fi
+  ;;
+
+cegcc)
+  # use the weaker test based on 'objdump'. See mingw*.
+  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]'
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix[3-9]*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+*nto* | *qnx*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+rdos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+tpf*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method" >&5
+$as_echo "$lt_cv_deplibs_check_method" >&6; }
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+test -z "$STRIP" && STRIP=:
+
+    
+    
+    
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
+$as_echo "$ac_ct_RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+test -z "$RANLIB" && RANLIB=:
+
+    
+    
+    
+
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object" >&5
+$as_echo_n "checking command to parse $NM output from $compiler object... " >&6; }
+if test "${lt_cv_sys_global_symbol_pipe+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[BCDEGRST]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([_A-Za-z][_A-Za-z0-9]*\)'
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[BCDT]'
+  ;;
+cygwin* | mingw* | pw32* | cegcc*)
+  symcode='[ABCDGISTW]'
+  ;;
+hpux*)
+  if test "$host_cpu" = ia64; then
+    symcode='[ABCDEGRST]'
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[BCDEGRST]'
+  ;;
+osf*)
+  symcode='[BCDEGQRST]'
+  ;;
+solaris*)
+  symcode='[BDRT]'
+  ;;
+sco3.2v5*)
+  symcode='[DT]'
+  ;;
+sysv4.2uw2*)
+  symcode='[DT]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[ABDT]'
+  ;;
+sysv4)
+  symcode='[DFNSTU]'
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[ABCDGIRSTW]' ;;
+esac
+
+# Transform an extracted symbol line into a proper C declaration.
+# Some systems (esp. on ia64) link data and code symbols differently,
+# so use this general approach.
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \(lib[^ ]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`$ECHO 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# Try without a prefix underscore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+    # Fake it for dumpbin and say T for any non-static function
+    # and D for any global variable.
+    # Also find C++ and __fastcall symbols from MSVC++,
+    # which start with @ or ?.
+    lt_cv_sys_global_symbol_pipe="$AWK '"\
+"     {last_section=section; section=\$ 3};"\
+"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     \$ 0!~/External *\|/{next};"\
+"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
+"     {if(hide[section]) next};"\
+"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
+"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
+"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     ' prfx=^$ac_symprfx"
+  else
+    lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+  fi
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<_LT_EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(void);
+void nm_test_func(void){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+_LT_EOF
+
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist\""; } >&5
+  (eval $NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if $GREP ' nm_test_var$' "$nlist" >/dev/null; then
+	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<_LT_EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+_LT_EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | $GREP -v main >> conftest.$ac_ext'
+
+	  cat <<_LT_EOF >> conftest.$ac_ext
+
+/* The mapping between symbol names and symbols.  */
+const struct {
+  const char *name;
+  void       *address;
+}
+lt__PROGRAM__LTX_preloaded_symbols[] =
+{
+  { "@PROGRAM@", (void *) 0 },
+_LT_EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  cat <<\_LT_EOF >> conftest.$ac_ext
+  {0, (void *) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt__PROGRAM__LTX_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+_LT_EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
+	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&5
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&5
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&5
+    fi
+  else
+    echo "$progname: failed program was:" >&5
+    cat conftest.$ac_ext >&5
+  fi
+  rm -rf conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+
+fi
+
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: failed" >&5
+$as_echo "failed" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: ok" >&5
+$as_echo "ok" >&6; }
+fi
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+@%:@ Check whether --enable-libtool-lock was given.
+if test "${enable_libtool_lock+set}" = set; then :
+  enableval=$enable_libtool_lock; 
+fi
+
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.$ac_objext` in
+      *ELF-32*)
+	HPUX_IA64_MODE="32"
+	;;
+      *ELF-64*)
+	HPUX_IA64_MODE="64"
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '#line __oline__ "configure"' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    if test "$lt_cv_prog_gnu_ld" = yes; then
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -melf32bsmip"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -melf32bmipn32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -melf64bmip"
+	;;
+      esac
+    else
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -32"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -n32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -64"
+	  ;;
+      esac
+    fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
+s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+      *32-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_i386_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_i386"
+	    ;;
+	  ppc64-*linux*|powerpc64-*linux*)
+	    LD="${LD-ld} -m elf32ppclinux"
+	    ;;
+	  s390x-*linux*)
+	    LD="${LD-ld} -m elf_s390"
+	    ;;
+	  sparc64-*linux*)
+	    LD="${LD-ld} -m elf32_sparc"
+	    ;;
+	esac
+	;;
+      *64-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_x86_64_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_x86_64"
+	    ;;
+	  ppc*-*linux*|powerpc*-*linux*)
+	    LD="${LD-ld} -m elf64ppc"
+	    ;;
+	  s390*-*linux*|s390*-*tpf*)
+	    LD="${LD-ld} -m elf64_s390"
+	    ;;
+	  sparc*-*linux*)
+	    LD="${LD-ld} -m elf64_sparc"
+	    ;;
+	esac
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf" >&5
+$as_echo_n "checking whether the C compiler needs -belf... " >&6; }
+if test "${lt_cv_cc_needs_belf+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_cc_needs_belf=yes
+else
+  lt_cv_cc_needs_belf=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf" >&5
+$as_echo "$lt_cv_cc_needs_belf" >&6; }
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)
+	if ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then
+	  LD="${LD-ld} -64"
+	fi
+	;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+need_locks="$enable_libtool_lock"
+
+
+  case $host_os in
+    rhapsody* | darwin*)
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}dsymutil", so it can be a program name with args.
+set dummy ${ac_tool_prefix}dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DSYMUTIL"; then
+  ac_cv_prog_DSYMUTIL="$DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DSYMUTIL="${ac_tool_prefix}dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DSYMUTIL=$ac_cv_prog_DSYMUTIL
+if test -n "$DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL" >&5
+$as_echo "$DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_DSYMUTIL"; then
+  ac_ct_DSYMUTIL=$DSYMUTIL
+  # Extract the first word of "dsymutil", so it can be a program name with args.
+set dummy dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DSYMUTIL"; then
+  ac_cv_prog_ac_ct_DSYMUTIL="$ac_ct_DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DSYMUTIL="dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL
+if test -n "$ac_ct_DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL" >&5
+$as_echo "$ac_ct_DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_DSYMUTIL" = x; then
+    DSYMUTIL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DSYMUTIL=$ac_ct_DSYMUTIL
+  fi
+else
+  DSYMUTIL="$ac_cv_prog_DSYMUTIL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}nmedit", so it can be a program name with args.
+set dummy ${ac_tool_prefix}nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NMEDIT"; then
+  ac_cv_prog_NMEDIT="$NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NMEDIT="${ac_tool_prefix}nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NMEDIT=$ac_cv_prog_NMEDIT
+if test -n "$NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NMEDIT" >&5
+$as_echo "$NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_NMEDIT"; then
+  ac_ct_NMEDIT=$NMEDIT
+  # Extract the first word of "nmedit", so it can be a program name with args.
+set dummy nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_NMEDIT"; then
+  ac_cv_prog_ac_ct_NMEDIT="$ac_ct_NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_NMEDIT="nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT
+if test -n "$ac_ct_NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT" >&5
+$as_echo "$ac_ct_NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_NMEDIT" = x; then
+    NMEDIT=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    NMEDIT=$ac_ct_NMEDIT
+  fi
+else
+  NMEDIT="$ac_cv_prog_NMEDIT"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}lipo", so it can be a program name with args.
+set dummy ${ac_tool_prefix}lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ac_tool_prefix}lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_LIPO"; then
+  ac_ct_LIPO=$LIPO
+  # Extract the first word of "lipo", so it can be a program name with args.
+set dummy lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_LIPO"; then
+  ac_cv_prog_ac_ct_LIPO="$ac_ct_LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_LIPO="lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO
+if test -n "$ac_ct_LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO" >&5
+$as_echo "$ac_ct_LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_LIPO" = x; then
+    LIPO=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    LIPO=$ac_ct_LIPO
+  fi
+else
+  LIPO="$ac_cv_prog_LIPO"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL"; then
+  ac_cv_prog_OTOOL="$OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL="${ac_tool_prefix}otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL=$ac_cv_prog_OTOOL
+if test -n "$OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL" >&5
+$as_echo "$OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL"; then
+  ac_ct_OTOOL=$OTOOL
+  # Extract the first word of "otool", so it can be a program name with args.
+set dummy otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL"; then
+  ac_cv_prog_ac_ct_OTOOL="$ac_ct_OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL="otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL
+if test -n "$ac_ct_OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL" >&5
+$as_echo "$ac_ct_OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL" = x; then
+    OTOOL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL=$ac_ct_OTOOL
+  fi
+else
+  OTOOL="$ac_cv_prog_OTOOL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool64", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL64"; then
+  ac_cv_prog_OTOOL64="$OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL64="${ac_tool_prefix}otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL64=$ac_cv_prog_OTOOL64
+if test -n "$OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL64" >&5
+$as_echo "$OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL64"; then
+  ac_ct_OTOOL64=$OTOOL64
+  # Extract the first word of "otool64", so it can be a program name with args.
+set dummy otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL64"; then
+  ac_cv_prog_ac_ct_OTOOL64="$ac_ct_OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL64="otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64
+if test -n "$ac_ct_OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64" >&5
+$as_echo "$ac_ct_OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL64" = x; then
+    OTOOL64=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL64=$ac_ct_OTOOL64
+  fi
+else
+  OTOOL64="$ac_cv_prog_OTOOL64"
+fi
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+    
+    
+    
+    
+
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
+$as_echo_n "checking for -single_module linker flag... " >&6; }
+if test "${lt_cv_apple_cc_single_mod+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_apple_cc_single_mod=no
+      if test -z "${LT_MULTI_MODULE}"; then
+	# By default we will add the -single_module flag. You can override
+	# by either setting the environment variable LT_MULTI_MODULE
+	# non-empty at configure time, or by adding -multi_module to the
+	# link flags.
+	rm -rf libconftest.dylib*
+	echo "int foo(void){return 1;}" > conftest.c
+	echo "$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+-dynamiclib -Wl,-single_module conftest.c" >&5
+	$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+	  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err
+        _lt_result=$?
+	if test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then
+	  lt_cv_apple_cc_single_mod=yes
+	else
+	  cat conftest.err >&5
+	fi
+	rm -rf libconftest.dylib*
+	rm -f conftest.*
+      fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod" >&5
+$as_echo "$lt_cv_apple_cc_single_mod" >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
+$as_echo_n "checking for -exported_symbols_list linker flag... " >&6; }
+if test "${lt_cv_ld_exported_symbols_list+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_exported_symbols_list=no
+      save_LDFLAGS=$LDFLAGS
+      echo "_main" > conftest.sym
+      LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_ld_exported_symbols_list=yes
+else
+  lt_cv_ld_exported_symbols_list=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+	LDFLAGS="$save_LDFLAGS"
+    
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list" >&5
+$as_echo "$lt_cv_ld_exported_symbols_list" >&6; }
+    case $host_os in
+    rhapsody* | darwin1.[012])
+      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+    darwin1.*)
+      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+    darwin*) # darwin 5.x on
+      # if running on 10.5 or later, the deployment target defaults
+      # to the OS version, if on x86, and 10.4, the deployment
+      # target defaults to 10.4. Don't you love it?
+      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
+	10.0,*86*-darwin8*|10.0,*-darwin[91]*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	10.[012]*)
+	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	10.*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+      esac
+    ;;
+  esac
+    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+      _lt_dar_single_mod='$single_module'
+    fi
+    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
+      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    else
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    fi
+    if test "$DSYMUTIL" != ":"; then
+      _lt_dsymutil='~$DSYMUTIL $lib || :'
+    else
+      _lt_dsymutil=
+    fi
+    ;;
+  esac
+
+for ac_header in dlfcn.h
+do :
+  ac_fn_c_check_header_compile "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default
+"
+if test "x$ac_cv_header_dlfcn_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DLFCN_H 1
+_ACEOF
+ 
+fi
+
+done
+
+
+
+# Set options
+
+
+
+        enable_dlopen=no
+  
+
+  enable_win32_dll=no
+  
+
+            
+  @%:@ Check whether --enable-static was given.
+if test "${enable_static+set}" = set; then :
+  enableval=$enable_static; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_static=yes
+fi
+
+
+    
+    
+    
+    
+
+
+
+  
+@%:@ Check whether --with-pic was given.
+if test "${with_pic+set}" = set; then :
+  withval=$with_pic; pic_mode="$withval"
+else
+  pic_mode=default
+fi
+
+
+test -z "$pic_mode" && pic_mode=default
+
+
+    
+    
+    
+
+
+  @%:@ Check whether --enable-fast-install was given.
+if test "${enable_fast_install+set}" = set; then :
+  enableval=$enable_fast_install; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_fast_install=yes
+fi
+
+
+
+    
+    
+    
+
+
+  
+
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ltmain"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+test -z "$LN_S" && LN_S="ln -s"
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+
+if test -n "${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for objdir" >&5
+$as_echo_n "checking for objdir... " >&6; }
+if test "${lt_cv_objdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir" >&5
+$as_echo "$lt_cv_objdir" >&6; }
+objdir=$lt_cv_objdir
+
+    
+    
+    
+
+cat >>confdefs.h <<_ACEOF
+@%:@define LT_OBJDIR "$lt_cv_objdir/"
+_ACEOF
+
+
+
+
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\(["`\\]\)/\\\1/g'
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to delay expansion of an escaped single quote.
+delay_single_quote_subst='s/'\''/'\'\\\\\\\'\''/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Global variables:
+ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$LD" && LD=ld
+test -z "$ac_objext" && ac_objext=o
+
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$ECHO "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# Only perform the check for file, if the check method requires it
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file" >&5
+$as_echo_n "checking for ${ac_tool_prefix}file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/${ac_tool_prefix}file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/${ac_tool_prefix}file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+    
+    
+    
+
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for file" >&5
+$as_echo_n "checking for file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  else
+    MAGIC_CMD=:
+  fi
+fi
+
+  fi
+  ;;
+esac
+
+# Use C for the default configuration in the libtool script
+
+lt_save_CC="$CC"
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+objext=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}'
+
+
+
+
+
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+# Save the default compiler, since it gets overwritten when the other
+# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.
+compiler_DEFAULT=$CC
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$RM conftest*
+
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$RM -r conftest*
+
+
+## CAVEAT EMPTOR:
+## There is no encapsulation within the following macros, do not change
+## the running order or otherwise move them around unless you know exactly
+## what you are doing...
+if test -n "$compiler"; then
+  
+lt_prog_compiler_no_builtin_flag=
+
+if test "$GCC" = yes; then
+  lt_prog_compiler_no_builtin_flag=' -fno-builtin'
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
+$as_echo_n "checking if $compiler supports -fno-rtti -fno-exceptions... " >&6; }
+if test "${lt_cv_prog_compiler_rtti_exceptions+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_rtti_exceptions=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_rtti_exceptions=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
+$as_echo "$lt_cv_prog_compiler_rtti_exceptions" >&6; }
+
+if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+    lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
+else
+    :
+fi
+
+fi
+
+    
+    
+    
+
+
+  lt_prog_compiler_wl=
+lt_prog_compiler_pic=
+lt_prog_compiler_static=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC" >&5
+$as_echo_n "checking for $compiler option to produce PIC... " >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl='-Wl,'
+    lt_prog_compiler_static='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            lt_prog_compiler_pic='-fPIC'
+        ;;
+      m68k)
+            # FIXME: we need at least 68020 code to build shared libraries, but
+            # adding the `-m68020' flag to GCC prevents building anything better,
+            # like `-m68040'.
+            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
+        ;;
+      esac
+      ;;
+
+    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      # Although the cygwin gcc ignores -fPIC, still need this for old-style
+      # (--disable-auto-import) libraries
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic='-fno-common'
+      ;;
+
+    hpux*)
+      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
+      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
+      # sets the default TLS model and affects inlining.
+      case $host_cpu in
+      hppa*64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='-fPIC'
+	;;
+      esac
+      ;;
+
+    interix[3-9]*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared=no
+      enable_shared=no
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic=-Kconform_pic
+      fi
+      ;;
+
+    *)
+      lt_prog_compiler_pic='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      else
+	lt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
+      case $cc_basename in
+      # old Intel for x86_64 which still supported -KPIC.
+      ecc*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-KPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # icc used to be incompatible with GCC.
+      # ICC 10 doesn't accept -KPIC any more.
+      icc* | ifort*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # Lahey Fortran 8.1.
+      lf95*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='--shared'
+	lt_prog_compiler_static='--static'
+	;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fpic'
+	lt_prog_compiler_static='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static='-non_shared'
+        ;;
+      xl*)
+	# IBM XL C 8.0/Fortran 10.1 on PPC
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-qpic'
+	lt_prog_compiler_static='-qstaticlink'
+	;;
+      *)
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)
+	  # Sun C 5.9
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl='-Wl,'
+	  ;;
+	*Sun\ F*)
+	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl=''
+	  ;;
+	esac
+	;;
+      esac
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    rdos*)
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl='-Qoption ld '
+      lt_prog_compiler_pic='-PIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic='-Kconform_pic'
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_can_build_shared=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic='-pic'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared=no
+      ;;
+    esac
+  fi
+
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic=
+    ;;
+  *)
+    lt_prog_compiler_pic="$lt_prog_compiler_pic@&t@ -DPIC"
+    ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_prog_compiler_pic" >&5
+$as_echo "$lt_prog_compiler_pic" >&6; }
+
+    
+    
+    
+
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works" >&5
+$as_echo_n "checking if $compiler PIC flag $lt_prog_compiler_pic works... " >&6; }
+if test "${lt_cv_prog_compiler_pic_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_pic_works=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic@&t@ -DPIC"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_pic_works=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works" >&5
+$as_echo "$lt_cv_prog_compiler_pic_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_pic_works" = xyes; then
+    case $lt_prog_compiler_pic in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
+     esac
+else
+    lt_prog_compiler_pic=
+     lt_prog_compiler_can_build_shared=no
+fi
+
+fi
+
+    
+    
+    
+
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\"$lt_prog_compiler_static\"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+$as_echo_n "checking if $compiler static flag $lt_tmp_static_flag works... " >&6; }
+if test "${lt_cv_prog_compiler_static_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_static_works=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   echo "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_cv_prog_compiler_static_works=yes
+       fi
+     else
+       lt_cv_prog_compiler_static_works=yes
+     fi
+   fi
+   $RM -r conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works" >&5
+$as_echo "$lt_cv_prog_compiler_static_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_static_works" = xyes; then
+    :
+else
+    lt_prog_compiler_static=
+fi
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:__oline__: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
+$as_echo_n "checking if we can lock with hard links... " >&6; }
+  hard_links=yes
+  $RM conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
+$as_echo "$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+$as_echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
+
+  runpath_var=
+  allow_undefined_flag=
+  always_export_symbols=no
+  archive_cmds=
+  archive_expsym_cmds=
+  compiler_needs_object=no
+  enable_shared_with_static_runtimes=no
+  export_dynamic_flag_spec=
+  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  hardcode_automatic=no
+  hardcode_direct=no
+  hardcode_direct_absolute=no
+  hardcode_libdir_flag_spec=
+  hardcode_libdir_flag_spec_ld=
+  hardcode_libdir_separator=
+  hardcode_minus_L=no
+  hardcode_shlibpath_var=unsupported
+  inherit_rpath=no
+  link_all_deplibs=unknown
+  module_cmds=
+  module_expsym_cmds=
+  old_archive_from_new_cmds=
+  old_archive_from_expsyms_cmds=
+  thread_safe_flag_spec=
+  whole_archive_flag_spec=
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  # Exclude shared library initialization/finalization symbols.
+  extract_expsyms_cmds=
+
+  case $host_os in
+  cygwin* | mingw* | pw32* | cegcc*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  esac
+
+  ld_shlibs=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+    export_dynamic_flag_spec='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
+      whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      whole_archive_flag_spec=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>&1` in
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix[3-9]*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+_LT_EOF
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec='-L$libdir'
+      allow_undefined_flag=unsupported
+      always_export_symbols=no
+      enable_shared_with_static_runtimes=yes
+      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS][ ]/s/.*[ ]\([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW][ ]/s/.*[ ]//'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
+        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    interix[3-9]*)
+      hardcode_direct=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
+      tmp_diet=no
+      if test "$host_os" = linux-dietlibc; then
+	case $cc_basename in
+	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
+	esac
+      fi
+      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
+	 && test "$tmp_diet" = no
+      then
+	tmp_addflag=
+	tmp_sharedflag='-shared'
+	case $cc_basename,$host_cpu in
+        pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	lf95*)				# Lahey Fortran 8.1
+	  whole_archive_flag_spec=
+	  tmp_sharedflag='--shared' ;;
+	xl[cC]*)			# IBM XL C 8.0 on PPC (deal with xlf below)
+	  tmp_sharedflag='-qmkshrobj'
+	  tmp_addflag= ;;
+	esac
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)			# Sun C 5.9
+	  whole_archive_flag_spec='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  compiler_needs_object=yes
+	  tmp_sharedflag='-G' ;;
+	*Sun\ F*)			# Sun Fortran 8.3
+	  tmp_sharedflag='-G' ;;
+	esac
+	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+        if test "x$supports_anon_versioning" = xyes; then
+          archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	    echo "local: *; };" >> $output_objdir/$libname.ver~
+	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+        fi
+
+	case $cc_basename in
+	xlf*)
+	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
+	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
+	  hardcode_libdir_flag_spec=
+	  hardcode_libdir_flag_spec_ld='-rpath $libdir'
+	  archive_cmds='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'
+	  if test "x$supports_anon_versioning" = xyes; then
+	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	      echo "local: *; };" >> $output_objdir/$libname.ver~
+	      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+	  fi
+	  ;;
+	esac
+      else
+        ld_shlibs=no
+      fi
+      ;;
+
+    netbsd*)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | $GREP 'BFD 2\.8' > /dev/null; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  # For security reasons, it is highly recommended that you always
+	  # use absolute paths for naming shared libraries, and exclude the
+	  # DT_RUNPATH tag from executables and libraries.  But doing so
+	  # requires that you compile everything twice, which is a pain.
+	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  else
+	    ld_shlibs=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec=
+      export_dynamic_flag_spec=
+      whole_archive_flag_spec=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag=unsupported
+      always_export_symbols=yes
+      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct=unsupported
+      fi
+      ;;
+
+    aix[4-9]*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
+	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)
+	  for ld_flag in $LDFLAGS; do
+	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	    aix_use_runtimelinking=yes
+	    break
+	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds=''
+      hardcode_direct=yes
+      hardcode_direct_absolute=yes
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      file_list_spec='${wl}-f,'
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" &&
+	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
+	  then
+	  # We have reworked collect2
+	  :
+	  else
+	  # We have old collect2
+	  hardcode_direct=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  hardcode_minus_L=yes
+	  hardcode_libdir_flag_spec='-L$libdir'
+	  hardcode_libdir_separator=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      export_dynamic_flag_spec='${wl}-bexpall'
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag='-berok'
+        # Determine the default libpath from the value encoded in an
+        # empty executable.
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+        hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then $ECHO "X${wl}${allow_undefined_flag}" | $Xsed; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+      else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag="-z nodefs"
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an
+	 # empty executable.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag=' ${wl}-bernotok'
+	  allow_undefined_flag=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec='$convenience'
+	  archive_cmds_need_lc=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec=' '
+      allow_undefined_flag=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds='$CC -o $lib $libobjs $compiler_flags `$ECHO "X$deplibs" | $Xsed -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_from_new_cmds='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes=yes
+      ;;
+
+    darwin* | rhapsody*)
+      
+  
+  archive_cmds_need_lc=no
+  hardcode_direct=no
+  hardcode_automatic=yes
+  hardcode_shlibpath_var=unsupported
+  whole_archive_flag_spec=''
+  link_all_deplibs=yes
+  allow_undefined_flag="$_lt_dar_allow_undefined"
+  case $cc_basename in
+     ifort*) _lt_dar_can_shared=yes ;;
+     *) _lt_dar_can_shared=$GCC ;;
+  esac
+  if test "$_lt_dar_can_shared" = "yes"; then
+    output_verbose_link_cmd=echo
+    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
+    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
+    archive_expsym_cmds="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
+    module_expsym_cmds="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+    
+  else
+  ld_shlibs=no
+  fi
+
+      ;;
+
+    dgux*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_direct=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L=yes
+      export_dynamic_flag_spec='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_flag_spec_ld='+b $libdir'
+	hardcode_libdir_separator=:
+	hardcode_direct=yes
+	hardcode_direct_absolute=yes
+	export_dynamic_flag_spec='${wl}-E'
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_direct=no
+	  hardcode_shlibpath_var=no
+	  ;;
+	*)
+	  hardcode_direct=yes
+	  hardcode_direct_absolute=yes
+	  export_dynamic_flag_spec='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	# Try to use the -exported_symbol ld option, if it does not
+	# work, assume that -exports_file does not work either and
+	# implicitly export all symbols.
+        save_LDFLAGS="$LDFLAGS"
+        LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+int foo(void) {}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+        
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+        LDFLAGS="$save_LDFLAGS"
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      inherit_rpath=yes
+      link_all_deplibs=yes
+      ;;
+
+    netbsd*)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    newsos6)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_shlibpath_var=no
+      ;;
+
+    *nto* | *qnx*)
+      ;;
+
+    openbsd*)
+      if test -f /usr/libexec/ld.so; then
+	hardcode_direct=yes
+	hardcode_shlibpath_var=no
+	hardcode_direct_absolute=yes
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	  hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	  export_dynamic_flag_spec='${wl}-E'
+	else
+	  case $host_os in
+	   openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	     hardcode_libdir_flag_spec='-R$libdir'
+	     ;;
+	   *)
+	     archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	     hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	     ;;
+	  esac
+	fi
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      allow_undefined_flag=unsupported
+      archive_cmds='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$ECHO DATA >> $output_objdir/$libname.def~$ECHO " SINGLE NONSHARED" >> $output_objdir/$libname.def~$ECHO EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_from_new_cmds='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
+	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec='-rpath $libdir'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_separator=:
+      ;;
+
+    solaris*)
+      no_undefined_flag=' -z defs'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+      else
+	case `$CC -V 2>&1` in
+	*"Compilers 5.0"*)
+	  wlarc=''
+	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+	  ;;
+	*)
+	  wlarc='${wl}'
+	  archive_cmds='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+	  ;;
+	esac
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_shlibpath_var=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+	# The compiler driver will combine and reorder linker options,
+	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but is careful enough not to reorder.
+	# Supported since Solaris 2.6 (maybe 2.5.1?)
+	if test "$GCC" = yes; then
+	  whole_archive_flag_spec='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	else
+	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'
+	fi
+	;;
+      esac
+      link_all_deplibs=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds='$CC -r -o $output$reload_objs'
+	  hardcode_direct=no
+        ;;
+	motorola)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var=no
+      export_dynamic_flag_spec='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
+      no_undefined_flag='${wl}-z,text'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag='${wl}-z,text'
+      allow_undefined_flag='${wl}-z,nodefs'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-R,$libdir'
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      export_dynamic_flag_spec='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      ld_shlibs=no
+      ;;
+    esac
+
+    if test x$host_vendor = xsni; then
+      case $host in
+      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
+	export_dynamic_flag_spec='${wl}-Blargedynsym'
+	;;
+      esac
+    fi
+  fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ld_shlibs" >&5
+$as_echo "$ld_shlibs" >&6; }
+test "$ld_shlibs" = no && can_build_shared=no
+
+with_gnu_ld=$with_gnu_ld
+
+
+    
+    
+    
+
+    
+    
+    
+
+    
+    
+    
+
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
+$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
+if test "${lt_cv_archive_cmds_need_lc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  $RM conftest*
+	echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+	if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } 2>conftest.err; then
+	  soname=conftest
+	  lib=conftest
+	  libobjs=conftest.$ac_objext
+	  deplibs=
+	  wl=$lt_prog_compiler_wl
+	  pic_flag=$lt_prog_compiler_pic
+	  compiler_flags=-v
+	  linker_flags=-v
+	  verstring=
+	  output_objdir=.
+	  libname=conftest
+	  lt_save_allow_undefined_flag=$allow_undefined_flag
+	  allow_undefined_flag=
+	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1\""; } >&5
+  (eval $archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+	  then
+	    lt_cv_archive_cmds_need_lc=no
+	  else
+	    lt_cv_archive_cmds_need_lc=yes
+	  fi
+	  allow_undefined_flag=$lt_save_allow_undefined_flag
+	else
+	  cat conftest.err 1>&5
+	fi
+	$RM conftest*
+	
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_archive_cmds_need_lc" >&5
+$as_echo "$lt_cv_archive_cmds_need_lc" >&6; }
+      archive_cmds_need_lc=$lt_cv_archive_cmds_need_lc
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
+$as_echo_n "checking dynamic linker characteristics... " >&6; }
+
+if test "$GCC" = yes; then
+  case $host_os in
+    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
+    *) lt_awk_arg="/^libraries:/" ;;
+  esac
+  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if $ECHO "$lt_search_path_spec" | $GREP ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+  # Ok, now we have the path, separated by spaces, we can step through it
+  # and add multilib dir if necessary.
+  lt_tmp_lt_search_path_spec=
+  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  for lt_sys_path in $lt_search_path_spec; do
+    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
+    else
+      test -d "$lt_sys_path" && \
+	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
+    fi
+  done
+  lt_search_path_spec=`$ECHO $lt_tmp_lt_search_path_spec | awk '
+BEGIN {RS=" "; FS="/|\n";} {
+  lt_foo="";
+  lt_count=0;
+  for (lt_i = NF; lt_i > 0; lt_i--) {
+    if ($lt_i != "" && $lt_i != ".") {
+      if ($lt_i == "..") {
+        lt_count++;
+      } else {
+        if (lt_count == 0) {
+          lt_foo="/" $lt_i lt_foo;
+        } else {
+          lt_count--;
+        }
+      }
+    }
+  }
+  if (lt_foo != "") { lt_freq[lt_foo]++; }
+  if (lt_freq[lt_foo] == 1) { print lt_foo; }
+}'`
+  sys_lib_search_path_spec=`$ECHO $lt_search_path_spec`
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix[4-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  case $host_cpu in
+  powerpc)
+    # Since July 2007 AmigaOS4 officially supports .so libraries.
+    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    ;;
+  m68k)
+    library_names_spec='$libname.ixlibrary $libname.a'
+    # Create ${libname}_ixlibrary.a entries in /sys/libs.
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$ECHO "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    ;;
+  esac
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32* | cegcc*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname~
+      if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+        eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+      fi'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $RM \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw* | cegcc*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | $GREP "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if $ECHO "$sys_lib_search_path_spec" | $GREP ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+
+  sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/local/lib"
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  *) # from 4.6 on, and DragonFly
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  hppa*64*)
+    shrext_cmds='.sl'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix[3-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+
+  # Some binutils ld are patched to set DT_RUNPATH
+  if test "${lt_cv_shlibpath_overrides_runpath+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_shlibpath_overrides_runpath=no
+    save_LDFLAGS=$LDFLAGS
+    save_libdir=$libdir
+    eval "libdir=/foo; wl=\"$lt_prog_compiler_wl\"; \
+	 LDFLAGS=\"\$LDFLAGS $hardcode_libdir_flag_spec\""
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep "RUNPATH.*$libdir" >/dev/null; then :
+  lt_cv_shlibpath_overrides_runpath=yes
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+    LDFLAGS=$save_LDFLAGS
+    libdir=$save_libdir
+    
+fi
+
+  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+*nto* | *qnx*)
+  version_type=qnx
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='ldqnx.so'
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
+    *)				need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+rdos*)
+  dynamic_linker=no
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+tpf*)
+  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
+$as_echo "$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
+  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+fi
+if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
+  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+fi
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs" >&5
+$as_echo_n "checking how to hardcode library paths into programs... " >&6; }
+hardcode_action=
+if test -n "$hardcode_libdir_flag_spec" ||
+   test -n "$runpath_var" ||
+   test "X$hardcode_automatic" = "Xyes" ; then
+
+  # We can hardcode non-existent directories.
+  if test "$hardcode_direct" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, )" != no &&
+     test "$hardcode_minus_L" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action=unsupported
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $hardcode_action" >&5
+$as_echo "$hardcode_action" >&6; }
+
+if test "$hardcode_action" = relink ||
+   test "$inherit_rpath" = yes; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+    
+    
+    
+
+
+  if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32* | cegcc*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+    ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+    ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    
+fi
+
+    ;;
+
+  *)
+    ac_fn_c_check_func "$LINENO" "shl_load" "ac_cv_func_shl_load"
+if test "x$ac_cv_func_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld" >&5
+$as_echo_n "checking for shl_load in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_shl_load+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char shl_load ();
+int
+main ()
+{
+return shl_load ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_shl_load=yes
+else
+  ac_cv_lib_dld_shl_load=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
+$as_echo "$ac_cv_lib_dld_shl_load" >&6; }
+if test "x$ac_cv_lib_dld_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"
+else
+  ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
+if test "x$ac_cv_func_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
+$as_echo_n "checking for dlopen in -lsvld... " >&6; }
+if test "${ac_cv_lib_svld_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lsvld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_svld_dlopen=yes
+else
+  ac_cv_lib_svld_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
+$as_echo "$ac_cv_lib_svld_dlopen" >&6; }
+if test "x$ac_cv_lib_svld_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
+$as_echo_n "checking for dld_link in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_dld_link+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dld_link ();
+int
+main ()
+{
+return dld_link ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_dld_link=yes
+else
+  ac_cv_lib_dld_dld_link=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
+$as_echo "$ac_cv_lib_dld_dld_link" >&6; }
+if test "x$ac_cv_lib_dld_dld_link" = x""yes; then :
+  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
+fi
+
+	      
+fi
+
+	    
+fi
+
+	  
+fi
+
+	
+fi
+
+      
+fi
+
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
+$as_echo_n "checking whether a program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self=no
+  fi
+fi
+rm -fr conftest*
+
+    
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self" >&5
+$as_echo "$lt_cv_dlopen_self" >&6; }
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
+$as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self_static+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self_static=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self_static=no
+  fi
+fi
+rm -fr conftest*
+
+      
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static" >&5
+$as_echo "$lt_cv_dlopen_self_static" >&6; }
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+  
+striplib=
+old_striplib=
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
+$as_echo_n "checking whether stripping libraries is possible... " >&6; }
+if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+  darwin*)
+    if test -n "$STRIP" ; then
+      striplib="$STRIP -x"
+      old_striplib="$STRIP -S"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+    ;;
+  *)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    ;;
+  esac
+fi
+
+    
+    
+    
+
+
+    
+    
+    
+
+
+
+  # Report which library types will actually be built
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
+$as_echo_n "checking if libtool supports shared libraries... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
+$as_echo "$can_build_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
+$as_echo_n "checking whether to build shared libraries... " >&6; }
+  test "$can_build_shared" = "no" && enable_shared=no
+
+  # On AIX, shared libraries and static libraries use the same namespace, and
+  # are all built from PIC.
+  case $host_os in
+  aix3*)
+    test "$enable_shared" = yes && enable_static=no
+    if test -n "$RANLIB"; then
+      archive_cmds="$archive_cmds~\$RANLIB \$lib"
+      postinstall_cmds='$RANLIB $lib'
+    fi
+    ;;
+
+  aix[4-9]*)
+    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+      test "$enable_shared" = yes && enable_static=no
+    fi
+    ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
+$as_echo "$enable_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
+$as_echo_n "checking whether to build static libraries... " >&6; }
+  # Make sure either enable_shared or enable_static is yes.
+  test "$enable_shared" = yes || enable_static=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
+$as_echo "$enable_static" >&6; }
+
+  
+
+
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+
+
+
+
+
+
+
+       
+       
+
+
+
+        ac_config_commands="$ac_config_commands libtool"
+
+
+
+
+# Only expand once:
+
+
+
+@%:@ Check whether --enable-targets was given.
+if test "${enable_targets+set}" = set; then :
+  enableval=$enable_targets; case "${enableval}" in
+  yes | "") as_fn_error "enable-targets option must specify target names or 'all'" "$LINENO" 5
+            ;;
+  no)       enable_targets= ;;
+  *)        enable_targets=$enableval ;;
+esac
+fi
+
+
+GCC_WARN_CFLAGS="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
+
+@%:@ Check whether --enable-werror was given.
+if test "${enable_werror+set}" = set; then :
+  enableval=$enable_werror; case "${enableval}" in
+     yes | y) ERROR_ON_WARNING="yes" ;;
+     no | n)  ERROR_ON_WARNING="no" ;;
+     *) as_fn_error "bad value ${enableval} for --enable-werror" "$LINENO" 5 ;;
+   esac
+fi
+
+
+# Enable -Wno-format by default when using gcc on mingw
+case "${host}" in
+  *-*-mingw32*)
+    if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
+      GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Wno-format"
+    fi
+    ;;
+  *) ;;
+esac
+
+# Enable -Werror by default when using gcc
+if test "${GCC}" = yes -a -z "${ERROR_ON_WARNING}" ; then
+    ERROR_ON_WARNING=yes
+fi
+
+NO_WERROR=
+if test "${ERROR_ON_WARNING}" = yes ; then
+    GCC_WARN_CFLAGS="$GCC_WARN_CFLAGS -Werror"
+    NO_WERROR="-Wno-error"
+fi
+		   
+if test "${GCC}" = yes ; then
+  WARN_CFLAGS="${GCC_WARN_CFLAGS}"
+fi
+
+@%:@ Check whether --enable-build-warnings was given.
+if test "${enable_build_warnings+set}" = set; then :
+  enableval=$enable_build_warnings; case "${enableval}" in
+  yes)	WARN_CFLAGS="${GCC_WARN_CFLAGS}";;
+  no)	if test "${GCC}" = yes ; then
+	  WARN_CFLAGS="-w"
+	fi;;
+  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
+        WARN_CFLAGS="${GCC_WARN_CFLAGS} ${t}";;
+  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
+        WARN_CFLAGS="${t} ${GCC_WARN_CFLAGS}";;
+  *)    WARN_CFLAGS=`echo "${enableval}" | sed -e "s/,/ /g"`;;
+esac
+fi
+
+
+if test x"$silent" != x"yes" && test x"$WARN_CFLAGS" != x""; then
+  echo "Setting warning flags = $WARN_CFLAGS" 6>&1
+fi
+
+
+
+
+
+ac_config_headers="$ac_config_headers config.h:config.in"
+
+
+if test -z "$target" ; then
+    as_fn_error "Unrecognized target system type; please check config.sub." "$LINENO" 5
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles" >&5
+$as_echo_n "checking whether to enable maintainer-specific portions of Makefiles... " >&6; }
+    @%:@ Check whether --enable-maintainer-mode was given.
+if test "${enable_maintainer_mode+set}" = set; then :
+  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval
+else
+  USE_MAINTAINER_MODE=no
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE" >&5
+$as_echo "$USE_MAINTAINER_MODE" >&6; }
+   if test $USE_MAINTAINER_MODE = yes; then
+  MAINTAINER_MODE_TRUE=
+  MAINTAINER_MODE_FALSE='#'
+else
+  MAINTAINER_MODE_TRUE='#'
+  MAINTAINER_MODE_FALSE=
+fi
+
+  MAINT=$MAINTAINER_MODE_TRUE
+  
+
+ case ${build_alias} in
+  "") build_noncanonical=${build} ;;
+  *) build_noncanonical=${build_alias} ;;
+esac
+
+ case ${host_alias} in
+  "") host_noncanonical=${build_noncanonical} ;;
+  *) host_noncanonical=${host_alias} ;;
+esac
+
+ case ${target_alias} in
+  "") target_noncanonical=${host_noncanonical} ;;
+  *) target_noncanonical=${target_alias} ;;
+esac
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to install libbfd" >&5
+$as_echo_n "checking whether to install libbfd... " >&6; }
+  @%:@ Check whether --enable-install-libbfd was given.
+if test "${enable_install_libbfd+set}" = set; then :
+  enableval=$enable_install_libbfd; install_libbfd_p=$enableval
+else
+  if test "${host}" = "${target}" || test "$enable_shared" = "yes"; then
+        install_libbfd_p=yes
+      else
+        install_libbfd_p=no
+      fi
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $install_libbfd_p" >&5
+$as_echo "$install_libbfd_p" >&6; }
+   if test $install_libbfd_p = yes; then
+  INSTALL_LIBBFD_TRUE=
+  INSTALL_LIBBFD_FALSE='#'
+else
+  INSTALL_LIBBFD_TRUE='#'
+  INSTALL_LIBBFD_FALSE=
+fi
+
+  # Need _noncanonical variables for this.
+   
+
+   
+
+  # libbfd.a is a host library containing target dependent code
+  bfdlibdir='$(libdir)'
+  bfdincludedir='$(includedir)'
+  if test "${host}" != "${target}"; then
+    bfdlibdir='$(exec_prefix)/$(host_noncanonical)/$(target_noncanonical)/lib'
+    bfdincludedir='$(exec_prefix)/$(host_noncanonical)/$(target_noncanonical)/include'
+  fi
+  
+  
+  
+  
+
+
+
+
+# host-specific stuff:
+
+ALL_LINGUAS="fr sv tr es da de id pt_BR ro nl fi vi ga zh_CN"
+# If we haven't got the data from the intl directory,
+# assume NLS is disabled.
+USE_NLS=no	
+LIBINTL=	
+LIBINTL_DEP=	
+INCINTL=	
+XGETTEXT=	
+GMSGFMT=	
+POSUB=		
+
+if test -f  ../intl/config.intl; then
+  .  ../intl/config.intl
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
+$as_echo_n "checking whether NLS is requested... " >&6; }
+if test x"$USE_NLS" != xyes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  
+$as_echo "@%:@define ENABLE_NLS 1" >>confdefs.h
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for catalogs to be installed" >&5
+$as_echo_n "checking for catalogs to be installed... " >&6; }
+  # Look for .po and .gmo files in the source directory.
+  CATALOGS=  
+  XLINGUAS=
+  for cat in $srcdir/po/*.gmo $srcdir/po/*.po; do
+    # If there aren't any .gmo files the shell will give us the
+    # literal string "../path/to/srcdir/po/*.gmo" which has to be
+    # weeded out.
+    case "$cat" in *\**)
+      continue;;
+    esac
+    # The quadruple backslash is collapsed to a double backslash
+    # by the backticks, then collapsed again by the double quotes,
+    # leaving us with one backslash in the sed expression (right
+    # before the dot that mustn't act as a wildcard).
+    cat=`echo $cat | sed -e "s!$srcdir/po/!!" -e "s!\\\\.po!.gmo!"`
+    lang=`echo $cat | sed -e "s!\\\\.gmo!!"`
+    # The user is allowed to set LINGUAS to a list of languages to
+    # install catalogs for.  If it's empty that means "all of them."
+    if test "x$LINGUAS" = x; then
+      CATALOGS="$CATALOGS $cat"
+      XLINGUAS="$XLINGUAS $lang"
+    else
+      case "$LINGUAS" in *$lang*)
+        CATALOGS="$CATALOGS $cat"
+        XLINGUAS="$XLINGUAS $lang"
+        ;;
+      esac
+    fi
+  done
+  LINGUAS="$XLINGUAS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LINGUAS" >&5
+$as_echo "$LINGUAS" >&6; }
+
+    
+    DATADIRNAME=share
+  
+  INSTOBJEXT=.mo
+  
+  GENCAT=gencat
+  
+  CATOBJEXT=.gmo
+  
+fi
+
+        MKINSTALLDIRS=
+  if test -n "$ac_aux_dir"; then
+    case "$ac_aux_dir" in
+      /*) MKINSTALLDIRS="$ac_aux_dir/mkinstalldirs" ;;
+      *) MKINSTALLDIRS="\$(top_builddir)/$ac_aux_dir/mkinstalldirs" ;;
+    esac
+  fi
+  if test -z "$MKINSTALLDIRS"; then
+    MKINSTALLDIRS="\$(top_srcdir)/mkinstalldirs"
+  fi
+  
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether NLS is requested" >&5
+$as_echo_n "checking whether NLS is requested... " >&6; }
+    @%:@ Check whether --enable-nls was given.
+if test "${enable_nls+set}" = set; then :
+  enableval=$enable_nls; USE_NLS=$enableval
+else
+  USE_NLS=yes
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_NLS" >&5
+$as_echo "$USE_NLS" >&6; }
+  
+
+
+        
+    
+        
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "msgfmt", so it can be a program name with args.
+set dummy msgfmt; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_MSGFMT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$MSGFMT" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_MSGFMT="$MSGFMT" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --statistics /dev/null >/dev/null 2>&1 &&
+     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+            ac_cv_path_MSGFMT="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_MSGFMT" && ac_cv_path_MSGFMT=":"
+    ;;
+esac
+fi
+MSGFMT="$ac_cv_path_MSGFMT"
+if test "$MSGFMT" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MSGFMT" >&5
+$as_echo "$MSGFMT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  # Extract the first word of "gmsgfmt", so it can be a program name with args.
+set dummy gmsgfmt; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_GMSGFMT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $GMSGFMT in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_GMSGFMT="$GMSGFMT" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_GMSGFMT="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_GMSGFMT" && ac_cv_path_GMSGFMT="$MSGFMT"
+  ;;
+esac
+fi
+GMSGFMT=$ac_cv_path_GMSGFMT
+if test -n "$GMSGFMT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GMSGFMT" >&5
+$as_echo "$GMSGFMT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+
+        
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "xgettext", so it can be a program name with args.
+set dummy xgettext; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_XGETTEXT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$XGETTEXT" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_XGETTEXT="$XGETTEXT" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
+     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+            ac_cv_path_XGETTEXT="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_XGETTEXT" && ac_cv_path_XGETTEXT=":"
+    ;;
+esac
+fi
+XGETTEXT="$ac_cv_path_XGETTEXT"
+if test "$XGETTEXT" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $XGETTEXT" >&5
+$as_echo "$XGETTEXT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+    rm -f messages.po
+
+    
+# Prepare PATH_SEPARATOR.
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+# Find out how to test for executable files. Don't use a zero-byte file,
+# as systems may use methods other than mode bits to determine executability.
+cat >conf$$.file <<_ASEOF
+#! /bin/sh
+exit 0
+_ASEOF
+chmod +x conf$$.file
+if test -x conf$$.file >/dev/null 2>&1; then
+  ac_executable_p="test -x"
+else
+  ac_executable_p="test -f"
+fi
+rm -f conf$$.file
+
+# Extract the first word of "msgmerge", so it can be a program name with args.
+set dummy msgmerge; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_MSGMERGE+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case "$MSGMERGE" in
+  [\\/]* | ?:[\\/]*)
+    ac_cv_path_MSGMERGE="$MSGMERGE" # Let the user override the test with a path.
+    ;;
+  *)
+    ac_save_IFS="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH; do
+      IFS="$ac_save_IFS"
+      test -z "$ac_dir" && ac_dir=.
+      for ac_exec_ext in '' $ac_executable_extensions; do
+        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
+          if $ac_dir/$ac_word --update -q /dev/null /dev/null >/dev/null 2>&1; then
+            ac_cv_path_MSGMERGE="$ac_dir/$ac_word$ac_exec_ext"
+            break 2
+          fi
+        fi
+      done
+    done
+    IFS="$ac_save_IFS"
+  test -z "$ac_cv_path_MSGMERGE" && ac_cv_path_MSGMERGE=":"
+    ;;
+esac
+fi
+MSGMERGE="$ac_cv_path_MSGMERGE"
+if test "$MSGMERGE" != ":"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MSGMERGE" >&5
+$as_echo "$MSGMERGE" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+      if test "$GMSGFMT" != ":"; then
+            if $GMSGFMT --statistics /dev/null >/dev/null 2>&1 &&
+       (if $GMSGFMT --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+      : ;
+    else
+      GMSGFMT=`echo "$GMSGFMT" | sed -e 's,^.*/,,'`
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: found $GMSGFMT program is not GNU msgfmt; ignore it" >&5
+$as_echo "found $GMSGFMT program is not GNU msgfmt; ignore it" >&6; }
+      GMSGFMT=":"
+    fi
+  fi
+
+      if test "$XGETTEXT" != ":"; then
+            if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >/dev/null 2>&1 &&
+       (if $XGETTEXT --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi); then
+      : ;
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: found xgettext program is not GNU xgettext; ignore it" >&5
+$as_echo "found xgettext program is not GNU xgettext; ignore it" >&6; }
+      XGETTEXT=":"
+    fi
+        rm -f messages.po
+  fi
+
+  ac_config_commands="$ac_config_commands default-1"
+
+
+
+. ${srcdir}/../bfd/configure.host
+
+# Put a plausible default for CC_FOR_BUILD in Makefile.
+if test -z "$CC_FOR_BUILD"; then
+  if test "x$cross_compiling" = "xno"; then
+    CC_FOR_BUILD='$(CC)'
+  else
+    CC_FOR_BUILD=gcc
+  fi
+fi
+
+# Also set EXEEXT_FOR_BUILD.
+if test "x$cross_compiling" = "xno"; then
+  EXEEXT_FOR_BUILD='$(EXEEXT)'
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for build system executable suffix" >&5
+$as_echo_n "checking for build system executable suffix... " >&6; }
+if test "${bfd_cv_build_exeext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f conftest*
+     echo 'int main () { return 0; }' > conftest.c
+     bfd_cv_build_exeext=
+     ${CC_FOR_BUILD} -o conftest conftest.c 1>&5 2>&5
+     for file in conftest.*; do
+       case $file in
+       *.c | *.o | *.obj | *.ilk | *.pdb) ;;
+       *) bfd_cv_build_exeext=`echo $file | sed -e s/conftest//` ;;
+       esac
+     done
+     rm -f conftest*
+     test x"${bfd_cv_build_exeext}" = x && bfd_cv_build_exeext=no
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_build_exeext" >&5
+$as_echo "$bfd_cv_build_exeext" >&6; }
+  EXEEXT_FOR_BUILD=""
+  test x"${bfd_cv_build_exeext}" != xno && EXEEXT_FOR_BUILD=${bfd_cv_build_exeext}
+fi
+
+
+
+
+
+for ac_header in string.h strings.h stdlib.h limits.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+eval as_val=\$$as_ac_Header
+   if test "x$as_val" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+@%:@define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+ 
+fi
+
+done
+
+
+ac_fn_c_check_decl "$LINENO" "basename" "ac_cv_have_decl_basename" "$ac_includes_default"
+if test "x$ac_cv_have_decl_basename" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_BASENAME $ac_have_decl
+_ACEOF
+ac_fn_c_check_decl "$LINENO" "stpcpy" "ac_cv_have_decl_stpcpy" "$ac_includes_default"
+if test "x$ac_cv_have_decl_stpcpy" = x""yes; then :
+  ac_have_decl=1
+else
+  ac_have_decl=0
+fi
+
+cat >>confdefs.h <<_ACEOF
+@%:@define HAVE_DECL_STPCPY $ac_have_decl
+_ACEOF
+
+
+cgen_maint=no
+cgendir='$(srcdir)/../cgen'
+
+@%:@ Check whether --enable-cgen-maint was given.
+if test "${enable_cgen_maint+set}" = set; then :
+  enableval=$enable_cgen_maint; case "${enableval}" in
+  yes)	cgen_maint=yes ;;
+  no)	cgen_maint=no ;;
+  *)
+	# argument is cgen install directory (not implemented yet).
+	# Having a `share' directory might be more appropriate for the .scm,
+	# .cpu, etc. files.
+	cgen_maint=yes
+	cgendir=${cgen_maint}/lib/cgen
+	;;
+esac
+fi
+ if test x${cgen_maint} = xyes; then
+  CGEN_MAINT_TRUE=
+  CGEN_MAINT_FALSE='#'
+else
+  CGEN_MAINT_TRUE='#'
+  CGEN_MAINT_FALSE=
+fi
+
+
+
+using_cgen=no
+
+# Check if linker supports --as-needed and --no-as-needed options
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking linker --as-needed support" >&5
+$as_echo_n "checking linker --as-needed support... " >&6; }
+if test "${bfd_cv_ld_as_needed+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  bfd_cv_ld_as_needed=no
+	if $LD --help 2>/dev/null | grep as-needed > /dev/null; then
+		bfd_cv_ld_as_needed=yes
+	fi
+	
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $bfd_cv_ld_as_needed" >&5
+$as_echo "$bfd_cv_ld_as_needed" >&6; }
+
+LIBM=
+case $host in
+*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
+  # These system don't have libm, or don't need it
+  ;;
+*-ncr-sysv4.3*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for _mwvalidcheckl in -lmw" >&5
+$as_echo_n "checking for _mwvalidcheckl in -lmw... " >&6; }
+if test "${ac_cv_lib_mw__mwvalidcheckl+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lmw  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char _mwvalidcheckl ();
+int
+main ()
+{
+return _mwvalidcheckl ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_mw__mwvalidcheckl=yes
+else
+  ac_cv_lib_mw__mwvalidcheckl=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_mw__mwvalidcheckl" >&5
+$as_echo "$ac_cv_lib_mw__mwvalidcheckl" >&6; }
+if test "x$ac_cv_lib_mw__mwvalidcheckl" = x""yes; then :
+  LIBM="-lmw"
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cos in -lm" >&5
+$as_echo_n "checking for cos in -lm... " >&6; }
+if test "${ac_cv_lib_m_cos+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lm  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cos ();
+int
+main ()
+{
+return cos ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_m_cos=yes
+else
+  ac_cv_lib_m_cos=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_cos" >&5
+$as_echo "$ac_cv_lib_m_cos" >&6; }
+if test "x$ac_cv_lib_m_cos" = x""yes; then :
+  LIBM="$LIBM -lm"
+fi
+
+  ;;
+*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cos in -lm" >&5
+$as_echo_n "checking for cos in -lm... " >&6; }
+if test "${ac_cv_lib_m_cos+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lm  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char cos ();
+int
+main ()
+{
+return cos ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_m_cos=yes
+else
+  ac_cv_lib_m_cos=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_cos" >&5
+$as_echo "$ac_cv_lib_m_cos" >&6; }
+if test "x$ac_cv_lib_m_cos" = x""yes; then :
+  LIBM="-lm"
+fi
+
+  ;;
+esac
+
+
+
+#Libs for generator progs
+if test "x$cross_compiling" = "xno"; then
+  BUILD_LIBS=../libiberty/libiberty.a
+  BUILD_LIB_DEPS=$BUILD_LIBS
+else
+  # if cross-compiling, assume that the system provides -liberty
+  # and that the version is compatible with new headers.
+  BUILD_LIBS=-liberty
+  BUILD_LIB_DEPS=
+fi
+BUILD_LIBS="$BUILD_LIBS $LIBINTL"
+BUILD_LIB_DEPS="$BUILD_LIB_DEPS $LIBINTL_DEP"
+
+
+
+
+# Horrible hacks to build DLLs on Windows and a shared library elsewhere.
+SHARED_LDFLAGS=
+SHARED_LIBADD=
+SHARED_DEPENDENCIES=
+if test "$enable_shared" = "yes"; then
+# When building a shared libopcodes, link against the pic version of libiberty
+# so that apps that use libopcodes won't need libiberty just to satisfy any
+# libopcodes references.
+# We can't do that if a pic libiberty is unavailable since including non-pic
+# code would insert text relocations into libopcodes.
+# Note that linking against libbfd as we do here, which is itself linked
+# against libiberty, may not satisfy all the libopcodes libiberty references
+# since libbfd may not pull in the entirety of libiberty.
+  x=`sed -n -e 's/^[ 	]*PICFLAG[ 	]*=[ 	]*//p' < ../libiberty/Makefile | sed -n '$p'`
+  if test -n "$x"; then
+    SHARED_LIBADD="-L`pwd`/../libiberty/pic -liberty"
+  fi
+
+  case "${host}" in
+    *-*-cygwin*)
+      SHARED_LDFLAGS="-no-undefined"
+      SHARED_LIBADD="-L`pwd`/../bfd -lbfd -L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin"
+      ;;
+   *-*-darwin*)
+     SHARED_LIBADD="-Wl,`pwd`/../bfd/.libs/libbfd.dylib ${SHARED_LIBADD}"
+     SHARED_DEPENDENCIES="../bfd/libbfd.la"
+     ;;
+    *)
+      case "$host_vendor" in
+        hp)
+          SHARED_LIBADD="-Wl,`pwd`/../bfd/.libs/libbfd.sl ${SHARED_LIBADD}"
+	  ;;
+	*)
+          SHARED_LIBADD="-Wl,`pwd`/../bfd/.libs/libbfd.so ${SHARED_LIBADD}"
+	  ;;
+      esac
+      SHARED_DEPENDENCIES="../bfd/libbfd.la"
+      ;;
+  esac
+
+  if test -n "$SHARED_LIBADD"; then
+    if test -n "$LIBM"; then
+      if test x"$bfd_cv_ld_as_needed" = xyes; then
+	# Link against libm only when needed.  Put -lc, -lm inside -Wl
+	# to stop libtool reordering these options.
+	SHARED_LIBADD="$SHARED_LIBADD -Wl,-lc,--as-needed,`echo $LIBM | sed 's/ /,/g'`,--no-as-needed"
+      else
+	SHARED_LIBADD="$SHARED_LIBADD $LIBM"
+      fi
+    fi
+  fi
+fi
+
+
+
+
+# target-specific stuff:
+
+# Canonicalize the secondary target names.
+if test -n "$enable_targets" ; then
+    for targ in `echo $enable_targets | sed 's/,/ /g'`
+    do
+	result=`$ac_config_sub $targ 2>/dev/null`
+	if test -n "$result" ; then
+	    canon_targets="$canon_targets $result"
+	else
+	    # Allow targets that config.sub doesn't recognize, like "all".
+	    canon_targets="$canon_targets $targ"
+	fi
+    done
+fi
+
+all_targets=false
+selarchs=
+for targ in $target $canon_targets
+do
+    if test "x$targ" = "xall" ; then
+        all_targets=true
+    else
+	. $srcdir/../bfd/config.bfd
+	selarchs="$selarchs $targ_archs"
+    fi
+done	
+
+# Utility var, documents generic cgen support files.
+
+cgen_files="cgen-opc.lo cgen-asm.lo cgen-dis.lo cgen-bitset.lo"
+
+# We don't do any links based on the target system, just makefile config.
+
+if test x${all_targets} = xfalse ; then
+
+    # Target architecture .o files.
+    ta=
+
+    for arch in $selarchs
+    do
+	ad=`echo $arch | sed -e s/bfd_//g -e s/_arch//g`
+	archdefs="$archdefs -DARCH_$ad"
+	case "$arch" in
+	bfd_alpha_arch)		ta="$ta alpha-dis.lo alpha-opc.lo" ;;
+	bfd_arc_arch)		ta="$ta arc-dis.lo arc-opc.lo arc-ext.lo" ;;
+	bfd_arm_arch)		ta="$ta arm-dis.lo" ;;
+	bfd_avr_arch)		ta="$ta avr-dis.lo" ;;
+	bfd_bfin_arch)		ta="$ta bfin-dis.lo" ;;
+	bfd_cr16_arch)    	ta="$ta cr16-dis.lo cr16-opc.lo" ;;
+	bfd_cris_arch)		ta="$ta cris-dis.lo cris-opc.lo cgen-bitset.lo" ;;
+	bfd_crx_arch)    	ta="$ta crx-dis.lo crx-opc.lo" ;;
+	bfd_d10v_arch)		ta="$ta d10v-dis.lo d10v-opc.lo" ;;
+	bfd_d30v_arch)		ta="$ta d30v-dis.lo d30v-opc.lo" ;;
+	bfd_dlx_arch)		ta="$ta dlx-dis.lo" ;;
+	bfd_fr30_arch)          ta="$ta fr30-asm.lo fr30-desc.lo fr30-dis.lo fr30-ibld.lo fr30-opc.lo" using_cgen=yes ;;
+	bfd_frv_arch)           ta="$ta frv-asm.lo frv-desc.lo frv-dis.lo frv-ibld.lo frv-opc.lo" using_cgen=yes ;;
+	bfd_moxie_arch)		ta="$ta moxie-dis.lo moxie-opc.lo" ;;
+	bfd_h8300_arch)		ta="$ta h8300-dis.lo" ;;
+	bfd_h8500_arch)		ta="$ta h8500-dis.lo" ;;
+	bfd_hppa_arch)		ta="$ta hppa-dis.lo" ;;
+	bfd_i370_arch)		ta="$ta i370-dis.lo i370-opc.lo" ;;
+	bfd_i386_arch|bfd_l1om_arch)
+				ta="$ta i386-dis.lo i386-opc.lo" ;;
+	bfd_i860_arch)		ta="$ta i860-dis.lo" ;;
+	bfd_i960_arch)		ta="$ta i960-dis.lo" ;;
+	bfd_ia64_arch)		ta="$ta ia64-dis.lo ia64-opc.lo" ;;
+	bfd_ip2k_arch)		ta="$ta ip2k-asm.lo ip2k-desc.lo ip2k-dis.lo ip2k-ibld.lo ip2k-opc.lo" using_cgen=yes ;;
+        bfd_iq2000_arch)        ta="$ta iq2000-asm.lo iq2000-desc.lo iq2000-dis.lo iq2000-ibld.lo iq2000-opc.lo" using_cgen=yes ;;
+	bfd_lm32_arch)          ta="$ta lm32-asm.lo lm32-desc.lo lm32-dis.lo lm32-ibld.lo lm32-opc.lo lm32-opinst.lo" using_cgen=yes ;;
+	bfd_m32c_arch)		ta="$ta m32c-asm.lo m32c-desc.lo m32c-dis.lo m32c-ibld.lo m32c-opc.lo" using_cgen=yes ;;
+	bfd_m32r_arch)		ta="$ta m32r-asm.lo m32r-desc.lo m32r-dis.lo m32r-ibld.lo m32r-opc.lo m32r-opinst.lo" using_cgen=yes ;;
+	bfd_m68hc11_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
+	bfd_m68hc12_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
+	bfd_mc9s12x_arch)	ta="$ta mc9s12x-dis.lo mc9s12x-opc.lo" ;;
+	bfd_m68k_arch)		ta="$ta m68k-dis.lo m68k-opc.lo" ;;
+	bfd_m88k_arch)		ta="$ta m88k-dis.lo" ;;
+	bfd_maxq_arch)		ta="$ta maxq-dis.lo" ;;
+	bfd_mcore_arch)		ta="$ta mcore-dis.lo" ;;
+	bfd_mep_arch)		ta="$ta mep-asm.lo mep-desc.lo mep-dis.lo mep-ibld.lo mep-opc.lo" using_cgen=yes ;;
+	bfd_microblaze_arch)	ta="$ta microblaze-dis.lo" ;;
+	bfd_mips_arch)		ta="$ta mips-dis.lo mips-opc.lo mips16-opc.lo" ;;
+	bfd_mmix_arch)		ta="$ta mmix-dis.lo mmix-opc.lo" ;;
+	bfd_mn10200_arch)	ta="$ta m10200-dis.lo m10200-opc.lo" ;;
+	bfd_mn10300_arch)	ta="$ta m10300-dis.lo m10300-opc.lo" ;;
+	bfd_mt_arch)		ta="$ta mt-asm.lo mt-desc.lo mt-dis.lo mt-ibld.lo mt-opc.lo" using_cgen=yes ;;
+	bfd_msp430_arch)	ta="$ta msp430-dis.lo" ;;
+	bfd_ns32k_arch)		ta="$ta ns32k-dis.lo" ;;
+	bfd_openrisc_arch)	ta="$ta openrisc-asm.lo openrisc-desc.lo openrisc-dis.lo openrisc-ibld.lo openrisc-opc.lo" using_cgen=yes ;;
+	bfd_or32_arch)		ta="$ta or32-dis.lo or32-opc.lo" using_cgen=yes ;;
+	bfd_pdp11_arch)		ta="$ta pdp11-dis.lo pdp11-opc.lo" ;;
+	bfd_pj_arch)	        ta="$ta pj-dis.lo pj-opc.lo" ;;
+	bfd_powerpc_arch)	ta="$ta ppc-dis.lo ppc-opc.lo" ;;
+	bfd_powerpc_64_arch)	ta="$ta ppc-dis.lo ppc-opc.lo" ;;
+	bfd_pyramid_arch)	;;
+	bfd_romp_arch)		;;
+	bfd_rs6000_arch)	ta="$ta ppc-dis.lo ppc-opc.lo" ;;
+	bfd_s390_arch)		ta="$ta s390-dis.lo s390-opc.lo" ;;
+	bfd_score_arch)         ta="$ta score-dis.lo score7-dis.lo" ;;
+	bfd_sh_arch)
+	  # We can't decide what we want just from the CPU family.
+	  # We want SH5 support unless a specific version of sh is
+	  # specified, as in sh3-elf, sh3b-linux-gnu, etc.
+	  # Include it just for ELF targets, since the SH5 bfd:s are ELF only.
+	  for t in $target $canon_targets; do
+	    case $t in
+	      all |  sh5*-* | sh64*-* | sh-*-*elf* | shl*-*-*elf* | \
+	      sh-*-linux* | shl-*-linux*)
+				ta="$ta sh64-dis.lo sh64-opc.lo"
+				archdefs="$archdefs -DINCLUDE_SHMEDIA"
+				break;;
+	    esac;
+	  done
+				ta="$ta sh-dis.lo cgen-bitset.lo" ;;
+	bfd_sparc_arch)		ta="$ta sparc-dis.lo sparc-opc.lo" ;;
+	bfd_spu_arch)		ta="$ta spu-dis.lo spu-opc.lo" ;;
+	bfd_tahoe_arch)		;;
+	bfd_tic30_arch)		ta="$ta tic30-dis.lo" ;;
+        bfd_tic4x_arch)         ta="$ta tic4x-dis.lo" ;;
+	bfd_tic54x_arch)	ta="$ta tic54x-dis.lo tic54x-opc.lo" ;;
+	bfd_tic80_arch)		ta="$ta tic80-dis.lo tic80-opc.lo" ;;
+	bfd_v850_arch)		ta="$ta v850-opc.lo v850-dis.lo" ;;
+	bfd_v850e_arch)		ta="$ta v850-opc.lo v850-dis.lo" ;;
+	bfd_v850ea_arch)	ta="$ta v850-opc.lo v850-dis.lo" ;;
+	bfd_vax_arch)		ta="$ta vax-dis.lo" ;;
+	bfd_w65_arch)		ta="$ta w65-dis.lo" ;;
+	bfd_we32k_arch)		;;
+	bfd_xc16x_arch)		ta="$ta xc16x-asm.lo xc16x-desc.lo xc16x-dis.lo xc16x-ibld.lo xc16x-opc.lo" using_cgen=yes ;;
+	bfd_xstormy16_arch)	ta="$ta xstormy16-asm.lo xstormy16-desc.lo xstormy16-dis.lo xstormy16-ibld.lo xstormy16-opc.lo" using_cgen=yes ;;
+	bfd_xtensa_arch)	ta="$ta xtensa-dis.lo" ;;
+	bfd_z80_arch)		ta="$ta z80-dis.lo" ;;
+	bfd_z8k_arch)		ta="$ta z8k-dis.lo" ;;
+
+	"")			;;
+	*)		as_fn_error "*** unknown target architecture $arch" "$LINENO" 5 ;;
+	esac
+    done
+
+    if test $using_cgen = yes ; then
+	ta="$ta $cgen_files"
+    fi
+
+    # Weed out duplicate .o files.
+    f=""
+    for i in $ta ; do
+	case " $f " in
+	*" $i "*) ;;
+	*) f="$f $i" ;;
+	esac
+    done
+    ta="$f"
+
+    # And duplicate -D flags.
+    f=""
+    for i in $archdefs ; do
+	case " $f " in
+	*" $i "*) ;;
+	*) f="$f $i" ;;
+	esac
+    done
+    archdefs="$f"
+
+    BFD_MACHINES="$ta"
+
+else	# all_targets is true
+    archdefs=-DARCH_all
+    BFD_MACHINES='$(ALL_MACHINES)'
+fi
+
+
+
+
+ac_config_files="$ac_config_files Makefile po/Makefile.in:po/Make-in"
+
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, we kill variables containing newlines.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+
+  (set) 2>&1 |
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      # `set' does not quote correctly, so add quotes: double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \.
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;; #(
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+) |
+  sed '
+     /^ac_cv_env_/b end
+     t clear
+     :clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     :end' >>confcache
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
+$as_echo "$as_me: updating cache $cache_file" >&6;}
+    cat confcache >$cache_file
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
+$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+DEFS=-DHAVE_CONFIG_H
+
+ac_libobjs=
+ac_ltlibobjs=
+for ac_i in : $LIB@&t@OBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
+done
+LIB@&t@OBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
+  as_fn_error "conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  as_fn_error "conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+ if test -n "$EXEEXT"; then
+  am__EXEEXT_TRUE=
+  am__EXEEXT_FALSE='#'
+else
+  am__EXEEXT_TRUE='#'
+  am__EXEEXT_FALSE=
+fi
+
+if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
+  as_fn_error "conditional \"MAINTAINER_MODE\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${INSTALL_LIBBFD_TRUE}" && test -z "${INSTALL_LIBBFD_FALSE}"; then
+  as_fn_error "conditional \"INSTALL_LIBBFD\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${CGEN_MAINT_TRUE}" && test -z "${CGEN_MAINT_FALSE}"; then
+  as_fn_error "conditional \"CGEN_MAINT\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+
+: ${CONFIG_STATUS=./config.status}
+ac_write_fail=0
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
+$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
+as_write_fail=0
+cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+
+SHELL=\${CONFIG_SHELL-$SHELL}
+export SHELL
+_ASEOF
+cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in @%:@(
+  *posix*) :
+    set -o posix ;; @%:@(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in @%:@(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in @%:@((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+
+@%:@ as_fn_error ERROR [LINENO LOG_FD]
+@%:@ ---------------------------------
+@%:@ Output "`basename @S|@0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+@%:@ provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+@%:@ script with status $?, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$?; test $as_status -eq 0 && as_status=1
+  if test "$3"; then
+    as_lineno=${as_lineno-"$2"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $1" >&$3
+  fi
+  $as_echo "$as_me: error: $1" >&2
+  as_fn_exit $as_status
+} @%:@ as_fn_error
+
+
+@%:@ as_fn_set_status STATUS
+@%:@ -----------------------
+@%:@ Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} @%:@ as_fn_set_status
+
+@%:@ as_fn_exit STATUS
+@%:@ -----------------
+@%:@ Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} @%:@ as_fn_exit
+
+@%:@ as_fn_unset VAR
+@%:@ ---------------
+@%:@ Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+@%:@ as_fn_append VAR VALUE
+@%:@ ----------------------
+@%:@ Append the text in VALUE to the end of the definition contained in VAR. Take
+@%:@ advantage of any shell optimizations that allow amortized linear growth over
+@%:@ repeated appends, instead of the typical quadratic growth present in naive
+@%:@ implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+@%:@ as_fn_arith ARG...
+@%:@ ------------------
+@%:@ Perform arithmetic evaluation on the ARGs, and store the result in the
+@%:@ global $as_val. Take advantage of shells that can avoid forks. The arguments
+@%:@ must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in @%:@(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+
+@%:@ as_fn_mkdir_p
+@%:@ -------------
+@%:@ Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error "cannot create directory $as_dir"
+
+
+} @%:@ as_fn_mkdir_p
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in @%:@(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in @%:@((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+## ----------------------------------- ##
+## Main body of $CONFIG_STATUS script. ##
+## ----------------------------------- ##
+_ASEOF
+test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# Save the log message, to keep $0 and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by $as_me, which was
+generated by GNU Autoconf 2.64.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+_ACEOF
+
+case $ac_config_files in *"
+"*) set x $ac_config_files; shift; ac_config_files=$*;;
+esac
+
+case $ac_config_headers in *"
+"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
+esac
+
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+# Files that config.status was made for.
+config_files="$ac_config_files"
+config_headers="$ac_config_headers"
+config_commands="$ac_config_commands"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+ac_cs_usage="\
+\`$as_me' instantiates files and other configuration actions
+from templates according to the current configuration.  Unless the files
+and actions are specified as TAGs, all are instantiated by default.
+
+Usage: $0 [OPTION]... [TAG]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+  -q, --quiet, --silent
+                   do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE] 
+                   instantiate the configuration file FILE
+      --header=FILE[:TEMPLATE] 
+                   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to the package provider."
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_cs_version="\\
+config.status
+configured by $0, generated by GNU Autoconf 2.64,
+  with options \\"`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
+
+Copyright (C) 2009 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
+INSTALL='$INSTALL'
+MKDIR_P='$MKDIR_P'
+AWK='$AWK'
+test -n "\$AWK" || AWK=awk
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# The default lists apply if the user does not specify any file.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    $as_echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_FILES " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    as_fn_error "ambiguous option: \`$1'
+Try \`$0 --help' for more information.";;
+  --help | --hel | -h )
+    $as_echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) as_fn_error "unrecognized option: \`$1'
+Try \`$0 --help' for more information." ;;
+
+  *) as_fn_append ac_config_targets " $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+if \$ac_cs_recheck; then
+  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+  shift
+  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
+  CONFIG_SHELL='$SHELL'
+  export CONFIG_SHELL
+  exec "\$@"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
+@%:@@%:@ Running $as_me. @%:@@%:@
+_ASBOX
+  $as_echo "$ac_log"
+} >&5
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+#
+# INIT-COMMANDS
+#
+AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+sed_quote_subst='$sed_quote_subst'
+double_quote_subst='$double_quote_subst'
+delay_variable_subst='$delay_variable_subst'
+enable_shared='`$ECHO "X$enable_shared" | $Xsed -e "$delay_single_quote_subst"`'
+macro_version='`$ECHO "X$macro_version" | $Xsed -e "$delay_single_quote_subst"`'
+macro_revision='`$ECHO "X$macro_revision" | $Xsed -e "$delay_single_quote_subst"`'
+enable_static='`$ECHO "X$enable_static" | $Xsed -e "$delay_single_quote_subst"`'
+pic_mode='`$ECHO "X$pic_mode" | $Xsed -e "$delay_single_quote_subst"`'
+enable_fast_install='`$ECHO "X$enable_fast_install" | $Xsed -e "$delay_single_quote_subst"`'
+host_alias='`$ECHO "X$host_alias" | $Xsed -e "$delay_single_quote_subst"`'
+host='`$ECHO "X$host" | $Xsed -e "$delay_single_quote_subst"`'
+host_os='`$ECHO "X$host_os" | $Xsed -e "$delay_single_quote_subst"`'
+build_alias='`$ECHO "X$build_alias" | $Xsed -e "$delay_single_quote_subst"`'
+build='`$ECHO "X$build" | $Xsed -e "$delay_single_quote_subst"`'
+build_os='`$ECHO "X$build_os" | $Xsed -e "$delay_single_quote_subst"`'
+SED='`$ECHO "X$SED" | $Xsed -e "$delay_single_quote_subst"`'
+Xsed='`$ECHO "X$Xsed" | $Xsed -e "$delay_single_quote_subst"`'
+GREP='`$ECHO "X$GREP" | $Xsed -e "$delay_single_quote_subst"`'
+EGREP='`$ECHO "X$EGREP" | $Xsed -e "$delay_single_quote_subst"`'
+FGREP='`$ECHO "X$FGREP" | $Xsed -e "$delay_single_quote_subst"`'
+LD='`$ECHO "X$LD" | $Xsed -e "$delay_single_quote_subst"`'
+NM='`$ECHO "X$NM" | $Xsed -e "$delay_single_quote_subst"`'
+LN_S='`$ECHO "X$LN_S" | $Xsed -e "$delay_single_quote_subst"`'
+max_cmd_len='`$ECHO "X$max_cmd_len" | $Xsed -e "$delay_single_quote_subst"`'
+ac_objext='`$ECHO "X$ac_objext" | $Xsed -e "$delay_single_quote_subst"`'
+exeext='`$ECHO "X$exeext" | $Xsed -e "$delay_single_quote_subst"`'
+lt_unset='`$ECHO "X$lt_unset" | $Xsed -e "$delay_single_quote_subst"`'
+lt_SP2NL='`$ECHO "X$lt_SP2NL" | $Xsed -e "$delay_single_quote_subst"`'
+lt_NL2SP='`$ECHO "X$lt_NL2SP" | $Xsed -e "$delay_single_quote_subst"`'
+reload_flag='`$ECHO "X$reload_flag" | $Xsed -e "$delay_single_quote_subst"`'
+reload_cmds='`$ECHO "X$reload_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+OBJDUMP='`$ECHO "X$OBJDUMP" | $Xsed -e "$delay_single_quote_subst"`'
+deplibs_check_method='`$ECHO "X$deplibs_check_method" | $Xsed -e "$delay_single_quote_subst"`'
+file_magic_cmd='`$ECHO "X$file_magic_cmd" | $Xsed -e "$delay_single_quote_subst"`'
+AR='`$ECHO "X$AR" | $Xsed -e "$delay_single_quote_subst"`'
+AR_FLAGS='`$ECHO "X$AR_FLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+STRIP='`$ECHO "X$STRIP" | $Xsed -e "$delay_single_quote_subst"`'
+RANLIB='`$ECHO "X$RANLIB" | $Xsed -e "$delay_single_quote_subst"`'
+old_postinstall_cmds='`$ECHO "X$old_postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_postuninstall_cmds='`$ECHO "X$old_postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_cmds='`$ECHO "X$old_archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+CC='`$ECHO "X$CC" | $Xsed -e "$delay_single_quote_subst"`'
+CFLAGS='`$ECHO "X$CFLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+compiler='`$ECHO "X$compiler" | $Xsed -e "$delay_single_quote_subst"`'
+GCC='`$ECHO "X$GCC" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_pipe='`$ECHO "X$lt_cv_sys_global_symbol_pipe" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_cdecl='`$ECHO "X$lt_cv_sys_global_symbol_to_cdecl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+objdir='`$ECHO "X$objdir" | $Xsed -e "$delay_single_quote_subst"`'
+SHELL='`$ECHO "X$SHELL" | $Xsed -e "$delay_single_quote_subst"`'
+ECHO='`$ECHO "X$ECHO" | $Xsed -e "$delay_single_quote_subst"`'
+MAGIC_CMD='`$ECHO "X$MAGIC_CMD" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_no_builtin_flag='`$ECHO "X$lt_prog_compiler_no_builtin_flag" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_wl='`$ECHO "X$lt_prog_compiler_wl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_pic='`$ECHO "X$lt_prog_compiler_pic" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_static='`$ECHO "X$lt_prog_compiler_static" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_prog_compiler_c_o='`$ECHO "X$lt_cv_prog_compiler_c_o" | $Xsed -e "$delay_single_quote_subst"`'
+need_locks='`$ECHO "X$need_locks" | $Xsed -e "$delay_single_quote_subst"`'
+DSYMUTIL='`$ECHO "X$DSYMUTIL" | $Xsed -e "$delay_single_quote_subst"`'
+NMEDIT='`$ECHO "X$NMEDIT" | $Xsed -e "$delay_single_quote_subst"`'
+LIPO='`$ECHO "X$LIPO" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL='`$ECHO "X$OTOOL" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL64='`$ECHO "X$OTOOL64" | $Xsed -e "$delay_single_quote_subst"`'
+libext='`$ECHO "X$libext" | $Xsed -e "$delay_single_quote_subst"`'
+shrext_cmds='`$ECHO "X$shrext_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+extract_expsyms_cmds='`$ECHO "X$extract_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds_need_lc='`$ECHO "X$archive_cmds_need_lc" | $Xsed -e "$delay_single_quote_subst"`'
+enable_shared_with_static_runtimes='`$ECHO "X$enable_shared_with_static_runtimes" | $Xsed -e "$delay_single_quote_subst"`'
+export_dynamic_flag_spec='`$ECHO "X$export_dynamic_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+whole_archive_flag_spec='`$ECHO "X$whole_archive_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+compiler_needs_object='`$ECHO "X$compiler_needs_object" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_new_cmds='`$ECHO "X$old_archive_from_new_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_expsyms_cmds='`$ECHO "X$old_archive_from_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds='`$ECHO "X$archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_expsym_cmds='`$ECHO "X$archive_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_cmds='`$ECHO "X$module_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_expsym_cmds='`$ECHO "X$module_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+with_gnu_ld='`$ECHO "X$with_gnu_ld" | $Xsed -e "$delay_single_quote_subst"`'
+allow_undefined_flag='`$ECHO "X$allow_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+no_undefined_flag='`$ECHO "X$no_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec='`$ECHO "X$hardcode_libdir_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec_ld='`$ECHO "X$hardcode_libdir_flag_spec_ld" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_separator='`$ECHO "X$hardcode_libdir_separator" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct='`$ECHO "X$hardcode_direct" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct_absolute='`$ECHO "X$hardcode_direct_absolute" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_minus_L='`$ECHO "X$hardcode_minus_L" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_shlibpath_var='`$ECHO "X$hardcode_shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_automatic='`$ECHO "X$hardcode_automatic" | $Xsed -e "$delay_single_quote_subst"`'
+inherit_rpath='`$ECHO "X$inherit_rpath" | $Xsed -e "$delay_single_quote_subst"`'
+link_all_deplibs='`$ECHO "X$link_all_deplibs" | $Xsed -e "$delay_single_quote_subst"`'
+fix_srcfile_path='`$ECHO "X$fix_srcfile_path" | $Xsed -e "$delay_single_quote_subst"`'
+always_export_symbols='`$ECHO "X$always_export_symbols" | $Xsed -e "$delay_single_quote_subst"`'
+export_symbols_cmds='`$ECHO "X$export_symbols_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+exclude_expsyms='`$ECHO "X$exclude_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+include_expsyms='`$ECHO "X$include_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+prelink_cmds='`$ECHO "X$prelink_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+file_list_spec='`$ECHO "X$file_list_spec" | $Xsed -e "$delay_single_quote_subst"`'
+variables_saved_for_relink='`$ECHO "X$variables_saved_for_relink" | $Xsed -e "$delay_single_quote_subst"`'
+need_lib_prefix='`$ECHO "X$need_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+need_version='`$ECHO "X$need_version" | $Xsed -e "$delay_single_quote_subst"`'
+version_type='`$ECHO "X$version_type" | $Xsed -e "$delay_single_quote_subst"`'
+runpath_var='`$ECHO "X$runpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_var='`$ECHO "X$shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_overrides_runpath='`$ECHO "X$shlibpath_overrides_runpath" | $Xsed -e "$delay_single_quote_subst"`'
+libname_spec='`$ECHO "X$libname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+library_names_spec='`$ECHO "X$library_names_spec" | $Xsed -e "$delay_single_quote_subst"`'
+soname_spec='`$ECHO "X$soname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+postinstall_cmds='`$ECHO "X$postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+postuninstall_cmds='`$ECHO "X$postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_cmds='`$ECHO "X$finish_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_eval='`$ECHO "X$finish_eval" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_into_libs='`$ECHO "X$hardcode_into_libs" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_search_path_spec='`$ECHO "X$sys_lib_search_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_dlsearch_path_spec='`$ECHO "X$sys_lib_dlsearch_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_action='`$ECHO "X$hardcode_action" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen='`$ECHO "X$enable_dlopen" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self='`$ECHO "X$enable_dlopen_self" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self_static='`$ECHO "X$enable_dlopen_self_static" | $Xsed -e "$delay_single_quote_subst"`'
+old_striplib='`$ECHO "X$old_striplib" | $Xsed -e "$delay_single_quote_subst"`'
+striplib='`$ECHO "X$striplib" | $Xsed -e "$delay_single_quote_subst"`'
+
+LTCC='$LTCC'
+LTCFLAGS='$LTCFLAGS'
+compiler='$compiler_DEFAULT'
+
+# Quote evaled strings.
+for var in SED \
+GREP \
+EGREP \
+FGREP \
+LD \
+NM \
+LN_S \
+lt_SP2NL \
+lt_NL2SP \
+reload_flag \
+OBJDUMP \
+deplibs_check_method \
+file_magic_cmd \
+AR \
+AR_FLAGS \
+STRIP \
+RANLIB \
+CC \
+CFLAGS \
+compiler \
+lt_cv_sys_global_symbol_pipe \
+lt_cv_sys_global_symbol_to_cdecl \
+lt_cv_sys_global_symbol_to_c_name_address \
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix \
+SHELL \
+ECHO \
+lt_prog_compiler_no_builtin_flag \
+lt_prog_compiler_wl \
+lt_prog_compiler_pic \
+lt_prog_compiler_static \
+lt_cv_prog_compiler_c_o \
+need_locks \
+DSYMUTIL \
+NMEDIT \
+LIPO \
+OTOOL \
+OTOOL64 \
+shrext_cmds \
+export_dynamic_flag_spec \
+whole_archive_flag_spec \
+compiler_needs_object \
+with_gnu_ld \
+allow_undefined_flag \
+no_undefined_flag \
+hardcode_libdir_flag_spec \
+hardcode_libdir_flag_spec_ld \
+hardcode_libdir_separator \
+fix_srcfile_path \
+exclude_expsyms \
+include_expsyms \
+file_list_spec \
+variables_saved_for_relink \
+libname_spec \
+library_names_spec \
+soname_spec \
+finish_eval \
+old_striplib \
+striplib; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Double-quote double-evaled strings.
+for var in reload_cmds \
+old_postinstall_cmds \
+old_postuninstall_cmds \
+old_archive_cmds \
+extract_expsyms_cmds \
+old_archive_from_new_cmds \
+old_archive_from_expsyms_cmds \
+archive_cmds \
+archive_expsym_cmds \
+module_cmds \
+module_expsym_cmds \
+export_symbols_cmds \
+prelink_cmds \
+postinstall_cmds \
+postuninstall_cmds \
+finish_cmds \
+sys_lib_search_path_spec \
+sys_lib_dlsearch_path_spec; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Fix-up fallback echo if it was mangled by the above quoting rules.
+case \$lt_ECHO in
+*'\\\$0 --fallback-echo"')  lt_ECHO=\`\$ECHO "X\$lt_ECHO" | \$Xsed -e 's/\\\\\\\\\\\\\\\$0 --fallback-echo"\$/\$0 --fallback-echo"/'\`
+  ;;
+esac
+
+ac_aux_dir='$ac_aux_dir'
+xsi_shell='$xsi_shell'
+lt_shell_append='$lt_shell_append'
+
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes INIT.
+if test -n "\${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+
+    PACKAGE='$PACKAGE'
+    VERSION='$VERSION'
+    TIMESTAMP='$TIMESTAMP'
+    RM='$RM'
+    ofile='$ofile'
+
+
+
+# Capture the value of obsolete ALL_LINGUAS because we need it to compute
+    # POFILES, GMOFILES, UPDATEPOFILES, DUMMYPOFILES, CATALOGS. But hide it
+    # from automake.
+    eval 'OBSOLETE_ALL_LINGUAS''="$ALL_LINGUAS"'
+    # Capture the value of LINGUAS because we need it to compute CATALOGS.
+    LINGUAS="${LINGUAS-%UNSET%}"
+   
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
+    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h:config.in" ;;
+    "default-1") CONFIG_COMMANDS="$CONFIG_COMMANDS default-1" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "po/Makefile.in") CONFIG_FILES="$CONFIG_FILES po/Makefile.in:po/Make-in" ;;
+
+  *) as_fn_error "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap 'as_fn_exit 1' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} || as_fn_error "cannot create a temporary directory in ." "$LINENO" 5
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+
+ac_cr=`echo X | tr X '\015'`
+# On cygwin, bash can eat \r inside `` if the user requested igncr.
+# But we know of no other shell where ac_cr would be empty at this
+# point, so we can use a bashism as a fallback.
+if test "x$ac_cr" = x; then
+  eval ac_cr=\$\'\\r\'
+fi
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$tmp/subs1.awk" &&
+_ACEOF
+
+
+{
+  echo "cat >conf$$subs.awk <<_ACEOF" &&
+  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
+  echo "_ACEOF"
+} >conf$$subs.sh ||
+  as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+ac_delim_num=`echo "$ac_subst_vars" | grep -c '$'`
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  . ./conf$$subs.sh ||
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+
+  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
+  if test $ac_delim_n = $ac_delim_num; then
+    break
+  elif $ac_last_try; then
+    as_fn_error "could not make $CONFIG_STATUS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+rm -f conf$$subs.sh
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&
+_ACEOF
+sed -n '
+h
+s/^/S["/; s/!.*/"]=/
+p
+g
+s/^[^!]*!//
+:repl
+t repl
+s/'"$ac_delim"'$//
+t delim
+:nl
+h
+s/\(.\{148\}\).*/\1/
+t more1
+s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
+p
+n
+b repl
+:more1
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t nl
+:delim
+h
+s/\(.\{148\}\).*/\1/
+t more2
+s/["\\]/\\&/g; s/^/"/; s/$/"/
+p
+b
+:more2
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t delim
+' <conf$$subs.awk | sed '
+/^[^""]/{
+  N
+  s/\n//
+}
+' >>$CONFIG_STATUS || ac_write_fail=1
+rm -f conf$$subs.awk
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACAWK
+cat >>"\$tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+
+  print line
+}
+
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
+  || as_fn_error "could not setup config files machinery" "$LINENO" 5
+_ACEOF
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+fi # test -n "$CONFIG_FILES"
+
+# Set up the scripts for CONFIG_HEADERS section.
+# No need to generate them if there are no CONFIG_HEADERS.
+# This happens for instance with `./config.status Makefile'.
+if test -n "$CONFIG_HEADERS"; then
+cat >"$tmp/defines.awk" <<\_ACAWK ||
+BEGIN {
+_ACEOF
+
+# Transform confdefs.h into an awk script `defines.awk', embedded as
+# here-document in config.status, that substitutes the proper values into
+# config.h.in to produce config.h.
+
+# Create a delimiter string that does not exist in confdefs.h, to ease
+# handling of long lines.
+ac_delim='%!_!# '
+for ac_last_try in false false :; do
+  ac_t=`sed -n "/$ac_delim/p" confdefs.h`
+  if test -z "$ac_t"; then
+    break
+  elif $ac_last_try; then
+    as_fn_error "could not make $CONFIG_HEADERS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+# For the awk script, D is an array of macro values keyed by name,
+# likewise P contains macro parameters if any.  Preserve backslash
+# newline sequences.
+
+ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
+sed -n '
+s/.\{148\}/&'"$ac_delim"'/g
+t rset
+:rset
+s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
+t def
+d
+:def
+s/\\$//
+t bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3"/p
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
+d
+:bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3\\\\\\n"\\/p
+t cont
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
+t cont
+d
+:cont
+n
+s/.\{148\}/&'"$ac_delim"'/g
+t clear
+:clear
+s/\\$//
+t bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/"/p
+d
+:bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
+b cont
+' <confdefs.h | sed '
+s/'"$ac_delim"'/"\\\
+"/g' >>$CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  for (key in D) D_is_set[key] = 1
+  FS = ""
+}
+/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
+  line = \$ 0
+  split(line, arg, " ")
+  if (arg[1] == "#") {
+    defundef = arg[2]
+    mac1 = arg[3]
+  } else {
+    defundef = substr(arg[1], 2)
+    mac1 = arg[2]
+  }
+  split(mac1, mac2, "(") #)
+  macro = mac2[1]
+  prefix = substr(line, 1, index(line, defundef) - 1)
+  if (D_is_set[macro]) {
+    # Preserve the white space surrounding the "#".
+    print prefix "define", macro P[macro] D[macro]
+    next
+  } else {
+    # Replace #undef with comments.  This is necessary, for example,
+    # in the case of _POSIX_SOURCE, which is predefined and required
+    # on some systems where configure will not decide to define it.
+    if (defundef == "undef") {
+      print "/*", prefix defundef, macro, "*/"
+      next
+    }
+  }
+}
+{ print }
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+  as_fn_error "could not setup config headers machinery" "$LINENO" 5
+fi # test -n "$CONFIG_HEADERS"
+
+
+eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) as_fn_error "invalid tag \`$ac_tag'" "$LINENO" 5;;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   as_fn_error "cannot find input file: \`$ac_f'" "$LINENO" 5;;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      as_fn_append ac_file_inputs " '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin" \
+      || as_fn_error "could not create $ac_file" "$LINENO" 5 ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  as_dir="$ac_dir"; as_fn_mkdir_p
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+  ac_MKDIR_P=$MKDIR_P
+  case $MKDIR_P in
+  [\\/$]* | ?:[\\/]* ) ;;
+  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
+  esac
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+  s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_sed_extra="$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+s&@MKDIR_P@&$ac_MKDIR_P&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out" && rm -f "$tmp/out";;
+  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
+  esac \
+  || as_fn_error "could not create $ac_file" "$LINENO" 5
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+  if test x"$ac_file" != x-; then
+    {
+      $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
+    } >"$tmp/config.h" \
+      || as_fn_error "could not create $ac_file" "$LINENO" 5
+    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
+$as_echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f "$ac_file"
+      mv "$tmp/config.h" "$ac_file" \
+	|| as_fn_error "could not create $ac_file" "$LINENO" 5
+    fi
+  else
+    $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
+      || as_fn_error "could not create -" "$LINENO" 5
+  fi
+# Compute "$ac_file"'s index in $config_headers.
+_am_arg="$ac_file"
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $_am_arg | $_am_arg:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
+$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$_am_arg" : 'X\(//\)[^/]' \| \
+	 X"$_am_arg" : 'X\(//\)$' \| \
+	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$_am_arg" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`/stamp-h$_am_stamp_count
+ ;;
+  
+  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
+$as_echo "$as_me: executing $ac_file commands" >&6;}
+ ;;
+  esac
+
+
+  case $ac_file$ac_mode in
+    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
+  # Autoconf 2.62 quotes --file arguments for eval, but not when files
+  # are listed without --file.  Let's play safe and only enable the eval
+  # if we detect the quoting.
+  case $CONFIG_FILES in
+  *\'*) eval set x "$CONFIG_FILES" ;;
+  *)   set x $CONFIG_FILES ;;
+  esac
+  shift
+  for mf
+  do
+    # Strip MF so we end up with the name of the file.
+    mf=`echo "$mf" | sed -e 's/:.*$//'`
+    # Check whether this is an Automake generated Makefile or not.
+    # We used to match only the files named `Makefile.in', but
+    # some people rename them; so instead we look at the file content.
+    # Grep'ing the first line is not enough: some people post-process
+    # each Makefile.in and add a new line on top of each file to say so.
+    # Grep'ing the whole file is not good either: AIX grep has a line
+    # limit of 2048, but all sed's we know have understand at least 4000.
+    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
+      dirpart=`$as_dirname -- "$mf" ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+    else
+      continue
+    fi
+    # Extract the definition of DEPDIR, am__include, and am__quote
+    # from the Makefile without running `make'.
+    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+    test -z "$DEPDIR" && continue
+    am__include=`sed -n 's/^am__include = //p' < "$mf"`
+    test -z "am__include" && continue
+    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+    # When using ansi2knr, U may be empty or an underscore; expand it
+    U=`sed -n 's/^U = //p' < "$mf"`
+    # Find all dependency output files, they are included files with
+    # $(DEPDIR) in their names.  We invoke sed twice because it is the
+    # simplest approach to changing $(DEPDIR) to its actual value in the
+    # expansion.
+    for file in `sed -n "
+      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+      # Make sure the directory exists.
+      test -f "$dirpart/$file" && continue
+      fdir=`$as_dirname -- "$file" ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      as_dir=$dirpart/$fdir; as_fn_mkdir_p
+      # echo "creating $dirpart/$file"
+      echo '# dummy' > "$dirpart/$file"
+    done
+  done
+}
+ ;;
+    "libtool":C) 
+    
+    # See if we are running on zsh, and set the options which allow our
+    # commands through without removal of \ escapes.
+    if test -n "${ZSH_VERSION+set}" ; then
+      setopt NO_GLOB_SUBST
+    fi
+
+    cfgfile="${ofile}T"
+    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
+    $RM "$cfgfile"
+
+    cat <<_LT_EOF >> "$cfgfile"
+#! $SHELL
+
+# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
+#                 2006, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gordon Matzigkeit, 1996
+#
+#   This file is part of GNU Libtool.
+#
+# GNU Libtool is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# As a special exception to the GNU General Public License,
+# if you distribute this file as part of a program or library that
+# is built using GNU Libtool, you may include this file under the
+# same distribution terms that you use for the rest of that program.
+#
+# GNU Libtool is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Libtool; see the file COPYING.  If not, a copy
+# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
+# obtained by writing to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+
+# The names of the tagged configurations supported by this script.
+available_tags=""
+
+# ### BEGIN LIBTOOL CONFIG
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Which release of libtool.m4 was used?
+macro_version=$macro_version
+macro_revision=$macro_revision
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# What type of objects to build.
+pic_mode=$pic_mode
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# A sed program that does not truncate output.
+SED=$lt_SED
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="\$SED -e 1s/^X//"
+
+# A grep program that handles long lines.
+GREP=$lt_GREP
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# A literal string matcher.
+FGREP=$lt_FGREP
+
+# A BSD- or MS-compatible name lister.
+NM=$lt_NM
+
+# Whether we need soft or hard links.
+LN_S=$lt_LN_S
+
+# What is the maximum length of a command?
+max_cmd_len=$max_cmd_len
+
+# Object file suffix (normally "o").
+objext=$ac_objext
+
+# Executable file suffix (normally "").
+exeext=$exeext
+
+# whether the shell understands "unset".
+lt_unset=$lt_unset
+
+# turn spaces into newlines.
+SP2NL=$lt_lt_SP2NL
+
+# turn newlines into spaces.
+NL2SP=$lt_lt_NL2SP
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# An object symbol dumper.
+OBJDUMP=$lt_OBJDUMP
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == "file_magic".
+file_magic_cmd=$lt_file_magic_cmd
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A symbol stripping program.
+STRIP=$lt_STRIP
+
+# Commands used to install an old-style archive.
+RANLIB=$lt_RANLIB
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# A C compiler.
+LTCC=$lt_CC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_CFLAGS
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration.
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair.
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# Transform the output of nm in a C name address pair when lib prefix is needed.
+global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# An echo program that does not interpret backslashes.
+ECHO=$lt_ECHO
+
+# Used to examine libraries when file_magic_cmd begins with "file".
+MAGIC_CMD=$MAGIC_CMD
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
+DSYMUTIL=$lt_DSYMUTIL
+
+# Tool to change global to local symbols on Mac OS X.
+NMEDIT=$lt_NMEDIT
+
+# Tool to manipulate fat objects and archives on Mac OS X.
+LIPO=$lt_LIPO
+
+# ldd/readelf like tool for Mach-O binaries on Mac OS X.
+OTOOL=$lt_OTOOL
+
+# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
+OTOOL64=$lt_OTOOL64
+
+# Old archive suffix (normally "a").
+libext=$libext
+
+# Shared library suffix (normally ".so").
+shrext_cmds=$lt_shrext_cmds
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at link time.
+variables_saved_for_relink=$lt_variables_saved_for_relink
+
+# Do we need the "lib" prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Library versioning type.
+version_type=$version_type
+
+# Shared library runtime path variable.
+runpath_var=$runpath_var
+
+# Shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Command to use after installation of a shared archive.
+postinstall_cmds=$lt_postinstall_cmds
+
+# Command to use after uninstallation of a shared archive.
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# As "finish_cmds", except a single script fragment to be evaled but
+# not shown.
+finish_eval=$lt_finish_eval
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Compile-time system search path for libraries.
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries.
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+
+# The linker used to build libraries.
+LD=$lt_LD
+
+# Commands used to build an old-style archive.
+old_archive_cmds=$lt_old_archive_cmds
+
+# A language specific compiler.
+CC=$lt_compiler
+
+# Is the compiler the GNU compiler?
+with_gcc=$GCC
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc
+
+# Whether or not to disallow shared libs when runtime libs are static.
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec
+
+# Whether the compiler copes with passing no objects directly.
+compiler_needs_object=$lt_compiler_needs_object
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds
+
+# Commands used to build a shared archive.
+archive_cmds=$lt_archive_cmds
+archive_expsym_cmds=$lt_archive_expsym_cmds
+
+# Commands used to build a loadable module if different from building
+# a shared archive.
+module_cmds=$lt_module_cmds
+module_expsym_cmds=$lt_module_expsym_cmds
+
+# Whether we are building with GNU ld or not.
+with_gnu_ld=$lt_with_gnu_ld
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag
+
+# Flag that enforces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
+
+# If ld is used when linking, flag to hardcode \$libdir into a binary
+# during linking.  This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld
+
+# Whether we need a single "-rpath" flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary.
+hardcode_direct=$hardcode_direct
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary and the resulting library dependency is
+# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
+# library is relocated.
+hardcode_direct_absolute=$hardcode_direct_absolute
+
+# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
+# into the resulting binary.
+hardcode_minus_L=$hardcode_minus_L
+
+# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
+# into the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var
+
+# Set to "yes" if building a shared library automatically hardcodes DIR
+# into the library and all subsequent libraries and executables linked
+# against it.
+hardcode_automatic=$hardcode_automatic
+
+# Set to yes if linker adds runtime paths of dependent libraries
+# to runtime path list.
+inherit_rpath=$inherit_rpath
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path=$lt_fix_srcfile_path
+
+# Set to "yes" if exported symbols are required.
+always_export_symbols=$always_export_symbols
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms
+
+# Commands necessary for linking programs (against libraries) with templates.
+prelink_cmds=$lt_prelink_cmds
+
+# Specify filename containing input files.
+file_list_spec=$lt_file_list_spec
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action
+
+# ### END LIBTOOL CONFIG
+
+_LT_EOF
+
+  case $host_os in
+  aix3*)
+    cat <<\_LT_EOF >> "$cfgfile"
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+_LT_EOF
+    ;;
+  esac
+
+  
+ltmain="$ac_aux_dir/ltmain.sh"
+
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  case $xsi_shell in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result="${1##*/}"
+}
+
+# func_dirname_and_basename file append nondir_replacement
+# perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# Implementation must be kept synchronized with func_dirname
+# and func_basename. For efficiency, we do not delegate to
+# those functions but instead duplicate the functionality here.
+func_dirname_and_basename ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+  func_basename_result="${1##*/}"
+}
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+func_stripname ()
+{
+  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
+  # positional parameters, so assign one to ordinary parameter first.
+  func_stripname_result=${3}
+  func_stripname_result=${func_stripname_result#"${1}"}
+  func_stripname_result=${func_stripname_result%"${2}"}
+}
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=${1%%=*}
+  func_opt_split_arg=${1#*=}
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  case ${1} in
+    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
+    *)    func_lo2o_result=${1} ;;
+  esac
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=${1%.*}.lo
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=$(( $* ))
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=${#1}
+}
+
+_LT_EOF
+    ;;
+  *) # Bourne compatible functions.
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  # Extract subdirectory from the argument.
+  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
+  if test "X$func_dirname_result" = "X${1}"; then
+    func_dirname_result="${3}"
+  else
+    func_dirname_result="$func_dirname_result${2}"
+  fi
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
+}
+
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+# func_strip_suffix prefix name
+func_stripname ()
+{
+  case ${2} in
+    .*) func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
+    *)  func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
+  esac
+}
+
+# sed scripts:
+my_sed_long_opt='1s/^\(-[^=]*\)=.*/\1/;q'
+my_sed_long_arg='1s/^-[^=]*=//'
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
+  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[^.]*$/.lo/'`
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=`expr "$@"`
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
+}
+
+_LT_EOF
+esac
+
+case $lt_shell_append in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1+=\$2"
+}
+_LT_EOF
+    ;;
+  *)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1=\$$1\$2"
+}
+
+_LT_EOF
+    ;;
+  esac
+
+
+  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" ||
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+
+ ;;
+    "default-1":C) 
+    for ac_file in $CONFIG_FILES; do
+      # Support "outfile[:infile[:infile...]]"
+      case "$ac_file" in
+        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
+      esac
+      # PO directories have a Makefile.in generated from Makefile.in.in.
+      case "$ac_file" in */Makefile.in)
+        # Adjust a relative srcdir.
+        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
+        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
+        # In autoconf-2.13 it is called $ac_given_srcdir.
+        # In autoconf-2.50 it is called $srcdir.
+        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
+        case "$ac_given_srcdir" in
+          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
+          /*) top_srcdir="$ac_given_srcdir" ;;
+          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
+        esac
+        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
+          rm -f "$ac_dir/POTFILES"
+          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
+          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ 	]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
+          POMAKEFILEDEPS="POTFILES.in"
+          # ALL_LINGUAS, POFILES, GMOFILES, UPDATEPOFILES, DUMMYPOFILES depend
+          # on $ac_dir but don't depend on user-specified configuration
+          # parameters.
+          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
+            # The LINGUAS file contains the set of available languages.
+            if test -n "$OBSOLETE_ALL_LINGUAS"; then
+              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
+            fi
+            ALL_LINGUAS_=`sed -e "/^#/d" "$ac_given_srcdir/$ac_dir/LINGUAS"`
+            # Hide the ALL_LINGUAS assigment from automake.
+            eval 'ALL_LINGUAS''=$ALL_LINGUAS_'
+            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
+          else
+            # The set of available languages was given in configure.in.
+            eval 'ALL_LINGUAS''=$OBSOLETE_ALL_LINGUAS'
+          fi
+          case "$ac_given_srcdir" in
+            .) srcdirpre= ;;
+            *) srcdirpre='$(srcdir)/' ;;
+          esac
+          POFILES=
+          GMOFILES=
+          UPDATEPOFILES=
+          DUMMYPOFILES=
+          for lang in $ALL_LINGUAS; do
+            POFILES="$POFILES $srcdirpre$lang.po"
+            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
+            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
+            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
+          done
+          # CATALOGS depends on both $ac_dir and the user's LINGUAS
+          # environment variable.
+          INST_LINGUAS=
+          if test -n "$ALL_LINGUAS"; then
+            for presentlang in $ALL_LINGUAS; do
+              useit=no
+              if test "%UNSET%" != "$LINGUAS"; then
+                desiredlanguages="$LINGUAS"
+              else
+                desiredlanguages="$ALL_LINGUAS"
+              fi
+              for desiredlang in $desiredlanguages; do
+                # Use the presentlang catalog if desiredlang is
+                #   a. equal to presentlang, or
+                #   b. a variant of presentlang (because in this case,
+                #      presentlang can be used as a fallback for messages
+                #      which are not translated in the desiredlang catalog).
+                case "$desiredlang" in
+                  "$presentlang"*) useit=yes;;
+                esac
+              done
+              if test $useit = yes; then
+                INST_LINGUAS="$INST_LINGUAS $presentlang"
+              fi
+            done
+          fi
+          CATALOGS=
+          if test -n "$INST_LINGUAS"; then
+            for lang in $INST_LINGUAS; do
+              CATALOGS="$CATALOGS $lang.gmo"
+            done
+          fi
+          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
+          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
+          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
+            if test -f "$f"; then
+              case "$f" in
+                *.orig | *.bak | *~) ;;
+                *) cat "$f" >> "$ac_dir/Makefile" ;;
+              esac
+            fi
+          done
+        fi
+        ;;
+      esac
+    done ;;
+
+  esac
+done # for ac_tag
+
+
+as_fn_exit 0
+_ACEOF
+ac_clean_files=$ac_clean_files_save
+
+test $ac_write_fail = 0 ||
+  as_fn_error "write failure creating $CONFIG_STATUS" "$LINENO" 5
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || as_fn_exit $?
+fi
+if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
+$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
+fi
+
diff -rupN binutils-2.20/opcodes/autom4te.cache/requests binutils-2.20-sean/opcodes/autom4te.cache/requests
--- binutils-2.20/opcodes/autom4te.cache/requests	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/autom4te.cache/requests	2010-10-01 14:37:34.000000000 -0600
@@ -0,0 +1,68 @@
+# This file was generated.
+# It contains the lists of macros which have been traced.
+# It can be safely removed.
+
+@request = (
+             bless( [
+                      '0',
+                      1,
+                      [
+                        '/usr/local/share/autoconf'
+                      ],
+                      [
+                        '/usr/local/share/autoconf/autoconf/autoconf.m4f',
+                        'aclocal.m4',
+                        'configure.in'
+                      ],
+                      {
+                        'AM_PROG_F77_C_O' => 1,
+                        '_LT_AC_TAGCONFIG' => 1,
+                        'm4_pattern_forbid' => 1,
+                        'AC_INIT' => 1,
+                        '_AM_COND_IF' => 1,
+                        'AC_CANONICAL_TARGET' => 1,
+                        'AC_SUBST' => 1,
+                        'AC_CONFIG_LIBOBJ_DIR' => 1,
+                        'AC_FC_SRCEXT' => 1,
+                        'AC_CANONICAL_HOST' => 1,
+                        'AC_PROG_LIBTOOL' => 1,
+                        'AM_INIT_AUTOMAKE' => 1,
+                        'AC_CONFIG_SUBDIRS' => 1,
+                        'AM_AUTOMAKE_VERSION' => 1,
+                        'LT_CONFIG_LTDL_DIR' => 1,
+                        'AC_REQUIRE_AUX_FILE' => 1,
+                        'AC_CONFIG_LINKS' => 1,
+                        'LT_SUPPORTED_TAG' => 1,
+                        'm4_sinclude' => 1,
+                        'AM_MAINTAINER_MODE' => 1,
+                        'AM_GNU_GETTEXT_INTL_SUBDIR' => 1,
+                        '_m4_warn' => 1,
+                        'AM_PROG_CXX_C_O' => 1,
+                        '_AM_COND_ENDIF' => 1,
+                        'AM_ENABLE_MULTILIB' => 1,
+                        'AM_SILENT_RULES' => 1,
+                        'AC_CONFIG_FILES' => 1,
+                        'LT_INIT' => 1,
+                        'include' => 1,
+                        'AM_GNU_GETTEXT' => 1,
+                        'AC_LIBSOURCE' => 1,
+                        'AM_PROG_FC_C_O' => 1,
+                        'AC_CANONICAL_BUILD' => 1,
+                        'AC_FC_FREEFORM' => 1,
+                        'AH_OUTPUT' => 1,
+                        '_AM_SUBST_NOTMAKE' => 1,
+                        'AC_CONFIG_AUX_DIR' => 1,
+                        'm4_pattern_allow' => 1,
+                        'sinclude' => 1,
+                        'AM_PROG_CC_C_O' => 1,
+                        'AC_CANONICAL_SYSTEM' => 1,
+                        'AM_CONDITIONAL' => 1,
+                        'AC_CONFIG_HEADERS' => 1,
+                        'AC_DEFINE_TRACE_LITERAL' => 1,
+                        'm4_include' => 1,
+                        '_AM_COND_ELSE' => 1,
+                        'AC_SUBST_TRACE' => 1
+                      }
+                    ], 'Autom4te::Request' )
+           );
+
diff -rupN binutils-2.20/opcodes/autom4te.cache/traces.0 binutils-2.20-sean/opcodes/autom4te.cache/traces.0
--- binutils-2.20/opcodes/autom4te.cache/traces.0	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/autom4te.cache/traces.0	2010-10-01 14:37:34.000000000 -0600
@@ -0,0 +1,758 @@
+m4trace:aclocal.m4:971: -1- m4_include([../bfd/acinclude.m4])
+m4trace:aclocal.m4:972: -1- m4_include([../bfd/warning.m4])
+m4trace:aclocal.m4:973: -1- m4_include([../config/acx.m4])
+m4trace:aclocal.m4:974: -1- m4_include([../config/depstand.m4])
+m4trace:aclocal.m4:975: -1- m4_include([../config/gettext-sister.m4])
+m4trace:aclocal.m4:976: -1- m4_include([../config/lead-dot.m4])
+m4trace:aclocal.m4:977: -1- m4_include([../config/nls.m4])
+m4trace:aclocal.m4:978: -1- m4_include([../config/override.m4])
+m4trace:aclocal.m4:979: -1- m4_include([../config/po.m4])
+m4trace:aclocal.m4:980: -1- m4_include([../config/progtest.m4])
+m4trace:aclocal.m4:981: -1- m4_include([../libtool.m4])
+m4trace:aclocal.m4:982: -1- m4_include([../ltoptions.m4])
+m4trace:aclocal.m4:983: -1- m4_include([../ltsugar.m4])
+m4trace:aclocal.m4:984: -1- m4_include([../ltversion.m4])
+m4trace:aclocal.m4:985: -1- m4_include([../lt~obsolete.m4])
+m4trace:configure.in:5: -1- AC_INIT
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?A[CHUM]_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([_AC_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
+m4trace:configure.in:5: -1- m4_pattern_allow([^AS_FLAGS$])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?m4_])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^dnl$])
+m4trace:configure.in:5: -1- m4_pattern_forbid([^_?AS_])
+m4trace:configure.in:5: -1- AC_SUBST([SHELL])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([SHELL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^SHELL$])
+m4trace:configure.in:5: -1- AC_SUBST([PATH_SEPARATOR])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PATH_SEPARATOR])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PATH_SEPARATOR$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_NAME], [m4_ifdef([AC_PACKAGE_NAME],      ['AC_PACKAGE_NAME'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_NAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_TARNAME], [m4_ifdef([AC_PACKAGE_TARNAME],   ['AC_PACKAGE_TARNAME'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_VERSION], [m4_ifdef([AC_PACKAGE_VERSION],   ['AC_PACKAGE_VERSION'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_VERSION])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_STRING], [m4_ifdef([AC_PACKAGE_STRING],    ['AC_PACKAGE_STRING'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_STRING])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_BUGREPORT], [m4_ifdef([AC_PACKAGE_BUGREPORT], ['AC_PACKAGE_BUGREPORT'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.in:5: -1- AC_SUBST([PACKAGE_URL], [m4_ifdef([AC_PACKAGE_URL],       ['AC_PACKAGE_URL'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([PACKAGE_URL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.in:5: -1- AC_SUBST([exec_prefix], [NONE])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([exec_prefix])
+m4trace:configure.in:5: -1- m4_pattern_allow([^exec_prefix$])
+m4trace:configure.in:5: -1- AC_SUBST([prefix], [NONE])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([prefix])
+m4trace:configure.in:5: -1- m4_pattern_allow([^prefix$])
+m4trace:configure.in:5: -1- AC_SUBST([program_transform_name], [s,x,x,])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([program_transform_name])
+m4trace:configure.in:5: -1- m4_pattern_allow([^program_transform_name$])
+m4trace:configure.in:5: -1- AC_SUBST([bindir], ['${exec_prefix}/bin'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([bindir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^bindir$])
+m4trace:configure.in:5: -1- AC_SUBST([sbindir], ['${exec_prefix}/sbin'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sbindir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sbindir$])
+m4trace:configure.in:5: -1- AC_SUBST([libexecdir], ['${exec_prefix}/libexec'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([libexecdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^libexecdir$])
+m4trace:configure.in:5: -1- AC_SUBST([datarootdir], ['${prefix}/share'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([datarootdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^datarootdir$])
+m4trace:configure.in:5: -1- AC_SUBST([datadir], ['${datarootdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([datadir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^datadir$])
+m4trace:configure.in:5: -1- AC_SUBST([sysconfdir], ['${prefix}/etc'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sysconfdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sysconfdir$])
+m4trace:configure.in:5: -1- AC_SUBST([sharedstatedir], ['${prefix}/com'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([sharedstatedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^sharedstatedir$])
+m4trace:configure.in:5: -1- AC_SUBST([localstatedir], ['${prefix}/var'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([localstatedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^localstatedir$])
+m4trace:configure.in:5: -1- AC_SUBST([includedir], ['${prefix}/include'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([includedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^includedir$])
+m4trace:configure.in:5: -1- AC_SUBST([oldincludedir], ['/usr/include'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([oldincludedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^oldincludedir$])
+m4trace:configure.in:5: -1- AC_SUBST([docdir], [m4_ifset([AC_PACKAGE_TARNAME],
+				     ['${datarootdir}/doc/${PACKAGE_TARNAME}'],
+				     ['${datarootdir}/doc/${PACKAGE}'])])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([docdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^docdir$])
+m4trace:configure.in:5: -1- AC_SUBST([infodir], ['${datarootdir}/info'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([infodir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^infodir$])
+m4trace:configure.in:5: -1- AC_SUBST([htmldir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([htmldir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^htmldir$])
+m4trace:configure.in:5: -1- AC_SUBST([dvidir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([dvidir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^dvidir$])
+m4trace:configure.in:5: -1- AC_SUBST([pdfdir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([pdfdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^pdfdir$])
+m4trace:configure.in:5: -1- AC_SUBST([psdir], ['${docdir}'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([psdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^psdir$])
+m4trace:configure.in:5: -1- AC_SUBST([libdir], ['${exec_prefix}/lib'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([libdir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^libdir$])
+m4trace:configure.in:5: -1- AC_SUBST([localedir], ['${datarootdir}/locale'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([localedir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^localedir$])
+m4trace:configure.in:5: -1- AC_SUBST([mandir], ['${datarootdir}/man'])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([mandir])
+m4trace:configure.in:5: -1- m4_pattern_allow([^mandir$])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_NAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_NAME$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_NAME], [/* Define to the full name of this package. */
+@%:@undef PACKAGE_NAME])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_TARNAME], [/* Define to the one symbol short name of this package. */
+@%:@undef PACKAGE_TARNAME])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_VERSION])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_VERSION$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_VERSION], [/* Define to the version of this package. */
+@%:@undef PACKAGE_VERSION])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_STRING])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_STRING$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_STRING], [/* Define to the full name and version of this package. */
+@%:@undef PACKAGE_STRING])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_BUGREPORT], [/* Define to the address where bug reports for this package should be sent. */
+@%:@undef PACKAGE_BUGREPORT])
+m4trace:configure.in:5: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE_URL])
+m4trace:configure.in:5: -1- m4_pattern_allow([^PACKAGE_URL$])
+m4trace:configure.in:5: -1- AH_OUTPUT([PACKAGE_URL], [/* Define to the home page for this package. */
+@%:@undef PACKAGE_URL])
+m4trace:configure.in:5: -1- AC_SUBST([DEFS])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([DEFS])
+m4trace:configure.in:5: -1- m4_pattern_allow([^DEFS$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_C])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_C])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_C$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_N])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_N])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_N$])
+m4trace:configure.in:5: -1- AC_SUBST([ECHO_T])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([ECHO_T])
+m4trace:configure.in:5: -1- m4_pattern_allow([^ECHO_T$])
+m4trace:configure.in:5: -1- AC_SUBST([LIBS])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:5: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:5: -1- AC_SUBST([build_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([build_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^build_alias$])
+m4trace:configure.in:5: -1- AC_SUBST([host_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([host_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^host_alias$])
+m4trace:configure.in:5: -1- AC_SUBST([target_alias])
+m4trace:configure.in:5: -1- AC_SUBST_TRACE([target_alias])
+m4trace:configure.in:5: -1- m4_pattern_allow([^target_alias$])
+m4trace:configure.in:8: -1- AC_CANONICAL_TARGET
+m4trace:configure.in:8: -1- AC_CANONICAL_HOST
+m4trace:configure.in:8: -1- AC_CANONICAL_BUILD
+m4trace:configure.in:8: -1- AC_REQUIRE_AUX_FILE([config.sub])
+m4trace:configure.in:8: -1- AC_REQUIRE_AUX_FILE([config.guess])
+m4trace:configure.in:8: -1- AC_SUBST([build], [$ac_cv_build])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build$])
+m4trace:configure.in:8: -1- AC_SUBST([build_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([build_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([build_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([build_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^build_os$])
+m4trace:configure.in:8: -1- AC_SUBST([host], [$ac_cv_host])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host$])
+m4trace:configure.in:8: -1- AC_SUBST([host_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([host_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([host_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([host_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^host_os$])
+m4trace:configure.in:8: -1- AC_SUBST([target], [$ac_cv_target])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target$])
+m4trace:configure.in:8: -1- AC_SUBST([target_cpu], [$[1]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_cpu])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_cpu$])
+m4trace:configure.in:8: -1- AC_SUBST([target_vendor], [$[2]])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_vendor])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_vendor$])
+m4trace:configure.in:8: -1- AC_SUBST([target_os])
+m4trace:configure.in:8: -1- AC_SUBST_TRACE([target_os])
+m4trace:configure.in:8: -1- m4_pattern_allow([^target_os$])
+m4trace:configure.in:9: -1- _m4_warn([obsolete], [The macro `AC_ISC_POSIX' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/specific.m4:464: AC_ISC_POSIX is expanded from...
+configure.in:9: the top level])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([LIBS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:9: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:9: -1- AC_SUBST([ac_ct_CC])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([ac_ct_CC])
+m4trace:configure.in:9: -1- m4_pattern_allow([^ac_ct_CC$])
+m4trace:configure.in:9: -1- AC_SUBST([EXEEXT], [$ac_cv_exeext])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([EXEEXT])
+m4trace:configure.in:9: -1- m4_pattern_allow([^EXEEXT$])
+m4trace:configure.in:9: -1- AC_SUBST([OBJEXT], [$ac_cv_objext])
+m4trace:configure.in:9: -1- AC_SUBST_TRACE([OBJEXT])
+m4trace:configure.in:9: -1- m4_pattern_allow([^OBJEXT$])
+m4trace:configure.in:18: -1- AM_INIT_AUTOMAKE([opcodes], [${BFD_VERSION}])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
+m4trace:configure.in:18: -1- AM_AUTOMAKE_VERSION([1.11])
+m4trace:configure.in:18: -1- AC_REQUIRE_AUX_FILE([install-sh])
+m4trace:configure.in:18: -1- AC_SUBST([INSTALL_PROGRAM])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([INSTALL_PROGRAM])
+m4trace:configure.in:18: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
+m4trace:configure.in:18: -1- AC_SUBST([INSTALL_SCRIPT])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([INSTALL_SCRIPT])
+m4trace:configure.in:18: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
+m4trace:configure.in:18: -1- AC_SUBST([INSTALL_DATA])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([INSTALL_DATA])
+m4trace:configure.in:18: -1- m4_pattern_allow([^INSTALL_DATA$])
+m4trace:configure.in:18: -1- AC_SUBST([am__isrc], [' -I$(srcdir)'])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__isrc])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__isrc$])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([am__isrc])
+m4trace:configure.in:18: -1- AC_SUBST([CYGPATH_W])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([CYGPATH_W])
+m4trace:configure.in:18: -1- m4_pattern_allow([^CYGPATH_W$])
+m4trace:configure.in:18: -1- AC_SUBST([PACKAGE], [opcodes])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([PACKAGE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^PACKAGE$])
+m4trace:configure.in:18: -1- AC_SUBST([VERSION], [${BFD_VERSION}])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([VERSION])
+m4trace:configure.in:18: -1- m4_pattern_allow([^VERSION$])
+m4trace:configure.in:18: -1- AC_DEFINE_TRACE_LITERAL([PACKAGE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^PACKAGE$])
+m4trace:configure.in:18: -1- AH_OUTPUT([PACKAGE], [/* Name of package */
+@%:@undef PACKAGE])
+m4trace:configure.in:18: -1- AC_DEFINE_TRACE_LITERAL([VERSION])
+m4trace:configure.in:18: -1- m4_pattern_allow([^VERSION$])
+m4trace:configure.in:18: -1- AH_OUTPUT([VERSION], [/* Version number of package */
+@%:@undef VERSION])
+m4trace:configure.in:18: -1- AC_REQUIRE_AUX_FILE([missing])
+m4trace:configure.in:18: -1- AC_SUBST([ACLOCAL])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([ACLOCAL])
+m4trace:configure.in:18: -1- m4_pattern_allow([^ACLOCAL$])
+m4trace:configure.in:18: -1- AC_SUBST([AUTOCONF])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AUTOCONF])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AUTOCONF$])
+m4trace:configure.in:18: -1- AC_SUBST([AUTOMAKE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AUTOMAKE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AUTOMAKE$])
+m4trace:configure.in:18: -1- AC_SUBST([AUTOHEADER])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AUTOHEADER])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AUTOHEADER$])
+m4trace:configure.in:18: -1- AC_SUBST([MAKEINFO])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([MAKEINFO])
+m4trace:configure.in:18: -1- m4_pattern_allow([^MAKEINFO$])
+m4trace:configure.in:18: -1- AC_SUBST([install_sh])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([install_sh])
+m4trace:configure.in:18: -1- m4_pattern_allow([^install_sh$])
+m4trace:configure.in:18: -1- AC_SUBST([STRIP])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.in:18: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.in:18: -1- AC_SUBST([INSTALL_STRIP_PROGRAM])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([INSTALL_STRIP_PROGRAM])
+m4trace:configure.in:18: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
+m4trace:configure.in:18: -1- AC_REQUIRE_AUX_FILE([install-sh])
+m4trace:configure.in:18: -1- AC_SUBST([MKDIR_P])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([MKDIR_P])
+m4trace:configure.in:18: -1- m4_pattern_allow([^MKDIR_P$])
+m4trace:configure.in:18: -1- AC_SUBST([mkdir_p], ["$MKDIR_P"])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([mkdir_p])
+m4trace:configure.in:18: -1- m4_pattern_allow([^mkdir_p$])
+m4trace:configure.in:18: -1- AC_SUBST([AWK])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AWK])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AWK$])
+m4trace:configure.in:18: -1- AC_SUBST([SET_MAKE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([SET_MAKE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^SET_MAKE$])
+m4trace:configure.in:18: -1- AC_SUBST([am__leading_dot])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__leading_dot])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__leading_dot$])
+m4trace:configure.in:18: -1- AC_SUBST([AMTAR])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AMTAR])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AMTAR$])
+m4trace:configure.in:18: -1- AC_SUBST([am__tar])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__tar])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__tar$])
+m4trace:configure.in:18: -1- AC_SUBST([am__untar])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__untar])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__untar$])
+m4trace:configure.in:18: -1- AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([DEPDIR])
+m4trace:configure.in:18: -1- m4_pattern_allow([^DEPDIR$])
+m4trace:configure.in:18: -1- AC_SUBST([am__include])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__include])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__include$])
+m4trace:configure.in:18: -1- AC_SUBST([am__quote])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__quote])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__quote$])
+m4trace:configure.in:18: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
+m4trace:configure.in:18: -1- AC_SUBST([AMDEP_TRUE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AMDEP_TRUE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AMDEP_TRUE$])
+m4trace:configure.in:18: -1- AC_SUBST([AMDEP_FALSE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AMDEP_FALSE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AMDEP_FALSE$])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
+m4trace:configure.in:18: -1- AC_SUBST([AMDEPBACKSLASH])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([AMDEPBACKSLASH])
+m4trace:configure.in:18: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
+m4trace:configure.in:18: -1- AC_SUBST([CCDEPMODE], [depmode=$am_cv_CC_dependencies_compiler_type])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([CCDEPMODE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^CCDEPMODE$])
+m4trace:configure.in:18: -1- AM_CONDITIONAL([am__fastdepCC], [
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
+m4trace:configure.in:18: -1- AC_SUBST([am__fastdepCC_TRUE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__fastdepCC_TRUE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
+m4trace:configure.in:18: -1- AC_SUBST([am__fastdepCC_FALSE])
+m4trace:configure.in:18: -1- AC_SUBST_TRACE([am__fastdepCC_FALSE])
+m4trace:configure.in:18: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
+m4trace:configure.in:18: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
+m4trace:configure.in:20: -1- AC_SUBST([CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:20: -1- AC_SUBST([CFLAGS])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CFLAGS])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CFLAGS$])
+m4trace:configure.in:20: -1- AC_SUBST([LDFLAGS])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([LDFLAGS])
+m4trace:configure.in:20: -1- m4_pattern_allow([^LDFLAGS$])
+m4trace:configure.in:20: -1- AC_SUBST([LIBS])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([LIBS])
+m4trace:configure.in:20: -1- m4_pattern_allow([^LIBS$])
+m4trace:configure.in:20: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:20: -1- AC_SUBST([CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:20: -1- AC_SUBST([CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:20: -1- AC_SUBST([CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:20: -1- AC_SUBST([CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^CC$])
+m4trace:configure.in:20: -1- AC_SUBST([ac_ct_CC])
+m4trace:configure.in:20: -1- AC_SUBST_TRACE([ac_ct_CC])
+m4trace:configure.in:20: -1- m4_pattern_allow([^ac_ct_CC$])
+m4trace:configure.in:21: -1- _m4_warn([obsolete], [The macro `AC_GNU_SOURCE' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/specific.m4:332: AC_GNU_SOURCE is expanded from...
+configure.in:21: the top level])
+m4trace:configure.in:21: -1- AC_SUBST([CPP])
+m4trace:configure.in:21: -1- AC_SUBST_TRACE([CPP])
+m4trace:configure.in:21: -1- m4_pattern_allow([^CPP$])
+m4trace:configure.in:21: -1- AC_SUBST([CPPFLAGS])
+m4trace:configure.in:21: -1- AC_SUBST_TRACE([CPPFLAGS])
+m4trace:configure.in:21: -1- m4_pattern_allow([^CPPFLAGS$])
+m4trace:configure.in:21: -1- AC_SUBST([CPP])
+m4trace:configure.in:21: -1- AC_SUBST_TRACE([CPP])
+m4trace:configure.in:21: -1- m4_pattern_allow([^CPP$])
+m4trace:configure.in:21: -1- AC_SUBST([GREP])
+m4trace:configure.in:21: -1- AC_SUBST_TRACE([GREP])
+m4trace:configure.in:21: -1- m4_pattern_allow([^GREP$])
+m4trace:configure.in:21: -1- AC_SUBST([EGREP])
+m4trace:configure.in:21: -1- AC_SUBST_TRACE([EGREP])
+m4trace:configure.in:21: -1- m4_pattern_allow([^EGREP$])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([STDC_HEADERS])
+m4trace:configure.in:21: -1- m4_pattern_allow([^STDC_HEADERS$])
+m4trace:configure.in:21: -1- AH_OUTPUT([STDC_HEADERS], [/* Define to 1 if you have the ANSI C header files. */
+@%:@undef STDC_HEADERS])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_SYS_TYPES_H], [/* Define to 1 if you have the <sys/types.h> header file. */
+@%:@undef HAVE_SYS_TYPES_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_SYS_STAT_H], [/* Define to 1 if you have the <sys/stat.h> header file. */
+@%:@undef HAVE_SYS_STAT_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
+@%:@undef HAVE_STDLIB_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
+@%:@undef HAVE_STRING_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_MEMORY_H], [/* Define to 1 if you have the <memory.h> header file. */
+@%:@undef HAVE_MEMORY_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
+@%:@undef HAVE_STRINGS_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_INTTYPES_H], [/* Define to 1 if you have the <inttypes.h> header file. */
+@%:@undef HAVE_INTTYPES_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_STDINT_H], [/* Define to 1 if you have the <stdint.h> header file. */
+@%:@undef HAVE_STDINT_H])
+m4trace:configure.in:21: -1- AH_OUTPUT([HAVE_UNISTD_H], [/* Define to 1 if you have the <unistd.h> header file. */
+@%:@undef HAVE_UNISTD_H])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_SOURCE])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_POSIX_SOURCE$])
+m4trace:configure.in:21: -1- AH_OUTPUT([_POSIX_SOURCE], [/* Define to 1 if you need to in order for `stat\' and other things to work. */
+@%:@undef _POSIX_SOURCE])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_1_SOURCE])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
+m4trace:configure.in:21: -1- AH_OUTPUT([_POSIX_1_SOURCE], [/* Define to 2 if the system does not provide POSIX.1 features except with
+   this defined. */
+@%:@undef _POSIX_1_SOURCE])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_MINIX])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_MINIX$])
+m4trace:configure.in:21: -1- AH_OUTPUT([_MINIX], [/* Define to 1 if on MINIX. */
+@%:@undef _MINIX])
+m4trace:configure.in:21: -1- AH_OUTPUT([USE_SYSTEM_EXTENSIONS], [/* Enable extensions on AIX 3, Interix.  */
+#ifndef _ALL_SOURCE
+# undef _ALL_SOURCE
+#endif
+/* Enable GNU extensions on systems that have them.  */
+#ifndef _GNU_SOURCE
+# undef _GNU_SOURCE
+#endif
+/* Enable threading extensions on Solaris.  */
+#ifndef _POSIX_PTHREAD_SEMANTICS
+# undef _POSIX_PTHREAD_SEMANTICS
+#endif
+/* Enable extensions on HP NonStop.  */
+#ifndef _TANDEM_SOURCE
+# undef _TANDEM_SOURCE
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# undef __EXTENSIONS__
+#endif
+])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([__EXTENSIONS__])
+m4trace:configure.in:21: -1- m4_pattern_allow([^__EXTENSIONS__$])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_ALL_SOURCE])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_ALL_SOURCE$])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_GNU_SOURCE])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_GNU_SOURCE$])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_POSIX_PTHREAD_SEMANTICS])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
+m4trace:configure.in:21: -1- AC_DEFINE_TRACE_LITERAL([_TANDEM_SOURCE])
+m4trace:configure.in:21: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
+m4trace:configure.in:26: -1- AC_SUBST([AR])
+m4trace:configure.in:26: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.in:26: -1- m4_pattern_allow([^AR$])
+m4trace:configure.in:27: -1- AC_SUBST([RANLIB])
+m4trace:configure.in:27: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.in:27: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.in:33: -1- LT_INIT
+m4trace:configure.in:33: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
+m4trace:configure.in:33: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
+m4trace:configure.in:33: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
+m4trace:configure.in:33: -1- AC_SUBST([LIBTOOL])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([LIBTOOL])
+m4trace:configure.in:33: -1- m4_pattern_allow([^LIBTOOL$])
+m4trace:configure.in:33: -1- AC_SUBST([SED])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([SED])
+m4trace:configure.in:33: -1- m4_pattern_allow([^SED$])
+m4trace:configure.in:33: -1- AC_SUBST([FGREP])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([FGREP])
+m4trace:configure.in:33: -1- m4_pattern_allow([^FGREP$])
+m4trace:configure.in:33: -1- AC_SUBST([GREP])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([GREP])
+m4trace:configure.in:33: -1- m4_pattern_allow([^GREP$])
+m4trace:configure.in:33: -1- AC_SUBST([LD])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([LD])
+m4trace:configure.in:33: -1- m4_pattern_allow([^LD$])
+m4trace:configure.in:33: -1- AC_SUBST([DUMPBIN])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([DUMPBIN])
+m4trace:configure.in:33: -1- m4_pattern_allow([^DUMPBIN$])
+m4trace:configure.in:33: -1- AC_SUBST([ac_ct_DUMPBIN])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([ac_ct_DUMPBIN])
+m4trace:configure.in:33: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
+m4trace:configure.in:33: -1- AC_SUBST([DUMPBIN])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([DUMPBIN])
+m4trace:configure.in:33: -1- m4_pattern_allow([^DUMPBIN$])
+m4trace:configure.in:33: -1- AC_SUBST([NM])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([NM])
+m4trace:configure.in:33: -1- m4_pattern_allow([^NM$])
+m4trace:configure.in:33: -1- AC_SUBST([LN_S], [$as_ln_s])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([LN_S])
+m4trace:configure.in:33: -1- m4_pattern_allow([^LN_S$])
+m4trace:configure.in:33: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.in:33: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.in:33: -1- AC_SUBST([OBJDUMP])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([OBJDUMP])
+m4trace:configure.in:33: -1- m4_pattern_allow([^OBJDUMP$])
+m4trace:configure.in:33: -1- AC_SUBST([AR])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([AR])
+m4trace:configure.in:33: -1- m4_pattern_allow([^AR$])
+m4trace:configure.in:33: -1- AC_SUBST([STRIP])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([STRIP])
+m4trace:configure.in:33: -1- m4_pattern_allow([^STRIP$])
+m4trace:configure.in:33: -1- AC_SUBST([RANLIB])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([RANLIB])
+m4trace:configure.in:33: -1- m4_pattern_allow([^RANLIB$])
+m4trace:configure.in:33: -1- m4_pattern_allow([LT_OBJDIR])
+m4trace:configure.in:33: -1- AC_DEFINE_TRACE_LITERAL([LT_OBJDIR])
+m4trace:configure.in:33: -1- m4_pattern_allow([^LT_OBJDIR$])
+m4trace:configure.in:33: -1- AH_OUTPUT([LT_OBJDIR], [/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+@%:@undef LT_OBJDIR])
+m4trace:configure.in:33: -1- AC_SUBST([lt_ECHO])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([lt_ECHO])
+m4trace:configure.in:33: -1- m4_pattern_allow([^lt_ECHO$])
+m4trace:configure.in:33: -1- LT_SUPPORTED_TAG([CC])
+m4trace:configure.in:33: -1- AC_SUBST([DSYMUTIL])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([DSYMUTIL])
+m4trace:configure.in:33: -1- m4_pattern_allow([^DSYMUTIL$])
+m4trace:configure.in:33: -1- AC_SUBST([NMEDIT])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([NMEDIT])
+m4trace:configure.in:33: -1- m4_pattern_allow([^NMEDIT$])
+m4trace:configure.in:33: -1- AC_SUBST([LIPO])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([LIPO])
+m4trace:configure.in:33: -1- m4_pattern_allow([^LIPO$])
+m4trace:configure.in:33: -1- AC_SUBST([OTOOL])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([OTOOL])
+m4trace:configure.in:33: -1- m4_pattern_allow([^OTOOL$])
+m4trace:configure.in:33: -1- AC_SUBST([OTOOL64])
+m4trace:configure.in:33: -1- AC_SUBST_TRACE([OTOOL64])
+m4trace:configure.in:33: -1- m4_pattern_allow([^OTOOL64$])
+m4trace:configure.in:33: -1- AH_OUTPUT([HAVE_DLFCN_H], [/* Define to 1 if you have the <dlfcn.h> header file. */
+@%:@undef HAVE_DLFCN_H])
+m4trace:configure.in:33: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DLFCN_H])
+m4trace:configure.in:33: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
+m4trace:configure.in:44: -1- AC_SUBST([WARN_CFLAGS])
+m4trace:configure.in:44: -1- AC_SUBST_TRACE([WARN_CFLAGS])
+m4trace:configure.in:44: -1- m4_pattern_allow([^WARN_CFLAGS$])
+m4trace:configure.in:44: -1- AC_SUBST([NO_WERROR])
+m4trace:configure.in:44: -1- AC_SUBST_TRACE([NO_WERROR])
+m4trace:configure.in:44: -1- m4_pattern_allow([^NO_WERROR$])
+m4trace:configure.in:46: -1- AC_CONFIG_HEADERS([config.h:config.in])
+m4trace:configure.in:52: -1- AM_MAINTAINER_MODE
+m4trace:configure.in:52: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
+m4trace:configure.in:52: -1- AC_SUBST([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:52: -1- AC_SUBST_TRACE([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:52: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
+m4trace:configure.in:52: -1- AC_SUBST([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:52: -1- AC_SUBST_TRACE([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:52: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
+m4trace:configure.in:52: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
+m4trace:configure.in:52: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
+m4trace:configure.in:52: -1- AC_SUBST([MAINT])
+m4trace:configure.in:52: -1- AC_SUBST_TRACE([MAINT])
+m4trace:configure.in:52: -1- m4_pattern_allow([^MAINT$])
+m4trace:configure.in:53: -1- AM_CONDITIONAL([INSTALL_LIBBFD], [test $install_libbfd_p = yes])
+m4trace:configure.in:53: -1- AC_SUBST([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:53: -1- m4_pattern_allow([^INSTALL_LIBBFD_TRUE$])
+m4trace:configure.in:53: -1- AC_SUBST([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:53: -1- m4_pattern_allow([^INSTALL_LIBBFD_FALSE$])
+m4trace:configure.in:53: -1- _AM_SUBST_NOTMAKE([INSTALL_LIBBFD_TRUE])
+m4trace:configure.in:53: -1- _AM_SUBST_NOTMAKE([INSTALL_LIBBFD_FALSE])
+m4trace:configure.in:53: -1- AC_SUBST([host_noncanonical])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([host_noncanonical])
+m4trace:configure.in:53: -1- m4_pattern_allow([^host_noncanonical$])
+m4trace:configure.in:53: -1- AC_SUBST([target_noncanonical])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([target_noncanonical])
+m4trace:configure.in:53: -1- m4_pattern_allow([^target_noncanonical$])
+m4trace:configure.in:53: -1- AC_SUBST([bfdlibdir])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([bfdlibdir])
+m4trace:configure.in:53: -1- m4_pattern_allow([^bfdlibdir$])
+m4trace:configure.in:53: -1- _AM_SUBST_NOTMAKE([bfdlibdir])
+m4trace:configure.in:53: -1- AC_SUBST([bfdincludedir])
+m4trace:configure.in:53: -1- AC_SUBST_TRACE([bfdincludedir])
+m4trace:configure.in:53: -1- m4_pattern_allow([^bfdincludedir$])
+m4trace:configure.in:53: -1- _AM_SUBST_NOTMAKE([bfdincludedir])
+m4trace:configure.in:59: -1- AC_SUBST([USE_NLS])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([USE_NLS])
+m4trace:configure.in:59: -1- m4_pattern_allow([^USE_NLS$])
+m4trace:configure.in:59: -1- AC_SUBST([LIBINTL])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([LIBINTL])
+m4trace:configure.in:59: -1- m4_pattern_allow([^LIBINTL$])
+m4trace:configure.in:59: -1- AC_SUBST([LIBINTL_DEP])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([LIBINTL_DEP])
+m4trace:configure.in:59: -1- m4_pattern_allow([^LIBINTL_DEP$])
+m4trace:configure.in:59: -1- AC_SUBST([INCINTL])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([INCINTL])
+m4trace:configure.in:59: -1- m4_pattern_allow([^INCINTL$])
+m4trace:configure.in:59: -1- AC_SUBST([XGETTEXT])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([XGETTEXT])
+m4trace:configure.in:59: -1- m4_pattern_allow([^XGETTEXT$])
+m4trace:configure.in:59: -1- AC_SUBST([GMSGFMT])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([GMSGFMT])
+m4trace:configure.in:59: -1- m4_pattern_allow([^GMSGFMT$])
+m4trace:configure.in:59: -1- AC_SUBST([POSUB])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([POSUB])
+m4trace:configure.in:59: -1- m4_pattern_allow([^POSUB$])
+m4trace:configure.in:59: -1- AC_DEFINE_TRACE_LITERAL([ENABLE_NLS])
+m4trace:configure.in:59: -1- m4_pattern_allow([^ENABLE_NLS$])
+m4trace:configure.in:59: -1- AH_OUTPUT([ENABLE_NLS], [/* Define to 1 if translation of program messages to the user\'s native
+   language is requested. */
+@%:@undef ENABLE_NLS])
+m4trace:configure.in:59: -1- AC_SUBST([CATALOGS])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([CATALOGS])
+m4trace:configure.in:59: -1- m4_pattern_allow([^CATALOGS$])
+m4trace:configure.in:59: -1- AC_SUBST([DATADIRNAME])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([DATADIRNAME])
+m4trace:configure.in:59: -1- m4_pattern_allow([^DATADIRNAME$])
+m4trace:configure.in:59: -1- AC_SUBST([INSTOBJEXT])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([INSTOBJEXT])
+m4trace:configure.in:59: -1- m4_pattern_allow([^INSTOBJEXT$])
+m4trace:configure.in:59: -1- AC_SUBST([GENCAT])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([GENCAT])
+m4trace:configure.in:59: -1- m4_pattern_allow([^GENCAT$])
+m4trace:configure.in:59: -1- AC_SUBST([CATOBJEXT])
+m4trace:configure.in:59: -1- AC_SUBST_TRACE([CATOBJEXT])
+m4trace:configure.in:59: -1- m4_pattern_allow([^CATOBJEXT$])
+m4trace:configure.in:60: -1- AC_SUBST([MKINSTALLDIRS])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([MKINSTALLDIRS])
+m4trace:configure.in:60: -1- m4_pattern_allow([^MKINSTALLDIRS$])
+m4trace:configure.in:60: -1- AC_SUBST([USE_NLS])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([USE_NLS])
+m4trace:configure.in:60: -1- m4_pattern_allow([^USE_NLS$])
+m4trace:configure.in:60: -1- AC_SUBST([MSGFMT])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([MSGFMT])
+m4trace:configure.in:60: -1- m4_pattern_allow([^MSGFMT$])
+m4trace:configure.in:60: -1- AC_SUBST([GMSGFMT])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([GMSGFMT])
+m4trace:configure.in:60: -1- m4_pattern_allow([^GMSGFMT$])
+m4trace:configure.in:60: -1- AC_SUBST([XGETTEXT])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([XGETTEXT])
+m4trace:configure.in:60: -1- m4_pattern_allow([^XGETTEXT$])
+m4trace:configure.in:60: -1- AC_SUBST([MSGMERGE])
+m4trace:configure.in:60: -1- AC_SUBST_TRACE([MSGMERGE])
+m4trace:configure.in:60: -1- m4_pattern_allow([^MSGMERGE$])
+m4trace:configure.in:60: -1- _m4_warn([obsolete], [The macro `AC_OUTPUT_COMMANDS' is obsolete.
+You should run autoupdate.], [../../lib/autoconf/status.m4:1040: AC_OUTPUT_COMMANDS is expanded from...
+../config/po.m4:23: AM_PO_SUBDIRS is expanded from...
+configure.in:60: the top level])
+m4trace:configure.in:64: -1- AC_SUBST([CC_FOR_BUILD])
+m4trace:configure.in:64: -1- AC_SUBST_TRACE([CC_FOR_BUILD])
+m4trace:configure.in:64: -1- m4_pattern_allow([^CC_FOR_BUILD$])
+m4trace:configure.in:64: -1- AC_SUBST([EXEEXT_FOR_BUILD])
+m4trace:configure.in:64: -1- AC_SUBST_TRACE([EXEEXT_FOR_BUILD])
+m4trace:configure.in:64: -1- m4_pattern_allow([^EXEEXT_FOR_BUILD$])
+m4trace:configure.in:66: -1- AC_SUBST([HDEFINES])
+m4trace:configure.in:66: -1- AC_SUBST_TRACE([HDEFINES])
+m4trace:configure.in:66: -1- m4_pattern_allow([^HDEFINES$])
+m4trace:configure.in:69: -1- AH_OUTPUT([HAVE_STRING_H], [/* Define to 1 if you have the <string.h> header file. */
+@%:@undef HAVE_STRING_H])
+m4trace:configure.in:69: -1- AH_OUTPUT([HAVE_STRINGS_H], [/* Define to 1 if you have the <strings.h> header file. */
+@%:@undef HAVE_STRINGS_H])
+m4trace:configure.in:69: -1- AH_OUTPUT([HAVE_STDLIB_H], [/* Define to 1 if you have the <stdlib.h> header file. */
+@%:@undef HAVE_STDLIB_H])
+m4trace:configure.in:69: -1- AH_OUTPUT([HAVE_LIMITS_H], [/* Define to 1 if you have the <limits.h> header file. */
+@%:@undef HAVE_LIMITS_H])
+m4trace:configure.in:71: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_BASENAME])
+m4trace:configure.in:71: -1- m4_pattern_allow([^HAVE_DECL_BASENAME$])
+m4trace:configure.in:71: -1- AH_OUTPUT([HAVE_DECL_BASENAME], [/* Define to 1 if you have the declaration of `basename\', and to 0 if you
+   don\'t. */
+@%:@undef HAVE_DECL_BASENAME])
+m4trace:configure.in:71: -1- AC_DEFINE_TRACE_LITERAL([HAVE_DECL_STPCPY])
+m4trace:configure.in:71: -1- m4_pattern_allow([^HAVE_DECL_STPCPY$])
+m4trace:configure.in:71: -1- AH_OUTPUT([HAVE_DECL_STPCPY], [/* Define to 1 if you have the declaration of `stpcpy\', and to 0 if you don\'t.
+   */
+@%:@undef HAVE_DECL_STPCPY])
+m4trace:configure.in:89: -1- AM_CONDITIONAL([CGEN_MAINT], [test x${cgen_maint} = xyes])
+m4trace:configure.in:89: -1- AC_SUBST([CGEN_MAINT_TRUE])
+m4trace:configure.in:89: -1- AC_SUBST_TRACE([CGEN_MAINT_TRUE])
+m4trace:configure.in:89: -1- m4_pattern_allow([^CGEN_MAINT_TRUE$])
+m4trace:configure.in:89: -1- AC_SUBST([CGEN_MAINT_FALSE])
+m4trace:configure.in:89: -1- AC_SUBST_TRACE([CGEN_MAINT_FALSE])
+m4trace:configure.in:89: -1- m4_pattern_allow([^CGEN_MAINT_FALSE$])
+m4trace:configure.in:89: -1- _AM_SUBST_NOTMAKE([CGEN_MAINT_TRUE])
+m4trace:configure.in:89: -1- _AM_SUBST_NOTMAKE([CGEN_MAINT_FALSE])
+m4trace:configure.in:90: -1- AC_SUBST([cgendir])
+m4trace:configure.in:90: -1- AC_SUBST_TRACE([cgendir])
+m4trace:configure.in:90: -1- m4_pattern_allow([^cgendir$])
+m4trace:configure.in:102: -1- AC_SUBST([LIBM])
+m4trace:configure.in:102: -1- AC_SUBST_TRACE([LIBM])
+m4trace:configure.in:102: -1- m4_pattern_allow([^LIBM$])
+m4trace:configure.in:117: -1- AC_SUBST([BUILD_LIBS])
+m4trace:configure.in:117: -1- AC_SUBST_TRACE([BUILD_LIBS])
+m4trace:configure.in:117: -1- m4_pattern_allow([^BUILD_LIBS$])
+m4trace:configure.in:118: -1- AC_SUBST([BUILD_LIB_DEPS])
+m4trace:configure.in:118: -1- AC_SUBST_TRACE([BUILD_LIB_DEPS])
+m4trace:configure.in:118: -1- m4_pattern_allow([^BUILD_LIB_DEPS$])
+m4trace:configure.in:174: -1- AC_SUBST([SHARED_LDFLAGS])
+m4trace:configure.in:174: -1- AC_SUBST_TRACE([SHARED_LDFLAGS])
+m4trace:configure.in:174: -1- m4_pattern_allow([^SHARED_LDFLAGS$])
+m4trace:configure.in:175: -1- AC_SUBST([SHARED_LIBADD])
+m4trace:configure.in:175: -1- AC_SUBST_TRACE([SHARED_LIBADD])
+m4trace:configure.in:175: -1- m4_pattern_allow([^SHARED_LIBADD$])
+m4trace:configure.in:176: -1- AC_SUBST([SHARED_DEPENDENCIES])
+m4trace:configure.in:176: -1- AC_SUBST_TRACE([SHARED_DEPENDENCIES])
+m4trace:configure.in:176: -1- m4_pattern_allow([^SHARED_DEPENDENCIES$])
+m4trace:configure.in:347: -1- AC_SUBST([archdefs])
+m4trace:configure.in:347: -1- AC_SUBST_TRACE([archdefs])
+m4trace:configure.in:347: -1- m4_pattern_allow([^archdefs$])
+m4trace:configure.in:348: -1- AC_SUBST([BFD_MACHINES])
+m4trace:configure.in:348: -1- AC_SUBST_TRACE([BFD_MACHINES])
+m4trace:configure.in:348: -1- m4_pattern_allow([^BFD_MACHINES$])
+m4trace:configure.in:350: -1- AC_CONFIG_FILES([Makefile po/Makefile.in:po/Make-in])
+m4trace:configure.in:351: -1- AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([LIB@&t@OBJS])
+m4trace:configure.in:351: -1- m4_pattern_allow([^LIB@&t@OBJS$])
+m4trace:configure.in:351: -1- AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([LTLIBOBJS])
+m4trace:configure.in:351: -1- m4_pattern_allow([^LTLIBOBJS$])
+m4trace:configure.in:351: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
+m4trace:configure.in:351: -1- AC_SUBST([am__EXEEXT_TRUE])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([am__EXEEXT_TRUE])
+m4trace:configure.in:351: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
+m4trace:configure.in:351: -1- AC_SUBST([am__EXEEXT_FALSE])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([am__EXEEXT_FALSE])
+m4trace:configure.in:351: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
+m4trace:configure.in:351: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
+m4trace:configure.in:351: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([top_builddir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([top_build_prefix])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([srcdir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([abs_srcdir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([top_srcdir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([abs_top_srcdir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([builddir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([abs_builddir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([abs_top_builddir])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([INSTALL])
+m4trace:configure.in:351: -1- AC_SUBST_TRACE([MKDIR_P])
+m4trace:configure.in:351: -1- AC_REQUIRE_AUX_FILE([ltmain.sh])
diff -rupN binutils-2.20/opcodes/avr-dis.c binutils-2.20-sean/opcodes/avr-dis.c
--- binutils-2.20/opcodes/avr-dis.c	2008-11-06 05:03:24.000000000 -0700
+++ binutils-2.20-sean/opcodes/avr-dis.c	2010-10-01 14:37:34.000000000 -0600
@@ -287,9 +287,7 @@ print_insn_avr (bfd_vma addr, disassembl
       
       avr_bin_masks = xmalloc (nopcodes * sizeof (unsigned int));
 
-      for (opcode = avr_opcodes, maskptr = avr_bin_masks;
-	   opcode->name;
-	   opcode++, maskptr++)
+      for (opcode = avr_opcodes, maskptr = avr_bin_masks; opcode->name; opcode++, maskptr++)
 	{
 	  char * s;
 	  unsigned int bin = 0;
diff -rupN binutils-2.20/opcodes/configure binutils-2.20-sean/opcodes/configure
--- binutils-2.20/opcodes/configure	2009-09-07 06:08:04.000000000 -0600
+++ binutils-2.20-sean/opcodes/configure	2010-10-01 14:37:34.000000000 -0600
@@ -12310,6 +12310,8 @@ if test x${all_targets} = xfalse ; then
 	bfd_m32r_arch)		ta="$ta m32r-asm.lo m32r-desc.lo m32r-dis.lo m32r-ibld.lo m32r-opc.lo m32r-opinst.lo" using_cgen=yes ;;
 	bfd_m68hc11_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
 	bfd_m68hc12_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
+	bfd_mc9s12x_arch)	ta="$ta mc9s12x-dis.lo mc9s12x-opc.lo" ;;
+	bfd_mc9xgate_arch)	ta="$ta mc9xgate-dis.lo mc9xgate-opc.lo" ;;
 	bfd_m68k_arch)		ta="$ta m68k-dis.lo m68k-opc.lo" ;;
 	bfd_m88k_arch)		ta="$ta m88k-dis.lo" ;;
 	bfd_maxq_arch)		ta="$ta maxq-dis.lo" ;;
diff -rupN binutils-2.20/opcodes/configure.in binutils-2.20-sean/opcodes/configure.in
--- binutils-2.20/opcodes/configure.in	2009-09-07 06:07:53.000000000 -0600
+++ binutils-2.20-sean/opcodes/configure.in	2010-10-01 14:37:34.000000000 -0600
@@ -249,6 +249,8 @@ if test x${all_targets} = xfalse ; then
 	bfd_m32r_arch)		ta="$ta m32r-asm.lo m32r-desc.lo m32r-dis.lo m32r-ibld.lo m32r-opc.lo m32r-opinst.lo" using_cgen=yes ;;
 	bfd_m68hc11_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
 	bfd_m68hc12_arch)	ta="$ta m68hc11-dis.lo m68hc11-opc.lo" ;;
+	bfd_mc9s12x_arch)	ta="$ta mc9s12x-dis.lo mc9s12x-opc.lo" ;;
+	bfd_mc9xgate_arch)	ta="$ta mc9xgate-dis.lo mc9xgate-opc.lo" ;;
 	bfd_m68k_arch)		ta="$ta m68k-dis.lo m68k-opc.lo" ;;
 	bfd_m88k_arch)		ta="$ta m88k-dis.lo" ;;
 	bfd_maxq_arch)		ta="$ta maxq-dis.lo" ;;
diff -rupN binutils-2.20/opcodes/disassemble.c binutils-2.20-sean/opcodes/disassemble.c
--- binutils-2.20/opcodes/disassemble.c	2009-09-02 01:20:29.000000000 -0600
+++ binutils-2.20-sean/opcodes/disassemble.c	2010-10-01 14:37:34.000000000 -0600
@@ -51,6 +51,8 @@
 #define ARCH_m32r
 #define ARCH_m68hc11
 #define ARCH_m68hc12
+#define ARCH_mc9s12x
+#define ARCH_mc9xgate
 #define ARCH_m68k
 #define ARCH_m88k
 #define ARCH_maxq
@@ -99,6 +101,7 @@ disassembler_ftype
 disassembler (abfd)
      bfd *abfd;
 {
+  printf("\n arch is %s", abfd->arch_info->arch_name);
   enum bfd_architecture a = bfd_get_arch (abfd);
   disassembler_ftype disassemble;
 
@@ -245,6 +248,16 @@ disassembler (abfd)
       disassemble = print_insn_m68hc12;
       break;
 #endif
+#ifdef ARCH_mc9s12x
+    case bfd_arch_mc9s12x:
+      disassemble = print_insn_mc9s12x;
+      break;
+#endif
+#ifdef ARCH_mc9xgate
+    case bfd_arch_mc9xgate:
+      disassemble = print_insn_mc9xgate;
+      break;
+#endif
 #ifdef ARCH_m68k
     case bfd_arch_m68k:
       disassemble = print_insn_m68k;
diff -rupN binutils-2.20/opcodes/m68hc11-dis.c binutils-2.20-sean/opcodes/m68hc11-dis.c
--- binutils-2.20/opcodes/m68hc11-dis.c	2009-09-02 01:20:30.000000000 -0600
+++ binutils-2.20-sean/opcodes/m68hc11-dis.c	2010-10-01 14:37:35.000000000 -0600
@@ -252,16 +252,19 @@ print_insn (bfd_vma memaddr, struct disa
     {
       pos++;
       format = M6811_OP_PAGE2;
+      printf("\n yes M6811_OPCODE_PAGE2\n");
     }
   else if (code == M6811_OPCODE_PAGE3 && arch == cpu6811)
     {
       pos++;
       format = M6811_OP_PAGE3;
+      printf("\n yes M6811_OPCODE_PAGE3\n");
     }
   else if (code == M6811_OPCODE_PAGE4 && arch == cpu6811)
     {
       pos++;
       format = M6811_OP_PAGE4;
+      printf("\n yes M6811_OPCODE_PAGE4\n");
     }
 
   /* We are in page2,3,4; get the real opcode.  */
@@ -312,6 +315,7 @@ print_insn (bfd_vma memaddr, struct disa
   /* Scan the opcode table until we find the opcode
      with the corresponding page.  */
   opcode = m68hc11_opcodes;
+  printf("\n starting print_ins %d and %d \n",opcode->arch,arch);  // returns 1 and 2 , return 1 and 6 in mc9s12x
   for (i = 0; i < m68hc11_num_opcodes; i++, opcode++)
     {
       int offset;
diff -rupN binutils-2.20/opcodes/mc9s12x-dis.c binutils-2.20-sean/opcodes/mc9s12x-dis.c
--- binutils-2.20/opcodes/mc9s12x-dis.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9s12x-dis.c	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,752 @@
+/* m68hc11-dis.c -- Motorola 68HC11 & 68HC12 disassembly
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include <stdio.h>
+
+#include "ansidecl.h"
+#include "opcode/mc9s12x.h"
+#include "dis-asm.h"
+
+#define PC_REGNUM 3
+
+static const char *const reg_name[] = {
+  "X", "Y", "SP", "PC"
+};
+
+static const char *const reg_src_table[] = {
+  "A", "B", "CCR", "TMP3", "D", "X", "Y", "SP"
+};
+
+static const char *const reg_dst_table[] = {
+  "A", "B", "CCR", "TMP2", "D", "X", "Y", "SP"
+};
+
+#define OP_PAGE_MASK (MC9S12X_OP_PAGE2|MC9S12X_OP_PAGE3|MC9S12X_OP_PAGE4)  // was M6811
+
+/* Prototypes for local functions.  */
+static int read_memory (bfd_vma, bfd_byte *, int, struct disassemble_info *);
+static int print_indexed_operand (bfd_vma, struct disassemble_info *,
+                                  int*, int, int, bfd_vma);
+static int print_insn (bfd_vma, struct disassemble_info *, int);
+
+static int
+read_memory (bfd_vma memaddr, bfd_byte* buffer, int size,
+             struct disassemble_info* info)
+{
+  int status;
+
+  /* Get first byte.  Only one at a time because we don't know the
+     size of the insn.  */
+  status = (*info->read_memory_func) (memaddr, buffer, size, info);
+  if (status != 0)
+    {
+      (*info->memory_error_func) (status, memaddr, info);
+      return -1;
+    }
+  return 0;
+}
+
+
+/* Read the 68HC12 indexed operand byte and print the corresponding mode.
+   Returns the number of bytes read or -1 if failure.  */
+static int
+print_indexed_operand (bfd_vma memaddr, struct disassemble_info* info,
+                       int* indirect, int mov_insn, int pc_offset,
+                       bfd_vma endaddr)
+{
+  bfd_byte buffer[4];
+  int reg;
+  int status;
+  short sval;
+  int pos = 1;
+
+  if (indirect)
+    *indirect = 0;
+
+  status = read_memory (memaddr, &buffer[0], 1, info);
+  if (status != 0)
+    {
+      return status;
+    }
+
+  /* n,r with 5-bits signed constant.  */
+  if ((buffer[0] & 0x20) == 0)
+    {
+      reg = (buffer[0] >> 6) & 3;
+      sval = (buffer[0] & 0x1f);
+      if (sval & 0x10)
+	sval |= 0xfff0;
+      /* 68HC12 requires an adjustment for movb/movw pc relative modes.  */
+      if (reg == PC_REGNUM && info->mach == bfd_mach_mc9s12x && mov_insn)
+        sval += pc_offset;
+      (*info->fprintf_func) (info->stream, "%d,%s",
+			     (int) sval, reg_name[reg]);
+
+      if (reg == PC_REGNUM)
+        {
+          (* info->fprintf_func) (info->stream, " {");
+          (* info->print_address_func) (endaddr + sval, info);
+          (* info->fprintf_func) (info->stream, "}");
+        }
+    }
+
+  /* Auto pre/post increment/decrement.  */
+  else if ((buffer[0] & 0xc0) != 0xc0)
+    {
+      const char *mode;
+
+      reg = (buffer[0] >> 6) & 3;
+      sval = (buffer[0] & 0x0f);
+      if (sval & 0x8)
+	{
+	  sval |= 0xfff0;
+	  sval = -sval;
+	  mode = "-";
+	}
+      else
+	{
+	  sval = sval + 1;
+	  mode = "+";
+	}
+      (*info->fprintf_func) (info->stream, "%d,%s%s%s",
+			     (int) sval,
+			     (buffer[0] & 0x10 ? "" : mode),
+			     reg_name[reg], (buffer[0] & 0x10 ? mode : ""));
+    }
+
+  /* [n,r] 16-bits offset indexed indirect.  */
+  else if ((buffer[0] & 0x07) == 3)
+    {
+      if (mov_insn)
+	{
+	  (*info->fprintf_func) (info->stream, "<invalid op: 0x%x>",
+				 buffer[0] & 0x0ff);
+	  return 0;
+	}
+      reg = (buffer[0] >> 3) & 0x03;
+      status = read_memory (memaddr + pos, &buffer[0], 2, info);
+      if (status != 0)
+	{
+	  return status;
+	}
+
+      pos += 2;
+      sval = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+      (*info->fprintf_func) (info->stream, "[%u,%s]",
+			     sval & 0x0ffff, reg_name[reg]);
+      if (indirect)
+        *indirect = 1;
+    }
+
+  /* n,r with 9 and 16 bit signed constant.  */
+  else if ((buffer[0] & 0x4) == 0)
+    {
+      if (mov_insn)
+	{
+	  (*info->fprintf_func) (info->stream, "<invalid op: 0x%x>",
+				 buffer[0] & 0x0ff);
+	  return 0;
+	}
+      reg = (buffer[0] >> 3) & 0x03;
+      status = read_memory (memaddr + pos,
+			    &buffer[1], (buffer[0] & 0x2 ? 2 : 1), info);
+      if (status != 0)
+	{
+	  return status;
+	}
+      if (buffer[0] & 2)
+	{
+	  sval = ((buffer[1] << 8) | (buffer[2] & 0x0FF));
+	  sval &= 0x0FFFF;
+	  pos += 2;
+          endaddr += 2;
+	}
+      else
+	{
+	  sval = buffer[1] & 0x00ff;
+	  if (buffer[0] & 0x01)
+	    sval |= 0xff00;
+	  pos++;
+          endaddr++;
+	}
+      (*info->fprintf_func) (info->stream, "%d,%s",
+			     (int) sval, reg_name[reg]);
+      if (reg == PC_REGNUM)
+        {
+          (* info->fprintf_func) (info->stream, " {");
+          (* info->print_address_func) (endaddr + sval, info);
+          (* info->fprintf_func) (info->stream, "}");
+        }
+    }
+  else
+    {
+      reg = (buffer[0] >> 3) & 0x03;
+      switch (buffer[0] & 3)
+	{
+	case 0:
+	  (*info->fprintf_func) (info->stream, "A,%s", reg_name[reg]);
+	  break;
+	case 1:
+	  (*info->fprintf_func) (info->stream, "B,%s", reg_name[reg]);
+	  break;
+	case 2:
+	  (*info->fprintf_func) (info->stream, "D,%s", reg_name[reg]);
+	  break;
+	case 3:
+	default:
+	  (*info->fprintf_func) (info->stream, "[D,%s]", reg_name[reg]);
+          if (indirect)
+            *indirect = 1;
+	  break;
+	}
+    }
+
+  return pos;
+}
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+   of bytes used by that instruction.  */
+static int
+print_insn (bfd_vma memaddr, struct disassemble_info* info, int arch)
+{
+  printf("\n in print_insn arch is %d", arch);
+
+  int status;
+  bfd_byte buffer[4];
+  unsigned char code;
+  long format, pos, i;
+  short sval;
+  const struct mc9s12x_opcode *opcode;
+
+  /* Get first byte.  Only one at a time because we don't know the
+     size of the insn.  */
+  status = read_memory (memaddr, buffer, 1, info);
+  if (status != 0)
+    {
+      return status;
+    }
+
+  format = 0;
+  code = buffer[0];
+  pos = 0;
+
+  /* Look for page2,3,4 opcodes.  */
+  if (code == MC9S12X_OPCODE_PAGE2)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE2;
+      printf("\n yes M6811_OPCODE_PAGE2\n");
+    }
+  else if (code == MC9S12X_OPCODE_PAGE3 && arch == cpu6811)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE3;
+      printf("\n yes M6811_OPCODE_PAGE2\n");
+    }
+  else if (code == MC9S12X_OPCODE_PAGE4 && arch == cpu6811)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE4;
+      printf("\n yes M6811_OPCODE_PAGE2\n");
+    }
+
+  /* We are in page2,3,4; get the real opcode.  */
+  if (pos == 1)
+    {
+      status = read_memory (memaddr + pos, &buffer[1], 1, info);
+      if (status != 0)
+	{
+	  return status;
+	}
+      code = buffer[1];
+    }
+
+
+  /* Look first for a 68HC12 alias.  All of them are 2-bytes long and
+     in page 1.  There is no operand to print.  We read the second byte
+     only when we have a possible match.  */
+ // printf("\n exe print instruction arch is -> %d",arch);  //
+  if ((arch & cpumc9s12x) && format == 0)
+    {
+  //    int must_read = 1;
+
+      /* Walk the alias table to find a code1+code2 match.  */   /* should be able to disable alias's */
+ /*     for (i = 0; i < m68hc12_num_alias; i++)
+	{
+	  if (m68hc12_alias[i].code1 == code)
+	    {
+	      if (must_read)
+		{
+		  status = read_memory (memaddr + pos + 1,
+					&buffer[1], 1, info);
+		  if (status != 0)
+		    break;
+
+		  must_read = 1;
+		}
+	      if (m68hc12_alias[i].code2 == (unsigned char) buffer[1])
+		{
+		  (*info->fprintf_func) (info->stream, "%s",
+					 m68hc12_alias[i].name);
+		  return 2;
+		}
+	    }
+	}
+	*/
+    }
+
+  pos++;
+
+  /* Scan the opcode table until we find the opcode
+     with the corresponding page.  */
+  opcode = mc9s12x_opcodes;
+  //printf("\n skipping as arch == 0\n %d and %d \n",opcode->arch,arch);  // returns 1 and 6
+  for (i = 0; i < mc9s12x_num_opcodes; i++, opcode++)
+    {
+      int offset;
+      int pc_src_offset;
+      int pc_dst_offset = 0;
+      /* continue causes the next iteration of the loop to begin  effectively skipping the code below it*/
+      if ((opcode->arch & arch) == 0)
+   	continue;
+      if (opcode->opcode != code)
+	continue;
+      if ((opcode->format & OP_PAGE_MASK) != format)
+	continue;
+
+      if (opcode->format & MC9S12X_OP_REG)
+	{
+	  int j;
+	  int is_jump;
+
+	  if (opcode->format & MC9S12X_OP_JUMP_REL) //was m6811
+	    is_jump = 1;
+	  else
+	    is_jump = 0;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  for (j = 0; i + j < mc9s12x_num_opcodes; j++)
+	    {
+	      if ((opcode[j].arch & arch) == 0)
+		continue;
+	      if (opcode[j].opcode != code)
+		continue;
+	      if (is_jump)
+		{
+		  if (!(opcode[j].format & MC9S12X_OP_JUMP_REL)) //was m6811
+		    continue;
+
+		  if ((opcode[j].format & MC9S12X_OP_IBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0x80)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_TBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0x40)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_DBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_EQ_MARKER)
+		      && (buffer[0] & 0x20) == 0)
+		    break;
+		  if (!(opcode[j].format & MC9S12X_OP_EQ_MARKER)
+		      && (buffer[0] & 0x20) != 0)
+		    break;
+		  continue;
+		}
+	      if (opcode[j].format & MC9S12X_OP_EXG_MARKER && buffer[0] & 0x80)
+		break;
+	      if ((opcode[j].format & MC9S12X_OP_SEX_MARKER)
+		  && (((buffer[0] & 0x07) >= 3 && (buffer[0] & 7) <= 7))
+		  && ((buffer[0] & 0x0f0) <= 0x20))
+		break;
+	      if (opcode[j].format & MC9S12X_OP_TFR_MARKER
+		  && !(buffer[0] & 0x80))
+		break;
+	    }
+	  if (i + j < mc9s12x_num_opcodes)
+	    opcode = &opcode[j];
+	}
+
+      /* We have found the opcode.  Extract the operand and print it.  */
+      (*info->fprintf_func) (info->stream, "%s", opcode->name);
+
+      format = opcode->format;
+      if (format & (MC9S12X_OP_MASK | MC9S12X_OP_BITMASK
+		    | MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	{
+	  (*info->fprintf_func) (info->stream, "\t");
+	}
+
+      /* The movb and movw must be handled in a special way...
+         The source constant 'ii' is not always at the same place.
+         This is the same for the destination for the post-indexed byte.
+         The 'offset' is used to do the appropriate correction.
+
+                                   offset          offset
+                              for constant     for destination
+         movb   18 OB ii hh ll       0          0
+                18 08 xb ii          1          -1
+                18 0C hh ll hh ll    0          0
+                18 09 xb hh ll       1          -1
+                18 0D xb hh ll       0          0
+                18 0A xb xb          0          0
+
+         movw   18 03 jj kk hh ll    0          0
+                18 00 xb jj kk       1          -1
+                18 04 hh ll hh ll    0          0
+                18 01 xb hh ll       1          -1
+                18 05 xb hh ll       0          0
+                18 02 xb xb          0          0
+
+         After the source operand is read, the position 'pos' is incremented
+         this explains the negative offset for destination.
+
+         movb/movw above are the only instructions with this matching
+         format.  */
+      offset = ((format & MC9S12X_OP_IDX_P2)
+                && (format & (MC9S12X_OP_IMM8 | MC9S12X_OP_IMM16 |
+                		MC9S12X_OP_IND16)));
+
+      /* Operand with one more byte: - immediate, offset,
+         direct-low address.  */
+      if (format &
+	  (MC9S12X_OP_IMM8 | MC9S12X_OP_IX | MC9S12X_OP_IY | MC9S12X_OP_DIRECT))
+	{
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+
+          /* This movb/movw is special (see above).  */
+          offset = -offset;
+
+          pc_dst_offset = 2;
+	  if (format & MC9S12X_OP_IMM8)
+	    {
+	      (*info->fprintf_func) (info->stream, "#%d", (int) buffer[0]);
+	      format &= ~MC9S12X_OP_IMM8;
+              /* Set PC destination offset.  */
+              pc_dst_offset = 1;
+	    }
+	  else if (format & MC9S12X_OP_IX)
+	    {
+	      /* Offsets are in range 0..255, print them unsigned.  */
+	      (*info->fprintf_func) (info->stream, "%u,x", buffer[0] & 0x0FF);
+	      format &= ~MC9S12X_OP_IX;
+	    }
+	  else if (format & MC9S12X_OP_IY)
+	    {
+	      (*info->fprintf_func) (info->stream, "%u,y", buffer[0] & 0x0FF);
+	      format &= ~MC9S12X_OP_IY;
+	    }
+	  else if (format & MC9S12X_OP_DIRECT)
+	    {
+	      (*info->fprintf_func) (info->stream, "*");
+	      (*info->print_address_func) (buffer[0] & 0x0FF, info);
+	      format &= ~MC9S12X_OP_DIRECT;
+	    }
+	}
+
+#define MC9S12X_DST_MOVE  (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2)
+#define MC9S12X_INDEXED_FLAGS (MC9S12X_OP_IDX|MC9S12X_OP_IDX_1|MC9S12X_OP_IDX_2)
+      /* Analyze the 68HC12 indexed byte.  */
+      if (format & MC9S12X_INDEXED_FLAGS)
+	{
+          int indirect;
+          bfd_vma endaddr;
+
+          endaddr = memaddr + pos + 1;
+          if (format & MC9S12X_OP_IND16)
+            endaddr += 2;
+          pc_src_offset = -1;
+          pc_dst_offset = 1;
+	  status = print_indexed_operand (memaddr + pos, info, &indirect,
+                                          (format & MC9S12X_DST_MOVE),
+                                          pc_src_offset, endaddr);
+	  if (status < 0)
+	    {
+	      return status;
+	    }
+	  pos += status;
+
+          /* The indirect addressing mode of the call instruction does
+             not need the page code.  */
+          if ((format & MC9S12X_OP_PAGE) && indirect)
+            format &= ~MC9S12X_OP_PAGE;
+	}
+
+      /* 68HC12 dbcc/ibcc/tbcc operands.  */
+      if ((format & MC9S12X_OP_REG) && (format & MC9S12X_OP_JUMP_REL))
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  (*info->fprintf_func) (info->stream, "%s,",
+				 reg_src_table[buffer[0] & 0x07]);
+	  sval = buffer[1] & 0x0ff;
+	  if (buffer[0] & 0x10)
+	    sval |= 0xff00;
+
+	  pos += 2;
+	  (*info->print_address_func) (memaddr + pos + sval, info);
+	  format &= ~(MC9S12X_OP_REG | MC9S12X_OP_JUMP_REL);
+	}
+      else if (format & (MC9S12X_OP_REG | MC9S12X_OP_REG_2))
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+	  (*info->fprintf_func) (info->stream, "%s,%s",
+				 reg_src_table[(buffer[0] >> 4) & 7],
+				 reg_dst_table[(buffer[0] & 7)]);
+	}
+
+      if (format & (MC9S12X_OP_IMM16 | MC9S12X_OP_IND16))
+	{
+	  int val;
+          bfd_vma addr;
+          unsigned page = 0;
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  if (format & MC9S12X_OP_IDX_P2)
+	    offset = -2;
+	  else
+	    offset = 0;
+	  pos += 2;
+
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  val &= 0x0FFFF;
+          addr = val;
+          pc_dst_offset = 2;
+          if (format & MC9S12X_OP_PAGE)
+            {
+              status = read_memory (memaddr + pos + offset, buffer, 1, info);
+              if (status != 0)
+                return status;
+
+              page = (unsigned) buffer[0];
+              if (addr >= MC9S12X_BANK_BASE && addr < 0x0c000)
+                addr = ((val - MC9S12X_BANK_BASE)
+                        | (page << MC9S12X_BANK_SHIFT))
+                   + MC9S12X_BANK_VIRT;
+            }
+          else if ((arch & cpumc9s12x)
+                   && addr >= MC9S12X_BANK_BASE && addr < 0x0c000)
+             {
+                int cur_page;
+                bfd_vma vaddr;
+                
+                if (memaddr >= MC9S12X_BANK_VIRT)
+                   cur_page = ((memaddr - MC9S12X_BANK_VIRT)
+                               >> MC9S12X_BANK_SHIFT);
+                else
+                   cur_page = 0;
+
+                vaddr = ((addr - MC9S12X_BANK_BASE)
+                         + (cur_page << MC9S12X_BANK_SHIFT))
+                   + MC9S12X_BANK_VIRT;
+                if (!info->symbol_at_address_func (addr, info)
+                    && info->symbol_at_address_func (vaddr, info))
+                   addr = vaddr;
+             }
+	  if (format & MC9S12X_OP_IMM16)
+	    {
+	      format &= ~MC9S12X_OP_IMM16;
+	      (*info->fprintf_func) (info->stream, "#");
+	    }
+	  else
+	    format &= ~MC9S12X_OP_IND16;
+
+	  (*info->print_address_func) (addr, info);
+          if (format & MC9S12X_OP_PAGE)
+            {
+              (* info->fprintf_func) (info->stream, " {");
+              (* info->print_address_func) (val, info);
+              (* info->fprintf_func) (info->stream, ", %d}", page);
+              format &= ~MC9S12X_OP_PAGE;
+              pos += 1;
+            }
+	}
+
+      if (format & MC9S12X_OP_IDX_P2)
+	{
+	  (*info->fprintf_func) (info->stream, ", ");
+	  status = print_indexed_operand (memaddr + pos + offset, info,
+                                          0, 1, pc_dst_offset,
+                                          memaddr + pos + offset + 1);
+	  if (status < 0)
+	    return status;
+	  pos += status;
+	}
+
+      if (format & MC9S12X_OP_IND16_P2)
+	{
+	  int val;
+
+	  (*info->fprintf_func) (info->stream, ", ");
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos += 2;
+
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  val &= 0x0FFFF;
+	  (*info->print_address_func) (val, info);
+	}
+
+      /* M6811_OP_BITMASK and M6811_OP_JUMP_REL must be treated separately
+         and in that order.  The brset/brclr insn have a bitmask and then
+         a relative branch offset.  */
+      if (format & MC9S12X_OP_BITMASK)
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos++;
+	  printf("\n need to diss an immediate operand");
+	  (*info->fprintf_func) (info->stream, " #$%02x%s",
+				 buffer[0] & 0x0FF,
+				 (format & MC9S12X_OP_JUMP_REL ? " " : ""));
+	  format &= ~MC9S12X_OP_BITMASK;
+	}
+      if (format & MC9S12X_OP_JUMP_REL)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+	  val = (buffer[0] & 0x80) ? buffer[0] | 0xFFFFFF00 : buffer[0];
+	  (*info->print_address_func) (memaddr + pos + val, info);
+	  format &= ~MC9S12X_OP_JUMP_REL;
+	}
+      else if (format & MC9S12X_OP_JUMP_REL16)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos += 2;
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  if (val & 0x8000)
+	    val |= 0xffff0000;
+
+	  (*info->print_address_func) (memaddr + pos + val, info);
+	  format &= ~MC9S12X_OP_JUMP_REL16;
+	}
+
+      if (format & MC9S12X_OP_PAGE)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos += 1;
+
+	  val = buffer[0] & 0x0ff;
+	  (*info->fprintf_func) (info->stream, ", %d", val);
+	}
+      
+#ifdef DEBUG
+      /* Consistency check.  'format' must be 0, so that we have handled
+         all formats; and the computed size of the insn must match the
+         opcode table content.  */
+      if (format & ~(MC9S12X_OP_PAGE4 | MC9S12X_OP_PAGE3 | MC9S12X_OP_PAGE2))
+	{
+	  (*info->fprintf_func) (info->stream, "; Error, format: %lx", format);
+	}
+      if (pos != opcode->size)
+	{
+	  (*info->fprintf_func) (info->stream, "; Error, size: %ld expect %d",
+				 pos, opcode->size);
+	}
+#endif
+      return pos;
+    }
+
+  /* Opcode not recognized.  */
+  if (format == MC9S12X_OP_PAGE2 && arch & cpumc9s12x
+      && ((code >= 0x30 && code <= 0x39) || (code >= 0x40)))
+    (*info->fprintf_func) (info->stream, "trap\t#%d", code & 0x0ff);
+
+  else if (format == MC9S12X_OP_PAGE2)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE2, code);
+  else if (format == MC9S12X_OP_PAGE3)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE3, code);
+  else if (format == MC9S12X_OP_PAGE4)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE4, code);
+  else
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x", code);
+
+  return pos;
+}
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+   of bytes used by that instruction.  */
+//int
+//print_insn_mc9s12x (bfd_vma memaddr, struct disassemble_info* info)
+//{
+//  return print_insn (memaddr, info, cpu6811);
+//}
+
+int
+print_insn_mc9s12x (bfd_vma memaddr, struct disassemble_info* info)
+{
+//  printf("\nin print_insn_mc9s12x");
+  return print_insn (memaddr, info, cpumc9s12x);
+}
diff -rupN binutils-2.20/opcodes/mc9s12x-dis.c-delete binutils-2.20-sean/opcodes/mc9s12x-dis.c-delete
--- binutils-2.20/opcodes/mc9s12x-dis.c-delete	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9s12x-dis.c-delete	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,742 @@
+/* m68hc11-dis.c -- Motorola 68HC11 & 68HC12 disassembly
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include <stdio.h>
+
+#include "ansidecl.h"
+#include "opcode/mc9s12x.h"
+#include "dis-asm.h"
+
+#define PC_REGNUM 3
+
+static const char *const reg_name[] = {
+  "X", "Y", "SP", "PC"
+};
+
+static const char *const reg_src_table[] = {
+  "A", "B", "CCR", "TMP3", "D", "X", "Y", "SP"
+};
+
+static const char *const reg_dst_table[] = {
+  "A", "B", "CCR", "TMP2", "D", "X", "Y", "SP"
+};
+
+#define OP_PAGE_MASK (MC9S12X_OP_PAGE2|MC9S12X_OP_PAGE3|MC9S12X_OP_PAGE4)
+
+/* Prototypes for local functions.  */
+static int read_memory (bfd_vma, bfd_byte *, int, struct disassemble_info *);
+static int print_indexed_operand (bfd_vma, struct disassemble_info *,
+                                  int*, int, int, bfd_vma);
+static int print_insn (bfd_vma, struct disassemble_info *, int);
+
+static int
+read_memory (bfd_vma memaddr, bfd_byte* buffer, int size,
+             struct disassemble_info* info)
+{
+  int status;
+
+  /* Get first byte.  Only one at a time because we don't know the
+     size of the insn.  */
+  status = (*info->read_memory_func) (memaddr, buffer, size, info);
+  if (status != 0)
+    {
+      (*info->memory_error_func) (status, memaddr, info);
+      return -1;
+    }
+  return 0;
+}
+
+
+/* Read the 68HC12 indexed operand byte and print the corresponding mode.
+   Returns the number of bytes read or -1 if failure.  */
+static int
+print_indexed_operand (bfd_vma memaddr, struct disassemble_info* info,
+                       int* indirect, int mov_insn, int pc_offset,
+                       bfd_vma endaddr)
+{
+  bfd_byte buffer[4];
+  int reg;
+  int status;
+  short sval;
+  int pos = 1;
+
+  if (indirect)
+    *indirect = 0;
+
+  status = read_memory (memaddr, &buffer[0], 1, info);
+  if (status != 0)
+    {
+      return status;
+    }
+
+  /* n,r with 5-bits signed constant.  */
+  if ((buffer[0] & 0x20) == 0)
+    {
+      reg = (buffer[0] >> 6) & 3;
+      sval = (buffer[0] & 0x1f);
+      if (sval & 0x10)
+	sval |= 0xfff0;
+      /* 68HC12 requires an adjustment for movb/movw pc relative modes.  */
+      if (reg == PC_REGNUM && info->mach == bfd_mach_mc9s12x && mov_insn)
+        sval += pc_offset;
+      (*info->fprintf_func) (info->stream, "%d,%s",
+			     (int) sval, reg_name[reg]);
+
+      if (reg == PC_REGNUM)
+        {
+          (* info->fprintf_func) (info->stream, " {");
+          (* info->print_address_func) (endaddr + sval, info);
+          (* info->fprintf_func) (info->stream, "}");
+        }
+    }
+
+  /* Auto pre/post increment/decrement.  */
+  else if ((buffer[0] & 0xc0) != 0xc0)
+    {
+      const char *mode;
+
+      reg = (buffer[0] >> 6) & 3;
+      sval = (buffer[0] & 0x0f);
+      if (sval & 0x8)
+	{
+	  sval |= 0xfff0;
+	  sval = -sval;
+	  mode = "-";
+	}
+      else
+	{
+	  sval = sval + 1;
+	  mode = "+";
+	}
+      (*info->fprintf_func) (info->stream, "%d,%s%s%s",
+			     (int) sval,
+			     (buffer[0] & 0x10 ? "" : mode),
+			     reg_name[reg], (buffer[0] & 0x10 ? mode : ""));
+    }
+
+  /* [n,r] 16-bits offset indexed indirect.  */
+  else if ((buffer[0] & 0x07) == 3)
+    {
+      if (mov_insn)
+	{
+	  (*info->fprintf_func) (info->stream, "<invalid op: 0x%x>",
+				 buffer[0] & 0x0ff);
+	  return 0;
+	}
+      reg = (buffer[0] >> 3) & 0x03;
+      status = read_memory (memaddr + pos, &buffer[0], 2, info);
+      if (status != 0)
+	{
+	  return status;
+	}
+
+      pos += 2;
+      sval = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+      (*info->fprintf_func) (info->stream, "[%u,%s]",
+			     sval & 0x0ffff, reg_name[reg]);
+      if (indirect)
+        *indirect = 1;
+    }
+
+  /* n,r with 9 and 16 bit signed constant.  */
+  else if ((buffer[0] & 0x4) == 0)
+    {
+      if (mov_insn)
+	{
+	  (*info->fprintf_func) (info->stream, "<invalid op: 0x%x>",
+				 buffer[0] & 0x0ff);
+	  return 0;
+	}
+      reg = (buffer[0] >> 3) & 0x03;
+      status = read_memory (memaddr + pos,
+			    &buffer[1], (buffer[0] & 0x2 ? 2 : 1), info);
+      if (status != 0)
+	{
+	  return status;
+	}
+      if (buffer[0] & 2)
+	{
+	  sval = ((buffer[1] << 8) | (buffer[2] & 0x0FF));
+	  sval &= 0x0FFFF;
+	  pos += 2;
+          endaddr += 2;
+	}
+      else
+	{
+	  sval = buffer[1] & 0x00ff;
+	  if (buffer[0] & 0x01)
+	    sval |= 0xff00;
+	  pos++;
+          endaddr++;
+	}
+      (*info->fprintf_func) (info->stream, "%d,%s",
+			     (int) sval, reg_name[reg]);
+      if (reg == PC_REGNUM)
+        {
+          (* info->fprintf_func) (info->stream, " {");
+          (* info->print_address_func) (endaddr + sval, info);
+          (* info->fprintf_func) (info->stream, "}");
+        }
+    }
+  else
+    {
+      reg = (buffer[0] >> 3) & 0x03;
+      switch (buffer[0] & 3)
+	{
+	case 0:
+	  (*info->fprintf_func) (info->stream, "A,%s", reg_name[reg]);
+	  break;
+	case 1:
+	  (*info->fprintf_func) (info->stream, "B,%s", reg_name[reg]);
+	  break;
+	case 2:
+	  (*info->fprintf_func) (info->stream, "D,%s", reg_name[reg]);
+	  break;
+	case 3:
+	default:
+	  (*info->fprintf_func) (info->stream, "[D,%s]", reg_name[reg]);
+          if (indirect)
+            *indirect = 1;
+	  break;
+	}
+    }
+
+  return pos;
+}
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+   of bytes used by that instruction.  */
+static int
+print_insn (bfd_vma memaddr, struct disassemble_info* info, int arch)
+{
+  int status;
+  bfd_byte buffer[4];
+  unsigned char code;
+  long format, pos, i;
+  short sval;
+  const struct mc9s12x_opcode *opcode;
+
+  /* Get first byte.  Only one at a time because we don't know the
+     size of the insn.  */
+  status = read_memory (memaddr, buffer, 1, info);
+  if (status != 0)
+    {
+      return status;
+    }
+
+  format = 0;
+  code = buffer[0];
+  pos = 0;
+
+  /* Look for page2,3,4 opcodes.  */
+  if (code == MC9S12X_OPCODE_PAGE2)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE2;
+    }
+  else if (code == MC9S12X_OPCODE_PAGE3 && arch == cpumc9s12x)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE3;
+    }
+  else if (code == MC9S12X_OPCODE_PAGE4 && arch == cpumc9s12x)
+    {
+      pos++;
+      format = MC9S12X_OP_PAGE4;
+    }
+
+  /* We are in page2,3,4; get the real opcode.  */
+  if (pos == 1)
+    {
+      status = read_memory (memaddr + pos, &buffer[1], 1, info);
+      if (status != 0)
+	{
+	  return status;
+	}
+      code = buffer[1];
+    }
+
+
+  /* Look first for a 68HC12 alias.  All of them are 2-bytes long and
+     in page 1.  There is no operand to print.  We read the second byte
+     only when we have a possible match.  */
+  if ((arch & cpumc9s12x) && format == 0)
+    {
+      int must_read = 1;
+
+      /* Walk the alias table to find a code1+code2 match.  */
+      for (i = 0; i < mc9s12x_num_alias; i++)
+	{
+	  if (mc9s12x_alias[i].code1 == code)
+	    {
+	      if (must_read)
+		{
+		  status = read_memory (memaddr + pos + 1,
+					&buffer[1], 1, info);
+		  if (status != 0)
+		    break;
+
+		  must_read = 1;
+		}
+	      if (mc9s12x_alias[i].code2 == (unsigned char) buffer[1])
+		{
+		  (*info->fprintf_func) (info->stream, "%s",
+					 mc9s12x_alias[i].name);
+		  return 2;
+		}
+	    }
+	}
+    }
+
+  pos++;
+
+  /* Scan the opcode table until we find the opcode
+     with the corresponding page.  */
+  opcode = mc9s12x_opcodes;
+  for (i = 0; i < mc9s12x_num_opcodes; i++, opcode++)
+    {
+      int offset;
+      int pc_src_offset;
+      int pc_dst_offset = 0;
+
+      if ((opcode->arch & arch) == 0)
+	continue;
+      if (opcode->opcode != code)
+	continue;
+      if ((opcode->format & OP_PAGE_MASK) != format)
+	continue;
+
+      if (opcode->format & MC9S12X_OP_REG)
+	{
+	  int j;
+	  int is_jump;
+
+	  if (opcode->format & MC9S12X_OP_JUMP_REL)
+	    is_jump = 1;
+	  else
+	    is_jump = 0;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  for (j = 0; i + j < mc9s12x_num_opcodes; j++)
+	    {
+	      if ((opcode[j].arch & arch) == 0)
+		continue;
+	      if (opcode[j].opcode != code)
+		continue;
+	      if (is_jump)
+		{
+		  if (!(opcode[j].format & MC9S12X_OP_JUMP_REL))
+		    continue;
+
+		  if ((opcode[j].format & MC9S12X_OP_IBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0x80)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_TBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0x40)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_DBCC_MARKER)
+		      && (buffer[0] & 0xc0) != 0)
+		    continue;
+		  if ((opcode[j].format & MC9S12X_OP_EQ_MARKER)
+		      && (buffer[0] & 0x20) == 0)
+		    break;
+		  if (!(opcode[j].format & MC9S12X_OP_EQ_MARKER)
+		      && (buffer[0] & 0x20) != 0)
+		    break;
+		  continue;
+		}
+	      if (opcode[j].format & MC9S12X_OP_EXG_MARKER && buffer[0] & 0x80)
+		break;
+	      if ((opcode[j].format & MC9S12X_OP_SEX_MARKER)
+		  && (((buffer[0] & 0x07) >= 3 && (buffer[0] & 7) <= 7))
+		  && ((buffer[0] & 0x0f0) <= 0x20))
+		break;
+	      if (opcode[j].format & MC9S12X_OP_TFR_MARKER
+		  && !(buffer[0] & 0x80))
+		break;
+	    }
+	  if (i + j < mc9s12x_num_opcodes)
+	    opcode = &opcode[j];
+	}
+
+      /* We have found the opcode.  Extract the operand and print it.  */
+      (*info->fprintf_func) (info->stream, "%s", opcode->name);
+
+      format = opcode->format;
+      if (format & (MC9S12X_OP_MASK | MC9S12X_OP_BITMASK
+		    | MC9S12X_OP_JUMP_REL | MC9S12X_OP_JUMP_REL16))
+	{
+	  (*info->fprintf_func) (info->stream, "\t");
+	}
+
+      /* The movb and movw must be handled in a special way...
+         The source constant 'ii' is not always at the same place.
+         This is the same for the destination for the post-indexed byte.
+         The 'offset' is used to do the appropriate correction.
+
+                                   offset          offset
+                              for constant     for destination
+         movb   18 OB ii hh ll       0          0
+                18 08 xb ii          1          -1
+                18 0C hh ll hh ll    0          0
+                18 09 xb hh ll       1          -1
+                18 0D xb hh ll       0          0
+                18 0A xb xb          0          0
+
+         movw   18 03 jj kk hh ll    0          0
+                18 00 xb jj kk       1          -1
+                18 04 hh ll hh ll    0          0
+                18 01 xb hh ll       1          -1
+                18 05 xb hh ll       0          0
+                18 02 xb xb          0          0
+
+         After the source operand is read, the position 'pos' is incremented
+         this explains the negative offset for destination.
+
+         movb/movw above are the only instructions with this matching
+         format.  */
+      offset = ((format & MC9S12X_OP_IDX_P2)
+                && (format & (MC9S12X_OP_IMM8 | MC9S12X_OP_IMM16 |
+                		MC9S12X_OP_IND16)));
+
+      /* Operand with one more byte: - immediate, offset,
+         direct-low address.  */
+      if (format &
+	  (MC9S12X_OP_IMM8 | MC9S12X_OP_IX | MC9S12X_OP_IY | MC9S12X_OP_DIRECT))
+	{
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+
+          /* This movb/movw is special (see above).  */
+          offset = -offset;
+
+          pc_dst_offset = 2;
+	  if (format & MC9S12X_OP_IMM8)
+	    {
+	      (*info->fprintf_func) (info->stream, "#%d", (int) buffer[0]);
+	      format &= ~MC9S12X_OP_IMM8;
+              /* Set PC destination offset.  */
+              pc_dst_offset = 1;
+	    }
+	  else if (format & MC9S12X_OP_IX)
+	    {
+	      /* Offsets are in range 0..255, print them unsigned.  */
+	      (*info->fprintf_func) (info->stream, "%u,x", buffer[0] & 0x0FF);
+	      format &= ~MC9S12X_OP_IX;
+	    }
+	  else if (format & MC9S12X_OP_IY)
+	    {
+	      (*info->fprintf_func) (info->stream, "%u,y", buffer[0] & 0x0FF);
+	      format &= ~MC9S12X_OP_IY;
+	    }
+	  else if (format & MC9S12X_OP_DIRECT)
+	    {
+	      (*info->fprintf_func) (info->stream, "*");
+	      (*info->print_address_func) (buffer[0] & 0x0FF, info);
+	      format &= ~MC9S12X_OP_DIRECT;
+	    }
+	}
+
+#define MC9S12X_DST_MOVE  (MC9S12X_OP_IND16_P2 | MC9S12X_OP_IDX_P2)
+#define MC9S12X_INDEXED_FLAGS (MC9S12X_OP_IDX|MC9S12X_OP_IDX_1|MC9S12X_OP_IDX_2)
+      /* Analyze the 68HC12 indexed byte.  */
+      if (format & MC9S12X_INDEXED_FLAGS)
+	{
+          int indirect;
+          bfd_vma endaddr;
+
+          endaddr = memaddr + pos + 1;
+          if (format & MC9S12X_OP_IND16)
+            endaddr += 2;
+          pc_src_offset = -1;
+          pc_dst_offset = 1;
+	  status = print_indexed_operand (memaddr + pos, info, &indirect,
+                                          (format & MC9S12X_DST_MOVE),
+                                          pc_src_offset, endaddr);
+	  if (status < 0)
+	    {
+	      return status;
+	    }
+	  pos += status;
+
+          /* The indirect addressing mode of the call instruction does
+             not need the page code.  */
+          if ((format & MC9S12X_OP_PAGE) && indirect)
+            format &= ~MC9S12X_OP_PAGE;
+	}
+
+      /* 68HC12 dbcc/ibcc/tbcc operands.  */
+      if ((format & MC9S12X_OP_REG) && (format & MC9S12X_OP_JUMP_REL))
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  (*info->fprintf_func) (info->stream, "%s,",
+				 reg_src_table[buffer[0] & 0x07]);
+	  sval = buffer[1] & 0x0ff;
+	  if (buffer[0] & 0x10)
+	    sval |= 0xff00;
+
+	  pos += 2;
+	  (*info->print_address_func) (memaddr + pos + sval, info);
+	  format &= ~(MC9S12X_OP_REG | MC9S12X_OP_JUMP_REL);
+	}
+      else if (format & (MC9S12X_OP_REG | MC9S12X_OP_REG_2))
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+	  (*info->fprintf_func) (info->stream, "%s,%s",
+				 reg_src_table[(buffer[0] >> 4) & 7],
+				 reg_dst_table[(buffer[0] & 7)]);
+	}
+
+      if (format & (MC9S12X_OP_IMM16 | MC9S12X_OP_IND16))
+	{
+	  int val;
+          bfd_vma addr;
+          unsigned page = 0;
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  if (format & MC9S12X_OP_IDX_P2)
+	    offset = -2;
+	  else
+	    offset = 0;
+	  pos += 2;
+
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  val &= 0x0FFFF;
+          addr = val;
+          pc_dst_offset = 2;
+          if (format & MC9S12X_OP_PAGE)
+            {
+              status = read_memory (memaddr + pos + offset, buffer, 1, info);
+              if (status != 0)
+                return status;
+
+              page = (unsigned) buffer[0];
+              if (addr >= MC9S12X_BANK_BASE && addr < 0x0c000)
+                addr = ((val - MC9S12X_BANK_BASE)
+                        | (page << MC9S12X_BANK_SHIFT))
+                   + MC9S12X_BANK_VIRT;
+            }
+          else if ((arch & cpumc9s12x)
+                   && addr >= MC9S12X_BANK_BASE && addr < 0x0c000)
+             {
+                int cur_page;
+                bfd_vma vaddr;
+                
+                if (memaddr >= MC9S12X_BANK_VIRT)
+                   cur_page = ((memaddr - MC9S12X_BANK_VIRT)
+                               >> MC9S12X_BANK_SHIFT);
+                else
+                   cur_page = 0;
+
+                vaddr = ((addr - MC9S12X_BANK_BASE)
+                         + (cur_page << MC9S12X_BANK_SHIFT))
+                   + MC9S12X_BANK_VIRT;
+                if (!info->symbol_at_address_func (addr, info)
+                    && info->symbol_at_address_func (vaddr, info))
+                   addr = vaddr;
+             }
+	  if (format & MC9S12X_OP_IMM16)
+	    {
+	      format &= ~MC9S12X_OP_IMM16;
+	      (*info->fprintf_func) (info->stream, "#");
+	    }
+	  else
+	    format &= ~MC9S12X_OP_IND16;
+
+	  (*info->print_address_func) (addr, info);
+          if (format & MC9S12X_OP_PAGE)
+            {
+              (* info->fprintf_func) (info->stream, " {");
+              (* info->print_address_func) (val, info);
+              (* info->fprintf_func) (info->stream, ", %d}", page);
+              format &= ~MC9S12X_OP_PAGE;
+              pos += 1;
+            }
+	}
+
+      if (format & MC9S12X_OP_IDX_P2)
+	{
+	  (*info->fprintf_func) (info->stream, ", ");
+	  status = print_indexed_operand (memaddr + pos + offset, info,
+                                          0, 1, pc_dst_offset,
+                                          memaddr + pos + offset + 1);
+	  if (status < 0)
+	    return status;
+	  pos += status;
+	}
+
+      if (format & MC9S12X_OP_IND16_P2)
+	{
+	  int val;
+
+	  (*info->fprintf_func) (info->stream, ", ");
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos += 2;
+
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  val &= 0x0FFFF;
+	  (*info->print_address_func) (val, info);
+	}
+
+      /* M6811_OP_BITMASK and M6811_OP_JUMP_REL must be treated separately
+         and in that order.  The brset/brclr insn have a bitmask and then
+         a relative branch offset.  */
+      if (format & MC9S12X_OP_BITMASK)
+	{
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos++;
+	  (*info->fprintf_func) (info->stream, " #$%02x%s",
+				 buffer[0] & 0x0FF,
+				 (format & MC9S12X_OP_JUMP_REL ? " " : ""));
+	  format &= ~MC9S12X_OP_BITMASK;
+	}
+      if (format & MC9S12X_OP_JUMP_REL)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos++;
+	  val = (buffer[0] & 0x80) ? buffer[0] | 0xFFFFFF00 : buffer[0];
+	  (*info->print_address_func) (memaddr + pos + val, info);
+	  format &= ~MC9S12X_OP_JUMP_REL;
+	}
+      else if (format & MC9S12X_OP_JUMP_REL16)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos, &buffer[0], 2, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+
+	  pos += 2;
+	  val = ((buffer[0] << 8) | (buffer[1] & 0x0FF));
+	  if (val & 0x8000)
+	    val |= 0xffff0000;
+
+	  (*info->print_address_func) (memaddr + pos + val, info);
+	  format &= ~MC9S12X_OP_JUMP_REL16;
+	}
+
+      if (format & MC9S12X_OP_PAGE)
+	{
+	  int val;
+
+	  status = read_memory (memaddr + pos + offset, &buffer[0], 1, info);
+	  if (status != 0)
+	    {
+	      return status;
+	    }
+	  pos += 1;
+
+	  val = buffer[0] & 0x0ff;
+	  (*info->fprintf_func) (info->stream, ", %d", val);
+	}
+      
+#ifdef DEBUG
+      /* Consistency check.  'format' must be 0, so that we have handled
+         all formats; and the computed size of the insn must match the
+         opcode table content.  */
+      if (format & ~(MC9S12X_OP_PAGE4 | MC9S12X_OP_PAGE3 | MC9S12X_OP_PAGE2))
+	{
+	  (*info->fprintf_func) (info->stream, "; Error, format: %lx", format);
+	}
+      if (pos != opcode->size)
+	{
+	  (*info->fprintf_func) (info->stream, "; Error, size: %ld expect %d",
+				 pos, opcode->size);
+	}
+#endif
+      return pos;
+    }
+
+  /* Opcode not recognized.  */
+  if (format == MC9S12X_OP_PAGE2 && arch & cpumc9s12x
+      && ((code >= 0x30 && code <= 0x39) || (code >= 0x40)))
+    (*info->fprintf_func) (info->stream, "trap\t#%d", code & 0x0ff);
+
+  else if (format == MC9S12X_OP_PAGE2)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE2, code);
+  else if (format == MC9S12X_OP_PAGE3)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE3, code);
+  else if (format == MC9S12X_OP_PAGE4)
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x, 0x%02x",
+    		MC9S12X_OPCODE_PAGE4, code);
+  else
+    (*info->fprintf_func) (info->stream, ".byte\t0x%02x", code);
+
+  return pos;
+}
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+   of bytes used by that instruction.  */
+//int
+//print_insn_m68hc11 (bfd_vma memaddr, struct disassemble_info* info)
+//{
+//  return print_insn (memaddr, info, cpumc9s12x);
+//}
+
+int
+print_insn_mc9s12x (bfd_vma memaddr, struct disassemble_info* info)
+{
+  return print_insn (memaddr, info, cpumc9s12x);
+}
diff -rupN binutils-2.20/opcodes/mc9s12x-opc.c binutils-2.20-sean/opcodes/mc9s12x-opc.c
--- binutils-2.20/opcodes/mc9s12x-opc.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9s12x-opc.c	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,1086 @@
+/* m68hc11-opc.c -- Motorola 68HC11 & 68HC12 opcode list
+   Copyright 1999, 2000, 2002, 2005, 2007 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this file; see the file COPYING.  If not, write to the
+   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include <stdio.h>
+#include "ansidecl.h"
+#include "opcode/mc9s12x.h"
+
+#define TABLE_SIZE(X)       (sizeof(X) / sizeof(X[0]))
+/*
+ * M6812_OP_SEX_MARKER
+ * Post-increment mode is not valid for
+ * _bfd_merge_private_bfd_data
+ */
+/* Combination of CCR flags.  */
+#define MC9S12X_ZC_BIT    MC9S12X_Z_BIT|MC9S12X_C_BIT
+#define MC9S12X_NZ_BIT    MC9S12X_N_BIT|MC9S12X_Z_BIT
+#define MC9S12X_NZV_BIT   MC9S12X_N_BIT|MC9S12X_Z_BIT|MC9S12X_V_BIT
+#define MC9S12X_NZC_BIT   MC9S12X_N_BIT|MC9S12X_Z_BIT|MC9S12X_C_BIT
+#define MC9S12X_NVC_BIT   MC9S12X_N_BIT|MC9S12X_V_BIT|MC9S12X_C_BIT
+#define MC9S12X_ZVC_BIT   MC9S12X_Z_BIT|MC9S12X_V_BIT|MC9S12X_C_BIT
+#define MC9S12X_NZVC_BIT  MC9S12X_ZVC_BIT|MC9S12X_N_BIT
+#define MC9S12X_HNZVC_BIT MC9S12X_NZVC_BIT|MC9S12X_H_BIT
+#define MC9S12X_HNVC_BIT  MC9S12X_NVC_BIT|MC9S12X_H_BIT
+#define MC9S12X_VC_BIT    MC9S12X_V_BIT|MC9S12X_C_BIT
+
+/* Flags when the insn only changes some CCR flags.  */
+#define CHG_NONE        0,0,0
+#define CHG_Z           0,0,MC9S12X_Z_BIT
+#define CHG_C           0,0,MC9S12X_C_BIT
+#define CHG_ZVC         0,0,MC9S12X_ZVC_BIT
+#define CHG_NZC         0,0,MC9S12X_NZC_BIT
+#define CHG_NZV         0,0,MC9S12X_NZV_BIT
+#define CHG_NZVC        0,0,MC9S12X_NZVC_BIT
+#define CHG_HNZVC       0,0,MC9S12X_HNZVC_BIT
+#define CHG_ALL         0,0,0xff
+
+/* The insn clears and changes some flags.  */
+#define CLR_I           0,MC9S12X_I_BIT,0
+#define CLR_C           0,MC9S12X_C_BIT,0
+#define CLR_V           0,MC9S12X_V_BIT,0
+#define CLR_V_CHG_ZC    0,MC9S12X_V_BIT,MC9S12X_ZC_BIT
+#define CLR_V_CHG_NZ    0,MC9S12X_V_BIT,MC9S12X_NZ_BIT
+#define CLR_V_CHG_ZVC   0,MC9S12X_V_BIT,MC9S12X_ZVC_BIT
+#define CLR_N_CHG_ZVC   0,MC9S12X_N_BIT,MC9S12X_ZVC_BIT /* Used by lsr */
+#define CLR_VC_CHG_NZ   0,MC9S12X_VC_BIT,MC9S12X_NZ_BIT
+
+/* The insn sets some flags.  */
+#define SET_I           MC9S12X_I_BIT,0,0
+#define SET_C           MC9S12X_C_BIT,0,0
+#define SET_V           MC9S12X_V_BIT,0,0
+#define SET_Z_CLR_NVC   MC9S12X_Z_BIT,MC9S12X_NVC_BIT,0
+#define SET_C_CLR_V_CHG_NZ MC9S12X_C_BIT,MC9S12X_V_BIT,MC9S12X_NZ_BIT
+#define SET_Z_CHG_HNVC  MC9S12X_Z_BIT,0,MC9S12X_HNVC_BIT
+
+#define _M 0xff
+#define OP_NONE         MC9S12X_OP_NONE
+#define OP_PAGE2        MC9S12X_OP_PAGE2
+#define OP_PAGE3        MC9S12X_OP_PAGE3
+#define OP_PAGE4        MC9S12X_OP_PAGE4
+#define OP_IMM8         MC9S12X_OP_IMM8
+#define OP_IMM16        MC9S12X_OP_IMM16
+#define OP_IX           MC9S12X_OP_IX
+#define OP_IY           MC9S12X_OP_IY
+#define OP_IND16        MC9S12X_OP_IND16
+#define OP_PAGE         MC9S12X_OP_PAGE  //
+#define OP_IDX          MC9S12X_OP_IDX  //was saved
+#define OP_IDX_1        MC9S12X_OP_IDX_1//
+#define OP_IDX_2        MC9S12X_OP_IDX_2//
+#define OP_D_IDX        MC9S12X_OP_D_IDX//
+#define OP_D_IDX_2      MC9S12X_OP_D_IDX_2//
+#define OP_DIRECT       MC9S12X_OP_DIRECT
+#define OP_BITMASK      MC9S12X_OP_BITMASK
+#define OP_BRANCH       MC9S12X_OP_BRANCH
+#define OP_JUMP_REL     (MC9S12X_OP_JUMP_REL|OP_BRANCH)
+#define OP_JUMP_REL16   (MC9S12X_OP_JUMP_REL16|OP_BRANCH)//
+#define OP_REG          MC9S12X_OP_REG//
+#define OP_REG_1        MC9S12X_OP_REG//
+#define OP_REG_2        MC9S12X_OP_REG_2//
+#define OP_IDX_p2       MC9S12X_OP_IDX_P2//
+#define OP_IND16_p2     MC9S12X_OP_IND16_P2//
+#define OP_TRAP_ID      MC9S12X_OP_TRAP_ID//
+#define OP_EXG_MARKER   MC9S12X_OP_EXG_MARKER
+#define OP_TFR_MARKER   MC9S12X_OP_TFR_MARKER//
+#define OP_DBEQ_MARKER  (MC9S12X_OP_DBCC_MARKER|MC9S12X_OP_EQ_MARKER)//
+#define OP_DBNE_MARKER  (MC9S12X_OP_DBCC_MARKER)//
+#define OP_TBEQ_MARKER  (MC9S12X_OP_TBCC_MARKER|MC9S12X_OP_EQ_MARKER)//
+#define OP_TBNE_MARKER  (MC9S12X_OP_TBCC_MARKER)//
+#define OP_IBEQ_MARKER  (MC9S12X_OP_IBCC_MARKER|MC9S12X_OP_EQ_MARKER)//
+#define OP_IBNE_MARKER  (MC9S12X_OP_IBCC_MARKER)//
+
+/*
+   { "test", OP_NONE,          1, 0x00,  5, _M,  CHG_NONE,  cpu6811 },
+                                                            +-- cpu
+  Name -+                                        +------- Insn CCR changes
+  Format  ------+                            +----------- Max # cycles
+  Size     --------------------+         +--------------- Min # cycles
+                                   +--------------------- Opcode
+*/
+const struct mc9s12x_opcode mc9s12x_opcodes[] = {
+//  { "aba",  OP_NONE,           1, 0x1b,  2,  2,  CHG_HNZVC, cpu6811 },
+  { "aba",  OP_NONE | OP_PAGE2,2, 0x06,  2,  2,  CHG_HNZVC, cpumc9s12x },
+//  { "abx",  OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE,  cpu6811 },
+//  { "aby",  OP_NONE | OP_PAGE2,2, 0x3a,  4,  4,  CHG_NONE,  cpu6811 },
+
+  { "adca", OP_IMM8,           2, 0x89,  1,  1,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adca", OP_DIRECT,         2, 0x99,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adca", OP_IND16,          3, 0xb9,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+//  { "adca", OP_IX,             2, 0xa9,  4,  4,  CHG_HNZVC, cpu6811 },
+//  { "adca", OP_IY | OP_PAGE2,  3, 0xa9,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adca", OP_IDX,            2, 0xa9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_IDX_1,          3, 0xa9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_IDX_2,          4, 0xa9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_D_IDX,          2, 0xa9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_D_IDX_2,        4, 0xa9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "adcb", OP_IMM8,           2, 0xc9,  1,  1,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adcb", OP_DIRECT,         2, 0xd9,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adcb", OP_IND16,          3, 0xf9,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+//  { "adcb", OP_IX,             2, 0xe9,  4,  4,  CHG_HNZVC, cpu6811 },
+//  { "adcb", OP_IY | OP_PAGE2,  3, 0xe9,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adcb", OP_IDX,            2, 0xe9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_IDX_1,          3, 0xe9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_IDX_2,          4, 0xe9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_D_IDX,          2, 0xe9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_D_IDX_2,        4, 0xe9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "adda", OP_IMM8,           2, 0x8b,  1,  1,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adda", OP_DIRECT,         2, 0x9b,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "adda", OP_IND16,          3, 0xbb,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+//  { "adda", OP_IX,             2, 0xab,  4,  4,  CHG_HNZVC, cpu6811 },
+//  { "adda", OP_IY | OP_PAGE2,  3, 0xab,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adda", OP_IDX,            2, 0xab,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_IDX_1,          3, 0xab,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_IDX_2,          4, 0xab,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_D_IDX,          2, 0xab,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_D_IDX_2,        4, 0xab,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "addb", OP_IMM8,           2, 0xcb,  1,  1,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "addb", OP_DIRECT,         2, 0xdb,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+  { "addb", OP_IND16,          3, 0xfb,  3,  3,  CHG_HNZVC, cpu6811|cpumc9s12x },
+//  { "addb", OP_IX,             2, 0xeb,  4,  4,  CHG_HNZVC, cpu6811 },
+ // { "addb", OP_IY | OP_PAGE2,  3, 0xeb,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "addb", OP_IDX,            2, 0xeb,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_IDX_1,          3, 0xeb,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_IDX_2,          4, 0xeb,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_D_IDX,          2, 0xeb,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_D_IDX_2,        4, 0xeb,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "addd", OP_IMM16,          3, 0xc3,  2,  2,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "addd", OP_DIRECT,         2, 0xd3,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "addd", OP_IND16,          3, 0xf3,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "addd", OP_IX,             2, 0xe3,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "addd", OP_IY | OP_PAGE2,  3, 0xe3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "addd", OP_IDX,            2, 0xe3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_IDX_1,          3, 0xe3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_IDX_2,          4, 0xe3,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_D_IDX,          2, 0xe3,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_D_IDX_2,        4, 0xe3,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "anda", OP_IMM8,         2, 0x84,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "anda", OP_DIRECT,       2, 0x94,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "anda", OP_IND16,        3, 0xb4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "anda", OP_IX,             2, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "anda", OP_IY | OP_PAGE2,  3, 0xa4,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "anda", OP_IDX,            2, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_IDX_1,          3, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_IDX_2,          4, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_D_IDX,          2, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_D_IDX_2,        4, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "andb", OP_IMM8,         2, 0xc4,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "andb", OP_DIRECT,       2, 0xd4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "andb", OP_IND16,        3, 0xf4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "andb", OP_IX,             2, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+// { "andb", OP_IY | OP_PAGE2,  3, 0xe4,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "andb", OP_IDX,            2, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_IDX_1,          3, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_IDX_2,          4, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_D_IDX,          2, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_D_IDX_2,        4, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "andcc", OP_IMM8,          2, 0x10,  1,  1,  CHG_ALL,  cpumc9s12x },
+
+  { "asl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "asl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "asl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpu6811 },
+  { "asl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "asla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "aslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "asld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpu6811 },
+  { "asld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "asr",  OP_IND16,          3, 0x77,  4,  4,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "asr",  OP_IX,             2, 0x67,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "asr",  OP_IY | OP_PAGE2,  3, 0x67,  7,  7,  CHG_NZVC, cpu6811 },
+  { "asr",  OP_IDX,            2, 0x67,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_IDX_1,          3, 0x67,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_IDX_2,          4, 0x67,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_D_IDX,          2, 0x67,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_D_IDX_2,        4, 0x67,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "asra", OP_NONE,           1, 0x47,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "asrb", OP_NONE,           1, 0x57,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+
+  { "bcc", OP_JUMP_REL,        2, 0x24,  1,  3,  CHG_NONE, cpu6811|cpumc9s12x },
+
+//  { "bclr", OP_BITMASK|OP_DIRECT,  3, 0x15,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+//  { "bclr", OP_BITMASK|OP_IX,       3, 0x1d,  7,  7,  CLR_V_CHG_NZ, cpu6811 },
+//  { "bclr", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1d, 8, 8, CLR_V_CHG_NZ, cpu6811},
+  { "bclr", OP_BITMASK|OP_DIRECT,   3, 0x4d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IND16,    4, 0x1d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX,      3, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX_1,    4, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX_2,    5, 0x0d,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "bcs", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "beq", OP_JUMP_REL,        2, 0x27,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bge", OP_JUMP_REL,        2, 0x2c,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+
+  { "bgnd", OP_NONE,           1, 0x00,  5,  5, CHG_NONE, cpu6811 | cpumc9s12x },
+
+  { "bgt", OP_JUMP_REL,        2, 0x2e,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bhi", OP_JUMP_REL,        2, 0x22,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bhs", OP_JUMP_REL,        2, 0x24,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  
+  { "bita", OP_IMM8,          2, 0x85,  1,  1, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "bita", OP_DIRECT,        2, 0x95,  3,  3, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "bita", OP_IND16,         3, 0xb5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "bita", OP_IX,             2, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "bita", OP_IY | OP_PAGE2,  3, 0xa5,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "bita", OP_IDX,            2, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_IDX_1,          3, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_IDX_2,          4, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_D_IDX,          2, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_D_IDX_2,        4, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "bitb", OP_IMM8,          2, 0xc5,  1,  1, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "bitb", OP_DIRECT,        2, 0xd5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "bitb", OP_IND16,         3, 0xf5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "bitb", OP_IX,             2, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "bitb", OP_IY | OP_PAGE2,  3, 0xe5,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "bitb", OP_IDX,            2, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_IDX_1,          3, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_IDX_2,          4, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_D_IDX,          2, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_D_IDX_2,        4, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ble", OP_JUMP_REL,        2, 0x2f,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "blo", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bls", OP_JUMP_REL,        2, 0x23,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "blt", OP_JUMP_REL,        2, 0x2d,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bmi", OP_JUMP_REL,        2, 0x2b,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bne", OP_JUMP_REL,        2, 0x26,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bpl", OP_JUMP_REL,        2, 0x2a,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bra", OP_JUMP_REL,        2, 0x20,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_DIRECT,         4, 0x13,  6,  6, CHG_NONE, cpu6811 },
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_IX,             4, 0x1f,  7,  7, CHG_NONE, cpu6811 },
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_IY | OP_PAGE2,  5, 0x1f,  8,  8, CHG_NONE, cpu6811 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,         4, 0x4f,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,          5, 0x1f,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0f,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0f,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK
+           | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0f,  8,  8,  CHG_NONE, cpumc9s12x },
+
+  { "brn", OP_JUMP_REL,         2, 0x21,  1,  3,  CHG_NONE, cpu6811|cpumc9s12x },
+
+//  { "brset", OP_BITMASK | OP_JUMP_REL
+//           | OP_DIRECT,         4, 0x12,  6,  6,  CHG_NONE, cpu6811 },
+//  { "brset", OP_BITMASK
+//           | OP_JUMP_REL
+//           | OP_IX,             4, 0x1e,  7,  7,  CHG_NONE, cpu6811 },
+//  { "brset", OP_BITMASK | OP_JUMP_REL
+//           | OP_IY | OP_PAGE2,  5, 0x1e,  8,  8,  CHG_NONE, cpu6811 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,   4, 0x4e,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,    5, 0x1e,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0e,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0e,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0e,  8,  8,  CHG_NONE, cpumc9s12x },
+
+
+//  { "bset", OP_BITMASK | OP_DIRECT,   3, 0x14,  6,  6, CLR_V_CHG_NZ, cpu6811 },
+//  { "bset", OP_BITMASK | OP_IX,       3, 0x1c,  7,  7, CLR_V_CHG_NZ, cpu6811 },
+//  { "bset", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1c, 8, 8, CLR_V_CHG_NZ, cpu6811 },
+  { "bset", OP_BITMASK|OP_DIRECT,   3, 0x4c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IND16,    4, 0x1c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX,      3, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX_1,    4, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX_2,    5, 0x0c,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "bsr",  OP_JUMP_REL,       2, 0x8d,  6,  6, CHG_NONE, cpu6811 },
+  { "bsr",  OP_JUMP_REL,       2, 0x07,  4,  4, CHG_NONE, cpumc9s12x },
+
+  { "bvc",  OP_JUMP_REL,       2, 0x28,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+  { "bvs",  OP_JUMP_REL,       2, 0x29,  1,  3, CHG_NONE, cpu6811 | cpumc9s12x },
+
+  { "call", OP_IND16 | OP_PAGE
+          | OP_BRANCH,         4, 0x4a,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX | OP_PAGE
+          | OP_BRANCH,         3, 0x4b,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX_1 | OP_PAGE
+          | OP_BRANCH,         4, 0x4b,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX_2 | OP_PAGE
+          | OP_BRANCH,         5, 0x4b,  9,  9,  CHG_NONE, cpumc9s12x },
+  { "call", OP_D_IDX
+          | OP_BRANCH,         2, 0x4b, 10, 10,  CHG_NONE, cpumc9s12x },
+  { "call", OP_D_IDX_2
+          | OP_BRANCH,         4, 0x4b, 10, 10,  CHG_NONE, cpumc9s12x },
+
+//  { "cba",  OP_NONE,           1, 0x11,  2,  2,  CHG_NZVC, cpu6811 },
+  { "cba",  OP_NONE | OP_PAGE2,2, 0x17,  2,  2,  CHG_NZVC, cpumc9s12x },
+
+//  { "clc",  OP_NONE,           1, 0x0c,  2,  2,  CLR_C, cpu6811 },
+//  { "cli",  OP_NONE,           1, 0x0e,  2,  2,  CLR_I, cpu6811 },
+
+//  { "clr", OP_IND16,           3, 0x7f,  6,  6,  SET_Z_CLR_NVC, cpu6811 },
+//  { "clr", OP_IX,              2, 0x6f,  6,  6,  SET_Z_CLR_NVC, cpu6811 },
+//  { "clr", OP_IY | OP_PAGE2,   3, 0x6f,  7,  7,  SET_Z_CLR_NVC, cpu6811 },
+  { "clr", OP_IND16,           3, 0x79,  3,  3,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX,             2, 0x69,  2,  2,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX_1,           3, 0x69,  3,  3,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX_2,           4, 0x69,  4,  4,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_D_IDX,           2, 0x69,  5,  5,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_D_IDX_2,         4, 0x69,  5,  5,  SET_Z_CLR_NVC, cpumc9s12x },
+
+//  { "clra", OP_NONE,           1, 0x4f,  2,  2,  SET_Z_CLR_NVC, cpu6811 },
+//  { "clrb", OP_NONE,           1, 0x5f,  2,  2,  SET_Z_CLR_NVC, cpu6811 },
+  { "clra", OP_NONE,           1, 0x87,  1,  1,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clrb", OP_NONE,           1, 0xc7,  1,  1,  SET_Z_CLR_NVC, cpumc9s12x },
+
+//  { "clv",  OP_NONE,           1, 0x0a,  2,  2,  CLR_V, cpu6811 },
+
+  { "cmpa", OP_IMM8,           2, 0x81,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "cmpa", OP_DIRECT,         2, 0x91,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "cmpa", OP_IND16,          3, 0xb1,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "cmpa", OP_IX,             2, 0xa1,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "cmpa", OP_IY | OP_PAGE2,  3, 0xa1,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cmpa", OP_IDX,            2, 0xa1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_IDX_1,          3, 0xa1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_IDX_2,          4, 0xa1,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_D_IDX,          2, 0xa1,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_D_IDX_2,        4, 0xa1,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "cmpb", OP_IMM8,           2, 0xc1,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "cmpb", OP_DIRECT,         2, 0xd1,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "cmpb", OP_IND16,          3, 0xf1,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "cmpb", OP_IX,             2, 0xe1,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "cmpb", OP_IY | OP_PAGE2,  3, 0xe1,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cmpb", OP_IDX,            2, 0xe1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_IDX_1,          3, 0xe1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_IDX_2,          4, 0xe1,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_D_IDX,          2, 0xe1,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_D_IDX_2,        4, 0xe1,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "com", OP_IND16,           3, 0x73,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+//  { "com", OP_IX,              2, 0x63,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+//  { "com", OP_IY | OP_PAGE2,   3, 0x63,  7,  7,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "com", OP_IND16,           3, 0x71,  4,  4,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX,             2, 0x61,  3,  3,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX_1,           3, 0x61,  4,  4,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX_2,           4, 0x61,  5,  5,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_D_IDX,           2, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_D_IDX_2,         4, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "coma", OP_NONE,           1, 0x43,  2,  2,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "coma", OP_NONE,           1, 0x41,  1,  1,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+//  { "comb", OP_NONE,           1, 0x53,  2,  2,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "comb", OP_NONE,           1, 0x51,  1,  1,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "cpd", OP_IMM16 | OP_PAGE3,  4, 0x83,  5,  5,  CHG_NZVC, cpu6811 },
+//  { "cpd", OP_DIRECT | OP_PAGE3, 3, 0x93,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "cpd", OP_IND16 | OP_PAGE3,  4, 0xb3,  7,  7,  CHG_NZVC, cpu6811 },
+//  { "cpd", OP_IX | OP_PAGE3,     3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+//  { "cpd", OP_IY | OP_PAGE4,     3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_IMM16,             3, 0x8c,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_DIRECT,            2, 0x9c,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IND16,             3, 0xbc,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX,               2, 0xac,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX_1,             3, 0xac,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX_2,             4, 0xac,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_D_IDX,             2, 0xac,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_D_IDX_2,           4, 0xac,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "cps", OP_IMM16,             3, 0x8f,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_DIRECT,            2, 0x9f,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IND16,             3, 0xbf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX,               2, 0xaf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX_1,             3, 0xaf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX_2,             4, 0xaf,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_D_IDX,             2, 0xaf,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_D_IDX_2,           4, 0xaf,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "cpx", OP_IMM16,             3, 0x8c,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "cpx", OP_DIRECT,            2, 0x9c,  5,  5,  CHG_NZVC, cpu6811 },
+//  { "cpx", OP_IND16,             3, 0xbc,  5,  5,  CHG_NZVC, cpu6811 },
+//  { "cpx", OP_IX,                2, 0xac,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "cpx", OP_IY | OP_PAGE4,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_IMM16,             3, 0x8e,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_DIRECT,            2, 0x9e,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IND16,             3, 0xbe,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX,               2, 0xae,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX_1,             3, 0xae,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX_2,             4, 0xae,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_D_IDX,             2, 0xae,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_D_IDX_2,           4, 0xae,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "cpy", OP_PAGE2 | OP_IMM16,  4, 0x8c,  5,  5,  CHG_NZVC, cpu6811 },
+//  { "cpy", OP_PAGE2 | OP_DIRECT, 3, 0x9c,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "cpy", OP_PAGE2 | OP_IY,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+//  { "cpy", OP_PAGE2 | OP_IND16,  4, 0xbc,  7,  7,  CHG_NZVC, cpu6811 },
+//  { "cpy", OP_PAGE3 | OP_IX,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_IMM16,             3, 0x8d,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_DIRECT,            2, 0x9d,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IND16,             3, 0xbd,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX,               2, 0xad,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX_1,             3, 0xad,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX_2,             4, 0xad,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_D_IDX,             2, 0xad,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_D_IDX_2,           4, 0xad,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  /* After 'daa', the Z flag is undefined. Mark it as changed.  */
+//  { "daa", OP_NONE,              1, 0x19,  2,  2,  CHG_NZVC, cpu6811 },
+  { "daa", OP_NONE | OP_PAGE2,  2, 0x07,  3,  3,  CHG_NZVC, cpumc9s12x },
+
+  { "dbeq", OP_DBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+  { "dbne", OP_DBNE_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+//  { "dec", OP_IX,                2, 0x6a,  6,  6,  CHG_NZV, cpu6811 },
+//  { "dec", OP_IND16,             3, 0x7a,  6,  6,  CHG_NZV, cpu6811 },
+//  { "dec", OP_IY | OP_PAGE2,     3, 0x6a,  7,  7,  CHG_NZV, cpu6811 },
+  { "dec", OP_IND16,             3, 0x73,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX,               2, 0x63,  3,  3,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX_1,             3, 0x63,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX_2,             4, 0x63,  5,  5,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_D_IDX,             2, 0x63,  6,  6,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_D_IDX_2,           4, 0x63,  6,  6,  CHG_NZV, cpumc9s12x },
+
+//  { "des",  OP_NONE,             1, 0x34,  3,  3,  CHG_NONE, cpu6811 },
+
+//  { "deca", OP_NONE,             1, 0x4a,  2,  2,  CHG_NZV, cpu6811 },
+  { "deca", OP_NONE,             1, 0x43,  1,  1,  CHG_NZV, cpumc9s12x },
+//  { "decb", OP_NONE,             1, 0x5a,  2,  2,  CHG_NZV, cpu6811 },
+  { "decb", OP_NONE,             1, 0x53,  1,  1,  CHG_NZV, cpumc9s12x },
+
+  { "dex",  OP_NONE,             1, 0x09,  1,  1,  CHG_Z, cpumc9s12x|cpu6811 },
+//  { "dey",  OP_NONE | OP_PAGE2,  2, 0x09,  4,  4,  CHG_Z, cpu6811 },
+  { "dey",  OP_NONE,             1, 0x03,  1,  1,  CHG_Z, cpumc9s12x },
+
+  { "ediv", OP_NONE,             1, 0x11,  11,  11,  CHG_NZVC, cpumc9s12x },
+  { "edivs", OP_NONE | OP_PAGE2, 2, 0x14,  12,  12,  CHG_NZVC, cpumc9s12x },
+  { "emacs", OP_IND16 | OP_PAGE2, 4, 0x12,  13,  13,  CHG_NZVC, cpumc9s12x },
+
+  { "emaxd", OP_IDX | OP_PAGE2,     3, 0x1a,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_IDX_1 | OP_PAGE2,   4, 0x1a,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_IDX_2 | OP_PAGE2,   5, 0x1a,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_D_IDX | OP_PAGE2,   3, 0x1a,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_D_IDX_2 | OP_PAGE2, 5, 0x1a,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emaxm", OP_IDX | OP_PAGE2,     3, 0x1e,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_IDX_1 | OP_PAGE2,   4, 0x1e,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_IDX_2 | OP_PAGE2,   5, 0x1e,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_D_IDX | OP_PAGE2,   3, 0x1e,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1e,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emind", OP_IDX | OP_PAGE2,     3, 0x1b,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_IDX_1 | OP_PAGE2,   4, 0x1b,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_IDX_2 | OP_PAGE2,   5, 0x1b,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_D_IDX | OP_PAGE2,   3, 0x1b,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_D_IDX_2 | OP_PAGE2, 5, 0x1b,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "eminm", OP_IDX | OP_PAGE2,     3, 0x1f,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_IDX_1 | OP_PAGE2,   4, 0x1f,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_IDX_2 | OP_PAGE2,   5, 0x1f,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_D_IDX | OP_PAGE2,   3, 0x1f,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1f,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emul",  OP_NONE,               1, 0x13,  3,  3,  CHG_NZC, cpumc9s12x },
+  { "emuls", OP_NONE | OP_PAGE2,    2, 0x13,  3,  3,  CHG_NZC, cpumc9s12x },
+
+  { "eora", OP_IMM8,         2, 0x88,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "eora", OP_DIRECT,       2, 0x98,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "eora", OP_IND16,        3, 0xb8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "eora", OP_IX,             2, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "eora", OP_IY | OP_PAGE2,  3, 0xa8,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "eora", OP_IDX,            2, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_IDX_1,          3, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_IDX_2,          4, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_D_IDX,          2, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_D_IDX_2,        4, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "eorb", OP_IMM8,         2, 0xc8,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "eorb", OP_DIRECT,       2, 0xd8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "eorb", OP_IND16,        3, 0xf8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "eorb", OP_IX,             2, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "eorb", OP_IY | OP_PAGE2,  3, 0xe8,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "eorb", OP_IDX,            2, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_IDX_1,          3, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_IDX_2,          4, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_D_IDX,          2, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_D_IDX_2,        4, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "etbl", OP_IDX | OP_PAGE2,3, 0x3f, 10, 10,  CHG_NZC, cpumc9s12x },
+
+  { "exg",  OP_EXG_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpumc9s12x },
+
+//  { "fdiv", OP_NONE,             1, 0x03,  3, 41, CHG_ZVC, cpu6811},
+  { "fdiv", OP_NONE | OP_PAGE2, 2, 0x11, 12, 12, CHG_ZVC, cpumc9s12x },
+
+  { "ibeq", OP_IBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+  { "ibne", OP_IBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+  { "idiv",  OP_NONE,              1, 0x02,  3, 41, CLR_V_CHG_ZC, cpu6811},
+  { "idiv",  OP_NONE | OP_PAGE2,  2, 0x10, 12, 12, CLR_V_CHG_ZC, cpumc9s12x },
+  { "idivs", OP_NONE | OP_PAGE2,  2, 0x15, 12, 12, CHG_NZVC, cpumc9s12x },
+
+//  { "inc", OP_IX,                  2, 0x6c,  6,  6,  CHG_NZV, cpu6811 },
+//  { "inc", OP_IND16,               3, 0x7c,  6,  6,  CHG_NZV, cpu6811 },
+//  { "inc", OP_IY | OP_PAGE2,       3, 0x6c,  7,  7,  CHG_NZV, cpu6811 },
+  { "inc", OP_IND16,               3, 0x72,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX,                 2, 0x62,  3,  3,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX_1,               3, 0x62,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX_2,               4, 0x62,  5,  5,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_D_IDX,               2, 0x62,  6,  6,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_D_IDX_2,             4, 0x62,  6,  6,  CHG_NZV, cpumc9s12x },
+
+//  { "inca", OP_NONE,               1, 0x4c,  2,  2,  CHG_NZV, cpu6811 },
+  { "inca", OP_NONE,               1, 0x42,  1,  1,  CHG_NZV, cpumc9s12x },
+//  { "incb", OP_NONE,               1, 0x5c,  2,  2,  CHG_NZV, cpu6811 },
+  { "incb", OP_NONE,               1, 0x52,  1,  1,  CHG_NZV, cpumc9s12x },
+
+//  { "ins",  OP_NONE,               1, 0x31,  3,  3,  CHG_NONE, cpu6811 },
+
+  { "inx",  OP_NONE,               1, 0x08,  1,  1,  CHG_Z, cpu6811|cpumc9s12x },
+//  { "iny",  OP_NONE |OP_PAGE2,     2, 0x08,  4,  4,  CHG_Z, cpu6811 },
+  { "iny",  OP_NONE,               1, 0x02,  1,  1,  CHG_Z, cpumc9s12x },
+
+//  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x7e,  3,  3,  CHG_NONE, cpu6811 },
+//  { "jmp",  OP_IX,                 2, 0x6e,  3,  3,  CHG_NONE, cpu6811 },
+//  { "jmp",  OP_IY | OP_PAGE2,      3, 0x6e,  4,  4,  CHG_NONE, cpu6811 },
+  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x06,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX,                2, 0x05,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX_1,              3, 0x05,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX_2,              4, 0x05,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_D_IDX,              2, 0x05,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_D_IDX_2,            4, 0x05,  6,  6,  CHG_NONE, cpumc9s12x },
+
+//  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x9d,  5,  5,  CHG_NONE, cpu6811 },
+//  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0xbd,  6,  6,  CHG_NONE, cpu6811 },
+//  { "jsr",  OP_IX,                 2, 0xad,  6,  6,  CHG_NONE, cpu6811 },
+//  { "jsr",  OP_IY | OP_PAGE2,      3, 0xad,  6,  6,  CHG_NONE, cpu6811 },
+  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x17,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0x16,  4,  3,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX,                2, 0x15,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX_1,              3, 0x15,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX_2,              4, 0x15,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_D_IDX,              2, 0x15,  7,  7,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_D_IDX_2,            4, 0x15,  7,  7,  CHG_NONE, cpumc9s12x },
+
+  { "lbcc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbcs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbeq", OP_JUMP_REL16 | OP_PAGE2,  4, 0x27,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbge", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2c,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbgt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2e,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbhi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x22,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbhs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lble", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2f,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lblo", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbls", OP_JUMP_REL16 | OP_PAGE2,  4, 0x23,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lblt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2d,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbmi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2b,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbne", OP_JUMP_REL16 | OP_PAGE2,  4, 0x26,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbpl", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2a,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbra", OP_JUMP_REL16 | OP_PAGE2,  4, 0x20,  4,  4, CHG_NONE, cpumc9s12x },
+  { "lbrn", OP_JUMP_REL16 | OP_PAGE2,  4, 0x21,  3,  3, CHG_NONE, cpumc9s12x },
+  { "lbvc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x28,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbvs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x29,  3,  4, CHG_NONE, cpumc9s12x },
+
+  { "ldaa", OP_IMM8,         2, 0x86,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldaa", OP_DIRECT,       2, 0x96,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldaa", OP_IND16,        3, 0xb6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "ldaa", OP_IX,             2, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "ldaa", OP_IY | OP_PAGE2,  3, 0xa6,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldaa", OP_IDX,            2, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_IDX_1,          3, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_IDX_2,          4, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_D_IDX,          2, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_D_IDX_2,        4, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldab", OP_IMM8,         2, 0xc6,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldab", OP_DIRECT,       2, 0xd6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldab", OP_IND16,        3, 0xf6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "ldab", OP_IX,             2, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "ldab", OP_IY | OP_PAGE2,  3, 0xe6,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldab", OP_IDX,            2, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_IDX_1,          3, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_IDX_2,          4, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_D_IDX,          2, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_D_IDX_2,        4, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldd", OP_IMM16,         3, 0xcc,  2,  2,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldd", OP_DIRECT,        2, 0xdc,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldd", OP_IND16,         3, 0xfc,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "ldd", OP_IX,              2, 0xec,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "ldd", OP_IY | OP_PAGE2,   3, 0xec,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldd", OP_IDX,             2, 0xec,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_IDX_1,           3, 0xec,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_IDX_2,           4, 0xec,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_D_IDX,           2, 0xec,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_D_IDX_2,         4, 0xec,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "lds",  OP_IMM16,          3, 0x8e,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+//  { "lds",  OP_DIRECT,         2, 0x9e,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "lds",  OP_IND16,          3, 0xbe,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "lds",  OP_IX,             2, 0xae,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "lds",  OP_IY | OP_PAGE2,  3, 0xae,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_IMM16,          3, 0xcf,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_DIRECT,         2, 0xdf,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IND16,          3, 0xff,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX,            2, 0xef,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX_1,          3, 0xef,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX_2,          4, 0xef,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_D_IDX,          2, 0xef,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_D_IDX_2,        4, 0xef,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldx",  OP_IMM16,        3, 0xce,  2,  2,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldx",  OP_DIRECT,       2, 0xde,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "ldx",  OP_IND16,        3, 0xfe,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "ldx",  OP_IX,             2, 0xee,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "ldx",  OP_IY | OP_PAGE4,  3, 0xee,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldx",  OP_IDX,            2, 0xee,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_IDX_1,          3, 0xee,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_IDX_2,          4, 0xee,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_D_IDX,          2, 0xee,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_D_IDX_2,        4, 0xee,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "ldy",  OP_IMM16 | OP_PAGE2,  4, 0xce, 4, 4, CLR_V_CHG_NZ, cpu6811 },
+//  { "ldy",  OP_DIRECT | OP_PAGE2, 3, 0xde, 5, 5, CLR_V_CHG_NZ, cpu6811 },
+//  { "ldy",  OP_IND16 | OP_PAGE2,  4, 0xfe, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+//  { "ldy",  OP_IX | OP_PAGE3,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+//  { "ldy",  OP_IY | OP_PAGE2,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_IMM16,          3, 0xcd,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_DIRECT,         2, 0xdd,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IND16,          3, 0xfd,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX,            2, 0xed,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX_1,          3, 0xed,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX_2,          4, 0xed,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_D_IDX,          2, 0xed,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_D_IDX_2,        4, 0xed,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "leas", OP_IDX,            2, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leas", OP_IDX_1,          3, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leas", OP_IDX_2,          4, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "leax", OP_IDX,            2, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leax", OP_IDX_1,          3, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leax", OP_IDX_2,          4, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "leay", OP_IDX,            2, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leay", OP_IDX_1,          3, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leay", OP_IDX_2,          4, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "lsl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "lsl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "lsl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpu6811 },
+  { "lsl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "lsla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "lslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "lsld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpu6811 },
+  { "lsld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "lsr",  OP_IND16,        3, 0x74,  4,  4,  CLR_N_CHG_ZVC, cpu6811|cpumc9s12x},
+//  { "lsr",  OP_IX,             2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpu6811 },
+//  { "lsr",  OP_IY | OP_PAGE2,  3, 0x64,  7,  7,  CLR_V_CHG_ZVC, cpu6811 },
+  { "lsr",  OP_IDX,            2, 0x64,  3,  3,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_IDX_1,          3, 0x64,  4,  4,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_IDX_2,          4, 0x64,  5,  5,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_D_IDX,          2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_D_IDX_2,        4, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpumc9s12x },
+
+  { "lsra", OP_NONE,         1, 0x44,  1,  1,  CLR_N_CHG_ZVC, cpu6811|cpumc9s12x},
+  { "lsrb", OP_NONE,         1, 0x54,  1,  1,  CLR_N_CHG_ZVC, cpu6811|cpumc9s12x},
+//  { "lsrd", OP_NONE,           1, 0x04,  3,  3,  CLR_N_CHG_ZVC, cpu6811 },
+  { "lsrd", OP_NONE,           1, 0x49,  1,  1,  CLR_N_CHG_ZVC, cpumc9s12x },
+
+  { "maxa", OP_IDX | OP_PAGE2,     3, 0x18,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_IDX_1 | OP_PAGE2,   4, 0x18,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_IDX_2 | OP_PAGE2,   5, 0x18,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_D_IDX | OP_PAGE2,   3, 0x18,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_D_IDX_2 | OP_PAGE2, 5, 0x18,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "maxm", OP_IDX | OP_PAGE2,     3, 0x1c,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_IDX_1 | OP_PAGE2,   4, 0x1c,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_IDX_2 | OP_PAGE2,   5, 0x1c,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_D_IDX | OP_PAGE2,   3, 0x1c,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1c,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "mem",  OP_NONE,                1, 0x01,  5,  5,  CHG_HNZVC, cpumc9s12x },
+
+  { "mina", OP_IDX | OP_PAGE2,     3, 0x19,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_IDX_1 | OP_PAGE2,   4, 0x19,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_IDX_2 | OP_PAGE2,   5, 0x19,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_D_IDX | OP_PAGE2,   3, 0x19,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_D_IDX_2 | OP_PAGE2, 5, 0x19,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "minm", OP_IDX | OP_PAGE2,     3, 0x1d,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_IDX_1 | OP_PAGE2,   4, 0x1d,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_IDX_2 | OP_PAGE2,   5, 0x1d,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_D_IDX | OP_PAGE2,   3, 0x1d,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1d,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "movb", OP_IMM8|OP_IND16_p2|OP_PAGE2, 5, 0x0b, 4, 4,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IMM8|OP_IDX_p2|OP_PAGE2,     4, 0x08,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IND16|OP_IND16_p2|OP_PAGE2,  6, 0x0c,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x09,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x0d,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x0a,  5,  5,  CHG_NONE, cpumc9s12x },
+
+  { "movw", OP_IMM16 | OP_IND16_p2 | OP_PAGE2,  6, 0x03,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IMM16 | OP_IDX_p2 | OP_PAGE2,    5, 0x00,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IND16 | OP_IND16_p2 | OP_PAGE2,  6, 0x04,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x01,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x05,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x02,  5,  5,  CHG_NONE, cpumc9s12x },
+
+// { "mul",  OP_NONE,           1, 0x3d,  3, 10,  CHG_C, cpu6811 },
+  { "mul",  OP_NONE,           1, 0x12,  3,  3,  CHG_C, cpumc9s12x },
+
+  { "neg",  OP_IND16,          3, 0x70,  4,  4,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "neg",  OP_IX,             2, 0x60,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "neg",  OP_IY | OP_PAGE2,  3, 0x60,  7,  7,  CHG_NZVC, cpu6811 },
+  { "neg",  OP_IDX,            2, 0x60,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_IDX_1,          3, 0x60,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_IDX_2,          4, 0x60,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_D_IDX,          2, 0x60,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_D_IDX_2,        4, 0x60,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "nega", OP_NONE,           1, 0x40,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "negb", OP_NONE,           1, 0x50,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "nop",  OP_NONE,           1, 0x01,  2,  2,  CHG_NONE, cpu6811 },
+  { "nop",  OP_NONE,           1, 0xa7,  1,  1,  CHG_NONE, cpumc9s12x },
+
+  { "oraa", OP_IMM8,         2, 0x8a,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "oraa", OP_DIRECT,       2, 0x9a,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "oraa", OP_IND16,        3, 0xba,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+//  { "oraa", OP_IX,             2, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "oraa", OP_IY | OP_PAGE2,  3, 0xaa,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "oraa", OP_IDX,            2, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_IDX_1,          3, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_IDX_2,          4, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_D_IDX,          2, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_D_IDX_2,        4, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "orab", OP_IMM8,         2, 0xca,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "orab", OP_DIRECT,       2, 0xda,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+  { "orab", OP_IND16,        3, 0xfa,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpumc9s12x },
+// { "orab", OP_IX,             2, 0xea,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "orab", OP_IY | OP_PAGE2,  3, 0xea,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "orab", OP_IDX,            2, 0xea,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_IDX_1,          3, 0xea,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_IDX_2,          4, 0xea,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_D_IDX,          2, 0xea,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_D_IDX_2,        4, 0xea,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "orcc", OP_IMM8,           2, 0x14,  1,  1,  CHG_ALL, cpumc9s12x },
+
+  { "psha", OP_NONE,           1, 0x36,  2,  2,  CHG_NONE, cpu6811|cpumc9s12x },
+  { "pshb", OP_NONE,           1, 0x37,  2,  2,  CHG_NONE, cpu6811|cpumc9s12x },
+  { "pshc", OP_NONE,           1, 0x39,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "pshd", OP_NONE,           1, 0x3b,  2,  2,  CHG_NONE, cpumc9s12x },
+//  { "pshx", OP_NONE,           1, 0x3c,  4,  4,  CHG_NONE, cpu6811 },
+  { "pshx", OP_NONE,           1, 0x34,  2,  2,  CHG_NONE, cpumc9s12x },
+//  { "pshy", OP_NONE | OP_PAGE2,2, 0x3c,  5,  5,  CHG_NONE, cpu6811 },
+  { "pshy", OP_NONE,           1, 0x35,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "pula", OP_NONE,           1, 0x32,  3,  3,  CHG_NONE, cpu6811|cpumc9s12x },
+  { "pulb", OP_NONE,           1, 0x33,  3,  3,  CHG_NONE, cpu6811|cpumc9s12x },
+  { "pulc", OP_NONE,           1, 0x38,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "puld", OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "pulx", OP_NONE,           1, 0x38,  5,  5,  CHG_NONE, cpu6811 },
+  { "pulx", OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "puly", OP_NONE | OP_PAGE2,2, 0x38,  6,  6,  CHG_NONE, cpu6811 },
+  { "puly", OP_NONE,           1, 0x31,  3,  3,  CHG_NONE, cpumc9s12x },
+
+  { "rev",  OP_NONE | OP_PAGE2, 2, 0x3a,  _M,  _M,  CHG_HNZVC, cpumc9s12x },
+  { "revw", OP_NONE | OP_PAGE2, 2, 0x3b,  _M,  _M,  CHG_HNZVC, cpumc9s12x },
+
+//  { "rol",  OP_IND16,          3, 0x79,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "rol",  OP_IX,             2, 0x69,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "rol",  OP_IY | OP_PAGE2,  3, 0x69,  7,  7,  CHG_NZVC, cpu6811 },
+  { "rol",  OP_IND16,          3, 0x75,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX,            2, 0x65,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX_1,          3, 0x65,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX_2,          4, 0x65,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_D_IDX,          2, 0x65,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_D_IDX_2,        4, 0x65,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "rola", OP_NONE,           1, 0x49,  2,  2,  CHG_NZVC, cpu6811 },
+  { "rola", OP_NONE,           1, 0x45,  1,  1,  CHG_NZVC, cpumc9s12x },
+//  { "rolb", OP_NONE,           1, 0x59,  2,  2,  CHG_NZVC, cpu6811 },
+  { "rolb", OP_NONE,           1, 0x55,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "ror",  OP_IND16,          3, 0x76,  4,  4,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "ror",  OP_IX,             2, 0x66,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "ror",  OP_IY | OP_PAGE2,  3, 0x66,  7,  7,  CHG_NZVC, cpu6811 },
+  { "ror",  OP_IDX,            2, 0x66,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_IDX_1,          3, 0x66,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_IDX_2,          4, 0x66,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_D_IDX,          2, 0x66,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_D_IDX_2,        4, 0x66,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "rora", OP_NONE,           1, 0x46,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "rorb", OP_NONE,           1, 0x56,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+
+  { "rtc",  OP_NONE,           1, 0x0a,  6,  6,  CHG_NONE, cpumc9s12x },
+//  { "rti",  OP_NONE,           1, 0x3b, 12, 12,  CHG_ALL, cpu6811},
+  { "rti",  OP_NONE,           1, 0x0b,  8, 10,  CHG_ALL, cpumc9s12x},
+//  { "rts",  OP_NONE,           1, 0x39,  5,  5,  CHG_NONE, cpu6811 },
+  { "rts",  OP_NONE,           1, 0x3d,  5,  5,  CHG_NONE, cpumc9s12x },
+
+//  { "sba",  OP_NONE,             1, 0x10,  2,  2,  CHG_NZVC, cpu6811 },
+  { "sba",  OP_NONE | OP_PAGE2, 2, 0x16,  2,  2,  CHG_NZVC, cpumc9s12x },
+
+  { "sbca", OP_IMM8,           2, 0x82,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "sbca", OP_DIRECT,         2, 0x92,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "sbca", OP_IND16,          3, 0xb2,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "sbca", OP_IX,             2, 0xa2,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "sbca", OP_IY | OP_PAGE2,  3, 0xa2,  5,  5,  CHG_NZVC, cpu6811 },
+  { "sbca", OP_IDX,            2, 0xa2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_IDX_1,          3, 0xa2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_IDX_2,          4, 0xa2,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_D_IDX,          2, 0xa2,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_D_IDX_2,        4, 0xa2,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "sbcb", OP_IMM8,           2, 0xc2,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "sbcb", OP_DIRECT,         2, 0xd2,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "sbcb", OP_IND16,          3, 0xf2,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "sbcb", OP_IX,             2, 0xe2,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "sbcb", OP_IY | OP_PAGE2,  3, 0xe2,  5,  5,  CHG_NZVC, cpu6811 },
+  { "sbcb", OP_IDX,            2, 0xe2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_IDX_1,          3, 0xe2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_IDX_2,          4, 0xe2,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_D_IDX,          2, 0xe2,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_D_IDX_2,        4, 0xe2,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "sec",  OP_NONE,           1, 0x0d,  2,  2,  SET_C, cpu6811 },
+//  { "sei",  OP_NONE,           1, 0x0f,  2,  2,  SET_I, cpu6811 },
+//  { "sev",  OP_NONE,           1, 0x0b,  2,  2,  SET_V, cpu6811 },
+
+  { "sex",  MC9S12X_OP_SEX_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7,  1,  1,  CHG_NONE, cpumc9s12x },
+
+//  { "staa", OP_IND16,          3, 0xb7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "staa", OP_DIRECT,         2, 0x97,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+//  { "staa", OP_IX,             2, 0xa7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "staa", OP_IY | OP_PAGE2,  3, 0xa7,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "staa", OP_DIRECT,         2, 0x5a,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IND16,          3, 0x7a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX,            2, 0x6a,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX_1,          3, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX_2,          4, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_D_IDX,          2, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_D_IDX_2,        4, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stab", OP_IND16,          3, 0xf7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "stab", OP_DIRECT,         2, 0xd7,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+// { "stab", OP_IX,             2, 0xe7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+// { "stab", OP_IY | OP_PAGE2,  3, 0xe7,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "stab", OP_DIRECT,         2, 0x5b,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IND16,          3, 0x7b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX,            2, 0x6b,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX_1,          3, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX_2,          4, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_D_IDX,          2, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_D_IDX_2,        4, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "std",  OP_IND16,          3, 0xfd,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "std",  OP_DIRECT,         2, 0xdd,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "std",  OP_IX,             2, 0xed,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "std",  OP_IY | OP_PAGE2,  3, 0xed,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "std",  OP_DIRECT,         2, 0x5c,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IND16,          3, 0x7c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX,            2, 0x6c,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX_1,          3, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX_2,          4, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_D_IDX,          2, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_D_IDX_2,        4, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stop", OP_NONE,           1, 0xcf,  2,  2,  CHG_NONE, cpu6811 },
+  { "stop", OP_NONE | OP_PAGE2,2, 0x3e,  2,  9,  CHG_NONE, cpumc9s12x },
+
+//  { "sts",  OP_IND16,          3, 0xbf,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "sts",  OP_DIRECT,         2, 0x9f,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "sts",  OP_IX,             2, 0xaf,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "sts",  OP_IY | OP_PAGE2,  3, 0xaf,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "sts",  OP_DIRECT,         2, 0x5f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IND16,          3, 0x7f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX,            2, 0x6f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX_1,          3, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX_2,          4, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_D_IDX,          2, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_D_IDX_2,        4, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stx",  OP_IND16,          3, 0xff,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "stx",  OP_DIRECT,         2, 0xdf,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+//  { "stx",  OP_IX,             2, 0xef,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+//  { "stx",  OP_IY | OP_PAGE4,  3, 0xef,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "stx",  OP_DIRECT,         2, 0x5e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IND16,          3, 0x7e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX,            2, 0x6e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX_1,          3, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX_2,          4, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_D_IDX,          2, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_D_IDX_2,        4, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "sty",  OP_IND16 | OP_PAGE2,  4, 0xff, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+//  { "sty",  OP_DIRECT | OP_PAGE2, 3, 0xdf, 5, 5, CLR_V_CHG_NZ, cpu6811 },
+//  { "sty",  OP_IY | OP_PAGE2,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+//  { "sty",  OP_IX | OP_PAGE3,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "sty",  OP_DIRECT,         2, 0x5d,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IND16,          3, 0x7d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX,            2, 0x6d,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX_1,          3, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX_2,          4, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_D_IDX,          2, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_D_IDX_2,        4, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "suba", OP_IMM8,           2, 0x80,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "suba", OP_DIRECT,         2, 0x90,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "suba", OP_IND16,          3, 0xb0,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "suba", OP_IX,             2, 0xa0,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "suba", OP_IY | OP_PAGE2,  3, 0xa0,  5,  5,  CHG_NZVC, cpu6811 },
+  { "suba", OP_IDX,            2, 0xa0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_IDX_1,          3, 0xa0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_IDX_2,          4, 0xa0,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_D_IDX,          2, 0xa0,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_D_IDX_2,        4, 0xa0,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "subb", OP_IMM8,           2, 0xc0,  1,  1,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "subb", OP_DIRECT,         2, 0xd0,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "subb", OP_IND16,          3, 0xf0,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "subb", OP_IX,             2, 0xe0,  4,  4,  CHG_NZVC, cpu6811 },
+//  { "subb", OP_IY | OP_PAGE2,  3, 0xe0,  5,  5,  CHG_NZVC, cpu6811 },
+  { "subb", OP_IDX,            2, 0xe0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_IDX_1,          3, 0xe0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_IDX_2,          4, 0xe0,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_D_IDX,          2, 0xe0,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_D_IDX_2,        4, 0xe0,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "subd", OP_IMM16,          3, 0x83,  2,  2,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "subd", OP_DIRECT,         2, 0x93,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+  { "subd", OP_IND16,          3, 0xb3,  3,  3,  CHG_NZVC, cpu6811|cpumc9s12x },
+//  { "subd", OP_IX,             2, 0xa3,  6,  6,  CHG_NZVC, cpu6811 },
+//  { "subd", OP_IY | OP_PAGE2,  3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "subd", OP_IDX,            2, 0xa3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_IDX_1,          3, 0xa3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_IDX_2,          4, 0xa3,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_D_IDX,          2, 0xa3,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_D_IDX_2,        4, 0xa3,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "swi",  OP_NONE,           1, 0x3f,  9,  9,  CHG_NONE, cpu6811|cpumc9s12x },
+
+//  { "tab",  OP_NONE,           1, 0x16,  2,  2,  CLR_V_CHG_NZ, cpu6811 },
+  { "tab",  OP_NONE | OP_PAGE2,2, 0x0e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "tap",  OP_NONE,           1, 0x06,  2,  2,  CHG_ALL, cpu6811 },
+
+//  { "tba",  OP_NONE,           1, 0x17,  2,  2,  CLR_V_CHG_NZ, cpu6811 },
+  { "tba",  OP_NONE | OP_PAGE2,2, 0x0f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "test", OP_NONE,           1, 0x00,  5, _M,  CHG_NONE, cpu6811 },
+
+//  { "tpa",  OP_NONE,           1, 0x07,  2,  2,  CHG_NONE, cpu6811 },
+
+  { "tbeq", OP_TBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+  { "tbl",  OP_IDX | OP_PAGE2,  3, 0x3d,  8,  8, CHG_NZC, cpumc9s12x },
+
+  { "tbne", OP_TBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+  { "tfr",  OP_TFR_MARKER
+          | OP_REG_1 | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpumc9s12x },
+
+  { "trap", OP_IMM8 | OP_TRAP_ID, 2, 0x18,  11,  11,  SET_I, cpumc9s12x },
+
+//  { "tst",  OP_IND16,          3, 0x7d,  6,  6,  CLR_VC_CHG_NZ, cpu6811 },
+//  { "tst",  OP_IX,             2, 0x6d,  6,  6,  CLR_VC_CHG_NZ, cpu6811 },
+//  { "tst",  OP_IY | OP_PAGE2,  3, 0x6d,  7,  7,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tst",  OP_IND16,          3, 0xf7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX,            2, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX_1,          3, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX_2,          4, 0xe7,  4,  4,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_D_IDX,          2, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_D_IDX_2,        4, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+
+//  { "tsta", OP_NONE,           1, 0x4d,  2,  2,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tsta", OP_NONE,           1, 0x97,  1,  1,  CLR_VC_CHG_NZ, cpumc9s12x },
+//  { "tstb", OP_NONE,           1, 0x5d,  2,  2,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tstb", OP_NONE,           1, 0xd7,  1,  1,  CLR_VC_CHG_NZ, cpumc9s12x },
+
+//  { "tsx",  OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpu6811 },
+//  { "tsy",  OP_NONE | OP_PAGE2,2, 0x30,  4,  4,  CHG_NONE, cpu6811 },
+//  { "txs",  OP_NONE,           1, 0x35,  3,  3,  CHG_NONE, cpu6811 },
+//  { "tys",  OP_NONE | OP_PAGE2,2, 0x35,  4,  4,  CHG_NONE, cpu6811 },
+
+  { "wai",  OP_NONE,           1, 0x3e,  5,  _M, CHG_NONE, cpu6811|cpumc9s12x },
+
+  { "wav",  OP_NONE | OP_PAGE2, 2, 0x3c,  8,  _M, SET_Z_CHG_HNVC, cpumc9s12x }
+
+//  { "xgdx", OP_NONE,           1, 0x8f,  3,  3,  CHG_NONE, cpu6811 },
+//  { "xgdy", OP_NONE | OP_PAGE2,2, 0x8f,  4,  4,  CHG_NONE, cpu6811 }
+};
+
+const int mc9s12x_num_opcodes = TABLE_SIZE (mc9s12x_opcodes);
+
+/* The following alias table provides source compatibility to
+   move from 68HC11 assembly to 68HC12.  */
+const struct mc9s12x_opcode_alias mc9s12x_alias[] = {
+  { "abx", "leax b,x",   2, 0x1a, 0xe5 },
+  { "aby", "leay b,y",   2, 0x19, 0xed },
+  { "clc", "andcc #$fe", 2, 0x10, 0xfe },
+  { "cli", "andcc #$ef", 2, 0x10, 0xef },
+  { "clv", "andcc #$fd", 2, 0x10, 0xfd },
+  { "des", "leas -1,sp", 2, 0x1b, 0x9f },
+  { "ins", "leas 1,sp",  2, 0x1b, 0x81 },
+  { "sec", "orcc #$01",  2, 0x14, 0x01 },
+  { "sei", "orcc #$10",  2, 0x14, 0x10 },
+  { "sev", "orcc #$02",  2, 0x14, 0x02 },
+  { "tap", "tfr a,ccr",  2, 0xb7, 0x02 },
+  { "tpa", "tfr ccr,a",  2, 0xb7, 0x20 },
+  { "tsx", "tfr sp,x",   2, 0xb7, 0x75 },
+  { "tsy", "tfr sp,y",   2, 0xb7, 0x76 },
+  { "txs", "tfr x,sp",   2, 0xb7, 0x57 },
+  { "tys", "tfr y,sp",   2, 0xb7, 0x67 },
+  { "xgdx","exg d,x",    2, 0xb7, 0xc5 },
+  { "xgdy","exg d,y",    2, 0xb7, 0xc6 }
+};
+const int mc9s12x_num_alias = TABLE_SIZE (mc9s12x_alias);
diff -rupN binutils-2.20/opcodes/mc9s12x-opc.c-backup binutils-2.20-sean/opcodes/mc9s12x-opc.c-backup
--- binutils-2.20/opcodes/mc9s12x-opc.c-backup	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9s12x-opc.c-backup	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,1083 @@
+/* m68hc11-opc.c -- Motorola 68HC11 & 68HC12 opcode list
+   Copyright 1999, 2000, 2002, 2005, 2007 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this file; see the file COPYING.  If not, write to the
+   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include <stdio.h>
+#include "ansidecl.h"
+#include "opcode/mc9s12x.h"
+
+#define TABLE_SIZE(X)       (sizeof(X) / sizeof(X[0]))
+
+/* Combination of CCR flags.  */
+#define MC9S12X_ZC_BIT    MC9S12X_Z_BIT|MC9S12X_C_BIT
+#define MC9S12X_NZ_BIT    MC9S12X_N_BIT|MC9S12X_Z_BIT
+#define MC9S12X_NZV_BIT   MC9S12X_N_BIT|MC9S12X_Z_BIT|MC9S12X_V_BIT
+#define MC9S12X_NZC_BIT   MC9S12X_N_BIT|MC9S12X_Z_BIT|MC9S12X_C_BIT
+#define MC9S12X_NVC_BIT   MC9S12X_N_BIT|MC9S12X_V_BIT|MC9S12X_C_BIT
+#define MC9S12X_ZVC_BIT   MC9S12X_Z_BIT|MC9S12X_V_BIT|MC9S12X_C_BIT
+#define MC9S12X_NZVC_BIT  MC9S12X_ZVC_BIT|MC9S12X_N_BIT
+#define MC9S12X_HNZVC_BIT MC9S12X_NZVC_BIT|MC9S12X_H_BIT
+#define MC9S12X_HNVC_BIT  MC9S12X_NVC_BIT|MC9S12X_H_BIT
+#define MC9S12X_VC_BIT    MC9S12X_V_BIT|MC9S12X_C_BIT
+
+/* Flags when the insn only changes some CCR flags.  */
+#define CHG_NONE        0,0,0
+#define CHG_Z           0,0,MC9S12X_Z_BIT
+#define CHG_C           0,0,MC9S12X_C_BIT
+#define CHG_ZVC         0,0,MC9S12X_ZVC_BIT
+#define CHG_NZC         0,0,MC9S12X_NZC_BIT
+#define CHG_NZV         0,0,MC9S12X_NZV_BIT
+#define CHG_NZVC        0,0,MC9S12X_NZVC_BIT
+#define CHG_HNZVC       0,0,MC9S12X_HNZVC_BIT
+#define CHG_ALL         0,0,0xff
+
+/* The insn clears and changes some flags.  */
+#define CLR_I           0,MC9S12X_I_BIT,0
+#define CLR_C           0,MC9S12X_C_BIT,0
+#define CLR_V           0,MC9S12X_V_BIT,0
+#define CLR_V_CHG_ZC    0,MC9S12X_V_BIT,MC9S12X_ZC_BIT
+#define CLR_V_CHG_NZ    0,MC9S12X_V_BIT,MC9S12X_NZ_BIT
+#define CLR_V_CHG_ZVC   0,MC9S12X_V_BIT,MC9S12X_ZVC_BIT
+#define CLR_N_CHG_ZVC   0,MC9S12X_N_BIT,MC9S12X_ZVC_BIT /* Used by lsr */
+#define CLR_VC_CHG_NZ   0,MC9S12X_VC_BIT,MC9S12X_NZ_BIT
+
+/* The insn sets some flags.  */
+#define SET_I           MC9S12X_I_BIT,0,0
+#define SET_C           MC9S12X_C_BIT,0,0
+#define SET_V           MC9S12X_V_BIT,0,0
+#define SET_Z_CLR_NVC   MC9S12X_Z_BIT,MC9S12X_NVC_BIT,0
+#define SET_C_CLR_V_CHG_NZ MC9S12X_C_BIT,MC9S12X_V_BIT,MC9S12X_NZ_BIT
+#define SET_Z_CHG_HNVC  MC9S12X_Z_BIT,0,MC9S12X_HNVC_BIT
+
+#define _M 0xff
+#define OP_NONE         MC9S12X_OP_NONE
+#define OP_PAGE2        MC9S12X_OP_PAGE2
+#define OP_PAGE3        MC9S12X_OP_PAGE3
+#define OP_PAGE4        MC9S12X_OP_PAGE4
+#define OP_IMM8         MC9S12X_OP_IMM8
+#define OP_IMM16        MC9S12X_OP_IMM16
+#define OP_IX           MC9S12X_OP_IX
+#define OP_IY           MC9S12X_OP_IY
+#define OP_IND16        MC9S12X_OP_IND16
+#define OP_PAGE         MC9S12X_OP_PAGE
+#define OP_IDX          MC9S12X_OP_IDX
+#define OP_IDX_1        MC9S12X_OP_IDX_1
+#define OP_IDX_2        MC9S12X_OP_IDX_2
+#define OP_D_IDX        MC9S12X_OP_D_IDX
+#define OP_D_IDX_2      MC9S12X_OP_D_IDX_2
+#define OP_DIRECT       MC9S12X_OP_DIRECT
+#define OP_BITMASK      MC9S12X_OP_BITMASK
+#define OP_BRANCH       MC9S12X_OP_BRANCH
+#define OP_JUMP_REL     (MC9S12X_OP_JUMP_REL|OP_BRANCH)
+#define OP_JUMP_REL16   (MC9S12X_OP_JUMP_REL16|OP_BRANCH)
+#define OP_REG          MC9S12X_OP_REG
+#define OP_REG_1        MC9S12X_OP_REG
+#define OP_REG_2        MC9S12X_OP_REG_2
+#define OP_IDX_p2       MC9S12X_OP_IDX_P2
+#define OP_IND16_p2     MC9S12X_OP_IND16_P2
+#define OP_TRAP_ID      MC9S12X_OP_TRAP_ID
+#define OP_EXG_MARKER   MC9S12X_OP_EXG_MARKER
+#define OP_TFR_MARKER   MC9S12X_OP_TFR_MARKER
+#define OP_DBEQ_MARKER  (MC9S12X_OP_DBCC_MARKER|MC9S12X_OP_EQ_MARKER)
+#define OP_DBNE_MARKER  (MC9S12X_OP_DBCC_MARKER)
+#define OP_TBEQ_MARKER  (MC9S12X_OP_TBCC_MARKER|MC9S12X_OP_EQ_MARKER)
+#define OP_TBNE_MARKER  (MC9S12X_OP_TBCC_MARKER)
+#define OP_IBEQ_MARKER  (MC9S12X_OP_IBCC_MARKER|MC9S12X_OP_EQ_MARKER)
+#define OP_IBNE_MARKER  (MC9S12X_OP_IBCC_MARKER)
+
+/*
+   { "test", OP_NONE,          1, 0x00,  5, _M,  CHG_NONE,  cpu6811 },
+                                                            +-- cpu
+  Name -+                                        +------- Insn CCR changes
+  Format  ------+                            +----------- Max # cycles
+  Size     --------------------+         +--------------- Min # cycles
+                                   +--------------------- Opcode
+*/
+const struct mc9s12x_opcode mc9s12x_opcodes[] = {
+//  { "aba",  OP_NONE,           1, 0x1b,  2,  2,  CHG_HNZVC, cpu6811 },
+  { "aba",  OP_NONE | OP_PAGE2,2, 0x06,  2,  2,  CHG_HNZVC, cpumc9s12x },
+//  { "abx",  OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE,  cpu6811 },
+//  { "aby",  OP_NONE | OP_PAGE2,2, 0x3a,  4,  4,  CHG_NONE,  cpu6811 },
+
+  { "adca", OP_IMM8,           2, 0x89,  1,  1,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adca", OP_DIRECT,         2, 0x99,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adca", OP_IND16,          3, 0xb9,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+//  { "adca", OP_IX,             2, 0xa9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+//  { "adca", OP_IY | OP_PAGE2,  3, 0xa9,  5,  5,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_IDX,            2, 0xa9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_IDX_1,          3, 0xa9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_IDX_2,          4, 0xa9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_D_IDX,          2, 0xa9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adca", OP_D_IDX_2,        4, 0xa9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "adcb", OP_IMM8,           2, 0xc9,  1,  1,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adcb", OP_DIRECT,         2, 0xd9,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adcb", OP_IND16,          3, 0xf9,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+//  { "adcb", OP_IX,             2, 0xe9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+//  { "adcb", OP_IY | OP_PAGE2,  3, 0xe9,  5,  5,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_IDX,            2, 0xe9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_IDX_1,          3, 0xe9,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_IDX_2,          4, 0xe9,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_D_IDX,          2, 0xe9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adcb", OP_D_IDX_2,        4, 0xe9,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "adda", OP_IMM8,           2, 0x8b,  1,  1,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adda", OP_DIRECT,         2, 0x9b,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "adda", OP_IND16,          3, 0xbb,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+//  { "adda", OP_IX,             2, 0xab,  4,  4,  CHG_HNZVC, cpumc9s12x },
+ // { "adda", OP_IY | OP_PAGE2,  3, 0xab,  5,  5,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_IDX,            2, 0xab,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_IDX_1,          3, 0xab,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_IDX_2,          4, 0xab,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_D_IDX,          2, 0xab,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "adda", OP_D_IDX_2,        4, 0xab,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "addb", OP_IMM8,           2, 0xcb,  1,  1,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "addb", OP_DIRECT,         2, 0xdb,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+  { "addb", OP_IND16,          3, 0xfb,  3,  3,  CHG_HNZVC, cpumc9s12x|cpumc9s12x },
+//  { "addb", OP_IX,             2, 0xeb,  4,  4,  CHG_HNZVC, cpumc9s12x },
+//  { "addb", OP_IY | OP_PAGE2,  3, 0xeb,  5,  5,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_IDX,            2, 0xeb,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_IDX_1,          3, 0xeb,  3,  3,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_IDX_2,          4, 0xeb,  4,  4,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_D_IDX,          2, 0xeb,  6,  6,  CHG_HNZVC, cpumc9s12x },
+  { "addb", OP_D_IDX_2,        4, 0xeb,  6,  6,  CHG_HNZVC, cpumc9s12x },
+
+  { "addd", OP_IMM16,          3, 0xc3,  2,  2,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "addd", OP_DIRECT,         2, 0xd3,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "addd", OP_IND16,          3, 0xf3,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "addd", OP_IX,             2, 0xe3,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "addd", OP_IY | OP_PAGE2,  3, 0xe3,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_IDX,            2, 0xe3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_IDX_1,          3, 0xe3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_IDX_2,          4, 0xe3,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_D_IDX,          2, 0xe3,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "addd", OP_D_IDX_2,        4, 0xe3,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "anda", OP_IMM8,         2, 0x84,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "anda", OP_DIRECT,       2, 0x94,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "anda", OP_IND16,        3, 0xb4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+// { "anda", OP_IX,             2, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "anda", OP_IY | OP_PAGE2,  3, 0xa4,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_IDX,            2, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_IDX_1,          3, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_IDX_2,          4, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_D_IDX,          2, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "anda", OP_D_IDX_2,        4, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "andb", OP_IMM8,         2, 0xc4,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "andb", OP_DIRECT,       2, 0xd4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "andb", OP_IND16,        3, 0xf4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "andb", OP_IX,             2, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+ // { "andb", OP_IY | OP_PAGE2,  3, 0xe4,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_IDX,            2, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_IDX_1,          3, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_IDX_2,          4, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_D_IDX,          2, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "andb", OP_D_IDX_2,        4, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "andcc", OP_IMM8,          2, 0x10,  1,  1,  CHG_ALL,  cpumc9s12x },
+
+  { "asl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+ // { "asl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+ // { "asl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "asl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "asla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "aslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "asld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "asld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "asr",  OP_IND16,          3, 0x77,  4,  4,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "asr",  OP_IX,             2, 0x67,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "asr",  OP_IY | OP_PAGE2,  3, 0x67,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_IDX,            2, 0x67,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_IDX_1,          3, 0x67,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_IDX_2,          4, 0x67,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_D_IDX,          2, 0x67,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "asr",  OP_D_IDX_2,        4, 0x67,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "asra", OP_NONE,           1, 0x47,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "asrb", OP_NONE,           1, 0x57,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+
+  { "bcc", OP_JUMP_REL,        2, 0x24,  1,  3,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+
+//  { "bclr", OP_BITMASK|OP_DIRECT,  3, 0x15,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bclr", OP_BITMASK|OP_IX,       3, 0x1d,  7,  7,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bclr", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1d, 8, 8, CLR_V_CHG_NZ, cpumc9s12x},
+  { "bclr", OP_BITMASK|OP_DIRECT,   3, 0x4d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IND16,    4, 0x1d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX,      3, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX_1,    4, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bclr", OP_BITMASK|OP_IDX_2,    5, 0x0d,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "bcs", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "beq", OP_JUMP_REL,        2, 0x27,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bge", OP_JUMP_REL,        2, 0x2c,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+
+  { "bgnd", OP_NONE,           1, 0x00,  5,  5, CHG_NONE, cpumc9s12x | cpumc9s12x },
+
+  { "bgt", OP_JUMP_REL,        2, 0x2e,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bhi", OP_JUMP_REL,        2, 0x22,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bhs", OP_JUMP_REL,        2, 0x24,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  
+  { "bita", OP_IMM8,          2, 0x85,  1,  1, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "bita", OP_DIRECT,        2, 0x95,  3,  3, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "bita", OP_IND16,         3, 0xb5,  3,  3, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "bita", OP_IX,             2, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bita", OP_IY | OP_PAGE2,  3, 0xa5,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_IDX,            2, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_IDX_1,          3, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_IDX_2,          4, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_D_IDX,          2, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bita", OP_D_IDX_2,        4, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "bitb", OP_IMM8,          2, 0xc5,  1,  1, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "bitb", OP_DIRECT,        2, 0xd5,  3,  3, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "bitb", OP_IND16,         3, 0xf5,  3,  3, CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "bitb", OP_IX,             2, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bitb", OP_IY | OP_PAGE2,  3, 0xe5,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_IDX,            2, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_IDX_1,          3, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_IDX_2,          4, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_D_IDX,          2, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bitb", OP_D_IDX_2,        4, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ble", OP_JUMP_REL,        2, 0x2f,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "blo", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bls", OP_JUMP_REL,        2, 0x23,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "blt", OP_JUMP_REL,        2, 0x2d,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bmi", OP_JUMP_REL,        2, 0x2b,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bne", OP_JUMP_REL,        2, 0x26,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bpl", OP_JUMP_REL,        2, 0x2a,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bra", OP_JUMP_REL,        2, 0x20,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_DIRECT,         4, 0x13,  6,  6, CHG_NONE, cpumc9s12x },
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_IX,             4, 0x1f,  7,  7, CHG_NONE, cpumc9s12x },
+//  { "brclr", OP_BITMASK | OP_JUMP_REL
+//           | OP_IY | OP_PAGE2,  5, 0x1f,  8,  8, CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,         4, 0x4f,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,          5, 0x1f,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0f,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0f,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "brclr", OP_BITMASK
+           | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0f,  8,  8,  CHG_NONE, cpumc9s12x },
+
+  { "brn", OP_JUMP_REL,         2, 0x21,  1,  3,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+
+//  { "brset", OP_BITMASK | OP_JUMP_REL
+//           | OP_DIRECT,         4, 0x12,  6,  6,  CHG_NONE, cpumc9s12x },
+//  { "brset", OP_BITMASK
+//           | OP_JUMP_REL
+//           | OP_IX,             4, 0x1e,  7,  7,  CHG_NONE, cpumc9s12x },
+//  { "brset", OP_BITMASK | OP_JUMP_REL
+//           | OP_IY | OP_PAGE2,  5, 0x1e,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,   4, 0x4e,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,    5, 0x1e,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0e,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0e,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0e,  8,  8,  CHG_NONE, cpumc9s12x },
+
+
+//  { "bset", OP_BITMASK | OP_DIRECT,   3, 0x14,  6,  6, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bset", OP_BITMASK | OP_IX,       3, 0x1c,  7,  7, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "bset", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1c, 8, 8, CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_DIRECT,   3, 0x4c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IND16,    4, 0x1c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX,      3, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX_1,    4, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "bset", OP_BITMASK|OP_IDX_2,    5, 0x0c,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "bsr",  OP_JUMP_REL,       2, 0x8d,  6,  6, CHG_NONE, cpumc9s12x },
+  { "bsr",  OP_JUMP_REL,       2, 0x07,  4,  4, CHG_NONE, cpumc9s12x },
+
+  { "bvc",  OP_JUMP_REL,       2, 0x28,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+  { "bvs",  OP_JUMP_REL,       2, 0x29,  1,  3, CHG_NONE, cpumc9s12x | cpumc9s12x },
+
+  { "call", OP_IND16 | OP_PAGE
+          | OP_BRANCH,         4, 0x4a,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX | OP_PAGE
+          | OP_BRANCH,         3, 0x4b,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX_1 | OP_PAGE
+          | OP_BRANCH,         4, 0x4b,  8,  8,  CHG_NONE, cpumc9s12x },
+  { "call", OP_IDX_2 | OP_PAGE
+          | OP_BRANCH,         5, 0x4b,  9,  9,  CHG_NONE, cpumc9s12x },
+  { "call", OP_D_IDX
+          | OP_BRANCH,         2, 0x4b, 10, 10,  CHG_NONE, cpumc9s12x },
+  { "call", OP_D_IDX_2
+          | OP_BRANCH,         4, 0x4b, 10, 10,  CHG_NONE, cpumc9s12x },
+
+//  { "cba",  OP_NONE,           1, 0x11,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cba",  OP_NONE | OP_PAGE2,2, 0x17,  2,  2,  CHG_NZVC, cpumc9s12x },
+
+//  { "clc",  OP_NONE,           1, 0x0c,  2,  2,  CLR_C, cpumc9s12x },
+//  { "cli",  OP_NONE,           1, 0x0e,  2,  2,  CLR_I, cpumc9s12x },
+
+//  { "clr", OP_IND16,           3, 0x7f,  6,  6,  SET_Z_CLR_NVC, cpumc9s12x },
+//  { "clr", OP_IX,              2, 0x6f,  6,  6,  SET_Z_CLR_NVC, cpumc9s12x },
+//  { "clr", OP_IY | OP_PAGE2,   3, 0x6f,  7,  7,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IND16,           3, 0x79,  3,  3,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX,             2, 0x69,  2,  2,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX_1,           3, 0x69,  3,  3,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_IDX_2,           4, 0x69,  4,  4,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_D_IDX,           2, 0x69,  5,  5,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clr", OP_D_IDX_2,         4, 0x69,  5,  5,  SET_Z_CLR_NVC, cpumc9s12x },
+
+//  { "clra", OP_NONE,           1, 0x4f,  2,  2,  SET_Z_CLR_NVC, cpumc9s12x },
+//  { "clrb", OP_NONE,           1, 0x5f,  2,  2,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clra", OP_NONE,           1, 0x87,  1,  1,  SET_Z_CLR_NVC, cpumc9s12x },
+  { "clrb", OP_NONE,           1, 0xc7,  1,  1,  SET_Z_CLR_NVC, cpumc9s12x },
+
+//  { "clv",  OP_NONE,           1, 0x0a,  2,  2,  CLR_V, cpumc9s12x },
+
+  { "cmpa", OP_IMM8,           2, 0x81,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "cmpa", OP_DIRECT,         2, 0x91,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "cmpa", OP_IND16,          3, 0xb1,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "cmpa", OP_IX,             2, 0xa1,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "cmpa", OP_IY | OP_PAGE2,  3, 0xa1,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_IDX,            2, 0xa1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_IDX_1,          3, 0xa1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_IDX_2,          4, 0xa1,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_D_IDX,          2, 0xa1,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cmpa", OP_D_IDX_2,        4, 0xa1,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "cmpb", OP_IMM8,           2, 0xc1,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "cmpb", OP_DIRECT,         2, 0xd1,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "cmpb", OP_IND16,          3, 0xf1,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "cmpb", OP_IX,             2, 0xe1,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "cmpb", OP_IY | OP_PAGE2,  3, 0xe1,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_IDX,            2, 0xe1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_IDX_1,          3, 0xe1,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_IDX_2,          4, 0xe1,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_D_IDX,          2, 0xe1,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cmpb", OP_D_IDX_2,        4, 0xe1,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "com", OP_IND16,           3, 0x73,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+//  { "com", OP_IX,              2, 0x63,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+//  { "com", OP_IY | OP_PAGE2,   3, 0x63,  7,  7,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IND16,           3, 0x71,  4,  4,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX,             2, 0x61,  3,  3,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX_1,           3, 0x61,  4,  4,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_IDX_2,           4, 0x61,  5,  5,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_D_IDX,           2, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "com", OP_D_IDX_2,         4, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "coma", OP_NONE,           1, 0x43,  2,  2,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "coma", OP_NONE,           1, 0x41,  1,  1,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+//  { "comb", OP_NONE,           1, 0x53,  2,  2,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+  { "comb", OP_NONE,           1, 0x51,  1,  1,  SET_C_CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "cpd", OP_IMM16 | OP_PAGE3,  4, 0x83,  5,  5,  CHG_NZVC, cpumc9s12x },
+//  { "cpd", OP_DIRECT | OP_PAGE3, 3, 0x93,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "cpd", OP_IND16 | OP_PAGE3,  4, 0xb3,  7,  7,  CHG_NZVC, cpumc9s12x },
+//  { "cpd", OP_IX | OP_PAGE3,     3, 0xa3,  7,  7,  CHG_NZVC, cpumc9s12x },
+//  { "cpd", OP_IY | OP_PAGE4,     3, 0xa3,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IMM16,             3, 0x8c,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_DIRECT,            2, 0x9c,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IND16,             3, 0xbc,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX,               2, 0xac,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX_1,             3, 0xac,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_IDX_2,             4, 0xac,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_D_IDX,             2, 0xac,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpd", OP_D_IDX_2,           4, 0xac,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "cps", OP_IMM16,             3, 0x8f,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_DIRECT,            2, 0x9f,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IND16,             3, 0xbf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX,               2, 0xaf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX_1,             3, 0xaf,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_IDX_2,             4, 0xaf,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_D_IDX,             2, 0xaf,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cps", OP_D_IDX_2,           4, 0xaf,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "cpx", OP_IMM16,             3, 0x8c,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "cpx", OP_DIRECT,            2, 0x9c,  5,  5,  CHG_NZVC, cpumc9s12x },
+//  { "cpx", OP_IND16,             3, 0xbc,  5,  5,  CHG_NZVC, cpumc9s12x },
+//  { "cpx", OP_IX,                2, 0xac,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "cpx", OP_IY | OP_PAGE4,     3, 0xac,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IMM16,             3, 0x8e,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_DIRECT,            2, 0x9e,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IND16,             3, 0xbe,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX,               2, 0xae,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX_1,             3, 0xae,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_IDX_2,             4, 0xae,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_D_IDX,             2, 0xae,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpx", OP_D_IDX_2,           4, 0xae,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "cpy", OP_PAGE2 | OP_IMM16,  4, 0x8c,  5,  5,  CHG_NZVC, cpumc9s12x },
+//  { "cpy", OP_PAGE2 | OP_DIRECT, 3, 0x9c,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "cpy", OP_PAGE2 | OP_IY,     3, 0xac,  7,  7,  CHG_NZVC, cpumc9s12x },
+//  { "cpy", OP_PAGE2 | OP_IND16,  4, 0xbc,  7,  7,  CHG_NZVC, cpumc9s12x },
+//  { "cpy", OP_PAGE3 | OP_IX,     3, 0xac,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IMM16,             3, 0x8d,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_DIRECT,            2, 0x9d,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IND16,             3, 0xbd,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX,               2, 0xad,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX_1,             3, 0xad,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_IDX_2,             4, 0xad,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_D_IDX,             2, 0xad,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "cpy", OP_D_IDX_2,           4, 0xad,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  /* After 'daa', the Z flag is undefined. Mark it as changed.  */
+//  { "daa", OP_NONE,              1, 0x19,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "daa", OP_NONE | OP_PAGE2,  2, 0x07,  3,  3,  CHG_NZVC, cpumc9s12x },
+
+  { "dbeq", OP_DBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+  { "dbne", OP_DBNE_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+//  { "dec", OP_IX,                2, 0x6a,  6,  6,  CHG_NZV, cpumc9s12x },
+//  { "dec", OP_IND16,             3, 0x7a,  6,  6,  CHG_NZV, cpumc9s12x },
+//  { "dec", OP_IY | OP_PAGE2,     3, 0x6a,  7,  7,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IND16,             3, 0x73,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX,               2, 0x63,  3,  3,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX_1,             3, 0x63,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_IDX_2,             4, 0x63,  5,  5,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_D_IDX,             2, 0x63,  6,  6,  CHG_NZV, cpumc9s12x },
+  { "dec", OP_D_IDX_2,           4, 0x63,  6,  6,  CHG_NZV, cpumc9s12x },
+
+//  { "des",  OP_NONE,             1, 0x34,  3,  3,  CHG_NONE, cpumc9s12x },
+
+//  { "deca", OP_NONE,             1, 0x4a,  2,  2,  CHG_NZV, cpumc9s12x },
+  { "deca", OP_NONE,             1, 0x43,  1,  1,  CHG_NZV, cpumc9s12x },
+//  { "decb", OP_NONE,             1, 0x5a,  2,  2,  CHG_NZV, cpumc9s12x },
+  { "decb", OP_NONE,             1, 0x53,  1,  1,  CHG_NZV, cpumc9s12x },
+
+  { "dex",  OP_NONE,             1, 0x09,  1,  1,  CHG_Z, cpumc9s12x|cpumc9s12x },
+//  { "dey",  OP_NONE | OP_PAGE2,  2, 0x09,  4,  4,  CHG_Z, cpumc9s12x },
+  { "dey",  OP_NONE,             1, 0x03,  1,  1,  CHG_Z, cpumc9s12x },
+
+  { "ediv", OP_NONE,             1, 0x11,  11,  11,  CHG_NZVC, cpumc9s12x },
+  { "edivs", OP_NONE | OP_PAGE2, 2, 0x14,  12,  12,  CHG_NZVC, cpumc9s12x },
+  { "emacs", OP_IND16 | OP_PAGE2, 4, 0x12,  13,  13,  CHG_NZVC, cpumc9s12x },
+
+  { "emaxd", OP_IDX | OP_PAGE2,     3, 0x1a,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_IDX_1 | OP_PAGE2,   4, 0x1a,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_IDX_2 | OP_PAGE2,   5, 0x1a,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_D_IDX | OP_PAGE2,   3, 0x1a,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emaxd", OP_D_IDX_2 | OP_PAGE2, 5, 0x1a,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emaxm", OP_IDX | OP_PAGE2,     3, 0x1e,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_IDX_1 | OP_PAGE2,   4, 0x1e,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_IDX_2 | OP_PAGE2,   5, 0x1e,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_D_IDX | OP_PAGE2,   3, 0x1e,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emaxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1e,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emind", OP_IDX | OP_PAGE2,     3, 0x1b,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_IDX_1 | OP_PAGE2,   4, 0x1b,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_IDX_2 | OP_PAGE2,   5, 0x1b,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_D_IDX | OP_PAGE2,   3, 0x1b,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "emind", OP_D_IDX_2 | OP_PAGE2, 5, 0x1b,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "eminm", OP_IDX | OP_PAGE2,     3, 0x1f,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_IDX_1 | OP_PAGE2,   4, 0x1f,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_IDX_2 | OP_PAGE2,   5, 0x1f,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_D_IDX | OP_PAGE2,   3, 0x1f,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "eminm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1f,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "emul",  OP_NONE,               1, 0x13,  3,  3,  CHG_NZC, cpumc9s12x },
+  { "emuls", OP_NONE | OP_PAGE2,    2, 0x13,  3,  3,  CHG_NZC, cpumc9s12x },
+
+  { "eora", OP_IMM8,         2, 0x88,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "eora", OP_DIRECT,       2, 0x98,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "eora", OP_IND16,        3, 0xb8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "eora", OP_IX,             2, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "eora", OP_IY | OP_PAGE2,  3, 0xa8,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_IDX,            2, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_IDX_1,          3, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_IDX_2,          4, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_D_IDX,          2, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eora", OP_D_IDX_2,        4, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "eorb", OP_IMM8,         2, 0xc8,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "eorb", OP_DIRECT,       2, 0xd8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "eorb", OP_IND16,        3, 0xf8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "eorb", OP_IX,             2, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "eorb", OP_IY | OP_PAGE2,  3, 0xe8,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_IDX,            2, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_IDX_1,          3, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_IDX_2,          4, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_D_IDX,          2, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "eorb", OP_D_IDX_2,        4, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "etbl", OP_IDX | OP_PAGE2,3, 0x3f, 10, 10,  CHG_NZC, cpumc9s12x },
+
+  { "exg",  OP_EXG_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpumc9s12x },
+
+//  { "fdiv", OP_NONE,             1, 0x03,  3, 41, CHG_ZVC, cpumc9s12x},
+  { "fdiv", OP_NONE | OP_PAGE2, 2, 0x11, 12, 12, CHG_ZVC, cpumc9s12x },
+
+  { "ibeq", OP_IBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+  { "ibne", OP_IBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+//  { "idiv",  OP_NONE,              1, 0x02,  3, 41, CLR_V_CHG_ZC, cpumc9s12x},
+  { "idiv",  OP_NONE | OP_PAGE2,  2, 0x10, 12, 12, CLR_V_CHG_ZC, cpumc9s12x },
+  { "idivs", OP_NONE | OP_PAGE2,  2, 0x15, 12, 12, CHG_NZVC, cpumc9s12x },
+
+//  { "inc", OP_IX,                  2, 0x6c,  6,  6,  CHG_NZV, cpumc9s12x },
+//  { "inc", OP_IND16,               3, 0x7c,  6,  6,  CHG_NZV, cpumc9s12x },
+//  { "inc", OP_IY | OP_PAGE2,       3, 0x6c,  7,  7,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IND16,               3, 0x72,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX,                 2, 0x62,  3,  3,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX_1,               3, 0x62,  4,  4,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_IDX_2,               4, 0x62,  5,  5,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_D_IDX,               2, 0x62,  6,  6,  CHG_NZV, cpumc9s12x },
+  { "inc", OP_D_IDX_2,             4, 0x62,  6,  6,  CHG_NZV, cpumc9s12x },
+
+//  { "inca", OP_NONE,               1, 0x4c,  2,  2,  CHG_NZV, cpumc9s12x },
+  { "inca", OP_NONE,               1, 0x42,  1,  1,  CHG_NZV, cpumc9s12x },
+//  { "incb", OP_NONE,               1, 0x5c,  2,  2,  CHG_NZV, cpumc9s12x },
+  { "incb", OP_NONE,               1, 0x52,  1,  1,  CHG_NZV, cpumc9s12x },
+
+//  { "ins",  OP_NONE,               1, 0x31,  3,  3,  CHG_NONE, cpumc9s12x },
+
+  { "inx",  OP_NONE,               1, 0x08,  1,  1,  CHG_Z, cpumc9s12x|cpumc9s12x },
+//  { "iny",  OP_NONE |OP_PAGE2,     2, 0x08,  4,  4,  CHG_Z, cpumc9s12x },
+  { "iny",  OP_NONE,               1, 0x02,  1,  1,  CHG_Z, cpumc9s12x },
+
+//  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x7e,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "jmp",  OP_IX,                 2, 0x6e,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "jmp",  OP_IY | OP_PAGE2,      3, 0x6e,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x06,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX,                2, 0x05,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX_1,              3, 0x05,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_IDX_2,              4, 0x05,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_D_IDX,              2, 0x05,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "jmp",  OP_D_IDX_2,            4, 0x05,  6,  6,  CHG_NONE, cpumc9s12x },
+
+//  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x9d,  5,  5,  CHG_NONE, cpumc9s12x },
+//  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0xbd,  6,  6,  CHG_NONE, cpumc9s12x },
+//  { "jsr",  OP_IX,                 2, 0xad,  6,  6,  CHG_NONE, cpumc9s12x },
+//  { "jsr",  OP_IY | OP_PAGE2,      3, 0xad,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x17,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0x16,  4,  3,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX,                2, 0x15,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX_1,              3, 0x15,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_IDX_2,              4, 0x15,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_D_IDX,              2, 0x15,  7,  7,  CHG_NONE, cpumc9s12x },
+  { "jsr",  OP_D_IDX_2,            4, 0x15,  7,  7,  CHG_NONE, cpumc9s12x },
+
+  { "lbcc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbcs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbeq", OP_JUMP_REL16 | OP_PAGE2,  4, 0x27,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbge", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2c,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbgt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2e,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbhi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x22,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbhs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lble", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2f,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lblo", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbls", OP_JUMP_REL16 | OP_PAGE2,  4, 0x23,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lblt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2d,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbmi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2b,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbne", OP_JUMP_REL16 | OP_PAGE2,  4, 0x26,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbpl", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2a,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbra", OP_JUMP_REL16 | OP_PAGE2,  4, 0x20,  4,  4, CHG_NONE, cpumc9s12x },
+  { "lbrn", OP_JUMP_REL16 | OP_PAGE2,  4, 0x21,  3,  3, CHG_NONE, cpumc9s12x },
+  { "lbvc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x28,  3,  4, CHG_NONE, cpumc9s12x },
+  { "lbvs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x29,  3,  4, CHG_NONE, cpumc9s12x },
+
+  { "ldaa", OP_IMM8,         2, 0x86,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldaa", OP_DIRECT,       2, 0x96,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldaa", OP_IND16,        3, 0xb6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "ldaa", OP_IX,             2, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldaa", OP_IY | OP_PAGE2,  3, 0xa6,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_IDX,            2, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_IDX_1,          3, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_IDX_2,          4, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_D_IDX,          2, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldaa", OP_D_IDX_2,        4, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldab", OP_IMM8,         2, 0xc6,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldab", OP_DIRECT,       2, 0xd6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldab", OP_IND16,        3, 0xf6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "ldab", OP_IX,             2, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldab", OP_IY | OP_PAGE2,  3, 0xe6,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_IDX,            2, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_IDX_1,          3, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_IDX_2,          4, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_D_IDX,          2, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldab", OP_D_IDX_2,        4, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldd", OP_IMM16,         3, 0xcc,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldd", OP_DIRECT,        2, 0xdc,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldd", OP_IND16,         3, 0xfc,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "ldd", OP_IX,              2, 0xec,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldd", OP_IY | OP_PAGE2,   3, 0xec,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_IDX,             2, 0xec,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_IDX_1,           3, 0xec,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_IDX_2,           4, 0xec,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_D_IDX,           2, 0xec,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldd", OP_D_IDX_2,         4, 0xec,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "lds",  OP_IMM16,          3, 0x8e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "lds",  OP_DIRECT,         2, 0x9e,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "lds",  OP_IND16,          3, 0xbe,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "lds",  OP_IX,             2, 0xae,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "lds",  OP_IY | OP_PAGE2,  3, 0xae,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IMM16,          3, 0xcf,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_DIRECT,         2, 0xdf,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IND16,          3, 0xff,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX,            2, 0xef,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX_1,          3, 0xef,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_IDX_2,          4, 0xef,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_D_IDX,          2, 0xef,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "lds",  OP_D_IDX_2,        4, 0xef,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "ldx",  OP_IMM16,        3, 0xce,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldx",  OP_DIRECT,       2, 0xde,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "ldx",  OP_IND16,        3, 0xfe,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "ldx",  OP_IX,             2, 0xee,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldx",  OP_IY | OP_PAGE4,  3, 0xee,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_IDX,            2, 0xee,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_IDX_1,          3, 0xee,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_IDX_2,          4, 0xee,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_D_IDX,          2, 0xee,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldx",  OP_D_IDX_2,        4, 0xee,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "ldy",  OP_IMM16 | OP_PAGE2,  4, 0xce, 4, 4, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldy",  OP_DIRECT | OP_PAGE2, 3, 0xde, 5, 5, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldy",  OP_IND16 | OP_PAGE2,  4, 0xfe, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldy",  OP_IX | OP_PAGE3,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "ldy",  OP_IY | OP_PAGE2,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IMM16,          3, 0xcd,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_DIRECT,         2, 0xdd,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IND16,          3, 0xfd,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX,            2, 0xed,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX_1,          3, 0xed,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_IDX_2,          4, 0xed,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_D_IDX,          2, 0xed,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "ldy",  OP_D_IDX_2,        4, 0xed,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "leas", OP_IDX,            2, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leas", OP_IDX_1,          3, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leas", OP_IDX_2,          4, 0x1b,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "leax", OP_IDX,            2, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leax", OP_IDX_1,          3, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leax", OP_IDX_2,          4, 0x1a,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "leay", OP_IDX,            2, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leay", OP_IDX_1,          3, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "leay", OP_IDX_2,          4, 0x19,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "lsl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "lsl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "lsl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "lsl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "lsla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "lslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "lsld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "lsld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "lsr",  OP_IND16,        3, 0x74,  4,  4,  CLR_N_CHG_ZVC, cpumc9s12x|cpumc9s12x},
+//  { "lsr",  OP_IX,             2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpumc9s12x },
+//  { "lsr",  OP_IY | OP_PAGE2,  3, 0x64,  7,  7,  CLR_V_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_IDX,            2, 0x64,  3,  3,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_IDX_1,          3, 0x64,  4,  4,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_IDX_2,          4, 0x64,  5,  5,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_D_IDX,          2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsr",  OP_D_IDX_2,        4, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpumc9s12x },
+
+  { "lsra", OP_NONE,         1, 0x44,  1,  1,  CLR_N_CHG_ZVC, cpumc9s12x|cpumc9s12x},
+  { "lsrb", OP_NONE,         1, 0x54,  1,  1,  CLR_N_CHG_ZVC, cpumc9s12x|cpumc9s12x},
+//  { "lsrd", OP_NONE,           1, 0x04,  3,  3,  CLR_N_CHG_ZVC, cpumc9s12x },
+  { "lsrd", OP_NONE,           1, 0x49,  1,  1,  CLR_N_CHG_ZVC, cpumc9s12x },
+
+  { "maxa", OP_IDX | OP_PAGE2,     3, 0x18,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_IDX_1 | OP_PAGE2,   4, 0x18,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_IDX_2 | OP_PAGE2,   5, 0x18,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_D_IDX | OP_PAGE2,   3, 0x18,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "maxa", OP_D_IDX_2 | OP_PAGE2, 5, 0x18,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "maxm", OP_IDX | OP_PAGE2,     3, 0x1c,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_IDX_1 | OP_PAGE2,   4, 0x1c,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_IDX_2 | OP_PAGE2,   5, 0x1c,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_D_IDX | OP_PAGE2,   3, 0x1c,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "maxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1c,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "mem",  OP_NONE,                1, 0x01,  5,  5,  CHG_HNZVC, cpumc9s12x },
+
+  { "mina", OP_IDX | OP_PAGE2,     3, 0x19,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_IDX_1 | OP_PAGE2,   4, 0x19,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_IDX_2 | OP_PAGE2,   5, 0x19,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_D_IDX | OP_PAGE2,   3, 0x19,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "mina", OP_D_IDX_2 | OP_PAGE2, 5, 0x19,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "minm", OP_IDX | OP_PAGE2,     3, 0x1d,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_IDX_1 | OP_PAGE2,   4, 0x1d,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_IDX_2 | OP_PAGE2,   5, 0x1d,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_D_IDX | OP_PAGE2,   3, 0x1d,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "minm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1d,  7,  7,  CHG_NZVC, cpumc9s12x },
+
+  { "movb", OP_IMM8|OP_IND16_p2|OP_PAGE2, 5, 0x0b, 4, 4,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IMM8|OP_IDX_p2|OP_PAGE2,     4, 0x08,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IND16|OP_IND16_p2|OP_PAGE2,  6, 0x0c,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x09,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x0d,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movb", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x0a,  5,  5,  CHG_NONE, cpumc9s12x },
+
+  { "movw", OP_IMM16 | OP_IND16_p2 | OP_PAGE2,  6, 0x03,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IMM16 | OP_IDX_p2 | OP_PAGE2,    5, 0x00,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IND16 | OP_IND16_p2 | OP_PAGE2,  6, 0x04,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x01,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x05,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "movw", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x02,  5,  5,  CHG_NONE, cpumc9s12x },
+
+//  { "mul",  OP_NONE,           1, 0x3d,  3, 10,  CHG_C, cpumc9s12x },
+  { "mul",  OP_NONE,           1, 0x12,  3,  3,  CHG_C, cpumc9s12x },
+
+  { "neg",  OP_IND16,          3, 0x70,  4,  4,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "neg",  OP_IX,             2, 0x60,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "neg",  OP_IY | OP_PAGE2,  3, 0x60,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_IDX,            2, 0x60,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_IDX_1,          3, 0x60,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_IDX_2,          4, 0x60,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_D_IDX,          2, 0x60,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "neg",  OP_D_IDX_2,        4, 0x60,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "nega", OP_NONE,           1, 0x40,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "negb", OP_NONE,           1, 0x50,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "nop",  OP_NONE,           1, 0x01,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "nop",  OP_NONE,           1, 0xa7,  1,  1,  CHG_NONE, cpumc9s12x },
+
+  { "oraa", OP_IMM8,         2, 0x8a,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "oraa", OP_DIRECT,       2, 0x9a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "oraa", OP_IND16,        3, 0xba,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "oraa", OP_IX,             2, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "oraa", OP_IY | OP_PAGE2,  3, 0xaa,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_IDX,            2, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_IDX_1,          3, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_IDX_2,          4, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_D_IDX,          2, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "oraa", OP_D_IDX_2,        4, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "orab", OP_IMM8,         2, 0xca,  1,  1,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "orab", OP_DIRECT,       2, 0xda,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+  { "orab", OP_IND16,        3, 0xfa,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x|cpumc9s12x },
+//  { "orab", OP_IX,             2, 0xea,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "orab", OP_IY | OP_PAGE2,  3, 0xea,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_IDX,            2, 0xea,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_IDX_1,          3, 0xea,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_IDX_2,          4, 0xea,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_D_IDX,          2, 0xea,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "orab", OP_D_IDX_2,        4, 0xea,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "orcc", OP_IMM8,           2, 0x14,  1,  1,  CHG_ALL, cpumc9s12x },
+
+  { "psha", OP_NONE,           1, 0x36,  2,  2,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+  { "pshb", OP_NONE,           1, 0x37,  2,  2,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+  { "pshc", OP_NONE,           1, 0x39,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "pshd", OP_NONE,           1, 0x3b,  2,  2,  CHG_NONE, cpumc9s12x },
+//  { "pshx", OP_NONE,           1, 0x3c,  4,  4,  CHG_NONE, cpumc9s12x },
+  { "pshx", OP_NONE,           1, 0x34,  2,  2,  CHG_NONE, cpumc9s12x },
+//  { "pshy", OP_NONE | OP_PAGE2,2, 0x3c,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "pshy", OP_NONE,           1, 0x35,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "pula", OP_NONE,           1, 0x32,  3,  3,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+  { "pulb", OP_NONE,           1, 0x33,  3,  3,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+  { "pulc", OP_NONE,           1, 0x38,  3,  3,  CHG_NONE, cpumc9s12x },
+  { "puld", OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "pulx", OP_NONE,           1, 0x38,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "pulx", OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "puly", OP_NONE | OP_PAGE2,2, 0x38,  6,  6,  CHG_NONE, cpumc9s12x },
+  { "puly", OP_NONE,           1, 0x31,  3,  3,  CHG_NONE, cpumc9s12x },
+
+  { "rev",  OP_NONE | OP_PAGE2, 2, 0x3a,  _M,  _M,  CHG_HNZVC, cpumc9s12x },
+  { "revw", OP_NONE | OP_PAGE2, 2, 0x3b,  _M,  _M,  CHG_HNZVC, cpumc9s12x },
+
+//  { "rol",  OP_IND16,          3, 0x79,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "rol",  OP_IX,             2, 0x69,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "rol",  OP_IY | OP_PAGE2,  3, 0x69,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IND16,          3, 0x75,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX,            2, 0x65,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX_1,          3, 0x65,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_IDX_2,          4, 0x65,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_D_IDX,          2, 0x65,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "rol",  OP_D_IDX_2,        4, 0x65,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "rola", OP_NONE,           1, 0x49,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "rola", OP_NONE,           1, 0x45,  1,  1,  CHG_NZVC, cpumc9s12x },
+//  { "rolb", OP_NONE,           1, 0x59,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "rolb", OP_NONE,           1, 0x55,  1,  1,  CHG_NZVC, cpumc9s12x },
+
+  { "ror",  OP_IND16,          3, 0x76,  4,  4,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "ror",  OP_IX,             2, 0x66,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "ror",  OP_IY | OP_PAGE2,  3, 0x66,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_IDX,            2, 0x66,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_IDX_1,          3, 0x66,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_IDX_2,          4, 0x66,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_D_IDX,          2, 0x66,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "ror",  OP_D_IDX_2,        4, 0x66,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "rora", OP_NONE,           1, 0x46,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "rorb", OP_NONE,           1, 0x56,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+
+  { "rtc",  OP_NONE,           1, 0x0a,  6,  6,  CHG_NONE, cpumc9s12x },
+//  { "rti",  OP_NONE,           1, 0x3b, 12, 12,  CHG_ALL, cpumc9s12x},
+  { "rti",  OP_NONE,           1, 0x0b,  8, 10,  CHG_ALL, cpumc9s12x},
+//  { "rts",  OP_NONE,           1, 0x39,  5,  5,  CHG_NONE, cpumc9s12x },
+  { "rts",  OP_NONE,           1, 0x3d,  5,  5,  CHG_NONE, cpumc9s12x },
+
+//  { "sba",  OP_NONE,             1, 0x10,  2,  2,  CHG_NZVC, cpumc9s12x },
+  { "sba",  OP_NONE | OP_PAGE2, 2, 0x16,  2,  2,  CHG_NZVC, cpumc9s12x },
+
+  { "sbca", OP_IMM8,           2, 0x82,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "sbca", OP_DIRECT,         2, 0x92,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "sbca", OP_IND16,          3, 0xb2,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "sbca", OP_IX,             2, 0xa2,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "sbca", OP_IY | OP_PAGE2,  3, 0xa2,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_IDX,            2, 0xa2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_IDX_1,          3, 0xa2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_IDX_2,          4, 0xa2,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_D_IDX,          2, 0xa2,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "sbca", OP_D_IDX_2,        4, 0xa2,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "sbcb", OP_IMM8,           2, 0xc2,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "sbcb", OP_DIRECT,         2, 0xd2,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "sbcb", OP_IND16,          3, 0xf2,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "sbcb", OP_IX,             2, 0xe2,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "sbcb", OP_IY | OP_PAGE2,  3, 0xe2,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_IDX,            2, 0xe2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_IDX_1,          3, 0xe2,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_IDX_2,          4, 0xe2,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_D_IDX,          2, 0xe2,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "sbcb", OP_D_IDX_2,        4, 0xe2,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+//  { "sec",  OP_NONE,           1, 0x0d,  2,  2,  SET_C, cpumc9s12x },
+//  { "sei",  OP_NONE,           1, 0x0f,  2,  2,  SET_I, cpumc9s12x },
+//  { "sev",  OP_NONE,           1, 0x0b,  2,  2,  SET_V, cpumc9s12x },
+
+  { "sex",  MC9S12X_OP_SEX_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7,  1,  1,  CHG_NONE, cpumc9s12x },
+
+//  { "staa", OP_IND16,          3, 0xb7,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "staa", OP_DIRECT,         2, 0x97,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "staa", OP_IX,             2, 0xa7,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+ // { "staa", OP_IY | OP_PAGE2,  3, 0xa7,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_DIRECT,         2, 0x5a,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IND16,          3, 0x7a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX,            2, 0x6a,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX_1,          3, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_IDX_2,          4, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_D_IDX,          2, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "staa", OP_D_IDX_2,        4, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stab", OP_IND16,          3, 0xf7,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stab", OP_DIRECT,         2, 0xd7,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stab", OP_IX,             2, 0xe7,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stab", OP_IY | OP_PAGE2,  3, 0xe7,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_DIRECT,         2, 0x5b,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IND16,          3, 0x7b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX,            2, 0x6b,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX_1,          3, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_IDX_2,          4, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_D_IDX,          2, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stab", OP_D_IDX_2,        4, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "std",  OP_IND16,          3, 0xfd,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "std",  OP_DIRECT,         2, 0xdd,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "std",  OP_IX,             2, 0xed,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "std",  OP_IY | OP_PAGE2,  3, 0xed,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_DIRECT,         2, 0x5c,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IND16,          3, 0x7c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX,            2, 0x6c,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX_1,          3, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_IDX_2,          4, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_D_IDX,          2, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "std",  OP_D_IDX_2,        4, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stop", OP_NONE,           1, 0xcf,  2,  2,  CHG_NONE, cpumc9s12x },
+  { "stop", OP_NONE | OP_PAGE2,2, 0x3e,  2,  9,  CHG_NONE, cpumc9s12x },
+
+//  { "sts",  OP_IND16,          3, 0xbf,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sts",  OP_DIRECT,         2, 0x9f,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sts",  OP_IX,             2, 0xaf,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sts",  OP_IY | OP_PAGE2,  3, 0xaf,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_DIRECT,         2, 0x5f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IND16,          3, 0x7f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX,            2, 0x6f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX_1,          3, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_IDX_2,          4, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_D_IDX,          2, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sts",  OP_D_IDX_2,        4, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "stx",  OP_IND16,          3, 0xff,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stx",  OP_DIRECT,         2, 0xdf,  4,  4,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stx",  OP_IX,             2, 0xef,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+//  { "stx",  OP_IY | OP_PAGE4,  3, 0xef,  6,  6,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_DIRECT,         2, 0x5e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IND16,          3, 0x7e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX,            2, 0x6e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX_1,          3, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_IDX_2,          4, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_D_IDX,          2, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "stx",  OP_D_IDX_2,        4, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "sty",  OP_IND16 | OP_PAGE2,  4, 0xff, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sty",  OP_DIRECT | OP_PAGE2, 3, 0xdf, 5, 5, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sty",  OP_IY | OP_PAGE2,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+//  { "sty",  OP_IX | OP_PAGE3,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_DIRECT,         2, 0x5d,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IND16,          3, 0x7d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX,            2, 0x6d,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX_1,          3, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_IDX_2,          4, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_D_IDX,          2, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "sty",  OP_D_IDX_2,        4, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpumc9s12x },
+
+  { "suba", OP_IMM8,           2, 0x80,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "suba", OP_DIRECT,         2, 0x90,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "suba", OP_IND16,          3, 0xb0,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "suba", OP_IX,             2, 0xa0,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "suba", OP_IY | OP_PAGE2,  3, 0xa0,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_IDX,            2, 0xa0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_IDX_1,          3, 0xa0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_IDX_2,          4, 0xa0,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_D_IDX,          2, 0xa0,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "suba", OP_D_IDX_2,        4, 0xa0,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "subb", OP_IMM8,           2, 0xc0,  1,  1,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "subb", OP_DIRECT,         2, 0xd0,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "subb", OP_IND16,          3, 0xf0,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "subb", OP_IX,             2, 0xe0,  4,  4,  CHG_NZVC, cpumc9s12x },
+//  { "subb", OP_IY | OP_PAGE2,  3, 0xe0,  5,  5,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_IDX,            2, 0xe0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_IDX_1,          3, 0xe0,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_IDX_2,          4, 0xe0,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_D_IDX,          2, 0xe0,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "subb", OP_D_IDX_2,        4, 0xe0,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "subd", OP_IMM16,          3, 0x83,  2,  2,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "subd", OP_DIRECT,         2, 0x93,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+  { "subd", OP_IND16,          3, 0xb3,  3,  3,  CHG_NZVC, cpumc9s12x|cpumc9s12x },
+//  { "subd", OP_IX,             2, 0xa3,  6,  6,  CHG_NZVC, cpumc9s12x },
+//  { "subd", OP_IY | OP_PAGE2,  3, 0xa3,  7,  7,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_IDX,            2, 0xa3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_IDX_1,          3, 0xa3,  3,  3,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_IDX_2,          4, 0xa3,  4,  4,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_D_IDX,          2, 0xa3,  6,  6,  CHG_NZVC, cpumc9s12x },
+  { "subd", OP_D_IDX_2,        4, 0xa3,  6,  6,  CHG_NZVC, cpumc9s12x },
+
+  { "swi",  OP_NONE,           1, 0x3f,  9,  9,  CHG_NONE, cpumc9s12x|cpumc9s12x },
+
+//  { "tab",  OP_NONE,           1, 0x16,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "tab",  OP_NONE | OP_PAGE2,2, 0x0e,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "tap",  OP_NONE,           1, 0x06,  2,  2,  CHG_ALL, cpumc9s12x },
+
+//  { "tba",  OP_NONE,           1, 0x17,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+  { "tba",  OP_NONE | OP_PAGE2,2, 0x0f,  2,  2,  CLR_V_CHG_NZ, cpumc9s12x },
+
+//  { "test", OP_NONE,           1, 0x00,  5, _M,  CHG_NONE, cpumc9s12x },
+
+//  { "tpa",  OP_NONE,           1, 0x07,  2,  2,  CHG_NONE, cpumc9s12x },
+
+  { "tbeq", OP_TBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+  { "tbl",  OP_IDX | OP_PAGE2,  3, 0x3d,  8,  8, CHG_NZC, cpumc9s12x },
+
+  { "tbne", OP_TBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpumc9s12x },
+
+  { "tfr",  OP_TFR_MARKER
+          | OP_REG_1 | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpumc9s12x },
+
+  { "trap", OP_IMM8 | OP_TRAP_ID, 2, 0x18,  11,  11,  SET_I, cpumc9s12x },
+
+//  { "tst",  OP_IND16,          3, 0x7d,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+//  { "tst",  OP_IX,             2, 0x6d,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+//  { "tst",  OP_IY | OP_PAGE2,  3, 0x6d,  7,  7,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IND16,          3, 0xf7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX,            2, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX_1,          3, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_IDX_2,          4, 0xe7,  4,  4,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_D_IDX,          2, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tst",  OP_D_IDX_2,        4, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpumc9s12x },
+
+//  { "tsta", OP_NONE,           1, 0x4d,  2,  2,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tsta", OP_NONE,           1, 0x97,  1,  1,  CLR_VC_CHG_NZ, cpumc9s12x },
+//  { "tstb", OP_NONE,           1, 0x5d,  2,  2,  CLR_VC_CHG_NZ, cpumc9s12x },
+  { "tstb", OP_NONE,           1, 0xd7,  1,  1,  CLR_VC_CHG_NZ, cpumc9s12x },
+
+//  { "tsx",  OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "tsy",  OP_NONE | OP_PAGE2,2, 0x30,  4,  4,  CHG_NONE, cpumc9s12x },
+//  { "txs",  OP_NONE,           1, 0x35,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "tys",  OP_NONE | OP_PAGE2,2, 0x35,  4,  4,  CHG_NONE, cpumc9s12x },
+
+  { "wai",  OP_NONE,           1, 0x3e,  5,  _M, CHG_NONE, cpumc9s12x|cpumc9s12x },
+
+  { "wav",  OP_NONE | OP_PAGE2, 2, 0x3c,  8,  _M, SET_Z_CHG_HNVC, cpumc9s12x },
+
+//  { "xgdx", OP_NONE,           1, 0x8f,  3,  3,  CHG_NONE, cpumc9s12x },
+//  { "xgdy", OP_NONE | OP_PAGE2,2, 0x8f,  4,  4,  CHG_NONE, cpumc9s12x }
+};
+
+const int mc9s12x_num_opcodes = TABLE_SIZE (mc9s12x_opcodes);
+
+/* The following alias table provides source compatibility to
+   move from 68HC11 assembly to 68HC12.  */
+/* TODO keep for now so gcc will generate compatible asm, remove when the time comes */
+const struct mc9s12x_opcode_alias mc9s12x_alias[] = {
+  { "abx", "leax b,x",   2, 0x1a, 0xe5 },
+  { "aby", "leay b,y",   2, 0x19, 0xed },
+  { "clc", "andcc #$fe", 2, 0x10, 0xfe },
+  { "cli", "andcc #$ef", 2, 0x10, 0xef },
+  { "clv", "andcc #$fd", 2, 0x10, 0xfd },
+  { "des", "leas -1,sp", 2, 0x1b, 0x9f },
+  { "ins", "leas 1,sp",  2, 0x1b, 0x81 },
+  { "sec", "orcc #$01",  2, 0x14, 0x01 },
+  { "sei", "orcc #$10",  2, 0x14, 0x10 },
+  { "sev", "orcc #$02",  2, 0x14, 0x02 },
+  { "tap", "tfr a,ccr",  2, 0xb7, 0x02 },
+  { "tpa", "tfr ccr,a",  2, 0xb7, 0x20 },
+  { "tsx", "tfr sp,x",   2, 0xb7, 0x75 },
+  { "tsy", "tfr sp,y",   2, 0xb7, 0x76 },
+  { "txs", "tfr x,sp",   2, 0xb7, 0x57 },
+  { "tys", "tfr y,sp",   2, 0xb7, 0x67 },
+  { "xgdx","exg d,x",    2, 0xb7, 0xc5 },
+  { "xgdy","exg d,y",    2, 0xb7, 0xc6 }
+};
+const int mc9s12x_num_alias = TABLE_SIZE (mc9s12x_alias);
diff -rupN binutils-2.20/opcodes/mc9s12x-opc.c-delete binutils-2.20-sean/opcodes/mc9s12x-opc.c-delete
--- binutils-2.20/opcodes/mc9s12x-opc.c-delete	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9s12x-opc.c-delete	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,1082 @@
+/* m68hc11-opc.c -- Motorola 68HC11 & 68HC12 opcode list
+   Copyright 1999, 2000, 2002, 2005, 2007 Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this file; see the file COPYING.  If not, write to the
+   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+
+#include <stdio.h>
+#include "ansidecl.h"
+#include "opcode/m68hc11.h"
+
+#define TABLE_SIZE(X)       (sizeof(X) / sizeof(X[0]))
+
+/* Combination of CCR flags.  */
+#define M6811_ZC_BIT    M6811_Z_BIT|M6811_C_BIT
+#define M6811_NZ_BIT    M6811_N_BIT|M6811_Z_BIT
+#define M6811_NZV_BIT   M6811_N_BIT|M6811_Z_BIT|M6811_V_BIT
+#define M6811_NZC_BIT   M6811_N_BIT|M6811_Z_BIT|M6811_C_BIT
+#define M6811_NVC_BIT   M6811_N_BIT|M6811_V_BIT|M6811_C_BIT
+#define M6811_ZVC_BIT   M6811_Z_BIT|M6811_V_BIT|M6811_C_BIT
+#define M6811_NZVC_BIT  M6811_ZVC_BIT|M6811_N_BIT
+#define M6811_HNZVC_BIT M6811_NZVC_BIT|M6811_H_BIT
+#define M6811_HNVC_BIT  M6811_NVC_BIT|M6811_H_BIT
+#define M6811_VC_BIT    M6811_V_BIT|M6811_C_BIT
+
+/* Flags when the insn only changes some CCR flags.  */
+#define CHG_NONE        0,0,0
+#define CHG_Z           0,0,M6811_Z_BIT
+#define CHG_C           0,0,M6811_C_BIT
+#define CHG_ZVC         0,0,M6811_ZVC_BIT
+#define CHG_NZC         0,0,M6811_NZC_BIT
+#define CHG_NZV         0,0,M6811_NZV_BIT
+#define CHG_NZVC        0,0,M6811_NZVC_BIT
+#define CHG_HNZVC       0,0,M6811_HNZVC_BIT
+#define CHG_ALL         0,0,0xff
+
+/* The insn clears and changes some flags.  */
+#define CLR_I           0,M6811_I_BIT,0
+#define CLR_C           0,M6811_C_BIT,0
+#define CLR_V           0,M6811_V_BIT,0
+#define CLR_V_CHG_ZC    0,M6811_V_BIT,M6811_ZC_BIT
+#define CLR_V_CHG_NZ    0,M6811_V_BIT,M6811_NZ_BIT
+#define CLR_V_CHG_ZVC   0,M6811_V_BIT,M6811_ZVC_BIT
+#define CLR_N_CHG_ZVC   0,M6811_N_BIT,M6811_ZVC_BIT /* Used by lsr */
+#define CLR_VC_CHG_NZ   0,M6811_VC_BIT,M6811_NZ_BIT
+
+/* The insn sets some flags.  */
+#define SET_I           M6811_I_BIT,0,0
+#define SET_C           M6811_C_BIT,0,0
+#define SET_V           M6811_V_BIT,0,0
+#define SET_Z_CLR_NVC   M6811_Z_BIT,M6811_NVC_BIT,0
+#define SET_C_CLR_V_CHG_NZ M6811_C_BIT,M6811_V_BIT,M6811_NZ_BIT
+#define SET_Z_CHG_HNVC  M6811_Z_BIT,0,M6811_HNVC_BIT
+
+#define _M 0xff
+#define OP_NONE         M6811_OP_NONE
+#define OP_PAGE2        M6811_OP_PAGE2
+#define OP_PAGE3        M6811_OP_PAGE3
+#define OP_PAGE4        M6811_OP_PAGE4
+#define OP_IMM8         M6811_OP_IMM8
+#define OP_IMM16        M6811_OP_IMM16
+#define OP_IX           M6811_OP_IX
+#define OP_IY           M6811_OP_IY
+#define OP_IND16        M6811_OP_IND16
+#define OP_PAGE         M6812_OP_PAGE
+#define OP_IDX          M6812_OP_IDX
+#define OP_IDX_1        M6812_OP_IDX_1
+#define OP_IDX_2        M6812_OP_IDX_2
+#define OP_D_IDX        M6812_OP_D_IDX
+#define OP_D_IDX_2      M6812_OP_D_IDX_2
+#define OP_DIRECT       M6811_OP_DIRECT
+#define OP_BITMASK      M6811_OP_BITMASK
+#define OP_BRANCH       M6811_OP_BRANCH
+#define OP_JUMP_REL     (M6811_OP_JUMP_REL|OP_BRANCH)
+#define OP_JUMP_REL16   (M6812_OP_JUMP_REL16|OP_BRANCH)
+#define OP_REG          M6812_OP_REG
+#define OP_REG_1        M6812_OP_REG
+#define OP_REG_2        M6812_OP_REG_2
+#define OP_IDX_p2       M6812_OP_IDX_P2
+#define OP_IND16_p2     M6812_OP_IND16_P2
+#define OP_TRAP_ID      M6812_OP_TRAP_ID
+#define OP_EXG_MARKER   M6812_OP_EXG_MARKER
+#define OP_TFR_MARKER   M6812_OP_TFR_MARKER
+#define OP_DBEQ_MARKER  (M6812_OP_DBCC_MARKER|M6812_OP_EQ_MARKER)
+#define OP_DBNE_MARKER  (M6812_OP_DBCC_MARKER)
+#define OP_TBEQ_MARKER  (M6812_OP_TBCC_MARKER|M6812_OP_EQ_MARKER)
+#define OP_TBNE_MARKER  (M6812_OP_TBCC_MARKER)
+#define OP_IBEQ_MARKER  (M6812_OP_IBCC_MARKER|M6812_OP_EQ_MARKER)
+#define OP_IBNE_MARKER  (M6812_OP_IBCC_MARKER)
+
+/*
+   { "test", OP_NONE,          1, 0x00,  5, _M,  CHG_NONE,  cpu6811 },
+                                                            +-- cpu
+  Name -+                                        +------- Insn CCR changes
+  Format  ------+                            +----------- Max # cycles
+  Size     --------------------+         +--------------- Min # cycles
+                                   +--------------------- Opcode
+*/
+const struct m68hc11_opcode m68hc11_opcodes[] = {
+  { "aba",  OP_NONE,           1, 0x1b,  2,  2,  CHG_HNZVC, cpu6811 },
+  { "aba",  OP_NONE | OP_PAGE2,2, 0x06,  2,  2,  CHG_HNZVC, cpu6812 },
+  { "abx",  OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE,  cpu6811 },
+  { "aby",  OP_NONE | OP_PAGE2,2, 0x3a,  4,  4,  CHG_NONE,  cpu6811 },
+
+  { "adca", OP_IMM8,           2, 0x89,  1,  1,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adca", OP_DIRECT,         2, 0x99,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adca", OP_IND16,          3, 0xb9,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adca", OP_IX,             2, 0xa9,  4,  4,  CHG_HNZVC, cpu6811 },
+  { "adca", OP_IY | OP_PAGE2,  3, 0xa9,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adca", OP_IDX,            2, 0xa9,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adca", OP_IDX_1,          3, 0xa9,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adca", OP_IDX_2,          4, 0xa9,  4,  4,  CHG_HNZVC, cpu6812 },
+  { "adca", OP_D_IDX,          2, 0xa9,  6,  6,  CHG_HNZVC, cpu6812 },
+  { "adca", OP_D_IDX_2,        4, 0xa9,  6,  6,  CHG_HNZVC, cpu6812 },
+
+  { "adcb", OP_IMM8,           2, 0xc9,  1,  1,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adcb", OP_DIRECT,         2, 0xd9,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adcb", OP_IND16,          3, 0xf9,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adcb", OP_IX,             2, 0xe9,  4,  4,  CHG_HNZVC, cpu6811 },
+  { "adcb", OP_IY | OP_PAGE2,  3, 0xe9,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adcb", OP_IDX,            2, 0xe9,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adcb", OP_IDX_1,          3, 0xe9,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adcb", OP_IDX_2,          4, 0xe9,  4,  4,  CHG_HNZVC, cpu6812 },
+  { "adcb", OP_D_IDX,          2, 0xe9,  6,  6,  CHG_HNZVC, cpu6812 },
+  { "adcb", OP_D_IDX_2,        4, 0xe9,  6,  6,  CHG_HNZVC, cpu6812 },
+
+  { "adda", OP_IMM8,           2, 0x8b,  1,  1,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adda", OP_DIRECT,         2, 0x9b,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adda", OP_IND16,          3, 0xbb,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "adda", OP_IX,             2, 0xab,  4,  4,  CHG_HNZVC, cpu6811 },
+  { "adda", OP_IY | OP_PAGE2,  3, 0xab,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "adda", OP_IDX,            2, 0xab,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adda", OP_IDX_1,          3, 0xab,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "adda", OP_IDX_2,          4, 0xab,  4,  4,  CHG_HNZVC, cpu6812 },
+  { "adda", OP_D_IDX,          2, 0xab,  6,  6,  CHG_HNZVC, cpu6812 },
+  { "adda", OP_D_IDX_2,        4, 0xab,  6,  6,  CHG_HNZVC, cpu6812 },
+
+  { "addb", OP_IMM8,           2, 0xcb,  1,  1,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "addb", OP_DIRECT,         2, 0xdb,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "addb", OP_IND16,          3, 0xfb,  3,  3,  CHG_HNZVC, cpu6811|cpu6812 },
+  { "addb", OP_IX,             2, 0xeb,  4,  4,  CHG_HNZVC, cpu6811 },
+  { "addb", OP_IY | OP_PAGE2,  3, 0xeb,  5,  5,  CHG_HNZVC, cpu6811 },
+  { "addb", OP_IDX,            2, 0xeb,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "addb", OP_IDX_1,          3, 0xeb,  3,  3,  CHG_HNZVC, cpu6812 },
+  { "addb", OP_IDX_2,          4, 0xeb,  4,  4,  CHG_HNZVC, cpu6812 },
+  { "addb", OP_D_IDX,          2, 0xeb,  6,  6,  CHG_HNZVC, cpu6812 },
+  { "addb", OP_D_IDX_2,        4, 0xeb,  6,  6,  CHG_HNZVC, cpu6812 },
+
+  { "addd", OP_IMM16,          3, 0xc3,  2,  2,  CHG_NZVC, cpu6811|cpu6812 },
+  { "addd", OP_DIRECT,         2, 0xd3,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "addd", OP_IND16,          3, 0xf3,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "addd", OP_IX,             2, 0xe3,  6,  6,  CHG_NZVC, cpu6811 },
+  { "addd", OP_IY | OP_PAGE2,  3, 0xe3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "addd", OP_IDX,            2, 0xe3,  3,  3,  CHG_NZVC, cpu6812 },
+  { "addd", OP_IDX_1,          3, 0xe3,  3,  3,  CHG_NZVC, cpu6812 },
+  { "addd", OP_IDX_2,          4, 0xe3,  4,  4,  CHG_NZVC, cpu6812 },
+  { "addd", OP_D_IDX,          2, 0xe3,  6,  6,  CHG_NZVC, cpu6812 },
+  { "addd", OP_D_IDX_2,        4, 0xe3,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "anda", OP_IMM8,         2, 0x84,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "anda", OP_DIRECT,       2, 0x94,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "anda", OP_IND16,        3, 0xb4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "anda", OP_IX,             2, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "anda", OP_IY | OP_PAGE2,  3, 0xa4,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "anda", OP_IDX,            2, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "anda", OP_IDX_1,          3, 0xa4,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "anda", OP_IDX_2,          4, 0xa4,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "anda", OP_D_IDX,          2, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "anda", OP_D_IDX_2,        4, 0xa4,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "andb", OP_IMM8,         2, 0xc4,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "andb", OP_DIRECT,       2, 0xd4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "andb", OP_IND16,        3, 0xf4,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "andb", OP_IX,             2, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "andb", OP_IY | OP_PAGE2,  3, 0xe4,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "andb", OP_IDX,            2, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "andb", OP_IDX_1,          3, 0xe4,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "andb", OP_IDX_2,          4, 0xe4,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "andb", OP_D_IDX,          2, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "andb", OP_D_IDX_2,        4, 0xe4,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "andcc", OP_IMM8,          2, 0x10,  1,  1,  CHG_ALL,  cpu6812 },
+
+  { "asl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpu6811|cpu6812 },
+  { "asl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpu6811 },
+  { "asl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpu6811 },
+  { "asl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpu6812 },
+  { "asl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpu6812 },
+  { "asl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpu6812 },
+  { "asl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpu6812 },
+  { "asl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "asla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "aslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "asld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpu6811 },
+  { "asld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpu6812 },
+
+  { "asr",  OP_IND16,          3, 0x77,  4,  4,  CHG_NZVC, cpu6811|cpu6812 },
+  { "asr",  OP_IX,             2, 0x67,  6,  6,  CHG_NZVC, cpu6811 },
+  { "asr",  OP_IY | OP_PAGE2,  3, 0x67,  7,  7,  CHG_NZVC, cpu6811 },
+  { "asr",  OP_IDX,            2, 0x67,  3,  3,  CHG_NZVC, cpu6812 },
+  { "asr",  OP_IDX_1,          3, 0x67,  4,  4,  CHG_NZVC, cpu6812 },
+  { "asr",  OP_IDX_2,          4, 0x67,  5,  5,  CHG_NZVC, cpu6812 },
+  { "asr",  OP_D_IDX,          2, 0x67,  6,  6,  CHG_NZVC, cpu6812 },
+  { "asr",  OP_D_IDX_2,        4, 0x67,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "asra", OP_NONE,           1, 0x47,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "asrb", OP_NONE,           1, 0x57,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+
+  { "bcc", OP_JUMP_REL,        2, 0x24,  1,  3,  CHG_NONE, cpu6811|cpu6812 },
+
+  { "bclr", OP_BITMASK|OP_DIRECT,  3, 0x15,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "bclr", OP_BITMASK|OP_IX,       3, 0x1d,  7,  7,  CLR_V_CHG_NZ, cpu6811 },
+  { "bclr", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1d, 8, 8, CLR_V_CHG_NZ, cpu6811},
+  { "bclr", OP_BITMASK|OP_DIRECT,   3, 0x4d,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bclr", OP_BITMASK|OP_IND16,    4, 0x1d,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bclr", OP_BITMASK|OP_IDX,      3, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bclr", OP_BITMASK|OP_IDX_1,    4, 0x0d,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bclr", OP_BITMASK|OP_IDX_2,    5, 0x0d,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "bcs", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "beq", OP_JUMP_REL,        2, 0x27,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bge", OP_JUMP_REL,        2, 0x2c,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+
+  { "bgnd", OP_NONE,           1, 0x00,  5,  5, CHG_NONE, cpu6811 | cpu6812 },
+
+  { "bgt", OP_JUMP_REL,        2, 0x2e,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bhi", OP_JUMP_REL,        2, 0x22,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bhs", OP_JUMP_REL,        2, 0x24,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  
+  { "bita", OP_IMM8,          2, 0x85,  1,  1, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bita", OP_DIRECT,        2, 0x95,  3,  3, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bita", OP_IND16,         3, 0xb5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bita", OP_IX,             2, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "bita", OP_IY | OP_PAGE2,  3, 0xa5,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "bita", OP_IDX,            2, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "bita", OP_IDX_1,          3, 0xa5,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "bita", OP_IDX_2,          4, 0xa5,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bita", OP_D_IDX,          2, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "bita", OP_D_IDX_2,        4, 0xa5,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "bitb", OP_IMM8,          2, 0xc5,  1,  1, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bitb", OP_DIRECT,        2, 0xd5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bitb", OP_IND16,         3, 0xf5,  3,  3, CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "bitb", OP_IX,             2, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "bitb", OP_IY | OP_PAGE2,  3, 0xe5,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "bitb", OP_IDX,            2, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "bitb", OP_IDX_1,          3, 0xe5,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "bitb", OP_IDX_2,          4, 0xe5,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bitb", OP_D_IDX,          2, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "bitb", OP_D_IDX_2,        4, 0xe5,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "ble", OP_JUMP_REL,        2, 0x2f,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "blo", OP_JUMP_REL,        2, 0x25,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bls", OP_JUMP_REL,        2, 0x23,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "blt", OP_JUMP_REL,        2, 0x2d,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bmi", OP_JUMP_REL,        2, 0x2b,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bne", OP_JUMP_REL,        2, 0x26,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bpl", OP_JUMP_REL,        2, 0x2a,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bra", OP_JUMP_REL,        2, 0x20,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,         4, 0x13,  6,  6, CHG_NONE, cpu6811 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IX,             4, 0x1f,  7,  7, CHG_NONE, cpu6811 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IY | OP_PAGE2,  5, 0x1f,  8,  8, CHG_NONE, cpu6811 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,         4, 0x4f,  4,  4,  CHG_NONE, cpu6812 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,          5, 0x1f,  5,  5,  CHG_NONE, cpu6812 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0f,  4,  4,  CHG_NONE, cpu6812 },
+  { "brclr", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0f,  6,  6,  CHG_NONE, cpu6812 },
+  { "brclr", OP_BITMASK
+           | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0f,  8,  8,  CHG_NONE, cpu6812 },
+
+  { "brn", OP_JUMP_REL,         2, 0x21,  1,  3,  CHG_NONE, cpu6811|cpu6812 },
+
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,         4, 0x12,  6,  6,  CHG_NONE, cpu6811 },
+  { "brset", OP_BITMASK
+           | OP_JUMP_REL
+           | OP_IX,             4, 0x1e,  7,  7,  CHG_NONE, cpu6811 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IY | OP_PAGE2,  5, 0x1e,  8,  8,  CHG_NONE, cpu6811 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_DIRECT,   4, 0x4e,  4,  4,  CHG_NONE, cpu6812 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IND16,    5, 0x1e,  5,  5,  CHG_NONE, cpu6812 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX,            4, 0x0e,  4,  4,  CHG_NONE, cpu6812 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_1,          5, 0x0e,  6,  6,  CHG_NONE, cpu6812 },
+  { "brset", OP_BITMASK | OP_JUMP_REL
+           | OP_IDX_2,          6, 0x0e,  8,  8,  CHG_NONE, cpu6812 },
+
+
+  { "bset", OP_BITMASK | OP_DIRECT,   3, 0x14,  6,  6, CLR_V_CHG_NZ, cpu6811 },
+  { "bset", OP_BITMASK | OP_IX,       3, 0x1c,  7,  7, CLR_V_CHG_NZ, cpu6811 },
+  { "bset", OP_BITMASK|OP_IY|OP_PAGE2, 4, 0x1c, 8, 8, CLR_V_CHG_NZ, cpu6811 },
+  { "bset", OP_BITMASK|OP_DIRECT,   3, 0x4c,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bset", OP_BITMASK|OP_IND16,    4, 0x1c,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bset", OP_BITMASK|OP_IDX,      3, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bset", OP_BITMASK|OP_IDX_1,    4, 0x0c,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "bset", OP_BITMASK|OP_IDX_2,    5, 0x0c,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "bsr",  OP_JUMP_REL,       2, 0x8d,  6,  6, CHG_NONE, cpu6811 },
+  { "bsr",  OP_JUMP_REL,       2, 0x07,  4,  4, CHG_NONE, cpu6812 },
+
+  { "bvc",  OP_JUMP_REL,       2, 0x28,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+  { "bvs",  OP_JUMP_REL,       2, 0x29,  1,  3, CHG_NONE, cpu6811 | cpu6812 },
+
+  { "call", OP_IND16 | OP_PAGE
+          | OP_BRANCH,         4, 0x4a,  8,  8,  CHG_NONE, cpu6812 },
+  { "call", OP_IDX | OP_PAGE
+          | OP_BRANCH,         3, 0x4b,  8,  8,  CHG_NONE, cpu6812 },
+  { "call", OP_IDX_1 | OP_PAGE
+          | OP_BRANCH,         4, 0x4b,  8,  8,  CHG_NONE, cpu6812 },
+  { "call", OP_IDX_2 | OP_PAGE
+          | OP_BRANCH,         5, 0x4b,  9,  9,  CHG_NONE, cpu6812 },
+  { "call", OP_D_IDX
+          | OP_BRANCH,         2, 0x4b, 10, 10,  CHG_NONE, cpu6812 },
+  { "call", OP_D_IDX_2
+          | OP_BRANCH,         4, 0x4b, 10, 10,  CHG_NONE, cpu6812 },
+
+  { "cba",  OP_NONE,           1, 0x11,  2,  2,  CHG_NZVC, cpu6811 },
+  { "cba",  OP_NONE | OP_PAGE2,2, 0x17,  2,  2,  CHG_NZVC, cpu6812 },
+
+  { "clc",  OP_NONE,           1, 0x0c,  2,  2,  CLR_C, cpu6811 },
+  { "cli",  OP_NONE,           1, 0x0e,  2,  2,  CLR_I, cpu6811 },
+
+  { "clr", OP_IND16,           3, 0x7f,  6,  6,  SET_Z_CLR_NVC, cpu6811 },
+  { "clr", OP_IX,              2, 0x6f,  6,  6,  SET_Z_CLR_NVC, cpu6811 },
+  { "clr", OP_IY | OP_PAGE2,   3, 0x6f,  7,  7,  SET_Z_CLR_NVC, cpu6811 },
+  { "clr", OP_IND16,           3, 0x79,  3,  3,  SET_Z_CLR_NVC, cpu6812 },
+  { "clr", OP_IDX,             2, 0x69,  2,  2,  SET_Z_CLR_NVC, cpu6812 },
+  { "clr", OP_IDX_1,           3, 0x69,  3,  3,  SET_Z_CLR_NVC, cpu6812 },
+  { "clr", OP_IDX_2,           4, 0x69,  4,  4,  SET_Z_CLR_NVC, cpu6812 },
+  { "clr", OP_D_IDX,           2, 0x69,  5,  5,  SET_Z_CLR_NVC, cpu6812 },
+  { "clr", OP_D_IDX_2,         4, 0x69,  5,  5,  SET_Z_CLR_NVC, cpu6812 },
+
+  { "clra", OP_NONE,           1, 0x4f,  2,  2,  SET_Z_CLR_NVC, cpu6811 },
+  { "clrb", OP_NONE,           1, 0x5f,  2,  2,  SET_Z_CLR_NVC, cpu6811 },
+  { "clra", OP_NONE,           1, 0x87,  1,  1,  SET_Z_CLR_NVC, cpu6812 },
+  { "clrb", OP_NONE,           1, 0xc7,  1,  1,  SET_Z_CLR_NVC, cpu6812 },
+
+  { "clv",  OP_NONE,           1, 0x0a,  2,  2,  CLR_V, cpu6811 },
+
+  { "cmpa", OP_IMM8,           2, 0x81,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpa", OP_DIRECT,         2, 0x91,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpa", OP_IND16,          3, 0xb1,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpa", OP_IX,             2, 0xa1,  4,  4,  CHG_NZVC, cpu6811 },
+  { "cmpa", OP_IY | OP_PAGE2,  3, 0xa1,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cmpa", OP_IDX,            2, 0xa1,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cmpa", OP_IDX_1,          3, 0xa1,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cmpa", OP_IDX_2,          4, 0xa1,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cmpa", OP_D_IDX,          2, 0xa1,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cmpa", OP_D_IDX_2,        4, 0xa1,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "cmpb", OP_IMM8,           2, 0xc1,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpb", OP_DIRECT,         2, 0xd1,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpb", OP_IND16,          3, 0xf1,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "cmpb", OP_IX,             2, 0xe1,  4,  4,  CHG_NZVC, cpu6811 },
+  { "cmpb", OP_IY | OP_PAGE2,  3, 0xe1,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cmpb", OP_IDX,            2, 0xe1,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cmpb", OP_IDX_1,          3, 0xe1,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cmpb", OP_IDX_2,          4, 0xe1,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cmpb", OP_D_IDX,          2, 0xe1,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cmpb", OP_D_IDX_2,        4, 0xe1,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "com", OP_IND16,           3, 0x73,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "com", OP_IX,              2, 0x63,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "com", OP_IY | OP_PAGE2,   3, 0x63,  7,  7,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "com", OP_IND16,           3, 0x71,  4,  4,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "com", OP_IDX,             2, 0x61,  3,  3,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "com", OP_IDX_1,           3, 0x61,  4,  4,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "com", OP_IDX_2,           4, 0x61,  5,  5,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "com", OP_D_IDX,           2, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "com", OP_D_IDX_2,         4, 0x61,  6,  6,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+
+  { "coma", OP_NONE,           1, 0x43,  2,  2,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "coma", OP_NONE,           1, 0x41,  1,  1,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+  { "comb", OP_NONE,           1, 0x53,  2,  2,  SET_C_CLR_V_CHG_NZ, cpu6811 },
+  { "comb", OP_NONE,           1, 0x51,  1,  1,  SET_C_CLR_V_CHG_NZ, cpu6812 },
+
+  { "cpd", OP_IMM16 | OP_PAGE3,  4, 0x83,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_DIRECT | OP_PAGE3, 3, 0x93,  6,  6,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_IND16 | OP_PAGE3,  4, 0xb3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_IX | OP_PAGE3,     3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_IY | OP_PAGE4,     3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpd", OP_IMM16,             3, 0x8c,  2,  2,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_DIRECT,            2, 0x9c,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_IND16,             3, 0xbc,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_IDX,               2, 0xac,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_IDX_1,             3, 0xac,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_IDX_2,             4, 0xac,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_D_IDX,             2, 0xac,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cpd", OP_D_IDX_2,           4, 0xac,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "cps", OP_IMM16,             3, 0x8f,  2,  2,  CHG_NZVC, cpu6812 },
+  { "cps", OP_DIRECT,            2, 0x9f,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cps", OP_IND16,             3, 0xbf,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cps", OP_IDX,               2, 0xaf,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cps", OP_IDX_1,             3, 0xaf,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cps", OP_IDX_2,             4, 0xaf,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cps", OP_D_IDX,             2, 0xaf,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cps", OP_D_IDX_2,           4, 0xaf,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "cpx", OP_IMM16,             3, 0x8c,  4,  4,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_DIRECT,            2, 0x9c,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_IND16,             3, 0xbc,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_IX,                2, 0xac,  6,  6,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_IY | OP_PAGE4,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpx", OP_IMM16,             3, 0x8e,  2,  2,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_DIRECT,            2, 0x9e,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_IND16,             3, 0xbe,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_IDX,               2, 0xae,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_IDX_1,             3, 0xae,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_IDX_2,             4, 0xae,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_D_IDX,             2, 0xae,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cpx", OP_D_IDX_2,           4, 0xae,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "cpy", OP_PAGE2 | OP_IMM16,  4, 0x8c,  5,  5,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_PAGE2 | OP_DIRECT, 3, 0x9c,  6,  6,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_PAGE2 | OP_IY,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_PAGE2 | OP_IND16,  4, 0xbc,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_PAGE3 | OP_IX,     3, 0xac,  7,  7,  CHG_NZVC, cpu6811 },
+  { "cpy", OP_IMM16,             3, 0x8d,  2,  2,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_DIRECT,            2, 0x9d,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_IND16,             3, 0xbd,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_IDX,               2, 0xad,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_IDX_1,             3, 0xad,  3,  3,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_IDX_2,             4, 0xad,  4,  4,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_D_IDX,             2, 0xad,  6,  6,  CHG_NZVC, cpu6812 },
+  { "cpy", OP_D_IDX_2,           4, 0xad,  6,  6,  CHG_NZVC, cpu6812 },
+
+  /* After 'daa', the Z flag is undefined. Mark it as changed.  */
+  { "daa", OP_NONE,              1, 0x19,  2,  2,  CHG_NZVC, cpu6811 },
+  { "daa", OP_NONE | OP_PAGE2,  2, 0x07,  3,  3,  CHG_NZVC, cpu6812 },
+
+  { "dbeq", OP_DBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+  { "dbne", OP_DBNE_MARKER
+          | OP_REG | OP_JUMP_REL,3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+
+  { "dec", OP_IX,                2, 0x6a,  6,  6,  CHG_NZV, cpu6811 },
+  { "dec", OP_IND16,             3, 0x7a,  6,  6,  CHG_NZV, cpu6811 },
+  { "dec", OP_IY | OP_PAGE2,     3, 0x6a,  7,  7,  CHG_NZV, cpu6811 },
+  { "dec", OP_IND16,             3, 0x73,  4,  4,  CHG_NZV, cpu6812 },
+  { "dec", OP_IDX,               2, 0x63,  3,  3,  CHG_NZV, cpu6812 },
+  { "dec", OP_IDX_1,             3, 0x63,  4,  4,  CHG_NZV, cpu6812 },
+  { "dec", OP_IDX_2,             4, 0x63,  5,  5,  CHG_NZV, cpu6812 },
+  { "dec", OP_D_IDX,             2, 0x63,  6,  6,  CHG_NZV, cpu6812 },
+  { "dec", OP_D_IDX_2,           4, 0x63,  6,  6,  CHG_NZV, cpu6812 },
+
+  { "des",  OP_NONE,             1, 0x34,  3,  3,  CHG_NONE, cpu6811 },
+
+  { "deca", OP_NONE,             1, 0x4a,  2,  2,  CHG_NZV, cpu6811 },
+  { "deca", OP_NONE,             1, 0x43,  1,  1,  CHG_NZV, cpu6812 },
+  { "decb", OP_NONE,             1, 0x5a,  2,  2,  CHG_NZV, cpu6811 },
+  { "decb", OP_NONE,             1, 0x53,  1,  1,  CHG_NZV, cpu6812 },
+
+  { "dex",  OP_NONE,             1, 0x09,  1,  1,  CHG_Z, cpu6812|cpu6811 },
+  { "dey",  OP_NONE | OP_PAGE2,  2, 0x09,  4,  4,  CHG_Z, cpu6811 },
+  { "dey",  OP_NONE,             1, 0x03,  1,  1,  CHG_Z, cpu6812 },
+
+  { "ediv", OP_NONE,             1, 0x11,  11,  11,  CHG_NZVC, cpu6812 },
+  { "edivs", OP_NONE | OP_PAGE2, 2, 0x14,  12,  12,  CHG_NZVC, cpu6812 },
+  { "emacs", OP_IND16 | OP_PAGE2, 4, 0x12,  13,  13,  CHG_NZVC, cpu6812 },
+
+  { "emaxd", OP_IDX | OP_PAGE2,     3, 0x1a,  4,  4,  CHG_NZVC, cpu6812 },
+  { "emaxd", OP_IDX_1 | OP_PAGE2,   4, 0x1a,  4,  4,  CHG_NZVC, cpu6812 },
+  { "emaxd", OP_IDX_2 | OP_PAGE2,   5, 0x1a,  5,  5,  CHG_NZVC, cpu6812 },
+  { "emaxd", OP_D_IDX | OP_PAGE2,   3, 0x1a,  7,  7,  CHG_NZVC, cpu6812 },
+  { "emaxd", OP_D_IDX_2 | OP_PAGE2, 5, 0x1a,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "emaxm", OP_IDX | OP_PAGE2,     3, 0x1e,  4,  4,  CHG_NZVC, cpu6812 },
+  { "emaxm", OP_IDX_1 | OP_PAGE2,   4, 0x1e,  5,  5,  CHG_NZVC, cpu6812 },
+  { "emaxm", OP_IDX_2 | OP_PAGE2,   5, 0x1e,  6,  6,  CHG_NZVC, cpu6812 },
+  { "emaxm", OP_D_IDX | OP_PAGE2,   3, 0x1e,  7,  7,  CHG_NZVC, cpu6812 },
+  { "emaxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1e,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "emind", OP_IDX | OP_PAGE2,     3, 0x1b,  4,  4,  CHG_NZVC, cpu6812 },
+  { "emind", OP_IDX_1 | OP_PAGE2,   4, 0x1b,  4,  4,  CHG_NZVC, cpu6812 },
+  { "emind", OP_IDX_2 | OP_PAGE2,   5, 0x1b,  5,  5,  CHG_NZVC, cpu6812 },
+  { "emind", OP_D_IDX | OP_PAGE2,   3, 0x1b,  7,  7,  CHG_NZVC, cpu6812 },
+  { "emind", OP_D_IDX_2 | OP_PAGE2, 5, 0x1b,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "eminm", OP_IDX | OP_PAGE2,     3, 0x1f,  4,  4,  CHG_NZVC, cpu6812 },
+  { "eminm", OP_IDX_1 | OP_PAGE2,   4, 0x1f,  5,  5,  CHG_NZVC, cpu6812 },
+  { "eminm", OP_IDX_2 | OP_PAGE2,   5, 0x1f,  6,  6,  CHG_NZVC, cpu6812 },
+  { "eminm", OP_D_IDX | OP_PAGE2,   3, 0x1f,  7,  7,  CHG_NZVC, cpu6812 },
+  { "eminm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1f,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "emul",  OP_NONE,               1, 0x13,  3,  3,  CHG_NZC, cpu6812 },
+  { "emuls", OP_NONE | OP_PAGE2,    2, 0x13,  3,  3,  CHG_NZC, cpu6812 },
+
+  { "eora", OP_IMM8,         2, 0x88,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eora", OP_DIRECT,       2, 0x98,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eora", OP_IND16,        3, 0xb8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eora", OP_IX,             2, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "eora", OP_IY | OP_PAGE2,  3, 0xa8,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "eora", OP_IDX,            2, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "eora", OP_IDX_1,          3, 0xa8,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "eora", OP_IDX_2,          4, 0xa8,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "eora", OP_D_IDX,          2, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "eora", OP_D_IDX_2,        4, 0xa8,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "eorb", OP_IMM8,         2, 0xc8,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eorb", OP_DIRECT,       2, 0xd8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eorb", OP_IND16,        3, 0xf8,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "eorb", OP_IX,             2, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "eorb", OP_IY | OP_PAGE2,  3, 0xe8,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "eorb", OP_IDX,            2, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "eorb", OP_IDX_1,          3, 0xe8,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "eorb", OP_IDX_2,          4, 0xe8,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "eorb", OP_D_IDX,          2, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "eorb", OP_D_IDX_2,        4, 0xe8,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "etbl", OP_IDX | OP_PAGE2,3, 0x3f, 10, 10,  CHG_NZC, cpu6812 },
+
+  { "exg",  OP_EXG_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpu6812 },
+
+  { "fdiv", OP_NONE,             1, 0x03,  3, 41, CHG_ZVC, cpu6811},
+  { "fdiv", OP_NONE | OP_PAGE2, 2, 0x11, 12, 12, CHG_ZVC, cpu6812 },
+
+  { "ibeq", OP_IBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+  { "ibne", OP_IBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+
+  { "idiv",  OP_NONE,              1, 0x02,  3, 41, CLR_V_CHG_ZC, cpu6811},
+  { "idiv",  OP_NONE | OP_PAGE2,  2, 0x10, 12, 12, CLR_V_CHG_ZC, cpu6812 },
+  { "idivs", OP_NONE | OP_PAGE2,  2, 0x15, 12, 12, CHG_NZVC, cpu6812 },
+
+  { "inc", OP_IX,                  2, 0x6c,  6,  6,  CHG_NZV, cpu6811 },
+  { "inc", OP_IND16,               3, 0x7c,  6,  6,  CHG_NZV, cpu6811 },
+  { "inc", OP_IY | OP_PAGE2,       3, 0x6c,  7,  7,  CHG_NZV, cpu6811 },
+  { "inc", OP_IND16,               3, 0x72,  4,  4,  CHG_NZV, cpu6812 },
+  { "inc", OP_IDX,                 2, 0x62,  3,  3,  CHG_NZV, cpu6812 },
+  { "inc", OP_IDX_1,               3, 0x62,  4,  4,  CHG_NZV, cpu6812 },
+  { "inc", OP_IDX_2,               4, 0x62,  5,  5,  CHG_NZV, cpu6812 },
+  { "inc", OP_D_IDX,               2, 0x62,  6,  6,  CHG_NZV, cpu6812 },
+  { "inc", OP_D_IDX_2,             4, 0x62,  6,  6,  CHG_NZV, cpu6812 },
+
+  { "inca", OP_NONE,               1, 0x4c,  2,  2,  CHG_NZV, cpu6811 },
+  { "inca", OP_NONE,               1, 0x42,  1,  1,  CHG_NZV, cpu6812 },
+  { "incb", OP_NONE,               1, 0x5c,  2,  2,  CHG_NZV, cpu6811 },
+  { "incb", OP_NONE,               1, 0x52,  1,  1,  CHG_NZV, cpu6812 },
+
+  { "ins",  OP_NONE,               1, 0x31,  3,  3,  CHG_NONE, cpu6811 },
+
+  { "inx",  OP_NONE,               1, 0x08,  1,  1,  CHG_Z, cpu6811|cpu6812 },
+  { "iny",  OP_NONE |OP_PAGE2,     2, 0x08,  4,  4,  CHG_Z, cpu6811 },
+  { "iny",  OP_NONE,               1, 0x02,  1,  1,  CHG_Z, cpu6812 },
+
+  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x7e,  3,  3,  CHG_NONE, cpu6811 },
+  { "jmp",  OP_IX,                 2, 0x6e,  3,  3,  CHG_NONE, cpu6811 },
+  { "jmp",  OP_IY | OP_PAGE2,      3, 0x6e,  4,  4,  CHG_NONE, cpu6811 },
+  { "jmp",  OP_IND16 | OP_BRANCH,  3, 0x06,  3,  3,  CHG_NONE, cpu6812 },
+  { "jmp",  OP_IDX,                2, 0x05,  3,  3,  CHG_NONE, cpu6812 },
+  { "jmp",  OP_IDX_1,              3, 0x05,  3,  3,  CHG_NONE, cpu6812 },
+  { "jmp",  OP_IDX_2,              4, 0x05,  4,  4,  CHG_NONE, cpu6812 },
+  { "jmp",  OP_D_IDX,              2, 0x05,  6,  6,  CHG_NONE, cpu6812 },
+  { "jmp",  OP_D_IDX_2,            4, 0x05,  6,  6,  CHG_NONE, cpu6812 },
+
+  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x9d,  5,  5,  CHG_NONE, cpu6811 },
+  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0xbd,  6,  6,  CHG_NONE, cpu6811 },
+  { "jsr",  OP_IX,                 2, 0xad,  6,  6,  CHG_NONE, cpu6811 },
+  { "jsr",  OP_IY | OP_PAGE2,      3, 0xad,  6,  6,  CHG_NONE, cpu6811 },
+  { "jsr",  OP_DIRECT | OP_BRANCH, 2, 0x17,  4,  4,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_IND16 | OP_BRANCH,  3, 0x16,  4,  3,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_IDX,                2, 0x15,  4,  4,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_IDX_1,              3, 0x15,  4,  4,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_IDX_2,              4, 0x15,  5,  5,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_D_IDX,              2, 0x15,  7,  7,  CHG_NONE, cpu6812 },
+  { "jsr",  OP_D_IDX_2,            4, 0x15,  7,  7,  CHG_NONE, cpu6812 },
+
+  { "lbcc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpu6812 },
+  { "lbcs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpu6812 },
+  { "lbeq", OP_JUMP_REL16 | OP_PAGE2,  4, 0x27,  3,  4, CHG_NONE, cpu6812 },
+  { "lbge", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2c,  3,  4, CHG_NONE, cpu6812 },
+  { "lbgt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2e,  3,  4, CHG_NONE, cpu6812 },
+  { "lbhi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x22,  3,  4, CHG_NONE, cpu6812 },
+  { "lbhs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x24,  3,  4, CHG_NONE, cpu6812 },
+  { "lble", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2f,  3,  4, CHG_NONE, cpu6812 },
+  { "lblo", OP_JUMP_REL16 | OP_PAGE2,  4, 0x25,  3,  4, CHG_NONE, cpu6812 },
+  { "lbls", OP_JUMP_REL16 | OP_PAGE2,  4, 0x23,  3,  4, CHG_NONE, cpu6812 },
+  { "lblt", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2d,  3,  4, CHG_NONE, cpu6812 },
+  { "lbmi", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2b,  3,  4, CHG_NONE, cpu6812 },
+  { "lbne", OP_JUMP_REL16 | OP_PAGE2,  4, 0x26,  3,  4, CHG_NONE, cpu6812 },
+  { "lbpl", OP_JUMP_REL16 | OP_PAGE2,  4, 0x2a,  3,  4, CHG_NONE, cpu6812 },
+  { "lbra", OP_JUMP_REL16 | OP_PAGE2,  4, 0x20,  4,  4, CHG_NONE, cpu6812 },
+  { "lbrn", OP_JUMP_REL16 | OP_PAGE2,  4, 0x21,  3,  3, CHG_NONE, cpu6812 },
+  { "lbvc", OP_JUMP_REL16 | OP_PAGE2,  4, 0x28,  3,  4, CHG_NONE, cpu6812 },
+  { "lbvs", OP_JUMP_REL16 | OP_PAGE2,  4, 0x29,  3,  4, CHG_NONE, cpu6812 },
+
+  { "ldaa", OP_IMM8,         2, 0x86,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldaa", OP_DIRECT,       2, 0x96,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldaa", OP_IND16,        3, 0xb6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldaa", OP_IX,             2, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldaa", OP_IY | OP_PAGE2,  3, 0xa6,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldaa", OP_IDX,            2, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldaa", OP_IDX_1,          3, 0xa6,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldaa", OP_IDX_2,          4, 0xa6,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldaa", OP_D_IDX,          2, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldaa", OP_D_IDX_2,        4, 0xa6,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "ldab", OP_IMM8,         2, 0xc6,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldab", OP_DIRECT,       2, 0xd6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldab", OP_IND16,        3, 0xf6,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldab", OP_IX,             2, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldab", OP_IY | OP_PAGE2,  3, 0xe6,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldab", OP_IDX,            2, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldab", OP_IDX_1,          3, 0xe6,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldab", OP_IDX_2,          4, 0xe6,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldab", OP_D_IDX,          2, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldab", OP_D_IDX_2,        4, 0xe6,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "ldd", OP_IMM16,         3, 0xcc,  2,  2,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldd", OP_DIRECT,        2, 0xdc,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldd", OP_IND16,         3, 0xfc,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldd", OP_IX,              2, 0xec,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldd", OP_IY | OP_PAGE2,   3, 0xec,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldd", OP_IDX,             2, 0xec,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldd", OP_IDX_1,           3, 0xec,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldd", OP_IDX_2,           4, 0xec,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldd", OP_D_IDX,           2, 0xec,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldd", OP_D_IDX_2,         4, 0xec,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "lds",  OP_IMM16,          3, 0x8e,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_DIRECT,         2, 0x9e,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_IND16,          3, 0xbe,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_IX,             2, 0xae,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_IY | OP_PAGE2,  3, 0xae,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "lds",  OP_IMM16,          3, 0xcf,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_DIRECT,         2, 0xdf,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_IND16,          3, 0xff,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_IDX,            2, 0xef,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_IDX_1,          3, 0xef,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_IDX_2,          4, 0xef,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_D_IDX,          2, 0xef,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "lds",  OP_D_IDX_2,        4, 0xef,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "ldx",  OP_IMM16,        3, 0xce,  2,  2,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldx",  OP_DIRECT,       2, 0xde,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldx",  OP_IND16,        3, 0xfe,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "ldx",  OP_IX,             2, 0xee,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldx",  OP_IY | OP_PAGE4,  3, 0xee,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "ldx",  OP_IDX,            2, 0xee,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldx",  OP_IDX_1,          3, 0xee,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldx",  OP_IDX_2,          4, 0xee,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldx",  OP_D_IDX,          2, 0xee,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldx",  OP_D_IDX_2,        4, 0xee,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "ldy",  OP_IMM16 | OP_PAGE2,  4, 0xce, 4, 4, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_DIRECT | OP_PAGE2, 3, 0xde, 5, 5, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_IND16 | OP_PAGE2,  4, 0xfe, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_IX | OP_PAGE3,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_IY | OP_PAGE2,     3, 0xee, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "ldy",  OP_IMM16,          3, 0xcd,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_DIRECT,         2, 0xdd,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_IND16,          3, 0xfd,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_IDX,            2, 0xed,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_IDX_1,          3, 0xed,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_IDX_2,          4, 0xed,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_D_IDX,          2, 0xed,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "ldy",  OP_D_IDX_2,        4, 0xed,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "leas", OP_IDX,            2, 0x1b,  2,  2,  CHG_NONE, cpu6812 },
+  { "leas", OP_IDX_1,          3, 0x1b,  2,  2,  CHG_NONE, cpu6812 },
+  { "leas", OP_IDX_2,          4, 0x1b,  2,  2,  CHG_NONE, cpu6812 },
+
+  { "leax", OP_IDX,            2, 0x1a,  2,  2,  CHG_NONE, cpu6812 },
+  { "leax", OP_IDX_1,          3, 0x1a,  2,  2,  CHG_NONE, cpu6812 },
+  { "leax", OP_IDX_2,          4, 0x1a,  2,  2,  CHG_NONE, cpu6812 },
+
+  { "leay", OP_IDX,            2, 0x19,  2,  2,  CHG_NONE, cpu6812 },
+  { "leay", OP_IDX_1,          3, 0x19,  2,  2,  CHG_NONE, cpu6812 },
+  { "leay", OP_IDX_2,          4, 0x19,  2,  2,  CHG_NONE, cpu6812 },
+
+  { "lsl",  OP_IND16,          3, 0x78,  4,  4,  CHG_NZVC, cpu6811|cpu6812 },
+  { "lsl",  OP_IX,             2, 0x68,  6,  6,  CHG_NZVC, cpu6811 },
+  { "lsl",  OP_IY | OP_PAGE2,  3, 0x68,  7,  7,  CHG_NZVC, cpu6811 },
+  { "lsl",  OP_IDX,            2, 0x68,  3,  3,  CHG_NZVC, cpu6812 },
+  { "lsl",  OP_IDX_1,          3, 0x68,  4,  4,  CHG_NZVC, cpu6812 },
+  { "lsl",  OP_IDX_2,          4, 0x68,  5,  5,  CHG_NZVC, cpu6812 },
+  { "lsl",  OP_D_IDX,          2, 0x68,  6,  6,  CHG_NZVC, cpu6812 },
+  { "lsl",  OP_D_IDX_2,        4, 0x68,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "lsla", OP_NONE,           1, 0x48,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "lslb", OP_NONE,           1, 0x58,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "lsld", OP_NONE,           1, 0x05,  3,  3,  CHG_NZVC, cpu6811 },
+  { "lsld", OP_NONE,           1, 0x59,  1,  1,  CHG_NZVC, cpu6812 },
+
+  { "lsr",  OP_IND16,        3, 0x74,  4,  4,  CLR_N_CHG_ZVC, cpu6811|cpu6812},
+  { "lsr",  OP_IX,             2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpu6811 },
+  { "lsr",  OP_IY | OP_PAGE2,  3, 0x64,  7,  7,  CLR_V_CHG_ZVC, cpu6811 },
+  { "lsr",  OP_IDX,            2, 0x64,  3,  3,  CLR_N_CHG_ZVC, cpu6812 },
+  { "lsr",  OP_IDX_1,          3, 0x64,  4,  4,  CLR_N_CHG_ZVC, cpu6812 },
+  { "lsr",  OP_IDX_2,          4, 0x64,  5,  5,  CLR_N_CHG_ZVC, cpu6812 },
+  { "lsr",  OP_D_IDX,          2, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpu6812 },
+  { "lsr",  OP_D_IDX_2,        4, 0x64,  6,  6,  CLR_N_CHG_ZVC, cpu6812 },
+
+  { "lsra", OP_NONE,         1, 0x44,  1,  1,  CLR_N_CHG_ZVC, cpu6811|cpu6812},
+  { "lsrb", OP_NONE,         1, 0x54,  1,  1,  CLR_N_CHG_ZVC, cpu6811|cpu6812},
+  { "lsrd", OP_NONE,           1, 0x04,  3,  3,  CLR_N_CHG_ZVC, cpu6811 },
+  { "lsrd", OP_NONE,           1, 0x49,  1,  1,  CLR_N_CHG_ZVC, cpu6812 },
+
+  { "maxa", OP_IDX | OP_PAGE2,     3, 0x18,  4,  4,  CHG_NZVC, cpu6812 },
+  { "maxa", OP_IDX_1 | OP_PAGE2,   4, 0x18,  4,  4,  CHG_NZVC, cpu6812 },
+  { "maxa", OP_IDX_2 | OP_PAGE2,   5, 0x18,  5,  5,  CHG_NZVC, cpu6812 },
+  { "maxa", OP_D_IDX | OP_PAGE2,   3, 0x18,  7,  7,  CHG_NZVC, cpu6812 },
+  { "maxa", OP_D_IDX_2 | OP_PAGE2, 5, 0x18,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "maxm", OP_IDX | OP_PAGE2,     3, 0x1c,  4,  4,  CHG_NZVC, cpu6812 },
+  { "maxm", OP_IDX_1 | OP_PAGE2,   4, 0x1c,  5,  5,  CHG_NZVC, cpu6812 },
+  { "maxm", OP_IDX_2 | OP_PAGE2,   5, 0x1c,  6,  6,  CHG_NZVC, cpu6812 },
+  { "maxm", OP_D_IDX | OP_PAGE2,   3, 0x1c,  7,  7,  CHG_NZVC, cpu6812 },
+  { "maxm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1c,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "mem",  OP_NONE,                1, 0x01,  5,  5,  CHG_HNZVC, cpu6812 },
+
+  { "mina", OP_IDX | OP_PAGE2,     3, 0x19,  4,  4,  CHG_NZVC, cpu6812 },
+  { "mina", OP_IDX_1 | OP_PAGE2,   4, 0x19,  4,  4,  CHG_NZVC, cpu6812 },
+  { "mina", OP_IDX_2 | OP_PAGE2,   5, 0x19,  5,  5,  CHG_NZVC, cpu6812 },
+  { "mina", OP_D_IDX | OP_PAGE2,   3, 0x19,  7,  7,  CHG_NZVC, cpu6812 },
+  { "mina", OP_D_IDX_2 | OP_PAGE2, 5, 0x19,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "minm", OP_IDX | OP_PAGE2,     3, 0x1d,  4,  4,  CHG_NZVC, cpu6812 },
+  { "minm", OP_IDX_1 | OP_PAGE2,   4, 0x1d,  5,  5,  CHG_NZVC, cpu6812 },
+  { "minm", OP_IDX_2 | OP_PAGE2,   5, 0x1d,  6,  6,  CHG_NZVC, cpu6812 },
+  { "minm", OP_D_IDX | OP_PAGE2,   3, 0x1d,  7,  7,  CHG_NZVC, cpu6812 },
+  { "minm", OP_D_IDX_2 | OP_PAGE2, 5, 0x1d,  7,  7,  CHG_NZVC, cpu6812 },
+
+  { "movb", OP_IMM8|OP_IND16_p2|OP_PAGE2, 5, 0x0b, 4, 4,  CHG_NONE, cpu6812 },
+  { "movb", OP_IMM8|OP_IDX_p2|OP_PAGE2,     4, 0x08,  4,  4,  CHG_NONE, cpu6812 },
+  { "movb", OP_IND16|OP_IND16_p2|OP_PAGE2,  6, 0x0c,  6,  6,  CHG_NONE, cpu6812 },
+  { "movb", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x09,  5,  5,  CHG_NONE, cpu6812 },
+  { "movb", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x0d,  5,  5,  CHG_NONE, cpu6812 },
+  { "movb", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x0a,  5,  5,  CHG_NONE, cpu6812 },
+
+  { "movw", OP_IMM16 | OP_IND16_p2 | OP_PAGE2,  6, 0x03,  5,  5,  CHG_NONE, cpu6812 },
+  { "movw", OP_IMM16 | OP_IDX_p2 | OP_PAGE2,    5, 0x00,  4,  4,  CHG_NONE, cpu6812 },
+  { "movw", OP_IND16 | OP_IND16_p2 | OP_PAGE2,  6, 0x04,  6,  6,  CHG_NONE, cpu6812 },
+  { "movw", OP_IND16 | OP_IDX_p2 | OP_PAGE2,    5, 0x01,  5,  5,  CHG_NONE, cpu6812 },
+  { "movw", OP_IDX | OP_IND16_p2 | OP_PAGE2,    5, 0x05,  5,  5,  CHG_NONE, cpu6812 },
+  { "movw", OP_IDX | OP_IDX_p2 | OP_PAGE2,      4, 0x02,  5,  5,  CHG_NONE, cpu6812 },
+
+  { "mul",  OP_NONE,           1, 0x3d,  3, 10,  CHG_C, cpu6811 },
+  { "mul",  OP_NONE,           1, 0x12,  3,  3,  CHG_C, cpu6812 },
+
+  { "neg",  OP_IND16,          3, 0x70,  4,  4,  CHG_NZVC, cpu6811|cpu6812 },
+  { "neg",  OP_IX,             2, 0x60,  6,  6,  CHG_NZVC, cpu6811 },
+  { "neg",  OP_IY | OP_PAGE2,  3, 0x60,  7,  7,  CHG_NZVC, cpu6811 },
+  { "neg",  OP_IDX,            2, 0x60,  3,  3,  CHG_NZVC, cpu6812 },
+  { "neg",  OP_IDX_1,          3, 0x60,  4,  4,  CHG_NZVC, cpu6812 },
+  { "neg",  OP_IDX_2,          4, 0x60,  5,  5,  CHG_NZVC, cpu6812 },
+  { "neg",  OP_D_IDX,          2, 0x60,  6,  6,  CHG_NZVC, cpu6812 },
+  { "neg",  OP_D_IDX_2,        4, 0x60,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "nega", OP_NONE,           1, 0x40,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "negb", OP_NONE,           1, 0x50,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "nop",  OP_NONE,           1, 0x01,  2,  2,  CHG_NONE, cpu6811 },
+  { "nop",  OP_NONE,           1, 0xa7,  1,  1,  CHG_NONE, cpu6812 },
+
+  { "oraa", OP_IMM8,         2, 0x8a,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "oraa", OP_DIRECT,       2, 0x9a,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "oraa", OP_IND16,        3, 0xba,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "oraa", OP_IX,             2, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "oraa", OP_IY | OP_PAGE2,  3, 0xaa,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "oraa", OP_IDX,            2, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "oraa", OP_IDX_1,          3, 0xaa,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "oraa", OP_IDX_2,          4, 0xaa,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "oraa", OP_D_IDX,          2, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "oraa", OP_D_IDX_2,        4, 0xaa,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "orab", OP_IMM8,         2, 0xca,  1,  1,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "orab", OP_DIRECT,       2, 0xda,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "orab", OP_IND16,        3, 0xfa,  3,  3,  CLR_V_CHG_NZ, cpu6811|cpu6812 },
+  { "orab", OP_IX,             2, 0xea,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "orab", OP_IY | OP_PAGE2,  3, 0xea,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "orab", OP_IDX,            2, 0xea,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "orab", OP_IDX_1,          3, 0xea,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "orab", OP_IDX_2,          4, 0xea,  4,  4,  CLR_V_CHG_NZ, cpu6812 },
+  { "orab", OP_D_IDX,          2, 0xea,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+  { "orab", OP_D_IDX_2,        4, 0xea,  6,  6,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "orcc", OP_IMM8,           2, 0x14,  1,  1,  CHG_ALL, cpu6812 },
+
+  { "psha", OP_NONE,           1, 0x36,  2,  2,  CHG_NONE, cpu6811|cpu6812 },
+  { "pshb", OP_NONE,           1, 0x37,  2,  2,  CHG_NONE, cpu6811|cpu6812 },
+  { "pshc", OP_NONE,           1, 0x39,  2,  2,  CHG_NONE, cpu6812 },
+  { "pshd", OP_NONE,           1, 0x3b,  2,  2,  CHG_NONE, cpu6812 },
+  { "pshx", OP_NONE,           1, 0x3c,  4,  4,  CHG_NONE, cpu6811 },
+  { "pshx", OP_NONE,           1, 0x34,  2,  2,  CHG_NONE, cpu6812 },
+  { "pshy", OP_NONE | OP_PAGE2,2, 0x3c,  5,  5,  CHG_NONE, cpu6811 },
+  { "pshy", OP_NONE,           1, 0x35,  2,  2,  CHG_NONE, cpu6812 },
+
+  { "pula", OP_NONE,           1, 0x32,  3,  3,  CHG_NONE, cpu6811|cpu6812 },
+  { "pulb", OP_NONE,           1, 0x33,  3,  3,  CHG_NONE, cpu6811|cpu6812 },
+  { "pulc", OP_NONE,           1, 0x38,  3,  3,  CHG_NONE, cpu6812 },
+  { "puld", OP_NONE,           1, 0x3a,  3,  3,  CHG_NONE, cpu6812 },
+  { "pulx", OP_NONE,           1, 0x38,  5,  5,  CHG_NONE, cpu6811 },
+  { "pulx", OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpu6812 },
+  { "puly", OP_NONE | OP_PAGE2,2, 0x38,  6,  6,  CHG_NONE, cpu6811 },
+  { "puly", OP_NONE,           1, 0x31,  3,  3,  CHG_NONE, cpu6812 },
+
+  { "rev",  OP_NONE | OP_PAGE2, 2, 0x3a,  _M,  _M,  CHG_HNZVC, cpu6812 },
+  { "revw", OP_NONE | OP_PAGE2, 2, 0x3b,  _M,  _M,  CHG_HNZVC, cpu6812 },
+
+  { "rol",  OP_IND16,          3, 0x79,  6,  6,  CHG_NZVC, cpu6811 },
+  { "rol",  OP_IX,             2, 0x69,  6,  6,  CHG_NZVC, cpu6811 },
+  { "rol",  OP_IY | OP_PAGE2,  3, 0x69,  7,  7,  CHG_NZVC, cpu6811 },
+  { "rol",  OP_IND16,          3, 0x75,  4,  4,  CHG_NZVC, cpu6812 },
+  { "rol",  OP_IDX,            2, 0x65,  3,  3,  CHG_NZVC, cpu6812 },
+  { "rol",  OP_IDX_1,          3, 0x65,  4,  4,  CHG_NZVC, cpu6812 },
+  { "rol",  OP_IDX_2,          4, 0x65,  5,  5,  CHG_NZVC, cpu6812 },
+  { "rol",  OP_D_IDX,          2, 0x65,  6,  6,  CHG_NZVC, cpu6812 },
+  { "rol",  OP_D_IDX_2,        4, 0x65,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "rola", OP_NONE,           1, 0x49,  2,  2,  CHG_NZVC, cpu6811 },
+  { "rola", OP_NONE,           1, 0x45,  1,  1,  CHG_NZVC, cpu6812 },
+  { "rolb", OP_NONE,           1, 0x59,  2,  2,  CHG_NZVC, cpu6811 },
+  { "rolb", OP_NONE,           1, 0x55,  1,  1,  CHG_NZVC, cpu6812 },
+
+  { "ror",  OP_IND16,          3, 0x76,  4,  4,  CHG_NZVC, cpu6811|cpu6812 },
+  { "ror",  OP_IX,             2, 0x66,  6,  6,  CHG_NZVC, cpu6811 },
+  { "ror",  OP_IY | OP_PAGE2,  3, 0x66,  7,  7,  CHG_NZVC, cpu6811 },
+  { "ror",  OP_IDX,            2, 0x66,  3,  3,  CHG_NZVC, cpu6812 },
+  { "ror",  OP_IDX_1,          3, 0x66,  4,  4,  CHG_NZVC, cpu6812 },
+  { "ror",  OP_IDX_2,          4, 0x66,  5,  5,  CHG_NZVC, cpu6812 },
+  { "ror",  OP_D_IDX,          2, 0x66,  6,  6,  CHG_NZVC, cpu6812 },
+  { "ror",  OP_D_IDX_2,        4, 0x66,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "rora", OP_NONE,           1, 0x46,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "rorb", OP_NONE,           1, 0x56,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+
+  { "rtc",  OP_NONE,           1, 0x0a,  6,  6,  CHG_NONE, cpu6812 },
+  { "rti",  OP_NONE,           1, 0x3b, 12, 12,  CHG_ALL, cpu6811},
+  { "rti",  OP_NONE,           1, 0x0b,  8, 10,  CHG_ALL, cpu6812},
+  { "rts",  OP_NONE,           1, 0x39,  5,  5,  CHG_NONE, cpu6811 },
+  { "rts",  OP_NONE,           1, 0x3d,  5,  5,  CHG_NONE, cpu6812 },
+
+  { "sba",  OP_NONE,             1, 0x10,  2,  2,  CHG_NZVC, cpu6811 },
+  { "sba",  OP_NONE | OP_PAGE2, 2, 0x16,  2,  2,  CHG_NZVC, cpu6812 },
+
+  { "sbca", OP_IMM8,           2, 0x82,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbca", OP_DIRECT,         2, 0x92,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbca", OP_IND16,          3, 0xb2,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbca", OP_IX,             2, 0xa2,  4,  4,  CHG_NZVC, cpu6811 },
+  { "sbca", OP_IY | OP_PAGE2,  3, 0xa2,  5,  5,  CHG_NZVC, cpu6811 },
+  { "sbca", OP_IDX,            2, 0xa2,  3,  3,  CHG_NZVC, cpu6812 },
+  { "sbca", OP_IDX_1,          3, 0xa2,  3,  3,  CHG_NZVC, cpu6812 },
+  { "sbca", OP_IDX_2,          4, 0xa2,  4,  4,  CHG_NZVC, cpu6812 },
+  { "sbca", OP_D_IDX,          2, 0xa2,  6,  6,  CHG_NZVC, cpu6812 },
+  { "sbca", OP_D_IDX_2,        4, 0xa2,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "sbcb", OP_IMM8,           2, 0xc2,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbcb", OP_DIRECT,         2, 0xd2,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbcb", OP_IND16,          3, 0xf2,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "sbcb", OP_IX,             2, 0xe2,  4,  4,  CHG_NZVC, cpu6811 },
+  { "sbcb", OP_IY | OP_PAGE2,  3, 0xe2,  5,  5,  CHG_NZVC, cpu6811 },
+  { "sbcb", OP_IDX,            2, 0xe2,  3,  3,  CHG_NZVC, cpu6812 },
+  { "sbcb", OP_IDX_1,          3, 0xe2,  3,  3,  CHG_NZVC, cpu6812 },
+  { "sbcb", OP_IDX_2,          4, 0xe2,  4,  4,  CHG_NZVC, cpu6812 },
+  { "sbcb", OP_D_IDX,          2, 0xe2,  6,  6,  CHG_NZVC, cpu6812 },
+  { "sbcb", OP_D_IDX_2,        4, 0xe2,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "sec",  OP_NONE,           1, 0x0d,  2,  2,  SET_C, cpu6811 },
+  { "sei",  OP_NONE,           1, 0x0f,  2,  2,  SET_I, cpu6811 },
+  { "sev",  OP_NONE,           1, 0x0b,  2,  2,  SET_V, cpu6811 },
+
+  { "sex",  M6812_OP_SEX_MARKER
+          | OP_REG | OP_REG_2, 2, 0xb7,  1,  1,  CHG_NONE, cpu6812 },
+
+  { "staa", OP_IND16,          3, 0xb7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "staa", OP_DIRECT,         2, 0x97,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+  { "staa", OP_IX,             2, 0xa7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "staa", OP_IY | OP_PAGE2,  3, 0xa7,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "staa", OP_DIRECT,         2, 0x5a,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_IND16,          3, 0x7a,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_IDX,            2, 0x6a,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_IDX_1,          3, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_IDX_2,          4, 0x6a,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_D_IDX,          2, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "staa", OP_D_IDX_2,        4, 0x6a,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "stab", OP_IND16,          3, 0xf7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "stab", OP_DIRECT,         2, 0xd7,  3,  3,  CLR_V_CHG_NZ, cpu6811 },
+  { "stab", OP_IX,             2, 0xe7,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "stab", OP_IY | OP_PAGE2,  3, 0xe7,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "stab", OP_DIRECT,         2, 0x5b,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_IND16,          3, 0x7b,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_IDX,            2, 0x6b,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_IDX_1,          3, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_IDX_2,          4, 0x6b,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_D_IDX,          2, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "stab", OP_D_IDX_2,        4, 0x6b,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "std",  OP_IND16,          3, 0xfd,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "std",  OP_DIRECT,         2, 0xdd,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "std",  OP_IX,             2, 0xed,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "std",  OP_IY | OP_PAGE2,  3, 0xed,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "std",  OP_DIRECT,         2, 0x5c,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_IND16,          3, 0x7c,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_IDX,            2, 0x6c,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_IDX_1,          3, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_IDX_2,          4, 0x6c,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_D_IDX,          2, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "std",  OP_D_IDX_2,        4, 0x6c,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "stop", OP_NONE,           1, 0xcf,  2,  2,  CHG_NONE, cpu6811 },
+  { "stop", OP_NONE | OP_PAGE2,2, 0x3e,  2,  9,  CHG_NONE, cpu6812 },
+
+  { "sts",  OP_IND16,          3, 0xbf,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "sts",  OP_DIRECT,         2, 0x9f,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "sts",  OP_IX,             2, 0xaf,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "sts",  OP_IY | OP_PAGE2,  3, 0xaf,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "sts",  OP_DIRECT,         2, 0x5f,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_IND16,          3, 0x7f,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_IDX,            2, 0x6f,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_IDX_1,          3, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_IDX_2,          4, 0x6f,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_D_IDX,          2, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "sts",  OP_D_IDX_2,        4, 0x6f,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "stx",  OP_IND16,          3, 0xff,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "stx",  OP_DIRECT,         2, 0xdf,  4,  4,  CLR_V_CHG_NZ, cpu6811 },
+  { "stx",  OP_IX,             2, 0xef,  5,  5,  CLR_V_CHG_NZ, cpu6811 },
+  { "stx",  OP_IY | OP_PAGE4,  3, 0xef,  6,  6,  CLR_V_CHG_NZ, cpu6811 },
+  { "stx",  OP_DIRECT,         2, 0x5e,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_IND16,          3, 0x7e,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_IDX,            2, 0x6e,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_IDX_1,          3, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_IDX_2,          4, 0x6e,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_D_IDX,          2, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "stx",  OP_D_IDX_2,        4, 0x6e,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "sty",  OP_IND16 | OP_PAGE2,  4, 0xff, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "sty",  OP_DIRECT | OP_PAGE2, 3, 0xdf, 5, 5, CLR_V_CHG_NZ, cpu6811 },
+  { "sty",  OP_IY | OP_PAGE2,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "sty",  OP_IX | OP_PAGE3,     3, 0xef, 6, 6, CLR_V_CHG_NZ, cpu6811 },
+  { "sty",  OP_DIRECT,         2, 0x5d,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_IND16,          3, 0x7d,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_IDX,            2, 0x6d,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_IDX_1,          3, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_IDX_2,          4, 0x6d,  3,  3,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_D_IDX,          2, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+  { "sty",  OP_D_IDX_2,        4, 0x6d,  5,  5,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "suba", OP_IMM8,           2, 0x80,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "suba", OP_DIRECT,         2, 0x90,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "suba", OP_IND16,          3, 0xb0,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "suba", OP_IX,             2, 0xa0,  4,  4,  CHG_NZVC, cpu6811 },
+  { "suba", OP_IY | OP_PAGE2,  3, 0xa0,  5,  5,  CHG_NZVC, cpu6811 },
+  { "suba", OP_IDX,            2, 0xa0,  3,  3,  CHG_NZVC, cpu6812 },
+  { "suba", OP_IDX_1,          3, 0xa0,  3,  3,  CHG_NZVC, cpu6812 },
+  { "suba", OP_IDX_2,          4, 0xa0,  4,  4,  CHG_NZVC, cpu6812 },
+  { "suba", OP_D_IDX,          2, 0xa0,  6,  6,  CHG_NZVC, cpu6812 },
+  { "suba", OP_D_IDX_2,        4, 0xa0,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "subb", OP_IMM8,           2, 0xc0,  1,  1,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subb", OP_DIRECT,         2, 0xd0,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subb", OP_IND16,          3, 0xf0,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subb", OP_IX,             2, 0xe0,  4,  4,  CHG_NZVC, cpu6811 },
+  { "subb", OP_IY | OP_PAGE2,  3, 0xe0,  5,  5,  CHG_NZVC, cpu6811 },
+  { "subb", OP_IDX,            2, 0xe0,  3,  3,  CHG_NZVC, cpu6812 },
+  { "subb", OP_IDX_1,          3, 0xe0,  3,  3,  CHG_NZVC, cpu6812 },
+  { "subb", OP_IDX_2,          4, 0xe0,  4,  4,  CHG_NZVC, cpu6812 },
+  { "subb", OP_D_IDX,          2, 0xe0,  6,  6,  CHG_NZVC, cpu6812 },
+  { "subb", OP_D_IDX_2,        4, 0xe0,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "subd", OP_IMM16,          3, 0x83,  2,  2,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subd", OP_DIRECT,         2, 0x93,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subd", OP_IND16,          3, 0xb3,  3,  3,  CHG_NZVC, cpu6811|cpu6812 },
+  { "subd", OP_IX,             2, 0xa3,  6,  6,  CHG_NZVC, cpu6811 },
+  { "subd", OP_IY | OP_PAGE2,  3, 0xa3,  7,  7,  CHG_NZVC, cpu6811 },
+  { "subd", OP_IDX,            2, 0xa3,  3,  3,  CHG_NZVC, cpu6812 },
+  { "subd", OP_IDX_1,          3, 0xa3,  3,  3,  CHG_NZVC, cpu6812 },
+  { "subd", OP_IDX_2,          4, 0xa3,  4,  4,  CHG_NZVC, cpu6812 },
+  { "subd", OP_D_IDX,          2, 0xa3,  6,  6,  CHG_NZVC, cpu6812 },
+  { "subd", OP_D_IDX_2,        4, 0xa3,  6,  6,  CHG_NZVC, cpu6812 },
+
+  { "swi",  OP_NONE,           1, 0x3f,  9,  9,  CHG_NONE, cpu6811|cpu6812 },
+
+  { "tab",  OP_NONE,           1, 0x16,  2,  2,  CLR_V_CHG_NZ, cpu6811 },
+  { "tab",  OP_NONE | OP_PAGE2,2, 0x0e,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "tap",  OP_NONE,           1, 0x06,  2,  2,  CHG_ALL, cpu6811 },
+
+  { "tba",  OP_NONE,           1, 0x17,  2,  2,  CLR_V_CHG_NZ, cpu6811 },
+  { "tba",  OP_NONE | OP_PAGE2,2, 0x0f,  2,  2,  CLR_V_CHG_NZ, cpu6812 },
+
+  { "test", OP_NONE,           1, 0x00,  5, _M,  CHG_NONE, cpu6811 },
+
+  { "tpa",  OP_NONE,           1, 0x07,  2,  2,  CHG_NONE, cpu6811 },
+
+  { "tbeq", OP_TBEQ_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+
+  { "tbl",  OP_IDX | OP_PAGE2,  3, 0x3d,  8,  8, CHG_NZC, cpu6812 },
+
+  { "tbne", OP_TBNE_MARKER
+          | OP_REG | OP_JUMP_REL,  3, 0x04,  3,  3, CHG_NONE, cpu6812 },
+
+  { "tfr",  OP_TFR_MARKER
+          | OP_REG_1 | OP_REG_2, 2, 0xb7, 1, 1,  CHG_NONE, cpu6812 },
+
+  { "trap", OP_IMM8 | OP_TRAP_ID, 2, 0x18,  11,  11,  SET_I, cpu6812 },
+
+  { "tst",  OP_IND16,          3, 0x7d,  6,  6,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tst",  OP_IX,             2, 0x6d,  6,  6,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tst",  OP_IY | OP_PAGE2,  3, 0x6d,  7,  7,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tst",  OP_IND16,          3, 0xf7,  3,  3,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tst",  OP_IDX,            2, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tst",  OP_IDX_1,          3, 0xe7,  3,  3,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tst",  OP_IDX_2,          4, 0xe7,  4,  4,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tst",  OP_D_IDX,          2, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tst",  OP_D_IDX_2,        4, 0xe7,  6,  6,  CLR_VC_CHG_NZ, cpu6812 },
+
+  { "tsta", OP_NONE,           1, 0x4d,  2,  2,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tsta", OP_NONE,           1, 0x97,  1,  1,  CLR_VC_CHG_NZ, cpu6812 },
+  { "tstb", OP_NONE,           1, 0x5d,  2,  2,  CLR_VC_CHG_NZ, cpu6811 },
+  { "tstb", OP_NONE,           1, 0xd7,  1,  1,  CLR_VC_CHG_NZ, cpu6812 },
+
+  { "tsx",  OP_NONE,           1, 0x30,  3,  3,  CHG_NONE, cpu6811 },
+  { "tsy",  OP_NONE | OP_PAGE2,2, 0x30,  4,  4,  CHG_NONE, cpu6811 },
+  { "txs",  OP_NONE,           1, 0x35,  3,  3,  CHG_NONE, cpu6811 },
+  { "tys",  OP_NONE | OP_PAGE2,2, 0x35,  4,  4,  CHG_NONE, cpu6811 },
+
+  { "wai",  OP_NONE,           1, 0x3e,  5,  _M, CHG_NONE, cpu6811|cpu6812 },
+
+  { "wav",  OP_NONE | OP_PAGE2, 2, 0x3c,  8,  _M, SET_Z_CHG_HNVC, cpu6812 },
+
+  { "xgdx", OP_NONE,           1, 0x8f,  3,  3,  CHG_NONE, cpu6811 },
+  { "xgdy", OP_NONE | OP_PAGE2,2, 0x8f,  4,  4,  CHG_NONE, cpu6811 }
+};
+
+const int m68hc11_num_opcodes = TABLE_SIZE (m68hc11_opcodes);
+
+/* The following alias table provides source compatibility to
+   move from 68HC11 assembly to 68HC12.  */
+const struct m68hc12_opcode_alias m68hc12_alias[] = {
+  { "abx", "leax b,x",   2, 0x1a, 0xe5 },
+  { "aby", "leay b,y",   2, 0x19, 0xed },
+  { "clc", "andcc #$fe", 2, 0x10, 0xfe },
+  { "cli", "andcc #$ef", 2, 0x10, 0xef },
+  { "clv", "andcc #$fd", 2, 0x10, 0xfd },
+  { "des", "leas -1,sp", 2, 0x1b, 0x9f },
+  { "ins", "leas 1,sp",  2, 0x1b, 0x81 },
+  { "sec", "orcc #$01",  2, 0x14, 0x01 },
+  { "sei", "orcc #$10",  2, 0x14, 0x10 },
+  { "sev", "orcc #$02",  2, 0x14, 0x02 },
+  { "tap", "tfr a,ccr",  2, 0xb7, 0x02 },
+  { "tpa", "tfr ccr,a",  2, 0xb7, 0x20 },
+  { "tsx", "tfr sp,x",   2, 0xb7, 0x75 },
+  { "tsy", "tfr sp,y",   2, 0xb7, 0x76 },
+  { "txs", "tfr x,sp",   2, 0xb7, 0x57 },
+  { "tys", "tfr y,sp",   2, 0xb7, 0x67 },
+  { "xgdx","exg d,x",    2, 0xb7, 0xc5 },
+  { "xgdy","exg d,y",    2, 0xb7, 0xc6 }
+};
+const int m68hc12_num_alias = TABLE_SIZE (m68hc12_alias);
diff -rupN binutils-2.20/opcodes/mc9xgate-dis.c binutils-2.20-sean/opcodes/mc9xgate-dis.c
--- binutils-2.20/opcodes/mc9xgate-dis.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9xgate-dis.c	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,290 @@
+/* m68hc11-dis.c -- Motorola 68HC11 & 68HC12 disassembly
+   Copyright 1999, 2000, 2001, 2002, 2003, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.  */
+/*
+ * Can't disassemble for architecture UNKNOWN!
+ * skipping as arch ==
+ * MC9S12X
+ * mc9s12x
+ * mc9xgate-dis
+ *    Can't disassemble for architecture
+ *
+ */
+
+#include <assert.h>
+#include <math.h>
+#include "sysdep.h"
+#include "dis-asm.h"
+#include "opintl.h"
+#include "libiberty.h"
+
+
+#include <stdio.h>
+#include "ansidecl.h"
+#include "opcode/mc9xgate.h"
+
+
+/* temp macros */
+#define MC9XGATE_OP_REG 		44
+#define MC9XGATE_OP_JUMP_REL	55
+#define MC9XGATE_OP_JUMP_REL16	66
+#define MC9XGATE_OP_IX			77
+#define MC9XGATE_OP_IY			88
+#define MC9XGATE_OP_REG_2		99
+/* end temp macros */
+#define MC9XGATE_TWO_BYTES				02 /* two bytes */
+#define MC9XGATE_MIN_INS_SIZE			02 /* the minimum size(in bytes of an instruction */
+#define MC9XGATE_MAX_INS_SIZE			04 /* the maximum size(in bytes) of an instruction */
+
+#define PC_REGNUM 3
+
+struct mc9xgate_opmatch{
+	unsigned int bin_opcode;
+	char name[10];
+	unsigned int size;
+};
+
+static const char *const reg_name[] = {
+		"R0", "R1", "R2", "R3", "R4", "R5", "R6", "PC"
+};
+
+static const char *const reg_src_table[] = {
+		"R0", "R1", "R2", "R3", "R4", "R5", "R6", "CCR", "TMP3"
+};
+
+static const char *const reg_dst_table[] = {
+		"R0", "R1", "R2", "R3", "R4", "R5", "R6","CCR", "TMP2"
+};
+
+#define OP_PAGE_MASK (MC9XGATE_OP_PAGE2|MC9XGATE_OP_PAGE3|MC9XGATE_OP_PAGE4)  // was M6811
+
+static unsigned int *operMasks;
+static int initialized;
+/* Prototypes for local functions.  */
+//static int read_memory (bfd_vma, bfd_byte *, int, struct disassemble_info *);
+//static int print_indexed_operand (bfd_vma, struct disassemble_info *,
+//                                 int*, int, int, bfd_vma);
+static int print_insn (bfd_vma, struct disassemble_info *, int);
+static int read_memory (bfd_vma , bfd_byte*, int, struct disassemble_info*);
+static unsigned int ripBits(unsigned int *bitsLeft, unsigned int numBits, struct mc9xgate_opcode *opcodePTR, unsigned int raw_code);
+
+static unsigned int
+power(unsigned int base, unsigned int powerof);
+//static unsigned short mc9xgatedis_opcode (bfd_vma addr, struct disassemble_info *info);
+
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+   of bytes used by that instruction.  */
+static int
+print_insn (bfd_vma memaddr, struct disassemble_info* info, int arch)
+{
+	printf("\n in print_insn arch is %d", arch);
+	printf("\n memaddr is %d",(unsigned int)memaddr);
+	printf("\n dis info    symtab size is %d",info->symtab_size);
+	printf("\n number of symbols is %d",info->num_symbols);
+	printf("\n trying print address fuction ");
+	info->print_address_func(memaddr, info);
+
+
+	int status;
+	bfd_byte buffer[4];
+	//unsigned int code = 0;
+	unsigned int raw_code;
+	//unsigned int operandMask;
+	char *s = 0;
+	//unsigned int mask;
+	//long format, pos, i;
+	long pos;
+	//short sval;
+	int i = 0;
+	struct mc9xgate_opcode *opcodePTR = mc9xgate_opcodes;
+	unsigned int *operMaskPTR = 0;
+	unsigned int operandMask = 0;
+	int found = 0;
+	//struct mc9xgate_opcode *opcTablePtr = opcodeTable;
+
+	pos = 2; /* default to one word read from mem */
+
+	if(!initialized){
+
+		operMasks =  xmalloc(sizeof(unsigned int) * mc9xgate_num_opcodes);
+
+		for(i = 0, operMaskPTR = operMasks; i < mc9xgate_num_opcodes; i++, opcodePTR++, operMaskPTR++){
+			unsigned int bin = 0;
+			unsigned int mask = 0;
+
+			for(s = opcodePTR->format; *s; s++){
+				bin <<= 1;
+				mask <<= 1;
+				bin |= (*s == '1');
+				mask |= (*s == '0' || *s == '1');
+			}
+			/* asserting will uncover inconsistencies in our table */
+			assert ((s - opcodePTR->format) == 16 || (s - opcodePTR->format) == 32 );
+			assert (opcodePTR->bin_opcode == bin);
+			*operMaskPTR = mask;
+		}
+
+		initialized = 1;
+	}
+
+	/* read one word */
+	status = read_memory (memaddr, buffer, 2, info);
+	raw_code = buffer[0];
+	raw_code <<= 8;
+	raw_code += buffer[1];
+
+	for(i = 0, opcodePTR = mc9xgate_opcodes, operMaskPTR = operMasks; i < mc9xgate_num_opcodes; i++, operMaskPTR++, opcodePTR++){
+
+		if((raw_code & *operMaskPTR) == opcodePTR->bin_opcode){
+			found = 1;
+			break;
+
+		}
+	}
+
+	if(found){
+		pos = opcodePTR->size;
+		operandMask = ~*operMaskPTR;
+		printf("\n match found-%s constraints-%s rawcode-%x", opcodePTR->name, opcodePTR->format, raw_code);
+		printf("\nsymbol at address %d", info->symbol_at_address_func(memaddr, info));
+
+		int operand = 0;
+		int operandSize = 0;
+		for(s = opcodePTR->constraints; *s; s++){
+
+			switch (*s){
+
+			case 's':
+			case 'r':
+				operandSize = 3;
+				printf("\n ripped R%x\n", (ripBits(&operandMask, operandSize, opcodePTR, raw_code)) );
+				break;
+			case 'i':
+				printf("\n need to diss an immediate operand");
+				  (*info->fprintf_func) (info->stream, " #$%02x%s",
+							 buffer[0] & 0x0FF, " ");
+							 //(format & MC9S12X_OP_JUMP_REL ? " " : ""));
+				break;
+			case 'b': /* either 9 or 10 bit PC real operand */
+				if(info->symbol_at_address_func(memaddr, info)){
+
+					if(*(++s) == '9'){
+						operandSize = 9;
+					}else if(*s == 'a'){
+						operandSize = 10;
+					}
+
+					operand = (ripBits(&operandMask, *(s++) - '0', opcodePTR, raw_code) + 1);
+					/* covert sign */
+					if((operand & 0x0200) && (operandSize == 10))
+						operand |= 0xFFFFFC00;
+					if((operand & 0x0100) && (operandSize == 9))
+						operand |= 0xFFFFFE00;
+					/* words to bytes */
+					operand *= 2;
+					printf("\n ripped %d\n", operand);
+
+				}
+			default:
+				//as_error(_(": unhandled constraint"));
+				break;
+			}
+
+		}
+
+	}
+	//printf("\n extracted from memory a-%x b-%x c-%x d-%x \n",(unsigned int) buffer[0], (unsigned int)buffer[1]
+	//                                  ,(unsigned int) buffer[2], (unsigned int)buffer[3] );
+
+	if(status)
+		printf("\n error reading memory");
+
+
+	return pos;
+}
+
+/* Disassemble one instruction at address 'memaddr'.  Returns the number
+ of bytes used by that instruction.  */
+//int
+//print_insn_MC9XGATE (bfd_vma memaddr, struct disassemble_info* info)
+//{
+//  return print_insn (memaddr, info, cpu6811);
+//}
+
+int
+print_insn_mc9xgate (bfd_vma memaddr, struct disassemble_info* info)
+{
+	printf("\nin print_insn_mc9xgate\n");
+	return print_insn (memaddr, info, cpumc9xgate);
+	//	return 1;
+}
+
+
+static int
+read_memory (bfd_vma memaddr, bfd_byte* buffer, int size,
+		struct disassemble_info* info)
+{
+	int status;
+
+	/* Get first byte.  Only one at a time because we don't know the
+     size of the insn.  */
+	status = (*info->read_memory_func) (memaddr, buffer, size, info);
+	if (status != 0)
+	{
+		(*info->memory_error_func) (status, memaddr, info);
+		return -1;
+	}
+	return 0;
+}
+
+static unsigned int
+ripBits(unsigned int *bitsLeft, unsigned int numBits, struct mc9xgate_opcode *opcodePTR, unsigned int raw_code){
+	unsigned int bitsToProcess = (opcodePTR->size) * 8;
+	unsigned int bitPointer = power(2,bitsToProcess - 1 );
+	unsigned int operand = 0;
+
+	for(;bitsToProcess && numBits;  bitsToProcess--){
+		bitPointer = power(2,bitsToProcess - 1);
+		if(*bitsLeft & bitPointer){
+			operand <<= 1;
+			if(raw_code & bitPointer)
+				operand += 1;
+			/*flag bit as used */
+			bitPointer = ~bitPointer;
+			*bitsLeft &= bitPointer;
+			numBits--;
+		}
+	}
+
+	return operand;
+}
+
+static unsigned int
+power(unsigned int number, unsigned int exponent){
+	int product = 1;
+	unsigned int i = 0;
+	while(i < exponent){
+		product *= number;
+		i++;
+	}
+	return product;
+}
diff -rupN binutils-2.20/opcodes/mc9xgate-opc.c binutils-2.20-sean/opcodes/mc9xgate-opc.c
--- binutils-2.20/opcodes/mc9xgate-opc.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/opcodes/mc9xgate-opc.c	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,211 @@
+/* mc9xgate-opc.c -- Motorola XGATE opcode list
+   Copyright 1999, 2000, 2002, 2005, 2007 Free Software Foundation, Inc.
+   Written by Sean Keys (info@powerefi.com)
+
+   This file is part of the GNU opcodes library.
+
+   This library is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   It is distributed in the hope that it will be useful, but WITHOUT
+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+   License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this file; see the file COPYING.  If not, write to the
+   Free Software Foundation, 51 Franklin Street - Fifth Floor, Boston,
+   MA 02110-1301, USA.
+*/
+
+#include <stdio.h>
+#include "ansidecl.h"
+#include "opcode/mc9xgate.h"
+
+#define TABLE_SIZE(X)       (sizeof(X) / sizeof(X[0]))
+
+/* Combination of CCR flags.  */
+/* ORDER HI TO LOW NZVC */
+#define MC9XGATE_NZ_BIT		MC9XGATE_N_BIT|MC9XGATE_Z_BIT
+#define MC9XGATE_NV_BIT		MC9XGATE_N_BIT|MC9XGATE_V_BIT
+#define MC9XGATE_NC_BIT		MC9XGATE_N_BIT|MC9XGATE_C_BIT
+#define MC9XGATE_ZV_BIT		MC9XGATE_Z_BIT|MC9XGATE_V_BIT
+#define MC9XGATE_ZC_BIT		MC9XGATE_Z_BIT|MC9XGATE_C_BIT
+#define MC9XGATE_VC_BIT		MC9XGATE_V_BIT|MC9XGATE_C_BIT
+#define MC9XGATE_NVC_BIT	MC9XGATE_NV_BIT|MC9XGATE_C_BIT
+#define MC9XGATE_NZC_BIT	MC9XGATE_NZ_BIT|MC9XGATE_C_BIT
+#define MC9XGATE_NZV_BIT	MC9XGATE_N_BIT|MC9XGATE_Z_BIT|MC9XGATE_V_BIT
+#define MC9XGATE_ZVC_BIT	MC9XGATE_VC_BIT|MC9XGATE_Z_BIT
+#define MC9XGATE_NZVC_BIT	MC9XGATE_NZV_BIT|MC9XGATE_C_BIT
+
+/* Flags when the insn only changes some CCR flags.  */
+#define CHG_NONE        0,0,0
+#define CHG_Z           0,0,MC9XGATE_Z_BIT
+#define CHG_C           0,0,MC9XGATE_C_BIT
+#define CHG_ZVC         0,0,MC9XGATE_ZVC_BIT
+#define CHG_NZC         0,0,MC9XGATE_NZC_BIT
+#define CHG_NZV         0,0,MC9XGATE_NZV_BIT
+#define CHG_NZVC        0,0,(MC9XGATE_NZVC_BIT)
+#define CHG_HNZVC       0,0,MC9XGATE_HNZVC_BIT  // TODO DELETE
+#define CHG_ALL         0,0,0xff
+
+/* The insn clears and changes some flags.  */
+#define CLR_I           0,MC9XGATE_I_BIT,0
+#define CLR_C           0,MC9XGATE_C_BIT,0
+#define CLR_V           0,MC9XGATE_V_BIT,0
+#define CLR_V_CHG_ZC    0,MC9XGATE_V_BIT,MC9XGATE_ZC_BIT
+#define CLR_V_CHG_NZ    0,MC9XGATE_V_BIT,MC9XGATE_NZ_BIT
+#define CLR_V_CHG_ZVC   0,MC9XGATE_V_BIT,MC9XGATE_ZVC_BIT
+#define CLR_N_CHG_ZVC   0,MC9XGATE_N_BIT,MC9XGATE_ZVC_BIT /* Used by lsr */
+#define CLR_VC_CHG_NZ   0,MC9XGATE_VC_BIT,MC9XGATE_NZ_BIT
+
+/* The insn sets some flags.  */
+#define SET_I           MC9XGATE_I_BIT,0,0
+#define SET_C           MC9XGATE_C_BIT,0,0
+#define SET_V           MC9XGATE_V_BIT,0,0
+#define SET_Z_CLR_NVC   MC9XGATE_Z_BIT,MC9XGATE_NVC_BIT,0
+#define SET_C_CLR_V_CHG_NZ MC9XGATE_C_BIT,MC9XGATE_V_BIT,MC9XGATE_NZ_BIT
+#define SET_Z_CHG_HNVC  MC9XGATE_Z_BIT,0,MC9XGATE_HNVC_BIT
+
+#define _M 0xff
+#define OP_NONE         MC9XGATE_OP_NONE
+#define OP_INH			MC9XGATE_OP_INH
+#define OP_TRI			MC9XGATE_OP_TRI
+#define OP_DYA			MC9XGATE_OP_DYA
+#define OP_DYA_MON		MC9XGATE_OP_DYA_MON
+#define OP_IMM3			MC9XGATE_OP_IMM3
+#define OP_IMM4			MC9XGATE_OP_IMM4
+#define OP_IMM8			MC9XGATE_OP_IMM8
+#define OP_IMM16		MC9XGATE_OP_IMM16
+#define OP_MON			MC9XGATE_OP_MON
+#define OP_MON_R_C		MC9XGATE_OP_MON_R_C
+#define OP_MON_C_R		MC9XGATE_OP_MON_C_R
+#define OP_MON_R_P		MC9XGATE_OP_MON_R_P
+#define OP_IDR	        MC9XGATE_OP_IDR
+#define OP_IDO5		    MC9XGATE_OP_IDO5
+#define OP_REL9			MC9XGATE_OP_REL9
+#define OP_REL10    	MC9XGATE_OP_REL10
+#define OP_IMM16mADD    MC9XGATE_OP_IMM16mADD
+#define OP_IMM16mCPC    MC9XGATE_OP_IMM16mCPC
+#define OP_IMM16mLDD    MC9XGATE_OP_IMM16mLDD
+#define OP_IMM16mSUB    MC9XGATE_OP_IMM16mSUB
+
+
+#define BI_MODE(mode1,mode2)	"mode1 | mode2"
+
+#define OP_IMM8m			MC9XGATE_OP_IMM8m
+
+
+/* TODO reinstate const */
+struct mc9xgate_opcode mc9xgate_opcodes[] = {
+/*
+      Name -+                                                                                 +-- cpu
+Constraints --------+                                                              +------- Insn CCR changes
+  Format ------------------+                                               +----------- Max # cycles
+Format Bin -------------------------------------+                       +--------------- Min # cycles
+Size --------------------------------------------------------+   +--------------------- Opcode
+*/
+	{   "adc",   OP_TRI, "00011rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x1803, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "add",   OP_TRI, "00011rrrrrrrrr10", MC9XGATE_R_R_R, 2, 0x1802, 1, 1, CHG_NZVC, cpumc9xgate},
+
+	{	"add", OP_IMM16mADD, "----------------",   MC9XGATE_R_I, 4,      0, 0, 0, CHG_NONE, cpumc9xgate},
+
+//	{  "add",  OP_IMM16, "11101rrriiiiiiii11100rrriiiiiiii",   MC9XGATE_R_I, 4, 0xE800E000, 1, 1, CHG_NZVC, cpumc9xgate},
+//	{  "addlm",  OP_IMM8m, "11100rrriiiiiiii",   MC9XGATE_R_I, 2, 0xE000, 1, 1, CHG_NZVC, cpumc9xgate},
+
+	{  "addh",  OP_IMM8, "11101rrriiiiiiii",   MC9XGATE_R_I, 2, 0xE800, 1, 1, CHG_NZVC, cpumc9xgate},
+	{  "addl",  OP_IMM8, "11100rrriiiiiiii",   MC9XGATE_R_I, 2, 0xE000, 1, 1, CHG_NZVC, cpumc9xgate},
+
+	{   "and",   OP_TRI, "00010rrrrrrrrr00", MC9XGATE_R_R_R, 2, 0x1000, 1, 1,  CHG_NZV, cpumc9xgate},
+	{  "andh",  OP_IMM8, "10001rrriiiiiiii",   MC9XGATE_R_I, 2, 0x8800, 1, 1,  CHG_NZV, cpumc9xgate},
+	{  "andl",  OP_IMM8, "10000rrriiiiiiii",   MC9XGATE_R_I, 2, 0x8000, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "asr",  OP_IMM4, "00001rrriiii1001",   MC9XGATE_R_I, 2, 0x0809, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "asr",   OP_DYA, "00001rrrrrr10001",   MC9XGATE_R_R, 2, 0x0811, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "bcc",  OP_REL9, "0010000iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2000, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bcs",  OP_REL9, "0010001iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2200, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "beq",  OP_REL9, "0010011iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2600, 1, 2, CHG_NONE, cpumc9xgate},
+	{ "bfext",   OP_TRI, "01100rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x6003, 1, 1,   CHG_NZV, cpumc9xgate},
+	{  "bffo",   OP_DYA, "00001rrrrrr10000",   MC9XGATE_R_R, 2, 0x0810, 1, 1,  CHG_NZVC, cpumc9xgate},
+	{ "bfins",   OP_TRI, "01101rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x6803, 1, 1,   CHG_NZV, cpumc9xgate},
+	{"bfinsi",   OP_TRI, "01110rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x7003, 1, 1,   CHG_NZV, cpumc9xgate},
+	{"bfinsx",   OP_TRI, "01111rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x7803, 1, 1,   CHG_NZV, cpumc9xgate},
+	{   "bge",  OP_REL9, "0011010iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3400, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bgt",  OP_REL9, "0011100iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3800, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bhi",  OP_REL9, "0011000iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3000, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bhs",  OP_REL9, "0010000iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2000, 1, 2, CHG_NONE, cpumc9xgate},
+	{  "bith",  OP_IMM8, "10011rrriiiiiiii",   MC9XGATE_R_I, 2, 0x9800, 1, 1,  CHG_NZV, cpumc9xgate},
+	{  "bitl",  OP_IMM8, "10010rrriiiiiiii",   MC9XGATE_R_I, 2, 0x9000, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "ble",  OP_REL9, "0011101iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3A00, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "blo",  OP_REL9, "0010001iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2200, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bls",  OP_REL9, "0011001iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3200, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "blt",  OP_REL9, "0011011iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3600, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bmi",  OP_REL9, "0010101iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2A00, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bne",  OP_REL9, "0010010iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2400, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bpl",  OP_REL9, "0010100iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2800, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bra", OP_REL10, "001111iiiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x3C00, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "brk",   OP_INH, "0000000000000000",   MC9XGATE_INH, 2, 0x0000, 4, 4, CHG_NONE, cpumc9xgate},
+	{   "bvc",  OP_REL9, "0010110iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2C00, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "bvs",  OP_REL9, "0010111iiiiiiiii",   MC9XGATE_I | MC9XGATE_PCREL,   2, 0x2E00, 1, 2, CHG_NONE, cpumc9xgate},
+	{   "cmp",   OP_DYA, "00011sssrrrrrr00",   MC9XGATE_R_R, 2, 0x1800, 1, 1, CHG_NZVC, cpumc9xgate},
+	{  "cmpl",  OP_IMM8, "11010rrriiiiiiii",   MC9XGATE_R_I, 2, 0xD000, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "com",   OP_DYA_MON, "00010rrrsssrrr11",   MC9XGATE_R_R, 2, 0x1003, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "cpc",   OP_DYA, "00011sssrrrrrr01",   MC9XGATE_R_R, 2, 0x1801, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "cpc",  OP_IMM16mCPC, "----------------",   MC9XGATE_R_I, 4, 0, 0, 0, CHG_NONE, cpumc9xgate},
+	{  "cpch",  OP_IMM8, "11011rrriiiiiiii",   MC9XGATE_R_I, 2, 0xD800, 1, 1, CHG_NZVC, cpumc9xgate},
+	{  "csem",  OP_IMM3, "00000iii11110000",     MC9XGATE_I , 2, 0x00F0, 1, 1, CHG_NONE, cpumc9xgate},
+	{  "csem",   OP_MON, "00000rrr11110001",     MC9XGATE_R, 2, 0x00F1, 1, 1, CHG_NONE, cpumc9xgate},
+	{   "csl",  OP_IMM4, "00001rrriiii1010",   MC9XGATE_R_I, 2, 0x080A, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "csl",   OP_DYA, "00001rrrrrr10010",   MC9XGATE_R_R, 2, 0x0812, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "csr",  OP_IMM4, "00001rrriiii1011",   MC9XGATE_R_I, 2, 0x080B, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "csr",   OP_DYA, "00001rrrrrr10011",   MC9XGATE_R_R, 2, 0x0813, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "jal",   OP_MON, "00000rrr11110110",     MC9XGATE_R, 2, 0x00F6, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "ldb",  OP_IDO5, "01000rrrrrriiiii", MC9XGATE_R_R_I, 2, 0x4000, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "ldb",   OP_IDR, "01100rrrrrrrrrrr", MC9XGATE_R_R_R, 2, 0x6000, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "ldh",  OP_IMM8, "11111rrriiiiiiii",   MC9XGATE_R_I, 2, 0xF800, 1, 1, CHG_NONE, cpumc9xgate},
+	{   "ldl",  OP_IMM8, "11110rrriiiiiiii",   MC9XGATE_R_I, 2, 0xF000, 1, 1, CHG_NONE, cpumc9xgate},
+	{   "ldd",  OP_IMM16mLDD, "----------------",   MC9XGATE_R_I, 4, 0, 0, 0, CHG_NONE, cpumc9xgate},
+	{   "ldw",  OP_IDO5, "01001rrrrrriiiii", MC9XGATE_R_R_I, 2, 0x4800, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "ldw",   OP_IDR, "01101rrrrrrrrrrr", MC9XGATE_R_R_R, 2, 0x6800, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "lsl",  OP_IMM4, "00001rrriiii1100",   MC9XGATE_R_I, 2, 0x080C, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "lsl",   OP_DYA, "00001rrrrrr10100",   MC9XGATE_R_R, 2, 0x0814, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "lsr",  OP_IMM4, "00001rrriiii1101",   MC9XGATE_R_I, 2, 0x080D, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "lsr",   OP_DYA, "00001rrrrrr10101",   MC9XGATE_R_R, 2, 0x0815, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "mov",   OP_DYA, "00010rrrsssrrr10",   MC9XGATE_R_R, 2, 0x1002, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "neg",   OP_DYA, "00011rrrsssrrr00",   MC9XGATE_R_R, 2, 0x1800, 1, 1, CHG_NZVC, cpumc9xgate},
+	{   "nop",   OP_INH, "0000000100000000",   MC9XGATE_INH, 2, 0x0100, 1, 1, CHG_NONE, cpumc9xgate},
+	{    "or",   OP_TRI, "00010rrrrrrrrr10", MC9XGATE_R_R_R, 2, 0x1002, 1, 1,  CHG_NZV, cpumc9xgate},
+    {   "orh",  OP_IMM8, "10101rrriiiiiiii",   MC9XGATE_R_I, 2, 0xA800, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "orl",  OP_IMM8, "10100rrriiiiiiii",   MC9XGATE_R_I, 2, 0xA000, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "par",   OP_MON, "00000rrr11110101",     MC9XGATE_R, 2, 0x00F5, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "rol",  OP_IMM4, "00001rrriiii1110",   MC9XGATE_R_I, 2, 0x080E, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "rol",   OP_DYA, "00001rrrrrr10110",   MC9XGATE_R_R, 2, 0x0816, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "ror",  OP_IMM4, "00001rrriiii1111",   MC9XGATE_R_I, 2, 0x080F, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "ror",   OP_DYA, "00001rrrrrr10111",   MC9XGATE_R_R, 2, 0x0817, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "rts",   OP_INH, "0000001000000000",   MC9XGATE_INH, 2, 0x0200, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "sbc",   OP_TRI, "00011rrrrrrrrr01", MC9XGATE_R_R_R, 2, 0x1801, 1, 1,  CHG_NZV, cpumc9xgate},
+	{  "ssem",  OP_IMM3, "00000iii11110010",     MC9XGATE_I , 2, 0x00F2, 2, 2,    CHG_C, cpumc9xgate},
+	{  "ssem",   OP_MON, "00000rrr11110011",     MC9XGATE_R, 2, 0x00F3, 2, 2,    CHG_C, cpumc9xgate},
+	{   "sex",   OP_MON, "00000rrr11110100",     MC9XGATE_R, 2, 0x00F4, 1, 1,  CHG_NZV, cpumc9xgate},
+	{   "sif",   OP_INH, "0000001100000000",   MC9XGATE_INH, 2, 0x0300, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "sif",   OP_MON, "00000rrr11110111",     MC9XGATE_R, 2, 0x00F7, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "stb",  OP_IDO5, "01010rrrrrriiiii", MC9XGATE_R_R_I, 2, 0x5000, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "stb",   OP_IDR, "01110rrrrrrrrrrr", MC9XGATE_R_R_R, 2, 0x7000, 2, 2, CHG_NONE, cpumc9xgate},
+	{   "stw",  OP_IDO5, "01011rrrrrriiiii", MC9XGATE_R_R_I, 2, 0x5800, 2, 2, CHG_NONE, cpumc9xgate},
+    {   "stw",   OP_IDR, "01111rrrrrrrrrrr", MC9XGATE_R_R_R, 2, 0x7800, 2, 2, CHG_NONE, cpumc9xgate},
+    {   "sub",   OP_TRI, "00011rrrrrrrrr00", MC9XGATE_R_R_R, 2, 0x1800, 1, 1, CHG_NZVC, cpumc9xgate},
+    {   "sub",    OP_IMM16mSUB, "----------------", MC9XGATE_R_I, 4, 0, 0, 0, CHG_NONE, cpumc9xgate},
+    {  "subh",  OP_IMM8, "11001rrriiiiiiii",   MC9XGATE_R_I, 2, 0xC800, 1, 1, CHG_NZVC, cpumc9xgate},
+    {  "subl",  OP_IMM8, "11000rrriiiiiiii",   MC9XGATE_R_I, 2, 0xC000, 1, 1, CHG_NZVC, cpumc9xgate},
+    {   "tfr",  OP_MON_R_C, "00000rrr11111000",   MC9XGATE_R_C, 2, 0x00F8, 1, 1, CHG_NONE, cpumc9xgate},
+    {   "tfr",  OP_MON_C_R, "00000rrr11111001",   MC9XGATE_C_R, 2, 0x00F9, 1, 1, CHG_NONE, cpumc9xgate},
+    {   "tfr",  OP_MON_R_P, "00000rrr11111010",   MC9XGATE_R_P, 2, 0x00FA, 1, 1, CHG_NONE, cpumc9xgate},
+    {   "tst",   OP_MON, "00011sssrrrsss00",   MC9XGATE_R, 2, 0x1800, 1, 1,  CHG_NZV, cpumc9xgate},
+    {  "xnor",   OP_TRI, "00010rrrrrrrrr11", MC9XGATE_R_R_R, 2, 0x1003, 1, 1, CHG_NZV, cpumc9xgate},
+    { "xnorh",  OP_IMM8, "10111rrriiiiiiii",   MC9XGATE_R_I, 2, 0xB800, 1, 1, CHG_NZV, cpumc9xgate},
+    { "xnorl",  OP_IMM8, "10110rrriiiiiiii",   MC9XGATE_R_I, 2, 0xB000, 1, 1, CHG_NZV, cpumc9xgate}
+};
+
+const int mc9xgate_num_opcodes = TABLE_SIZE (mc9xgate_opcodes);
+
diff -rupN binutils-2.20/scratch.c binutils-2.20-sean/scratch.c
--- binutils-2.20/scratch.c	1969-12-31 17:00:00.000000000 -0700
+++ binutils-2.20-sean/scratch.c	2010-10-01 14:37:35.000000000 -0600
@@ -0,0 +1,4214 @@
+/* tc-m68hc11.c -- Assembler code for the Motorola 68HC11 & 68HC12.
+   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
+   Free Software Foundation, Inc.
+   Written by Stephane Carrez (stcarrez@nerim.fr)
+   XGATE and S12X added by James Murray (jsm@jsm-net.demon.co.uk)
+
+   This file is part of GAS, the GNU Assembler.
+
+   GAS is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 3, or (at your option)
+   any later version.
+
+   GAS is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with GAS; see the file COPYING.  If not, write to
+   the Free Software Foundation, 51 Franklin Street - Fifth Floor,
+   Boston, MA 02110-1301, USA.
+
+ not 0_register parsing reloc 9
+ PCREL instruction
+ parsed bin_opcode is  8192
+ fix value is 1
+ read opcode 8281 from frag
+ write us a PCREL 9
+ fix value is -15
+ read opcode 8211 from frag
+ write us a PCREL 9
+ read opcode 4185 from frag
+ write us a PCREL 9
+ fix value is -15
+ read opcode 4115 from frag
+ write us a PCREL 9
+
+bfd_get
+
+
+
+
+
+    */
+
+#include "as.h"
+#include "safe-ctype.h"
+#include "subsegs.h"
+#include "opcode/m68hc11.h"
+#include "dwarf2dbg.h"
+#include "elf/m68hc11.h"
+
+const char comment_chars[] = ";!";
+const char line_comment_chars[] = "#*";
+const char line_separator_chars[] = "";
+
+const char EXP_CHARS[] = "eE";
+const char FLT_CHARS[] = "dD";
+
+#define STATE_CONDITIONAL_BRANCH	(1)
+#define STATE_PC_RELATIVE		(2)
+#define STATE_INDEXED_OFFSET            (3)
+#define STATE_INDEXED_PCREL             (4)
+#define STATE_XBCC_BRANCH               (5)
+#define STATE_CONDITIONAL_BRANCH_6812	(6)
+
+#define STATE_BYTE			(0)
+#define STATE_BITS5                     (0)
+#define STATE_WORD			(1)
+#define STATE_BITS9                     (1)
+#define STATE_LONG			(2)
+#define STATE_BITS16                    (2)
+#define STATE_UNDF			(3)	/* Symbol undefined in pass1 */
+
+/* This macro has no side-effects.  */
+#define ENCODE_RELAX(what,length) (((what) << 2) + (length))
+#define RELAX_STATE(s) ((s) >> 2)
+#define RELAX_LENGTH(s) ((s) & 3)
+
+#define IS_OPCODE(C1,C2)        (((C1) & 0x0FF) == ((C2) & 0x0FF))
+
+/* This table describes how you change sizes for the various types of variable
+   size expressions.  This version only supports two kinds.  */
+
+/* The fields are:
+   How far Forward this mode will reach.
+   How far Backward this mode will reach.
+   How many bytes this mode will add to the size of the frag.
+   Which mode to go to if the offset won't fit in this one.  */
+
+relax_typeS md_relax_table[] = {
+  {1, 1, 0, 0},			/* First entries aren't used.  */
+  {1, 1, 0, 0},			/* For no good reason except.  */
+  {1, 1, 0, 0},			/* that the VAX doesn't either.  */
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L>.
+     These insns are translated into b!cc +3 jmp L.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bsr <L> and bra <L>.
+     These insns are translated into jsr and jmp.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD)},
+  {0, 0, 1, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for indexed offset: 5-bits, 9-bits, 16-bits.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9)},
+  {(255), (-256), 1, ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for PC relative offset: 5-bits, 9-bits, 16-bits.
+     For the 9-bit case, there will be a -1 correction to take into
+     account the new byte that's why the range is -255..256.  */
+  {(15), (-16), 0, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9)},
+  {(256), (-255), 1, ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for dbeq/ibeq/tbeq r,<L>:
+     These insns are translated into db!cc +3 jmp L.  */
+  {(255), (-256), 0, ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD)},
+  {0, 0, 3, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+  /* Relax for bcc <L> on 68HC12.
+     These insns are translated into lbcc <L>.  */
+  {(127), (-128), 0, ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD)},
+  {0, 0, 2, 0},
+  {1, 1, 0, 0},
+  {1, 1, 0, 0},
+
+};
+
+/* 68HC11 and 68HC12 registers.  They are numbered according to the 68HC12.  */
+typedef enum register_id {
+  REG_NONE = -1,
+  REG_A = 0,
+  REG_B = 1,
+  REG_CCR = 2,
+  REG_D = 4,
+  REG_X = 5,
+  REG_Y = 6,
+  REG_SP = 7,
+  REG_PC = 8,
+  REG_R0 = 0,
+  REG_R1 = 1,
+  REG_R2 = 2,
+  REG_R3 = 3,
+  REG_R4 = 4,
+  REG_R5 = 5,
+  REG_R6 = 6,
+  REG_R7 = 7,
+  REG_SP_XG = 8,
+  REG_PC_XG = 9,
+  REG_CCR_XG = 10
+} register_id;
+
+typedef struct operand {
+  expressionS exp;
+  register_id reg1;
+  register_id reg2;
+  int mode;
+} operand;
+
+struct m68hc11_opcode_def {
+  long format;
+  int min_operands;
+  int max_operands;
+  int nb_modes;
+  int used;
+  struct m68hc11_opcode *opcode;
+};
+
+static struct m68hc11_opcode_def *m68hc11_opcode_defs = 0;
+static int m68hc11_nb_opcode_defs = 0;
+
+typedef struct alias {
+  const char *name;
+  const char *alias;
+} alias;
+
+static alias alias_opcodes[] = {
+  {"cpd", "cmpd"},
+  {"cpx", "cmpx"},
+  {"cpy", "cmpy"},
+  {0, 0}
+};
+
+struct m9s12xg_opcode_def {
+  long format;
+  int min_operands;
+  int max_operands;
+  int nb_modes;
+  int used;
+  struct m9s12xg_opcode *opcode;
+};
+
+/* Local functions.  */
+static register_id reg_name_search (char *);
+static register_id register_name (void);
+static int cmp_opcode (struct m68hc11_opcode *, struct m68hc11_opcode *);
+static char *print_opcode_format (struct m68hc11_opcode *, int);
+static char *skip_whites (char *);
+static int check_range (long, int);
+static void print_opcode_list (void);
+static void get_default_target (void);
+static void print_insn_format (char *);
+static int get_operand (operand *, int, long);
+static void fixup8 (expressionS *, int, int);
+static void fixup16 (expressionS *, int, int);
+static void fixup24 (expressionS *, int, int);
+static void fixup8_xg (expressionS *, int, int);
+static void fixup16_xg (expressionS *, int, int);
+static unsigned char convert_branch (unsigned char);
+static char *m68hc11_new_insn (int);
+static void build_dbranch_insn (struct m68hc11_opcode *,
+                                operand *, int, int);
+static int build_indexed_byte (operand *, int, int);
+static int build_reg_mode (operand *, int);
+
+static struct m68hc11_opcode *find (struct m68hc11_opcode_def *,
+                                    operand *, int);
+static struct m68hc11_opcode *find_opcode (struct m68hc11_opcode_def *,
+                                           operand *, int *);
+static void build_jump_insn (struct m68hc11_opcode *, operand *, int, int);
+static void build_insn (struct m68hc11_opcode *, operand *, int);
+static int relaxable_symbol (symbolS *);
+
+/* Pseudo op to indicate a relax group.  */
+static void s_m68hc11_relax (int);
+
+/* Pseudo op to control the ELF flags.  */
+static void s_m68hc11_mode (int);
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void s_m68hc11_mark_symbol (int);
+
+/* Controls whether relative branches can be turned into long branches.
+   When the relative offset is too large, the insn are changed:
+    bra -> jmp
+    bsr -> jsr
+    bcc -> b!cc +3
+           jmp L
+    dbcc -> db!cc +3
+            jmp L
+
+  Setting the flag forbidds this.  */
+static short flag_fixed_branches = 0;
+
+/* Force to use long jumps (absolute) instead of relative branches.  */
+static short flag_force_long_jumps = 0;
+
+/* Change the direct addressing mode into an absolute addressing mode
+   when the insn does not support direct addressing.
+   For example, "clr *ZD0" is normally not possible and is changed
+   into "clr ZDO".  */
+static short flag_strict_direct_addressing = 1;
+
+/* When an opcode has invalid operand, print out the syntax of the opcode
+   to stderr.  */
+static short flag_print_insn_syntax = 0;
+
+/* Dumps the list of instructions with syntax and then exit:
+   1 -> Only dumps the list (sorted by name)
+   2 -> Generate an example (or test) that can be compiled.  */
+static short flag_print_opcodes = 0;
+
+/* Opcode hash table.  */
+static struct hash_control *m68hc11_hash;
+
+/* Current cpu (either cpu6811 or cpu6812).  This is determined automagically
+   by 'get_default_target' by looking at default BFD vector.  This is overridden
+   with the -m<cpu> option.  */
+static int current_architecture = 0;
+
+/* Default cpu determined by 'get_default_target'.  */
+static const char *default_cpu;
+
+/* Number of opcodes in the sorted table (filtered by current cpu).  */
+static int num_opcodes;
+
+/* The opcodes sorted by name and filtered by current cpu.  */
+static struct m68hc11_opcode *m68hc11_sorted_opcodes;
+
+/* ELF flags to set in the output file header.  */
+static int elf_flags = E_M68HC11_F64;
+
+/* These are the machine dependent pseudo-ops.  These are included so
+   the assembler can work on the output from the SUN C compiler, which
+   generates these.  */
+
+/* This table describes all the machine specific pseudo-ops the assembler
+   has to support.  The fields are:
+   pseudo-op name without dot
+   function to call to execute this pseudo-op
+   Integer arg to pass to the function.  */
+const pseudo_typeS md_pseudo_table[] = {
+  /* The following pseudo-ops are supported for MRI compatibility.  */
+  {"fcb", cons, 1},
+  {"fdb", cons, 2},
+  {"fqb", cons, 4},
+  {"fcc", stringer, 1},
+  {"rmb", s_space, 0},
+
+  /* Motorola ALIS.  */
+  {"xrefb", s_ignore, 0}, /* Same as xref  */
+
+  /* Gcc driven relaxation.  */
+  {"relax", s_m68hc11_relax, 0},
+
+  /* .mode instruction (ala SH).  */
+  {"mode", s_m68hc11_mode, 0},
+
+  /* .far instruction.  */
+  {"far", s_m68hc11_mark_symbol, STO_M68HC12_FAR},
+
+  /* .interrupt instruction.  */
+  {"interrupt", s_m68hc11_mark_symbol, STO_M68HC12_INTERRUPT},
+
+  {0, 0, 0}
+};
+
+/* Options and initialization.  */
+
+const char *md_shortopts = "Sm:";
+
+struct option md_longopts[] = {
+#define OPTION_FORCE_LONG_BRANCH (OPTION_MD_BASE)
+  {"force-long-branches", no_argument, NULL, OPTION_FORCE_LONG_BRANCH},
+  {"force-long-branchs", no_argument, NULL, OPTION_FORCE_LONG_BRANCH}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_SHORT_BRANCHES     (OPTION_MD_BASE + 1)
+  {"short-branches", no_argument, NULL, OPTION_SHORT_BRANCHES},
+  {"short-branchs", no_argument, NULL, OPTION_SHORT_BRANCHES}, /* Misspelt version kept for backwards compatibility.  */
+
+#define OPTION_STRICT_DIRECT_MODE  (OPTION_MD_BASE + 2)
+  {"strict-direct-mode", no_argument, NULL, OPTION_STRICT_DIRECT_MODE},
+
+#define OPTION_PRINT_INSN_SYNTAX  (OPTION_MD_BASE + 3)
+  {"print-insn-syntax", no_argument, NULL, OPTION_PRINT_INSN_SYNTAX},
+
+#define OPTION_PRINT_OPCODES  (OPTION_MD_BASE + 4)
+  {"print-opcodes", no_argument, NULL, OPTION_PRINT_OPCODES},
+
+#define OPTION_GENERATE_EXAMPLE  (OPTION_MD_BASE + 5)
+  {"generate-example", no_argument, NULL, OPTION_GENERATE_EXAMPLE},
+
+#define OPTION_MSHORT  (OPTION_MD_BASE + 6)
+  {"mshort", no_argument, NULL, OPTION_MSHORT},
+
+#define OPTION_MLONG  (OPTION_MD_BASE + 7)
+  {"mlong", no_argument, NULL, OPTION_MLONG},
+
+#define OPTION_MSHORT_DOUBLE  (OPTION_MD_BASE + 8)
+  {"mshort-double", no_argument, NULL, OPTION_MSHORT_DOUBLE},
+
+#define OPTION_MLONG_DOUBLE  (OPTION_MD_BASE + 9)
+  {"mlong-double", no_argument, NULL, OPTION_MLONG_DOUBLE},
+
+  {NULL, no_argument, NULL, 0}
+};
+size_t md_longopts_size = sizeof (md_longopts);
+
+/* Get the target cpu for the assembler.  This is based on the configure
+   options and on the -m68hc11/-m68hc12 option.  If no option is specified,
+   we must get the default.  */
+const char *
+m68hc11_arch_format (void)
+{
+  get_default_target ();
+  if (current_architecture & cpu6811)
+    return "elf32-m68hc11";
+  else if (current_architecture & cpuxgate)
+    return "elf32-m9s12xg";
+  else
+    return "elf32-m68hc12";
+}
+
+enum bfd_architecture
+m68hc11_arch (void)
+{
+  get_default_target ();
+  if (current_architecture & cpu6811)
+    return bfd_arch_m68hc11;
+  else if (current_architecture & cpuxgate)
+    return bfd_arch_m9s12xg;
+  else
+    return bfd_arch_m68hc12;
+}
+
+int
+m68hc11_mach (void)
+{
+  return 0;
+}
+
+/* Listing header selected according to cpu.  */
+const char *
+m68hc11_listing_header (void)
+{
+  if (current_architecture & cpu6811)
+    return "M68HC11 GAS ";
+  else if (current_architecture & cpuxgate)
+    return "XGATE GAS ";
+  else if (current_architecture & cpu9s12x)
+    return "S12X GAS ";
+  else
+    return "M68HC12 GAS ";
+}
+
+void
+md_show_usage (FILE *stream)
+{
+  get_default_target ();
+  fprintf (stream, _("\
+Motorola 68HC11/68HC12/68HCS12 options:\n\
+  -m68hc11 | -m68hc12 |\n\
+  -m68hcs12 | -m9s12x |\n\
+  -mxgate specify the processor [default %s]\n\
+  -mshort                 use 16-bit int ABI (default)\n\
+  -mlong                  use 32-bit int ABI\n\
+  -mshort-double          use 32-bit double ABI\n\
+  -mlong-double           use 64-bit double ABI (default)\n\
+  --force-long-branches   always turn relative branches into absolute ones\n\
+  -S,--short-branches     do not turn relative branches into absolute ones\n\
+                          when the offset is out of range\n\
+  --strict-direct-mode    do not turn the direct mode into extended mode\n\
+                          when the instruction does not support direct mode\n\
+  --print-insn-syntax     print the syntax of instruction in case of error\n\
+  --print-opcodes         print the list of instructions with syntax\n\
+  --generate-example      generate an example of each instruction\n\
+                          (used for testing)\n"), default_cpu);
+
+}
+
+/* Try to identify the default target based on the BFD library.  */
+static void
+get_default_target (void)
+{
+  const bfd_target *target;
+  bfd abfd;
+
+  if (current_architecture != 0)
+    return;
+
+  default_cpu = "unknown";
+  target = bfd_find_target (0, &abfd);
+  if (target && target->name)
+    {
+      if (strcmp (target->name, "elf32-m68hc12") == 0)
+	{
+	  current_architecture = cpu6812;
+	  default_cpu = "m68hc12";
+	}
+      else if (strcmp (target->name, "elf32-m68hc11") == 0)
+	{
+	  current_architecture = cpu6811;
+	  default_cpu = "m68hc11";
+	}
+      else if (strcmp (target->name, "elf32-m9s12xg") == 0)
+	{
+	  current_architecture = cpuxgate;
+	  default_cpu = "mxgate";
+	}
+      else
+	{
+	  as_bad (_("Default target `%s' is not supported."), target->name);
+	}
+    }
+}
+
+void
+m68hc11_print_statistics (FILE *file)
+{
+  int i;
+  struct m68hc11_opcode_def *opc;
+
+  hash_print_statistics (file, "opcode table", m68hc11_hash);
+
+  opc = m68hc11_opcode_defs;
+  if (opc == 0 || m68hc11_nb_opcode_defs == 0)
+    return;
+
+  /* Dump the opcode statistics table.  */
+  fprintf (file, _("Name   # Modes  Min ops  Max ops  Modes mask  # Used\n"));
+  for (i = 0; i < m68hc11_nb_opcode_defs; i++, opc++)
+    {
+      fprintf (file, "%-7.7s  %5d  %7d  %7d  0x%08lx  %7d\n",
+	       opc->opcode->name,
+	       opc->nb_modes,
+	       opc->min_operands, opc->max_operands, opc->format, opc->used);
+    }
+}
+
+int
+md_parse_option (int c, char *arg)
+{
+  get_default_target ();
+  switch (c)
+    {
+      /* -S means keep external to 2 bit offset rather than 16 bit one.  */
+    case OPTION_SHORT_BRANCHES:
+    case 'S':
+      flag_fixed_branches = 1;
+      break;
+
+    case OPTION_FORCE_LONG_BRANCH:
+      flag_force_long_jumps = 1;
+      break;
+
+    case OPTION_PRINT_INSN_SYNTAX:
+      flag_print_insn_syntax = 1;
+      break;
+
+    case OPTION_PRINT_OPCODES:
+      flag_print_opcodes = 1;
+      break;
+
+    case OPTION_STRICT_DIRECT_MODE:
+      flag_strict_direct_addressing = 0;
+      break;
+
+    case OPTION_GENERATE_EXAMPLE:
+      flag_print_opcodes = 2;
+      break;
+
+    case OPTION_MSHORT:
+      elf_flags &= ~E_M68HC11_I32;
+      break;
+
+    case OPTION_MLONG:
+      elf_flags |= E_M68HC11_I32;
+      break;
+
+    case OPTION_MSHORT_DOUBLE:
+      elf_flags &= ~E_M68HC11_F64;
+      break;
+
+    case OPTION_MLONG_DOUBLE:
+      elf_flags |= E_M68HC11_F64;
+      break;
+
+    case 'm':
+      if (strcasecmp (arg, "68hc11") == 0) {
+	current_architecture = cpu6811;
+      } else if (strcasecmp (arg, "68hc12") == 0) {
+	current_architecture = cpu6812;
+     } else if (strcasecmp (arg, "68hcs12") == 0) {
+	current_architecture = cpu6812 | cpu6812s;
+     } else if (strcasecmp (arg, "m9s12x") == 0) {
+	current_architecture = cpu6812 | cpu6812s | cpu9s12x;
+     } else if (strcasecmp (arg, "xgate") == 0) {
+	current_architecture = cpuxgate;
+     } else {
+	as_bad (_("Option `%s' is not recognized."), arg);
+     }
+      break;
+
+    default:
+      return 0;
+    }
+
+  return 1;
+}
+
+symbolS *
+md_undefined_symbol (char *name ATTRIBUTE_UNUSED)
+{
+  return 0;
+}
+
+/* Equal to MAX_PRECISION in atof-ieee.c.  */
+#define MAX_LITTLENUMS 6
+
+/* Turn a string in input_line_pointer into a floating point constant
+   of type TYPE, and store the appropriate bytes in *LITP.  The number
+   of LITTLENUMS emitted is stored in *SIZEP.  An error message is
+   returned, or NULL on OK.  */
+char *
+md_atof (int type, char *litP, int *sizeP)
+{
+  int prec;
+  LITTLENUM_TYPE words[MAX_LITTLENUMS];
+  LITTLENUM_TYPE *wordP;
+  char *t;
+
+  switch (type)
+    {
+    case 'f':
+    case 'F':
+    case 's':
+    case 'S':
+      prec = 2;
+      break;
+
+    case 'd':
+    case 'D':
+    case 'r':
+    case 'R':
+      prec = 4;
+      break;
+
+    case 'x':
+    case 'X':
+      prec = 6;
+      break;
+
+    case 'p':
+    case 'P':
+      prec = 6;
+      break;
+
+    default:
+      *sizeP = 0;
+      return _("Bad call to MD_ATOF()");
+    }
+  t = atof_ieee (input_line_pointer, type, words);
+  if (t)
+    input_line_pointer = t;
+
+  *sizeP = prec * sizeof (LITTLENUM_TYPE);
+  for (wordP = words; prec--;)
+    {
+      md_number_to_chars (litP, (long) (*wordP++), sizeof (LITTLENUM_TYPE));
+      litP += sizeof (LITTLENUM_TYPE);
+    }
+  return 0;
+}
+
+valueT
+md_section_align (asection *seg, valueT addr)
+{
+  int align = bfd_get_section_alignment (stdoutput, seg);
+  return ((addr + (1 << align) - 1) & (-1 << align));
+}
+
+static int
+cmp_opcode (struct m68hc11_opcode *op1, struct m68hc11_opcode *op2)
+{
+  return strcmp (op1->name, op2->name);
+}
+
+#define IS_CALL_SYMBOL(MODE) \
+(((MODE) & (M6812_OP_PAGE|M6811_OP_IND16)) \
+  == ((M6812_OP_PAGE|M6811_OP_IND16)))
+
+/* Initialize the assembler.  Create the opcode hash table
+   (sorted on the names) with the M6811 opcode table
+   (from opcode library).  */
+void
+md_begin (void)
+{
+  char *prev_name = "";
+  struct m68hc11_opcode *opcodes;
+  struct m68hc11_opcode_def *opc = 0;
+  int i, j;
+
+  get_default_target ();
+
+  m68hc11_hash = hash_new ();
+
+  /* Get a writable copy of the opcode table and sort it on the names.  */
+  opcodes = (struct m68hc11_opcode *) xmalloc (m68hc11_num_opcodes *
+					       sizeof (struct
+						       m68hc11_opcode));
+  m68hc11_sorted_opcodes = opcodes;
+  num_opcodes = 0;
+  for (i = 0; i < m68hc11_num_opcodes; i++)
+    {
+      if (m68hc11_opcodes[i].arch & current_architecture)
+	{
+	  opcodes[num_opcodes] = m68hc11_opcodes[i];
+	  if (opcodes[num_opcodes].name[0] == 'b'
+	      && opcodes[num_opcodes].format & M6811_OP_JUMP_REL
+	      && !(opcodes[num_opcodes].format & M6811_OP_BITMASK))
+	    {
+	      num_opcodes++;
+	      opcodes[num_opcodes] = m68hc11_opcodes[i];
+	    }
+	  num_opcodes++;
+	  for (j = 0; alias_opcodes[j].name != 0; j++)
+	    if (strcmp (m68hc11_opcodes[i].name, alias_opcodes[j].name) == 0)
+	      {
+		opcodes[num_opcodes] = m68hc11_opcodes[i];
+		opcodes[num_opcodes].name = alias_opcodes[j].alias;
+		num_opcodes++;
+		break;
+	      }
+	}
+    }
+  qsort (opcodes, num_opcodes, sizeof (struct m68hc11_opcode),
+         (int (*) (const void*, const void*)) cmp_opcode);
+
+  opc = (struct m68hc11_opcode_def *)
+    xmalloc (num_opcodes * sizeof (struct m68hc11_opcode_def));
+  m68hc11_opcode_defs = opc--;
+
+  /* Insert unique names into hash table.  The M6811 instruction set
+     has several identical opcode names that have different opcodes based
+     on the operands.  This hash table then provides a quick index to
+     the first opcode with a particular name in the opcode table.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      int expect;
+
+      if (strcmp (prev_name, opcodes->name))
+	{
+	  prev_name = (char *) opcodes->name;
+
+	  opc++;
+	  opc->format = 0;
+	  opc->min_operands = 100;
+	  opc->max_operands = 0;
+	  opc->nb_modes = 0;
+	  opc->opcode = opcodes;
+	  opc->used = 0;
+	  hash_insert (m68hc11_hash, opcodes->name, opc);
+	}
+      opc->nb_modes++;
+      opc->format |= opcodes->format;
+
+      /* See how many operands this opcode needs.  */
+      expect = 0;
+      if (opcodes->arch == cpuxgate) {
+        if (opcodes->format & (M68XG_OP_IMM3 | M68XG_OP_R | M68XG_OP_REL9 | M68XG_OP_REL10 )) {
+	        expect = 1;
+        } else if (opcodes->format & (M68XG_OP_R_R | M68XG_OP_R_IMM4 | M68XG_OP_R_IMM8 | M68XG_OP_R_IMM8)) {
+	        expect = 2;
+        } else if (opcodes->format & (M68XG_OP_R_R_R | M68XG_OP_R_R_OFFS5 | M68XG_OP_RD_RB_RI | M68XG_OP_RD_RB_RIp | M68XG_OP_RD_RB_mRI)) {
+	        expect = 3;
+        }
+      } else {
+      if (opcodes->format & M6811_OP_MASK)
+	expect++;
+      if (opcodes->format & M6811_OP_BITMASK)
+	expect++;
+      if (opcodes->format & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+	expect++;
+      if (opcodes->format & (M6812_OP_IND16_P2 | M6812_OP_IDX_P2))
+	expect++;
+      /* Special case for call instruction.  */
+      if ((opcodes->format & M6812_OP_PAGE)
+          && !(opcodes->format & M6811_OP_IND16))
+        expect++;
+      }
+
+      if (expect < opc->min_operands)
+	opc->min_operands = expect;
+      if (IS_CALL_SYMBOL (opcodes->format))
+         expect++;
+      if (expect > opc->max_operands)
+	opc->max_operands = expect;
+    }
+  opc++;
+  m68hc11_nb_opcode_defs = opc - m68hc11_opcode_defs;
+
+  if (flag_print_opcodes)
+    {
+      print_opcode_list ();
+      exit (EXIT_SUCCESS);
+    }
+}
+
+void
+m68hc11_init_after_args (void)
+{
+}
+
+/* Builtin help.  */
+
+/* Return a string that represents the operand format for the instruction.
+   When example is true, this generates an example of operand.  This is used
+   to give an example and also to generate a test.  */
+static char *
+print_opcode_format (struct m68hc11_opcode *opcode, int example)
+{
+  static char buf[128];
+  int format = opcode->format;
+  char *p;
+
+  p = buf;
+  buf[0] = 0;
+
+  if (current_architecture == cpuxgate) {
+  if (format & M68XG_OP_IMM3) {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x007);
+      else
+	strcpy (p, _("imm3"));
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R) {
+      if (example)
+	sprintf (p, "R%d", rand () & 0x07);
+      else
+	strcpy (p, _("Rx"));
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_R) {
+      if (example)
+	sprintf (p, "R%d,R%d", rand () & 0x07, rand () & 0x07);
+      else
+	strcpy (p, _("Rx,Ry"));
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_IMM4) {
+      if (example)
+	sprintf (p, "R%d,#%d", rand () & 0x07, rand () & 0x0f);
+      else
+	strcpy (p, _("Rx, #imm4"));
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_R_R) {
+      if (example)
+	sprintf (p, "R%d,R%d,R%d", rand () & 0x07, rand () & 0x07, rand () & 0x07);
+      else
+	strcpy (p, "Rx,Ry,Rz");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_REL9) {
+      if (example)
+	sprintf (p, "%d", rand () & 0x1FF);
+      else
+	strcpy (p, "<rel9>");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_REL10) {
+      if (example)
+	sprintf (p, "%d", rand () & 0x3FF);
+      else
+	strcpy (p, "<rel10>");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_R_OFFS5) {
+      if (example)
+	sprintf (p, "R%d, (R%d, #0x%x)", rand () & 0x07, rand () & 0x07, rand () & 0x1f);
+      else
+	strcpy (p, _("Rx, (Ry,#offs5)"));
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_RD_RB_RI) {
+      if (example)
+	sprintf (p, "R%d, (R%d, R%d)", rand () & 0x07, rand () & 0x07, rand () & 0x07);
+      else
+	strcpy (p, "RD, (RB, RI)");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_RD_RB_RIp) {
+      if (example)
+	sprintf (p, "R%d, (R%d, R%d+)", rand () & 0x07, rand () & 0x07, rand () & 0x07);
+      else
+	strcpy (p, "RD, (RB, RI+)");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_RD_RB_mRI) {
+      if (example)
+	sprintf (p, "R%d, (R%d, -R%d)", rand () & 0x07, rand () & 0x07, rand () & 0x07);
+      else
+	strcpy (p, "RD, (RB, -RI)");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_IMM8) {
+      if (example)
+	sprintf (p, "R%d, #0x%x", rand () & 0x07, rand () & 0xff);
+      else
+	strcpy (p, "RD, #imm8");
+      p = &p[strlen (p)];
+  } else if (format & M68XG_OP_R_IMM16) {
+      if (example)
+	sprintf (p, "R%d, #0x%x", rand () & 0x07, rand () & 0xffff);
+      else
+	strcpy (p, "RD, #imm16");
+      p = &p[strlen (p)];
+  }
+
+ } else {
+
+  if (format & M6811_OP_IMM8)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<imm8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6811_OP_IMM16)
+    {
+      if (example)
+	sprintf (p, "#%d", rand () & 0x0FFFF);
+      else
+	strcpy (p, _("#<imm16>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6811_OP_IX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6811_OP_IY)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, _("<imm8>,X"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6812_OP_IDX)
+    {
+      if (example)
+	sprintf (p, "%d,X", rand () & 0x0FF);
+      else
+	strcpy (p, "n,r");
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6812_OP_PAGE)
+    {
+      if (example)
+	sprintf (p, ", %d", rand () & 0x0FF);
+      else
+	strcpy (p, ", <page>");
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6811_OP_DIRECT)
+    {
+      if (example)
+	sprintf (p, "*Z%d", rand () & 0x0FF);
+      else
+	strcpy (p, _("*<abs8>"));
+      p = &p[strlen (p)];
+    }
+
+  if (format & M6811_OP_BITMASK)
+    {
+      if (buf[0])
+	*p++ = ' ';
+
+      if (example)
+	sprintf (p, "#$%02x", rand () & 0x0FF);
+      else
+	strcpy (p, _("#<mask>"));
+
+      p = &p[strlen (p)];
+      if (format & M6811_OP_JUMP_REL)
+	*p++ = ' ';
+    }
+
+  if (format & M6811_OP_IND16)
+    {
+      if (example)
+	sprintf (p, _("symbol%d"), rand () & 0x0FF);
+      else
+	strcpy (p, _("<abs>"));
+
+      p = &p[strlen (p)];
+    }
+
+  if (format & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+    {
+      if (example)
+	{
+	  if (format & M6811_OP_BITMASK)
+	    {
+	      sprintf (p, ".+%d", rand () & 0x7F);
+	    }
+	  else
+	    {
+	      sprintf (p, "L%d", rand () & 0x0FF);
+	    }
+	}
+      else
+	strcpy (p, _("<label>"));
+    }
+  }
+  return buf;
+}
+
+/* Prints the list of instructions with the possible operands.  */
+static void
+print_opcode_list (void)
+{
+  int i;
+  char *prev_name = "";
+  struct m68hc11_opcode *opcodes;
+  int example = flag_print_opcodes == 2;
+
+  if (example)
+    printf (_("# Example of `%s' instructions\n\t.sect .text\n_start:\n"),
+	    default_cpu); /* reports incorrect name, need to use current_architecture instead */
+
+  opcodes = m68hc11_sorted_opcodes;
+
+  /* Walk the list sorted on names (by md_begin).  We only report
+     one instruction per line, and we collect the different operand
+     formats.  */
+  for (i = 0; i < num_opcodes; i++, opcodes++)
+    {
+      char *fmt = print_opcode_format (opcodes, example);
+
+      if (example)
+	{
+	  printf ("L%d:\t", i);
+	  printf ("%s %s\n", opcodes->name, fmt);
+	}
+      else
+	{
+	  if (strcmp (prev_name, opcodes->name))
+	    {
+	      if (i > 0)
+		printf ("\n");
+
+	      printf ("%-5.5s ", opcodes->name);
+	      prev_name = (char *) opcodes->name;
+	    }
+	  if (fmt[0])
+	    printf ("  [%s]", fmt);
+	}
+    }
+  printf ("\n");
+}
+
+/* Print the instruction format.  This operation is called when some
+   instruction is not correct.  Instruction format is printed as an
+   error message.  */
+static void
+print_insn_format (char *name)
+{
+  struct m68hc11_opcode_def *opc;
+  struct m68hc11_opcode *opcode;
+  char buf[128];
+
+  opc = (struct m68hc11_opcode_def *) hash_find (m68hc11_hash, name);
+  if (opc == NULL)
+    {
+      as_bad (_("Instruction `%s' is not recognized."), name);
+      return;
+    }
+  opcode = opc->opcode;
+
+  as_bad (_("Instruction formats for `%s':"), name);
+  do
+    {
+      char *fmt;
+
+      fmt = print_opcode_format (opcode, 0);
+      sprintf (buf, "\t%-5.5s %s", opcode->name, fmt);
+
+      as_bad ("%s", buf);
+      opcode++;
+    }
+  while (strcmp (opcode->name, name) == 0);
+}
+
+/* Analysis of 68HC11 and 68HC12 operands.  */
+
+/* reg_name_search() finds the register number given its name.
+   Returns the register number or REG_NONE on failure.  */
+static register_id
+reg_name_search (char *name)
+{
+  if (strcasecmp (name, "x") == 0 || strcasecmp (name, "ix") == 0)
+    return REG_X;
+  if (strcasecmp (name, "y") == 0 || strcasecmp (name, "iy") == 0)
+    return REG_Y;
+  if (strcasecmp (name, "a") == 0)
+    return REG_A;
+  if (strcasecmp (name, "b") == 0)
+    return REG_B;
+  if (strcasecmp (name, "d") == 0)
+    return REG_D;
+  if (strcasecmp (name, "sp") == 0)
+    return REG_SP;
+  if (strcasecmp (name, "pc") == 0)
+    return REG_PC;
+  if (strcasecmp (name, "ccr") == 0)
+    return REG_CCR;
+/* XGATE */
+  if (strcasecmp (name, "r0") == 0)
+    return REG_R0;
+  if (strcasecmp (name, "r1") == 0)
+    return REG_R1;
+  if (strcasecmp (name, "r2") == 0)
+    return REG_R2;
+  if (strcasecmp (name, "r3") == 0)
+    return REG_R3;
+  if (strcasecmp (name, "r4") == 0)
+    return REG_R4;
+  if (strcasecmp (name, "r5") == 0)
+    return REG_R5;
+  if (strcasecmp (name, "r6") == 0)
+    return REG_R6;
+  if (strcasecmp (name, "r7") == 0)
+    return REG_R7;
+  if (strcasecmp (name, "sp") == 0)
+    return REG_SP_XG;
+  if (strcasecmp (name, "pc") == 0)
+    return REG_PC_XG;
+  if (strcasecmp (name, "ccr") == 0)
+    return REG_CCR_XG;
+  return REG_NONE;
+}
+
+static char *
+skip_whites (char *p)
+{
+  while (*p == ' ' || *p == '\t')
+    p++;
+
+  return p;
+}
+
+/* Check the string at input_line_pointer
+   to see if it is a valid register name.  */
+static register_id
+register_name (void)
+{
+  register_id reg_number;
+  char c, *p = input_line_pointer;
+
+  if (!is_name_beginner (*p++))
+    return REG_NONE;
+
+  while (is_part_of_name (*p++))
+    continue;
+
+  c = *--p;
+  if (c)
+    *p++ = 0;
+
+  /* Look to see if it's in the register table.  */
+  reg_number = reg_name_search (input_line_pointer);
+  if (reg_number != REG_NONE)
+    {
+      if (c)
+	*--p = c;
+
+      input_line_pointer = p;
+      return reg_number;
+    }
+  if (c)
+    *--p = c;
+
+  return reg_number;
+}
+#define M6811_OP_CALL_ADDR    0x00800000
+#define M6811_OP_PAGE_ADDR    0x04000000
+
+/* Parse a string of operands and return an array of expressions.
+
+   Operand      mode[0]         mode[1]       exp[0]       exp[1]
+   #n           M6811_OP_IMM16  -             O_*
+   *<exp>       M6811_OP_DIRECT -             O_*
+   .{+-}<exp>   M6811_OP_JUMP_REL -           O_*
+   <exp>        M6811_OP_IND16  -             O_*
+   ,r N,r       M6812_OP_IDX    M6812_OP_REG  O_constant   O_register
+   n,-r         M6812_PRE_DEC   M6812_OP_REG  O_constant   O_register
+   n,+r         M6812_PRE_INC   " "
+   n,r-         M6812_POST_DEC  " "
+   n,r+         M6812_POST_INC  " "
+   A,r B,r D,r  M6811_OP_REG    M6812_OP_REG  O_register   O_register
+   [D,r]        M6811_OP_D_IDX  M6812_OP_REG  O_register   O_register
+   [n,r]        M6811_OP_D_IDX_2 M6812_OP_REG  O_constant   O_register  */
+static int
+get_operand (operand *oper, int which, long opmode)
+{
+  char *p = input_line_pointer;
+  int mode;
+  register_id reg;
+
+  oper->exp.X_op = O_absent;
+  oper->reg1 = REG_NONE;
+  oper->reg2 = REG_NONE;
+  mode = M6811_OP_NONE;
+
+  p = skip_whites (p);
+
+  if (*p == 0 || *p == '\n' || *p == '\r')
+    {
+      input_line_pointer = p;
+      return 0;
+    }
+
+  if (*p == '*' && (opmode & (M6811_OP_DIRECT | M6811_OP_IND16)))
+    {
+      mode = M6811_OP_DIRECT;
+      p++;
+    }
+  else if (*p == '#')
+    {
+      if (!(opmode & (M6811_OP_IMM8 | M6811_OP_IMM16 | M6811_OP_BITMASK)))
+	{
+	  as_bad (_("Immediate operand is not allowed for operand %d."),
+		  which);
+	  return -1;
+	}
+
+      mode = M6811_OP_IMM16;
+      p++;
+      if (strncmp (p, "%hi", 3) == 0)
+	{
+	  p += 3;
+	  mode |= M6811_OP_HIGH_ADDR;
+	}
+      else if (strncmp (p, "%lo", 3) == 0)
+	{
+	  p += 3;
+	  mode |= M6811_OP_LOW_ADDR;
+	}
+      /* %page modifier is used to obtain only the page number
+         of the address of a function.  */
+      else if (strncmp (p, "%page", 5) == 0)
+	{
+	  p += 5;
+	  mode |= M6811_OP_PAGE_ADDR;
+	}
+
+      /* %addr modifier is used to obtain the physical address part
+         of the function (16-bit).  For 68HC12 the function will be
+         mapped in the 16K window at 0x8000 and the value will be
+         within that window (although the function address may not fit
+         in 16-bit).  See bfd/elf32-m68hc12.c for the translation.  */
+      else if (strncmp (p, "%addr", 5) == 0)
+	{
+	  p += 5;
+	  mode |= M6811_OP_CALL_ADDR;
+	}
+    }
+  else if (*p == '.' && (p[1] == '+' || p[1] == '-'))
+    {
+      p++;
+      mode = M6811_OP_JUMP_REL;
+    }
+  else if (*p == '[')
+    {
+      if (current_architecture & cpu6811)
+	as_bad (_("Indirect indexed addressing is not valid for 68HC11."));
+
+      p++;
+      mode = M6812_OP_D_IDX;
+      p = skip_whites (p);
+    }
+  else if (*p == ',')		/* Special handling of ,x and ,y.  */
+    {
+      p++;
+      input_line_pointer = p;
+
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  oper->reg1 = reg;
+	  oper->exp.X_op = O_constant;
+	  oper->exp.X_add_number = 0;
+	  oper->mode = M6812_OP_IDX;
+	  return 1;
+	}
+      as_bad (_("Spurious `,' or bad indirect register addressing mode."));
+      return -1;
+    }
+  /* Handle 68HC12 page specification in 'call foo,%page(bar)'.  */
+  else if ((opmode & M6812_OP_PAGE) && strncmp (p, "%page", 5) == 0)
+    {
+      p += 5;
+      mode = M6811_OP_PAGE_ADDR | M6812_OP_PAGE | M6811_OP_IND16;
+    }
+  input_line_pointer = p;
+
+  if (mode == M6811_OP_NONE || mode == M6812_OP_D_IDX)
+    reg = register_name ();
+  else
+    reg = REG_NONE;
+
+  if (reg != REG_NONE)
+    {
+      p = skip_whites (input_line_pointer);
+      if (*p == ']' && mode == M6812_OP_D_IDX)
+	{
+	  as_bad
+	    (_("Missing second register or offset for indexed-indirect mode."));
+	  return -1;
+	}
+
+      oper->reg1 = reg;
+      oper->mode = mode | M6812_OP_REG;
+      if (*p != ',')
+	{
+	  if (mode == M6812_OP_D_IDX)
+	    {
+	      as_bad (_("Missing second register for indexed-indirect mode."));
+	      return -1;
+	    }
+	  return 1;
+	}
+
+      p++;
+      input_line_pointer = p;
+      reg = register_name ();
+      if (reg != REG_NONE)
+	{
+	  p = skip_whites (input_line_pointer);
+	  if (mode == M6812_OP_D_IDX)
+	    {
+	      if (*p != ']')
+		{
+		  as_bad (_("Missing `]' to close indexed-indirect mode."));
+		  return -1;
+		}
+	      p++;
+              oper->mode = M6812_OP_D_IDX;
+	    }
+	  input_line_pointer = p;
+
+	  oper->reg2 = reg;
+	  return 1;
+	}
+      return 1;
+    }
+
+  /* In MRI mode, isolate the operand because we can't distinguish
+     operands from comments.  */
+  if (flag_mri)
+    {
+      char c = 0;
+
+      p = skip_whites (p);
+      while (*p && *p != ' ' && *p != '\t')
+	p++;
+
+      if (*p)
+	{
+	  c = *p;
+	  *p = 0;
+	}
+
+      /* Parse as an expression.  */
+      expression (&oper->exp);
+
+      if (c)
+	{
+	  *p = c;
+	}
+    }
+  else
+    {
+      expression (&oper->exp);
+    }
+
+  if (oper->exp.X_op == O_illegal)
+    {
+      as_bad (_("Illegal operand."));
+      return -1;
+    }
+  else if (oper->exp.X_op == O_absent)
+    {
+      as_bad (_("Missing operand."));
+      return -1;
+    }
+
+  p = input_line_pointer;
+
+  if (mode == M6811_OP_NONE || mode == M6811_OP_DIRECT
+      || mode == M6812_OP_D_IDX)
+    {
+      p = skip_whites (input_line_pointer);
+
+      if (*p == ',')
+	{
+	  int possible_mode = M6811_OP_NONE;
+	  char *old_input_line;
+
+	  old_input_line = p;
+	  p++;
+
+	  /* 68HC12 pre increment or decrement.  */
+	  if (mode == M6811_OP_NONE)
+	    {
+	      if (*p == '-')
+		{
+		  possible_mode = M6812_PRE_DEC;
+		  p++;
+		}
+	      else if (*p == '+')
+		{
+		  possible_mode = M6812_PRE_INC;
+		  p++;
+		}
+	      p = skip_whites (p);
+	    }
+	  input_line_pointer = p;
+	  reg = register_name ();
+
+	  /* Backtrack if we have a valid constant expression and
+	     it does not correspond to the offset of the 68HC12 indexed
+	     addressing mode (as in N,x).  */
+	  if (reg == REG_NONE && mode == M6811_OP_NONE
+	      && possible_mode != M6811_OP_NONE)
+	    {
+	      oper->mode = M6811_OP_IND16 | M6811_OP_JUMP_REL;
+	      input_line_pointer = skip_whites (old_input_line);
+	      return 1;
+	    }
+
+	  if (possible_mode != M6811_OP_NONE)
+	    mode = possible_mode;
+
+	  if ((current_architecture & cpu6811)
+	      && possible_mode != M6811_OP_NONE)
+	    as_bad (_("Pre-increment mode is not valid for 68HC11"));
+	  /* Backtrack.  */
+	  if (which == 0 && opmode & M6812_OP_IDX_P2
+	      && reg != REG_X && reg != REG_Y
+	      && reg != REG_PC && reg != REG_SP)
+	    {
+	      reg = REG_NONE;
+	      input_line_pointer = p;
+	    }
+
+	  if (reg == REG_NONE && mode != M6811_OP_DIRECT
+	      && !(mode == M6811_OP_NONE && opmode & M6811_OP_IND16))
+	    {
+	      as_bad (_("Wrong register in register indirect mode."));
+	      return -1;
+	    }
+	  if (mode == M6812_OP_D_IDX)
+	    {
+	      p = skip_whites (input_line_pointer);
+	      if (*p++ != ']')
+		{
+		  as_bad (_("Missing `]' to close register indirect operand."));
+		  return -1;
+		}
+	      input_line_pointer = p;
+              oper->reg1 = reg;
+              oper->mode = M6812_OP_D_IDX_2;
+              return 1;
+	    }
+	  if (reg != REG_NONE)
+	    {
+	      oper->reg1 = reg;
+	      if (mode == M6811_OP_NONE)
+		{
+		  p = input_line_pointer;
+		  if (*p == '-')
+		    {
+		      mode = M6812_POST_DEC;
+		      p++;
+		      if (current_architecture & cpu6811)
+			as_bad
+			  (_("Post-decrement mode is not valid for 68HC11."));
+		    }
+		  else if (*p == '+')
+		    {
+		      mode = M6812_POST_INC;
+		      p++;
+		      if (current_architecture & cpu6811)
+			as_bad
+			  (_("Post-increment mode is not valid for 68HC11."));
+		    }
+		  else
+		    mode = M6812_OP_IDX;
+
+		  input_line_pointer = p;
+		}
+	      else
+		mode |= M6812_OP_IDX;
+
+	      oper->mode = mode;
+	      return 1;
+	    }
+          input_line_pointer = old_input_line;
+	}
+
+      if (mode == M6812_OP_D_IDX_2)
+	{
+	  as_bad (_("Invalid indexed indirect mode."));
+	  return -1;
+	}
+    }
+
+  /* If the mode is not known until now, this is either a label
+     or an indirect address.  */
+  if (mode == M6811_OP_NONE)
+    mode = M6811_OP_IND16 | M6811_OP_JUMP_REL;
+
+  p = input_line_pointer;
+  while (*p == ' ' || *p == '\t')
+    p++;
+  input_line_pointer = p;
+  oper->mode = mode;
+
+  return 1;
+}
+
+#define M6812_AUTO_INC_DEC (M6812_PRE_INC | M6812_PRE_DEC \
+                            | M6812_POST_INC | M6812_POST_DEC)
+
+/* Checks that the number 'num' fits for a given mode.  */
+static int
+check_range (long num, int mode)
+{
+  if (current_architecture == cpuxgate) {
+
+  switch (mode)
+    {
+    case M68XG_OP_IMM3:
+      return (num >= 0 && num <= 7) ? 1 : 0;
+
+    case M68XG_OP_R_IMM4:
+      return (num >= 0 && num <= 31) ? 1 : 0;
+
+    case M68XG_OP_R_R_OFFS5:
+      return (num >= 0 && num <= 63) ? 1 : 0;
+
+    case M68XG_OP_R_IMM8:
+      return (num >= 0 && num <= 255) ? 1 : 0;
+
+    case M68XG_OP_R_IMM16:
+      return (num >= 0 && num <= 65535) ? 1 : 0;
+
+    case M68XG_OP_B_MARKER:
+      return (num >= -512 && num <= 511) ? 1 : 0;
+
+    case M68XG_OP_BRA_MARKER:
+      return (num >= -1024 && num <= 1023) ? 1 : 0;
+
+    default:
+      return 0;
+    }
+  } else {
+  /* Auto increment and decrement are ok for [-8..8] without 0.  */
+  if (mode & M6812_AUTO_INC_DEC)
+    return (num != 0 && num <= 8 && num >= -8);
+
+  /* The 68HC12 supports 5, 9 and 16-bit offsets.  */
+  if (mode & (M6812_INDEXED_IND | M6812_INDEXED | M6812_OP_IDX))
+    mode = M6811_OP_IND16;
+
+  if (mode & M6812_OP_JUMP_REL16)
+    mode = M6811_OP_IND16;
+
+  mode &= ~M6811_OP_BRANCH;
+  switch (mode)
+    {
+    case M6811_OP_IX:
+    case M6811_OP_IY:
+    case M6811_OP_DIRECT:
+      return (num >= 0 && num <= 255) ? 1 : 0;
+
+    case M6811_OP_BITMASK:
+    case M6811_OP_IMM8:
+    case M6812_OP_PAGE:
+      return (((num & 0xFFFFFF00) == 0) || ((num & 0xFFFFFF00) == 0xFFFFFF00))
+	? 1 : 0;
+
+    case M6811_OP_JUMP_REL:
+      return (num >= -128 && num <= 127) ? 1 : 0;
+
+    case M6811_OP_IND16:
+    case M6811_OP_IND16 | M6812_OP_PAGE:
+    case M6811_OP_IMM16:
+      return (((num & 0xFFFF0000) == 0) || ((num & 0xFFFF0000) == 0xFFFF0000))
+	? 1 : 0;
+
+    case M6812_OP_IBCC_MARKER:
+    case M6812_OP_TBCC_MARKER:
+    case M6812_OP_DBCC_MARKER:
+      return (num >= -256 && num <= 255) ? 1 : 0;
+
+    case M6812_OP_TRAP_ID:
+      return ((num >= 0x30 && num <= 0x39)
+	      || (num >= 0x40 && num <= 0x0ff)) ? 1 : 0;
+
+    default:
+      return 0;
+    }
+    }
+}
+
+/* Gas fixup generation.  */
+
+/* Put a 1 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate an 8-bit fixup.  */
+static void
+fixup8 (expressionS *oper, int mode, int opmode)
+{
+  char *f;
+
+  f = frag_more (1);
+
+  if (oper->X_op == O_constant)
+    {
+      if (mode & M6812_OP_TRAP_ID
+	  && !check_range (oper->X_add_number, M6812_OP_TRAP_ID))
+	{
+	  static char trap_id_warn_once = 0;
+
+	  as_bad (_("Trap id `%ld' is out of range."), oper->X_add_number);
+	  if (trap_id_warn_once == 0)
+	    {
+	      trap_id_warn_once = 1;
+	      as_bad (_("Trap id must be within [0x30..0x39] or [0x40..0xff]."));
+	    }
+	}
+
+      if (!(mode & M6812_OP_TRAP_ID)
+	  && !check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 8-bit range: `%ld'."), oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FF, 1);
+    }
+  else if (oper->X_op != O_register)
+    {
+      if (mode & M6812_OP_TRAP_ID)
+	as_bad (_("The trap id must be a constant."));
+
+      if (mode == M6811_OP_JUMP_REL)
+	{
+	  fixS *fixp;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+			      oper, TRUE, BFD_RELOC_8_PCREL);
+	  fixp->fx_pcrel_adjust = 1;
+	}
+      else
+	{
+	  fixS *fixp;
+          int reloc;
+
+	  /* Now create an 8-bit fixup.  If there was some %hi, %lo
+	     or %page modifier, generate the reloc accordingly.  */
+          if (opmode & M6811_OP_HIGH_ADDR)
+            reloc = BFD_RELOC_M68HC11_HI8;
+          else if (opmode & M6811_OP_LOW_ADDR)
+            reloc = BFD_RELOC_M68HC11_LO8;
+          else if (opmode & M6811_OP_PAGE_ADDR)
+            reloc = BFD_RELOC_M68HC11_PAGE;
+          else
+            reloc = BFD_RELOC_8;
+
+	  fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+                              oper, FALSE, reloc);
+          if (reloc != BFD_RELOC_8)
+            fixp->fx_no_overflow = 1;
+	}
+      number_to_chars_bigendian (f, 0, 1);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup8."), oper->X_op);
+    }
+}
+
+/* Put a 2 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 16-bit fixup.  */
+static void
+fixup16 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (2);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFF, 2);
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+      int reloc;
+
+      if ((opmode & M6811_OP_CALL_ADDR) && (mode & M6811_OP_IMM16))
+        reloc = BFD_RELOC_M68HC11_LO16;
+      else if (mode & M6812_OP_JUMP_REL16)
+        reloc = BFD_RELOC_16_PCREL;
+      else if (mode & M6812_OP_PAGE)
+        reloc = BFD_RELOC_M68HC11_LO16;
+      else
+        reloc = BFD_RELOC_16;
+
+      /* Now create a 16-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+			  oper,
+			  reloc == BFD_RELOC_16_PCREL,
+                          reloc);
+      number_to_chars_bigendian (f, 0, 2);
+      if (reloc == BFD_RELOC_16_PCREL)
+	fixp->fx_pcrel_adjust = 2;
+      if (reloc == BFD_RELOC_M68HC11_LO16)
+        fixp->fx_no_overflow = 1;
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* Put a 3 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate a 24-bit fixup.  */
+static void
+fixup24 (expressionS *oper, int mode, int opmode ATTRIBUTE_UNUSED)
+{
+  char *f;
+
+  f = frag_more (3);
+
+  if (oper->X_op == O_constant)
+    {
+      if (!check_range (oper->X_add_number, mode))
+	{
+	  as_bad (_("Operand out of 16-bit range: `%ld'."),
+		  oper->X_add_number);
+	}
+      number_to_chars_bigendian (f, oper->X_add_number & 0x0FFFFFF, 3);
+    }
+  else if (oper->X_op != O_register)
+    {
+      fixS *fixp;
+
+      /* Now create a 24-bit fixup.  */
+      fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 3,
+			  oper, FALSE, BFD_RELOC_M68HC11_24);
+      number_to_chars_bigendian (f, 0, 3);
+    }
+  else
+    {
+      as_fatal (_("Operand `%x' not recognized in fixup16."), oper->X_op);
+    }
+}
+
+/* XGATE Put a 1 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate an 8-bit fixup.  */
+static void
+fixup8_xg (expressionS *oper, int mode, int opmode)
+{
+  char *f;
+
+  f = frag_more (1);
+
+        if (oper->X_op == O_constant) {
+            fixS *fixp;
+            int reloc;
+            if ((opmode & M6811_OP_HIGH_ADDR) || (opmode & M6811_OP_LOW_ADDR)) {
+                if (opmode & M6811_OP_HIGH_ADDR) {
+                    reloc = BFD_RELOC_M68HC11_HI8;
+                } else {
+                    reloc = BFD_RELOC_M68HC11_LO8;
+                }
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+                              oper, FALSE, reloc);
+                fixp->fx_no_overflow = 1;
+                number_to_chars_bigendian (f, 0, 1);
+            } else {
+    	        if (!(check_range (oper->X_add_number, mode))) {
+    	            as_bad (_("Operand out of 8-bit range: `%ld'."), oper->X_add_number);
+    	        }
+                number_to_chars_bigendian (f, oper->X_add_number & 0x0FF, 1);
+            }
+
+        } else if (oper->X_op != O_register) {
+            if (mode == M68XG_OP_REL9) {
+	            fixS *fixp;
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal -1, 2,
+			      oper, TRUE, BFD_RELOC_9_PCREL);
+	            fixp->fx_pcrel_adjust = 1;
+            } else if (mode == M68XG_OP_REL10) {
+	            fixS *fixp;
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal -1, 2,
+			      oper, TRUE, BFD_RELOC_10_PCREL);
+	            fixp->fx_pcrel_adjust = 1;
+	        } else {
+	            fixS *fixp;
+                int reloc;
+	            /* Now create an 8-bit fixup.  If there was some %hi, %lo
+	               or %page modifier, generate the reloc accordingly.  */
+                if (opmode & M6811_OP_HIGH_ADDR) {
+                    reloc = BFD_RELOC_M68HC11_HI8;
+                } else if (opmode & M6811_OP_LOW_ADDR) {
+                    reloc = BFD_RELOC_M68HC11_LO8;
+                } else if (opmode & M6811_OP_PAGE_ADDR) {
+                    reloc = BFD_RELOC_M68HC11_PAGE;
+                } else {
+                    reloc = BFD_RELOC_8;
+                }
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 1,
+                              oper, FALSE, reloc);
+                if (reloc != BFD_RELOC_8) {
+                    fixp->fx_no_overflow = 1;
+                }
+	        }
+            number_to_chars_bigendian (f, 0, 1);
+        } else {
+            as_fatal (_("Operand `%x' not recognized in fixup8."), oper->X_op);
+        }
+}
+
+/* XGATE Put a 2 byte expression described by 'oper'.  If this expression contains
+   unresolved symbols, generate an 16-bit fixup.  */
+static void
+fixup16_xg (expressionS *oper, int mode, int opmode)
+{
+  char *f;
+
+  f = frag_more (3); // preserve alignment
+
+        if (oper->X_op == O_constant) {
+            fixS *fixp;
+            int reloc;
+            if (opmode & M6811_OP_HIGH_ADDR) {
+                reloc = BFD_RELOC_M68HC11_HI8;
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+                              oper, FALSE, reloc);
+                fixp->fx_no_overflow = 1;
+                number_to_chars_bigendian (f, 0, 2);
+            } else {
+    	        if (!(check_range (oper->X_add_number, mode))) {
+    	            as_bad (_("Operand out of 16-bit range: `%ld'."), oper->X_add_number);
+    	        }
+                number_to_chars_bigendian (f, oper->X_add_number, 2);
+            }
+
+        } else if (oper->X_op != O_register) {
+            if (mode == M68XG_OP_REL9) {
+	            fixS *fixp;
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+			      oper, TRUE, BFD_RELOC_9_PCREL);
+	            fixp->fx_pcrel_adjust = 1;
+            } else if (mode == M68XG_OP_REL10) {
+	            fixS *fixp;
+
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+			      oper, TRUE, BFD_RELOC_10_PCREL);
+	            fixp->fx_pcrel_adjust = 1;
+	        } else {
+	            fixS *fixp;
+                int reloc;
+	            /* Now create an 16-bit fixup.  If there was some %hi, %lo
+	               or %page modifier, generate the reloc accordingly.  */
+                if (opmode & M6811_OP_HIGH_ADDR) {
+                    reloc = BFD_RELOC_M68HC11_HI8_16;
+                } else {
+                    reloc = BFD_RELOC_16;
+                }
+	            fixp = fix_new_exp (frag_now, f - frag_now->fr_literal, 2,
+                              oper, FALSE, reloc);
+                if (reloc != BFD_RELOC_16) {
+                    fixp->fx_no_overflow = 1; // not sure what this is doing
+                }
+	        }
+            number_to_chars_bigendian (f, 0, 3);
+        } else {
+            as_fatal (_("Operand `%x' not recognized in fixup8."), oper->X_op);
+        }
+}
+
+/* 68HC11 and 68HC12 code generation.  */
+
+/* Translate the short branch/bsr instruction into a long branch.  */
+static unsigned char
+convert_branch (unsigned char code)
+{
+  if (IS_OPCODE (code, M6812_BSR))
+    return M6812_JSR;
+  else if (IS_OPCODE (code, M6811_BSR))
+    return M6811_JSR;
+  else if (IS_OPCODE (code, M6811_BRA))
+    return (current_architecture & cpu6812) ? M6812_JMP : M6811_JMP;
+  else
+    as_fatal (_("Unexpected branch conversion with `%x'"), code);
+
+  /* Keep gcc happy.  */
+  return M6811_JSR;
+}
+
+/* Start a new insn that contains at least 'size' bytes.  Record the
+   line information of that insn in the dwarf2 debug sections.  */
+static char *
+m68hc11_new_insn (int size)
+{
+  char *f;
+
+  f = frag_more (size);
+
+  dwarf2_emit_insn (size);
+
+  return f;
+}
+
+/* Builds a jump instruction (bra, bcc, bsr).  */
+static void
+build_jump_insn (struct m68hc11_opcode *opcode, operand operands[],
+                 int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+  fragS *frag;
+  int where;
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  assert ((opcode->format & M6811_OP_BITMASK) == 0);
+  assert (nb_operands == 1);
+  assert (operands[0].reg1 == REG_NONE && operands[0].reg2 == REG_NONE);
+
+  code = opcode->opcode;
+
+  n = operands[0].exp.X_add_number;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jbcc and the constant is out of -128..127 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[0].exp.X_op == O_constant
+	  && (!check_range (n, opcode->format) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_M68HC11_RL_JUMP);
+
+      if (code == M6811_BSR || code == M6811_BRA || code == M6812_BSR)
+	{
+	  code = convert_branch (code);
+
+	  f = m68hc11_new_insn (1);
+	  number_to_chars_bigendian (f, code, 1);
+	}
+      else if (current_architecture & cpu6812)
+	{
+	  /* 68HC12: translate the bcc into a lbcc.  */
+	  f = m68hc11_new_insn (2);
+	  number_to_chars_bigendian (f, M6811_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  fixup16 (&operands[0].exp, M6812_OP_JUMP_REL16,
+		   M6812_OP_JUMP_REL16);
+	  return;
+	}
+      else
+	{
+	  /* 68HC11: translate the bcc into b!cc +3; jmp <L>.  */
+	  f = m68hc11_new_insn (3);
+	  code ^= 1;
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 3, 1);
+	  number_to_chars_bigendian (f + 2, M6811_JMP, 1);
+	}
+      fixup16 (&operands[0].exp, M6811_OP_IND16, M6811_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 8-bits.  */
+  if (operands[0].exp.X_op == O_constant)
+    {
+      if (!check_range (n, opcode->format))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else if (opcode->format & M6812_OP_JUMP_REL16)
+	{
+	  f = m68hc11_new_insn (4);
+	  number_to_chars_bigendian (f, M6811_OPCODE_PAGE2, 1);
+	  number_to_chars_bigendian (f + 1, code, 1);
+	  number_to_chars_bigendian (f + 2, n & 0x0ffff, 2);
+	}
+      else
+	{
+	  f = m68hc11_new_insn (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else if (opcode->format & M6812_OP_JUMP_REL16)
+    {
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_M68HC11_RL_JUMP);
+
+      f = m68hc11_new_insn (2);
+      number_to_chars_bigendian (f, M6811_OPCODE_PAGE2, 1);
+      number_to_chars_bigendian (f + 1, code, 1);
+      fixup16 (&operands[0].exp, M6812_OP_JUMP_REL16, M6812_OP_JUMP_REL16);
+    }
+  else
+    {
+      char *opcode;
+
+      frag = frag_now;
+      where = frag_now_fix ();
+
+      fix_new (frag_now, frag_now_fix (), 0,
+               &abs_symbol, 0, 1, BFD_RELOC_M68HC11_RL_JUMP);
+
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  opcode = m68hc11_new_insn (1);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  fixup8 (&operands[0].exp, M6811_OP_JUMP_REL, M6811_OP_JUMP_REL);
+	}
+
+      /* bra/bsr made be changed into jmp/jsr.  */
+      else if (code == M6811_BSR || code == M6811_BRA || code == M6812_BSR)
+	{
+          /* Allocate worst case storage.  */
+	  opcode = m68hc11_new_insn (3);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_variant (rs_machine_dependent, 1, 1,
+                        ENCODE_RELAX (STATE_PC_RELATIVE, STATE_UNDF),
+                        operands[0].exp.X_add_symbol, (offsetT) n,
+                        opcode);
+	}
+      else if (current_architecture & cpu6812)
+	{
+	  opcode = m68hc11_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 2, 2,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+      else
+	{
+	  opcode = m68hc11_new_insn (2);
+	  number_to_chars_bigendian (opcode, code, 1);
+	  number_to_chars_bigendian (opcode + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_UNDF),
+		    operands[0].exp.X_add_symbol, (offsetT) n, opcode);
+	}
+    }
+}
+
+/* Builds a dbne/dbeq/tbne/tbeq instruction.  */
+static void
+build_dbranch_insn (struct m68hc11_opcode *opcode, operand operands[],
+                    int nb_operands, int jmp_mode)
+{
+  unsigned char code;
+  char *f;
+  unsigned long n;
+
+  /* The relative branch conversion is not supported for
+     brclr and brset.  */
+  assert ((opcode->format & M6811_OP_BITMASK) == 0);
+  assert (nb_operands == 2);
+  assert (operands[0].reg1 != REG_NONE);
+
+  code = opcode->opcode & 0x0FF;
+
+  f = m68hc11_new_insn (1);
+  number_to_chars_bigendian (f, code, 1);
+
+  n = operands[1].exp.X_add_number;
+  code = operands[0].reg1;
+
+  if (operands[0].reg1 == REG_NONE || operands[0].reg1 == REG_CCR
+      || operands[0].reg1 == REG_PC)
+    as_bad (_("Invalid register for dbcc/tbcc instruction."));
+
+  if (opcode->format & M6812_OP_IBCC_MARKER)
+    code |= 0x80;
+  else if (opcode->format & M6812_OP_TBCC_MARKER)
+    code |= 0x40;
+
+  if (!(opcode->format & M6812_OP_EQ_MARKER))
+    code |= 0x20;
+
+  /* Turn into a long branch:
+     - when force long branch option (and not for jbcc pseudos),
+     - when jdbcc and the constant is out of -256..255 range,
+     - when branch optimization is allowed and branch out of range.  */
+  if ((jmp_mode == 0 && flag_force_long_jumps)
+      || (operands[1].exp.X_op == O_constant
+	  && (!check_range (n, M6812_OP_IBCC_MARKER) &&
+	      (jmp_mode == 1 || flag_fixed_branches == 0))))
+    {
+      f = frag_more (2);
+      code ^= 0x20;
+      number_to_chars_bigendian (f, code, 1);
+      number_to_chars_bigendian (f + 1, M6812_JMP, 1);
+      fixup16 (&operands[0].exp, M6811_OP_IND16, M6811_OP_IND16);
+      return;
+    }
+
+  /* Branch with a constant that must fit in 9-bits.  */
+  if (operands[1].exp.X_op == O_constant)
+    {
+      if (!check_range (n, M6812_OP_IBCC_MARKER))
+	{
+	  as_bad (_("Operand out of range for a relative branch: `%ld'"),
+                  n);
+	}
+      else
+	{
+	  if ((long) n < 0)
+	    code |= 0x10;
+
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, n & 0x0FF, 1);
+	}
+    }
+  else
+    {
+      /* Branch offset must fit in 8-bits, don't do some relax.  */
+      if (jmp_mode == 0 && flag_fixed_branches)
+	{
+	  fixup8 (&operands[0].exp, M6811_OP_JUMP_REL, M6811_OP_JUMP_REL);
+	}
+
+      else
+	{
+	  f = frag_more (2);
+	  number_to_chars_bigendian (f, code, 1);
+	  number_to_chars_bigendian (f + 1, 0, 1);
+	  frag_var (rs_machine_dependent, 3, 3,
+		    ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_UNDF),
+		    operands[1].exp.X_add_symbol, (offsetT) n, f);
+	}
+    }
+}
+
+#define OP_EXTENDED (M6811_OP_PAGE2 | M6811_OP_PAGE3 | M6811_OP_PAGE4)
+
+/* Assemble the post index byte for 68HC12 extended addressing modes.  */
+static int
+build_indexed_byte (operand *op, int format ATTRIBUTE_UNUSED, int move_insn)
+{
+  unsigned char byte = 0;
+  char *f;
+  int mode;
+  long val;
+
+  val = op->exp.X_add_number;
+  mode = op->mode;
+  if (mode & M6812_AUTO_INC_DEC)
+    {
+      byte = 0x20;
+      if (mode & (M6812_POST_INC | M6812_POST_DEC))
+	byte |= 0x10;
+
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, mode))
+	    {
+	      as_bad (_("Increment/decrement value is out of range: `%ld'."),
+		      val);
+	    }
+	  if (mode & (M6812_POST_INC | M6812_PRE_INC))
+	    byte |= (val - 1) & 0x07;
+	  else
+	    byte |= (8 - ((val) & 7)) | 0x8;
+	}
+      switch (op->reg1)
+	{
+	case REG_NONE:
+	  as_fatal (_("Expecting a register."));
+
+	case REG_X:
+	  byte |= 0;
+	  break;
+
+	case REG_Y:
+	  byte |= 0x40;
+	  break;
+
+	case REG_SP:
+	  byte |= 0x80;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register for post/pre increment."));
+	  break;
+	}
+
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+  if (mode & (M6812_OP_IDX | M6812_OP_D_IDX_2))
+    {
+      switch (op->reg1)
+	{
+	case REG_X:
+	  byte = 0;
+	  break;
+
+	case REG_Y:
+	  byte = 1;
+	  break;
+
+	case REG_SP:
+	  byte = 2;
+	  break;
+
+	case REG_PC:
+	  byte = 3;
+	  break;
+
+	default:
+	  as_bad (_("Invalid register."));
+	  break;
+	}
+      if (op->exp.X_op == O_constant)
+	{
+	  if (!check_range (val, M6812_OP_IDX))
+	    {
+	      as_bad (_("Offset out of 16-bit range: %ld."), val);
+	    }
+
+	  if (move_insn && !(val >= -16 && val <= 15))
+	    {
+	      as_bad (_("Offset out of 5-bit range for movw/movb insn: %ld."),
+		      val);
+	      return -1;
+	    }
+
+	  if (val >= -16 && val <= 15 && !(mode & M6812_OP_D_IDX_2))
+	    {
+	      byte = byte << 6;
+	      byte |= val & 0x1f;
+	      f = frag_more (1);
+	      number_to_chars_bigendian (f, byte, 1);
+	      return 1;
+	    }
+	  else if (val >= -256 && val <= 255 && !(mode & M6812_OP_D_IDX_2))
+	    {
+	      byte = byte << 3;
+	      byte |= 0xe0;
+	      if (val < 0)
+		byte |= 0x1;
+	      f = frag_more (2);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FF, 1);
+	      return 2;
+	    }
+	  else
+	    {
+	      byte = byte << 3;
+	      if (mode & M6812_OP_D_IDX_2)
+		byte |= 0xe3;
+	      else
+		byte |= 0xe2;
+
+	      f = frag_more (3);
+	      number_to_chars_bigendian (f, byte, 1);
+	      number_to_chars_bigendian (f + 1, val & 0x0FFFF, 2);
+	      return 3;
+	    }
+	}
+      if (mode & M6812_OP_D_IDX_2)
+        {
+          byte = (byte << 3) | 0xe3;
+          f = frag_more (1);
+          number_to_chars_bigendian (f, byte, 1);
+
+          fixup16 (&op->exp, 0, 0);
+        }
+      else if (op->reg1 != REG_PC)
+	{
+          symbolS *sym;
+          offsetT off;
+
+	  f = frag_more (1);
+	  number_to_chars_bigendian (f, byte, 1);
+          sym = op->exp.X_add_symbol;
+          off = op->exp.X_add_number;
+          if (op->exp.X_op != O_symbol)
+            {
+              sym = make_expr_symbol (&op->exp);
+              off = 0;
+            }
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       sym, off, 0, BFD_RELOC_M68HC12_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_UNDF),
+			sym, off, f);
+	    }
+	}
+      else
+	{
+	  f = frag_more (1);
+	  /* movb/movw cannot be relaxed.  */
+	  if (move_insn)
+	    {
+	      byte <<= 6;
+	      number_to_chars_bigendian (f, byte, 1);
+	      fix_new (frag_now, f - frag_now->fr_literal, 1,
+		       op->exp.X_add_symbol, op->exp.X_add_number, 0, BFD_RELOC_M68HC12_5B);
+	      return 1;
+	    }
+	  else
+	    {
+	      number_to_chars_bigendian (f, byte, 1);
+	      frag_var (rs_machine_dependent, 2, 2,
+			ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_UNDF),
+			op->exp.X_add_symbol,
+			op->exp.X_add_number, f);
+	    }
+	}
+      return 3;
+    }
+
+  if (mode & (M6812_OP_REG | M6812_OP_D_IDX))
+    {
+      if (mode & M6812_OP_D_IDX)
+	{
+	  if (op->reg1 != REG_D)
+	    as_bad (_("Expecting register D for indexed indirect mode."));
+	  if (move_insn)
+	    as_bad (_("Indexed indirect mode is not allowed for movb/movw."));
+
+	  byte = 0xE7;
+	}
+      else
+	{
+	  switch (op->reg1)
+	    {
+	    case REG_A:
+	      byte = 0xE4;
+	      break;
+
+	    case REG_B:
+	      byte = 0xE5;
+	      break;
+
+	    default:
+	      as_bad (_("Invalid accumulator register."));
+
+	    case REG_D:
+	      byte = 0xE6;
+	      break;
+	    }
+	}
+      switch (op->reg2)
+	{
+	case REG_X:
+	  break;
+
+	case REG_Y:
+	  byte |= (1 << 3);
+	  break;
+
+	case REG_SP:
+	  byte |= (2 << 3);
+	  break;
+
+	case REG_PC:
+	  byte |= (3 << 3);
+	  break;
+
+	default:
+	  as_bad (_("Invalid indexed register."));
+	  break;
+	}
+      f = frag_more (1);
+      number_to_chars_bigendian (f, byte, 1);
+      return 1;
+    }
+
+
+  as_fatal (_("Addressing mode not implemented yet."));
+  fprintf(stderr, "mode = 0x%x\nop->reg1 = 0x%x\nop->reg2 = 0x%x\n", mode, op->reg1, op->reg2);
+  return 0;
+}
+
+/* Assemble the 68HC12 register mode byte.  */
+static int
+build_reg_mode (operand *op, int format)
+{
+  unsigned char byte;
+  char *f;
+
+  if (format & M6812_OP_SEX_MARKER
+      && op->reg1 != REG_A && op->reg1 != REG_B && op->reg1 != REG_CCR)
+    as_bad (_("Invalid source register for this instruction, use 'tfr'."));
+  else if (op->reg1 == REG_NONE || op->reg1 == REG_PC)
+    as_bad (_("Invalid source register."));
+
+  if (format & M6812_OP_SEX_MARKER
+      && op->reg2 != REG_D
+      && op->reg2 != REG_X && op->reg2 != REG_Y && op->reg2 != REG_SP)
+    as_bad (_("Invalid destination register for this instruction, use 'tfr'."));
+  else if (op->reg2 == REG_NONE || op->reg2 == REG_PC)
+    as_bad (_("Invalid destination register."));
+
+  byte = (op->reg1 << 4) | (op->reg2);
+  if (format & M6812_OP_EXG_MARKER)
+    byte |= 0x80;
+
+  f = frag_more (1);
+  number_to_chars_bigendian (f, byte, 1);
+  return 1;
+}
+
+/* build_insn takes a pointer to the opcode entry in the opcode table,
+   the array of operand expressions and builds the corresponding instruction.
+   This operation only deals with non relative jumps insn (need special
+   handling).  */
+static void
+build_insn (struct m68hc11_opcode *opcode, operand operands[],
+            int nb_operands ATTRIBUTE_UNUSED)
+{
+  int i;
+  char *f;
+  long format;
+  int move_insn = 0;
+
+  /* Put the page code instruction if there is one.  */
+  format = opcode->format;
+
+  if (current_architecture == cpuxgate) {
+    operands[0].mode = 0;
+    if (format & M68XG_OP_R_IMM8) {
+        // these opcodes are byte followed by imm8
+        f = m68hc11_new_insn (1);
+        number_to_chars_bigendian (f, opcode->opcode >> 8, 1);
+        fixup8_xg (&operands[0].exp, format, operands[0].mode);
+    } else if (format & M68XG_OP_R_IMM16) {
+        // these opcodes expand into two imm8 instructions
+        f = m68hc11_new_insn (1);
+        number_to_chars_bigendian (f, opcode->opcode >> 8, 1);
+        operands[0].mode = M6811_OP_LOW_ADDR;
+        fixup8_xg (&operands[0].exp, format, operands[0].mode);  /* low byte */
+
+        f = m68hc11_new_insn (1);
+        number_to_chars_bigendian (f, (opcode->opcode >> 8) | 0x08, 1);
+    /* just writing the high byte doesn't work due to low byte overflow,
+       so write high and low and figure it out in reloc code */
+        operands[0].mode = M6811_OP_HIGH_ADDR;
+        if (operands[0].exp.X_op == O_constant) {
+            fixup8_xg (&operands[0].exp, format, operands[0].mode);  /* a constant so high only is ok */
+        } else {
+            fixup16_xg (&operands[0].exp, format, operands[0].mode);  /* high and low bytes */
+        }
+    } else if (format & M68XG_OP_REL9) {
+        f = m68hc11_new_insn (1);
+        number_to_chars_bigendian (f, opcode->opcode >> 8, 1); /* high byte */
+        fixup8_xg (&operands[0].exp, format, M68XG_OP_REL9);
+    } else if (format & M68XG_OP_REL10) {
+        f = m68hc11_new_insn (1);
+        number_to_chars_bigendian (f, opcode->opcode >> 8, 1); /* high byte */
+        fixup8_xg (&operands[0].exp, format, M68XG_OP_REL10);
+    } else {
+        f = m68hc11_new_insn (2);
+        number_to_chars_bigendian (f, opcode->opcode, 2);
+    }
+    return;
+  }
+
+  if (format & M6811_OP_BRANCH)
+    fix_new (frag_now, frag_now_fix (), 0,
+             &abs_symbol, 0, 1, BFD_RELOC_M68HC11_RL_JUMP);
+
+  if (format & OP_EXTENDED)
+    {
+      int page_code;
+
+      f = m68hc11_new_insn (2);
+      if (format & M6811_OP_PAGE2)
+	page_code = M6811_OPCODE_PAGE2;
+      else if (format & M6811_OP_PAGE3)
+	page_code = M6811_OPCODE_PAGE3;
+      else
+	page_code = M6811_OPCODE_PAGE4;
+
+      number_to_chars_bigendian (f, page_code, 1);
+      f++;
+    }
+  else
+    f = m68hc11_new_insn (1);
+
+  number_to_chars_bigendian (f, opcode->opcode, 1);
+
+  i = 0;
+
+  /* The 68HC12 movb and movw instructions are special.  We have to handle
+     them in a special way.  */
+  if (format & (M6812_OP_IND16_P2 | M6812_OP_IDX_P2))
+    {
+      move_insn = 1;
+      if (format & M6812_OP_IDX)
+	{
+	  build_indexed_byte (&operands[0], format, 1);
+	  i = 1;
+	  format &= ~M6812_OP_IDX;
+	}
+      if (format & M6812_OP_IDX_P2)
+	{
+	  build_indexed_byte (&operands[1], format, 1);
+	  i = 0;
+	  format &= ~M6812_OP_IDX_P2;
+	}
+    }
+
+  if (format & (M6811_OP_DIRECT | M6811_OP_IMM8))
+    {
+      fixup8 (&operands[i].exp,
+	      format & (M6811_OP_DIRECT | M6811_OP_IMM8 | M6812_OP_TRAP_ID),
+	      operands[i].mode);
+      i++;
+    }
+  else if (IS_CALL_SYMBOL (format) && nb_operands == 1)
+    {
+      format &= ~M6812_OP_PAGE;
+      fixup24 (&operands[i].exp, format & M6811_OP_IND16,
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (M6811_OP_IMM16 | M6811_OP_IND16))
+    {
+      fixup16 (&operands[i].exp,
+               format & (M6811_OP_IMM16 | M6811_OP_IND16 | M6812_OP_PAGE),
+	       operands[i].mode);
+      i++;
+    }
+  else if (format & (M6811_OP_IX | M6811_OP_IY))
+    {
+      if ((format & M6811_OP_IX) && (operands[0].reg1 != REG_X))
+	as_bad (_("Invalid indexed register, expecting register X."));
+      if ((format & M6811_OP_IY) && (operands[0].reg1 != REG_Y))
+	as_bad (_("Invalid indexed register, expecting register Y."));
+
+      fixup8 (&operands[0].exp, M6811_OP_IX, operands[0].mode);
+      i = 1;
+    }
+  else if (format &
+	   (M6812_OP_IDX | M6812_OP_IDX_2 | M6812_OP_IDX_1
+            | M6812_OP_D_IDX | M6812_OP_D_IDX_2))
+    {
+      build_indexed_byte (&operands[i], format, move_insn);
+      i++;
+    }
+  else if (format & M6812_OP_REG && current_architecture & cpu6812)
+    {
+      build_reg_mode (&operands[i], format);
+      i++;
+    }
+  if (format & M6811_OP_BITMASK)
+    {
+      fixup8 (&operands[i].exp, M6811_OP_BITMASK, operands[i].mode);
+      i++;
+    }
+  if (format & M6811_OP_JUMP_REL)
+    {
+      fixup8 (&operands[i].exp, M6811_OP_JUMP_REL, operands[i].mode);
+    }
+  else if (format & M6812_OP_IND16_P2)
+    {
+      fixup16 (&operands[1].exp, M6811_OP_IND16, operands[1].mode);
+    }
+  if (format & M6812_OP_PAGE)
+    {
+      fixup8 (&operands[i].exp, M6812_OP_PAGE, operands[i].mode);
+    }
+}
+
+/* Opcode identification and operand analysis.  */
+
+/* find() gets a pointer to an entry in the opcode table.  It must look at all
+   opcodes with the same name and use the operands to choose the correct
+   opcode.  Returns the opcode pointer if there was a match and 0 if none.  */
+static struct m68hc11_opcode *
+find (struct m68hc11_opcode_def *opc, operand operands[], int nb_operands)
+{
+  int i, match, pos;
+  struct m68hc11_opcode *opcode;
+  struct m68hc11_opcode *op_indirect;
+
+  op_indirect = 0;
+  opcode = opc->opcode;
+
+
+  if (current_architecture & cpuxgate) {
+
+    /* Now search the opcode table table for one with operands
+       that matches what we've got.
+       XGATE simple enough that we should get an exact match  */
+    for (pos = match = 0; match == 0 && pos < opc->nb_modes; pos++, opcode++) {
+        if (opcode->format == operands[nb_operands-1].mode ) {
+            return opcode;
+        }
+    }
+
+    return 0;
+
+  } else { /* non XGATE */
+
+  /* Now search the opcode table table for one with operands
+     that matches what we've got.  We're only done if the operands matched so
+     far AND there are no more to check.  */
+
+  for (pos = match = 0; match == 0 && pos < opc->nb_modes; pos++, opcode++)
+    {
+      int poss_indirect = 0;
+      long format = opcode->format;
+      int expect;
+
+      expect = 0;
+
+      if (opcode->format & M6811_OP_MASK)
+	expect++;
+      if (opcode->format & M6811_OP_BITMASK)
+	expect++;
+      if (opcode->format & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+	expect++;
+      if (opcode->format & (M6812_OP_IND16_P2 | M6812_OP_IDX_P2))
+	expect++;
+      if ((opcode->format & M6812_OP_PAGE)
+          && (!IS_CALL_SYMBOL (opcode->format) || nb_operands == 2))
+        expect++;
+
+      for (i = 0; expect == nb_operands && i < nb_operands; i++)
+	{
+	  int mode = operands[i].mode;
+
+	  if (mode & M6811_OP_IMM16)
+	    {
+	      if (format &
+		  (M6811_OP_IMM8 | M6811_OP_IMM16 | M6811_OP_BITMASK))
+		continue;
+	      break;
+	    }
+	  if (mode == M6811_OP_DIRECT)
+	    {
+	      if (format & M6811_OP_DIRECT)
+		continue;
+
+	      /* If the operand is a page 0 operand, remember a
+	         possible <abs-16> addressing mode.  We mark
+	         this and continue to check other operands.  */
+	      if (format & M6811_OP_IND16
+		  && flag_strict_direct_addressing && op_indirect == 0)
+		{
+		  poss_indirect = 1;
+		  continue;
+		}
+	      break;
+	    }
+	  if (mode & M6811_OP_IND16)
+	    {
+	      if (i == 0 && (format & M6811_OP_IND16) != 0)
+		continue;
+              if (i != 0 && (format & M6812_OP_PAGE) != 0)
+                continue;
+	      if (i != 0 && (format & M6812_OP_IND16_P2) != 0)
+		continue;
+	      if (i == 0 && (format & M6811_OP_BITMASK))
+		break;
+	    }
+	  if (mode & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+	    {
+	      if (format & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+		continue;
+	    }
+	  if (mode & M6812_OP_REG)
+	    {
+	      if (i == 0
+		  && (format & M6812_OP_REG)
+		  && (operands[i].reg2 == REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & M6812_OP_REG)
+		  && (format & M6812_OP_REG_2)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & M6812_OP_IDX)
+		  && (operands[i].reg2 != REG_NONE))
+		continue;
+	      if (i == 0
+		  && (format & M6812_OP_IDX)
+		  && (format & (M6812_OP_IND16_P2 | M6812_OP_IDX_P2)))
+		continue;
+	      if (i == 1
+		  && (format & M6812_OP_IDX_P2))
+		continue;
+	      break;
+	    }
+	  if (mode & M6812_OP_IDX)
+	    {
+	      if (format & M6811_OP_IX && operands[i].reg1 == REG_X)
+		continue;
+	      if (format & M6811_OP_IY && operands[i].reg1 == REG_Y)
+		continue;
+	      if (i == 0
+		  && format & (M6812_OP_IDX | M6812_OP_IDX_1 | M6812_OP_IDX_2)
+		  && (operands[i].reg1 == REG_X
+		      || operands[i].reg1 == REG_Y
+		      || operands[i].reg1 == REG_SP
+		      || operands[i].reg1 == REG_PC))
+		continue;
+	      if (i == 1 && format & M6812_OP_IDX_P2)
+		continue;
+	    }
+          if (mode & format & (M6812_OP_D_IDX | M6812_OP_D_IDX_2))
+            {
+              if (i == 0)
+                continue;
+            }
+	  if (mode & M6812_AUTO_INC_DEC)
+	    {
+	      if (i == 0
+		  && format & (M6812_OP_IDX | M6812_OP_IDX_1 |
+			       M6812_OP_IDX_2))
+		continue;
+	      if (i == 1 && format & M6812_OP_IDX_P2)
+		continue;
+	    }
+	  break;
+	}
+      match = i == nb_operands;
+
+      /* Operands are ok but an operand uses page 0 addressing mode
+         while the insn supports abs-16 mode.  Keep a reference to this
+         insns in case there is no insn supporting page 0 addressing.  */
+      if (match && poss_indirect)
+	{
+	  op_indirect = opcode;
+	  match = 0;
+	}
+      if (match)
+	break;
+    }
+
+  /* Page 0 addressing is used but not supported by any insn.
+     If absolute addresses are supported, we use that insn.  */
+  if (match == 0 && op_indirect)
+    {
+      opcode = op_indirect;
+      match = 1;
+    }
+
+  if (!match)
+    {
+      return (0);
+    }
+}
+  return opcode;
+}
+
+/* Find the real opcode and its associated operands.  We use a progressive
+   approach here.  On entry, 'opc' points to the first opcode in the
+   table that matches the opcode name in the source line.  We try to
+   isolate an operand, find a possible match in the opcode table.
+   We isolate another operand if no match were found.  The table 'operands'
+   is filled while operands are recognized.
+
+   Returns the opcode pointer that matches the opcode name in the
+   source line and the associated operands.  */
+static struct m68hc11_opcode *
+find_opcode (struct m68hc11_opcode_def *opc, operand operands[],
+             int *nb_operands)
+{
+  struct m68hc11_opcode *opcode;
+  int i;
+
+  if (opc->max_operands == 0)
+    {
+      *nb_operands = 0;
+      return opc->opcode;
+    }
+
+  for (i = 0; i < opc->max_operands;)
+    {
+      int result;
+
+      result = get_operand (&operands[i], i, opc->format);
+      if (result <= 0)
+	return 0;
+
+      /* Special case where the bitmask of the bclr/brclr
+         instructions is not introduced by #.
+         Example: bclr 3,x $80.  */
+      if (i == 1 && (opc->format & M6811_OP_BITMASK)
+	  && (operands[i].mode & M6811_OP_IND16))
+	{
+	  operands[i].mode = M6811_OP_IMM16;
+	}
+
+      i += result;
+      *nb_operands = i;
+      if (i >= opc->min_operands)
+	{
+	  opcode = find (opc, operands, i);
+
+          /* Another special case for 'call foo,page' instructions.
+             Since we support 'call foo' and 'call foo,page' we must look
+             if the optional page specification is present otherwise we will
+             assemble immediately and treat the page spec as garbage.  */
+          if (opcode && !(opcode->format & M6812_OP_PAGE))
+             return opcode;
+
+	  if (opcode && *input_line_pointer != ',')
+	    return opcode;
+	}
+
+      if (*input_line_pointer == ',')
+	input_line_pointer++;
+    }
+
+  return 0;
+}
+
+#define M6812_XBCC_MARKER (M6812_OP_TBCC_MARKER \
+                           | M6812_OP_DBCC_MARKER \
+                           | M6812_OP_IBCC_MARKER)
+
+/* Gas line assembler entry point.  */
+
+/* This is the main entry point for the machine-dependent assembler.  str
+   points to a machine-dependent instruction.  This function is supposed to
+   emit the frags/bytes it assembles to.  */
+void
+md_assemble (char *str)
+{
+  struct m68hc11_opcode_def *opc;
+  struct m68hc11_opcode *opcode;
+
+  struct m68hc11_opcode opcode_local;
+  unsigned char *op_start, *op_end;
+  char *save;
+  char name[20];
+  int nlen = 0;
+  operand operands[M6811_MAX_OPERANDS];
+  int nb_operands = 0;
+  int branch_optimize = 0;
+  int alias_id = -1;
+
+  /* Drop leading whitespace.  */
+  while (*str == ' ')
+    str++;
+
+  /* Find the opcode end and get the opcode in 'name'.  The opcode is forced
+     lower case (the opcode table only has lower case op-codes).  */
+  for (op_start = op_end = (unsigned char *) str;
+       *op_end && nlen < 20 && !is_end_of_line[*op_end] && *op_end != ' ';
+       op_end++)
+    {
+      name[nlen] = TOLOWER (op_start[nlen]);
+      nlen++;
+    }
+  name[nlen] = 0;
+
+  if (nlen == 0)
+    {
+      as_bad (_("No instruction or missing opcode."));
+      return;
+    }
+
+
+  if (current_architecture == cpuxgate) { /* XGATE */
+
+    /* Find the opcode definition given its name.  */
+    opc = (struct m68hc11_opcode_def *) hash_find (m68hc11_hash, name);
+    if (opc == NULL) {
+        as_bad (_("Opcode `%s' is not recognized."), name);
+        return;
+    }
+
+    /* grab to local copy */
+    opcode_local.name = opc->opcode->name;
+    /* these will be incorrect where multiple variants exist */
+    opcode_local.opcode = opc->opcode->opcode;
+    opcode_local.format = opc->opcode->format;
+
+    save = input_line_pointer;
+    input_line_pointer = (char *) op_end;
+
+    if (opc->format == M68XG_OP_NONE) {
+        opcode_local.format = M68XG_OP_NONE; // no special handling required
+        build_insn (opc->opcode, operands, 0);
+        return;
+    }
+
+    // special handling of TFR
+    if (strncmp(opc->opcode->name, "tfr",3) == 0) {
+        // There must be two operands with a comma
+        input_line_pointer = skip_whites (input_line_pointer);
+        operands[0].reg1 = register_name ();
+        if (operands[0].reg1 == REG_NONE) {
+            as_bad("Invalid register\n");
+            return;
+        }
+        input_line_pointer = skip_whites (input_line_pointer);
+        if (*input_line_pointer != ',') {
+            as_bad ("Missing comma.\n"); // FIXME translate
+            return;
+        }
+        input_line_pointer++;
+        input_line_pointer = skip_whites (input_line_pointer);
+        operands[1].reg1 = register_name ();
+        if (operands[1].reg1 == REG_NONE) {
+            as_bad("Invalid register\n");
+            return;
+        }
+        input_line_pointer = skip_whites (input_line_pointer);
+        if (*input_line_pointer != '\n' && *input_line_pointer) {
+	        as_bad (_("Garbage at end of instruction: `%s'."), input_line_pointer);
+            return;
+        }
+        if (operands[1].reg1 == REG_CCR) { // ,CCR
+            opc->opcode->opcode = 0x00f8 | ( operands[0].reg1 << 8);
+        } else if (operands[0].reg1 == REG_CCR) { // CCR,
+            opc->opcode->opcode = 0x00f9 | ( operands[1].reg1 << 8);
+        } else if (operands[1].reg1 == REG_PC) { // ,PC
+            opc->opcode->opcode = 0x00fa | ( operands[0].reg1 << 8);
+        } else {
+            as_bad("Invalid operand to TFR\n");
+            return;
+        }
+        opcode_local.format = M68XG_OP_NONE; // no special handling required
+        build_insn (&opcode_local, operands, 0);
+        return;
+    }
+
+//CSEM, SSEM
+    if (opc->format & M68XG_OP_IMM3) {
+        // either imm3 or R
+        input_line_pointer = skip_whites (input_line_pointer);
+        if ((*input_line_pointer == 'R') || (*input_line_pointer == 'r')) {
+            operands[0].reg1 = register_name ();
+            if (operands[0].reg1 == REG_NONE) {
+                as_bad("Invalid register\n");
+                return;
+            }
+            operands[0].mode = M68XG_OP_R;
+            // same opcodes have multiple modes, so find right one
+            opcode = find (opc, operands, 1);
+            if (opcode) {
+                opcode_local.opcode = opcode->opcode  | (operands[0].reg1 << 8);
+                opcode_local.format = M68XG_OP_NONE;
+                build_insn (&opcode_local, operands, 1);
+            } else {
+                as_bad("No opcode found\n");
+            }
+            return;
+        } else {
+            if (*input_line_pointer == '#') {
+                input_line_pointer++;
+            }
+            expression (&operands[0].exp);
+            if (operands[0].exp.X_op == O_illegal) {
+                as_bad (_("Illegal operand."));
+                return;
+            } else if (operands[0].exp.X_op == O_absent) {
+                as_bad (_("Missing operand."));
+                return;
+            }
+
+            if (check_range(operands[0].exp.X_add_number,M68XG_OP_IMM3)) {
+                opcode_local.opcode |= (operands[0].exp.X_add_number);
+                operands[0].mode = M68XG_OP_IMM3;
+                // same opcodes have multiple modes, so find right one
+                opcode = find (opc, operands, 1);
+                if (opcode) {
+                    opcode_local.opcode = opcode->opcode;
+                    opcode_local.opcode |= (operands[0].exp.X_add_number) << 8;
+                    opcode_local.format = M68XG_OP_NONE;
+                    build_insn (&opcode_local, operands, 1);
+                } else {
+                    as_bad("No opcode found\n");
+                }
+                return;
+            } else {
+                as_bad("Number out of range for IMM3\n");
+                return;
+            }
+        }
+    }
+
+    // special handling of SIF
+    if (strncmp(opc->opcode->name, "sif",3) == 0) {
+        // Either OP_NONE or OP_RS
+        if (*input_line_pointer != '\n') {
+            input_line_pointer = skip_whites (input_line_pointer);
+        }
+        if ((*input_line_pointer == '\n') || (*input_line_pointer == '\r') || (*input_line_pointer == '\0')) {
+            opc->opcode->opcode = 0x0300;
+        } else {
+            operands[0].reg1 = register_name ();
+            if (operands[0].reg1 == REG_NONE) {
+                as_bad("Invalid register\n");
+                return;
+            }
+            opcode_local.opcode = 0x00f7 | (operands[0].reg1 << 8);
+        }
+        opcode_local.format = M68XG_OP_NONE; // no special handling required
+        build_insn (&opcode_local, operands, 0);
+        return;
+    }
+
+    // SEX, PAR, JAL only
+    if (opc->format & M68XG_OP_R) {
+        input_line_pointer = skip_whites (input_line_pointer);
+        operands[0].reg1 = register_name ();
+        if (operands[0].reg1 == REG_NONE) {
+            as_bad("Invalid register\n");
+            return;
+        }
+         opcode_local.opcode |= (operands[0].reg1 << 8);
+        build_insn (&opcode_local, operands, 0);
+        return;
+    }
+
+    if (opc->format & (M68XG_OP_REL9 | M68XG_OP_REL10)) {
+        opcode_local.format = opc->format;
+        input_line_pointer = skip_whites (input_line_pointer);
+        expression (&operands[0].exp);
+        if (operands[0].exp.X_op == O_illegal) {
+            as_bad (_("Illegal operand."));
+            return;
+        } else if (operands[0].exp.X_op == O_absent) {
+            as_bad (_("Missing operand."));
+            return;
+        }
+        opcode_local.opcode = opc->opcode->opcode;
+        build_insn (&opcode_local, operands, 1);
+        return;
+    }
+
+
+    /* For other command formats, parse input line and determine the mode we are using as we go */
+    /* the above special cases work, but may not be necessary */
+
+    input_line_pointer = skip_whites (input_line_pointer);
+    if ((*input_line_pointer == '\n') || (*input_line_pointer == '\r') || (*input_line_pointer == '\0')) {
+	    return; // nothing left
+    }
+
+    if (*input_line_pointer == '#') {
+        as_bad("No register specified before hash\n");
+        return;
+    }
+
+    /* first operand is expected to be a register */
+    if ((*input_line_pointer == 'R') || (*input_line_pointer == 'r')) {
+        operands[0].reg1 = register_name ();
+        if (operands[0].reg1 == REG_NONE) {
+            as_bad("Invalid register\n");
+            return;
+        }
+    }
+
+    input_line_pointer = skip_whites (input_line_pointer);
+    if (*input_line_pointer != ',') {
+        as_bad ("1Missing operand\n"); // FIXME translate
+        return;
+    }
+    input_line_pointer++;
+    input_line_pointer = skip_whites (input_line_pointer);
+
+    if (*input_line_pointer == '#') {
+        // some kind of immediate mode. Check if this is possible
+        if (!(opc->format & (M68XG_OP_R_IMM8 | M68XG_OP_R_IMM16 | M68XG_OP_R_IMM4))) {
+            as_bad("Invalid immediate mode\n");
+            return;
+        }
+        input_line_pointer++;
+        input_line_pointer = skip_whites (input_line_pointer);
+        if (strncmp (input_line_pointer, "%hi", 3) == 0) {
+            input_line_pointer += 3;
+            operands[0].mode = M6811_OP_HIGH_ADDR;
+        } else if (strncmp (input_line_pointer, "%lo", 3) == 0) {
+	        input_line_pointer += 3;
+	        operands[0].mode = M6811_OP_LOW_ADDR;
+	    }
+        expression (&operands[0].exp);
+        if (operands[0].exp.X_op == O_illegal) {
+            as_bad (_("Illegal operand."));
+            return;
+        } else if (operands[0].exp.X_op == O_absent) {
+            as_bad (_("Missing operand."));
+            return;
+        }
+        /* ok so far, can only be one mode */
+        opcode_local.format = opc->format & (M68XG_OP_R_IMM8 | M68XG_OP_R_IMM16 | M68XG_OP_R_IMM4);
+        if (opcode_local.format & M68XG_OP_R_IMM4) {
+            operands[0].mode = M68XG_OP_R_IMM4;
+            // same opcodes have multiple modes, so find right one
+            opcode = find (opc, operands, 1);
+            if (opcode) {
+                opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8);
+            }
+            if (operands[0].exp.X_op != O_constant) {
+                as_bad("Only constants supported at for IMM4 mode\n");
+            } else {
+                if (check_range(operands[0].exp.X_add_number,M68XG_OP_R_IMM4)) {
+                    opcode_local.opcode |= (operands[0].exp.X_add_number << 4);
+                } else {
+                    as_bad("Number out of range for IMM4\n");
+                }
+            }
+            opcode_local.format = M68XG_OP_NONE;
+        } else if (opcode_local.format & M68XG_OP_R_IMM16) {
+            operands[0].mode = M68XG_OP_R_IMM16;
+            // same opcodes have multiple modes, so find right one
+            opcode = find (opc, operands, 1);
+            if (opcode) {
+                opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8);
+            }
+        } else {
+            opcode_local.opcode = opc->opcode->opcode | (operands[0].reg1 << 8);
+        }
+        build_insn (&opcode_local, operands, 1);
+    } else if ((*input_line_pointer == 'R') || (*input_line_pointer == 'r')) {
+        /* we've got as far as OP R, R */
+        operands[1].reg1 = register_name ();
+        if (operands[1].reg1 == REG_NONE) {
+            as_bad("Invalid register\n");
+            return;
+        }
+        if ((*input_line_pointer == '\n') || (*input_line_pointer == '\r') || (*input_line_pointer == '\0')) {
+            /* looks like OP_R_R */
+            if (opc->format & M68XG_OP_R_R) {
+                operands[0].mode = M68XG_OP_R_R;
+                // same opcodes have multiple modes, so find right one
+                opcode = find (opc, operands, 1);
+                if (opcode) {
+                    if (opcode->opcode == 0x1800) {
+                        //special case for cmp RS1, RS2 alias for sub R0, RS1, RS2
+                        opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 5) | (operands[1].reg1 << 2);
+                    } else {
+                        opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8) | (operands[1].reg1 << 5);
+                    }
+                    opcode_local.format = M68XG_OP_NONE;
+                    build_insn (&opcode_local, operands, 1);
+                }
+            } else {
+                as_bad("No valid mode found\n");
+            }
+        } else {
+            /* more data */
+            if (*input_line_pointer != ',') {
+            as_bad (_("Missing operand."));
+                return;
+            }
+            input_line_pointer++;
+            input_line_pointer = skip_whites (input_line_pointer);
+            if ((*input_line_pointer == 'R') || (*input_line_pointer == 'r')) {
+                operands[2].reg1 = register_name ();
+                if (operands[2].reg1 == REG_NONE) {
+                    as_bad("Invalid register\n");
+                    return;
+                }
+                if (opc->format & M68XG_OP_R_R_R) {
+                    operands[0].mode = M68XG_OP_R_R_R;
+                    // same opcodes have multiple modes, so find right one
+                    opcode = find (opc, operands, 1);
+                    if (opcode) {
+                        opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8) | (operands[1].reg1 << 5) | (operands[2].reg1 << 2);
+                        opcode_local.format = M68XG_OP_NONE;
+                        build_insn (&opcode_local, operands, 1);
+                    }
+                } else {
+                    as_bad("No valid mode found\n");
+                }
+            }
+        }
+    } else if (*input_line_pointer == '(') { /* indexed modes */
+        input_line_pointer++;
+        input_line_pointer = skip_whites (input_line_pointer);
+        if ((*input_line_pointer == 'R') || (*input_line_pointer == 'r')) {
+            /* we've got as far as OP R, (R */
+            operands[1].reg1 = register_name ();
+            if (operands[1].reg1 == REG_NONE) {
+                as_bad("Invalid register\n");
+                return;
+            }
+//?            input_line_pointer = skip_whites (input_line_pointer);
+            if ((*input_line_pointer == '\n') || (*input_line_pointer == '\r') || (*input_line_pointer == '\0')) {
+                /* looks like OP_R_R */
+                as_bad (_("Missing operand."));
+                return;
+            }
+
+            input_line_pointer = skip_whites (input_line_pointer);
+
+            if (*input_line_pointer != ',') {
+                as_bad (_("Missing operand."));
+                return;
+            }
+            input_line_pointer++;
+            input_line_pointer = skip_whites (input_line_pointer);
+
+            if (*input_line_pointer == '#') {
+
+                input_line_pointer++;
+                input_line_pointer = skip_whites (input_line_pointer);
+                expression (&operands[0].exp);
+                if (operands[0].exp.X_op == O_illegal) {
+                    as_bad (_("Illegal operand."));
+                    return;
+                } else if (operands[0].exp.X_op == O_absent) {
+                    as_bad (_("Missing operand."));
+                    return;
+                }
+
+                input_line_pointer = skip_whites (input_line_pointer);
+                if (*input_line_pointer != ')') {
+    		        as_bad ("Missing `)' to close register indirect operand.");
+                    return;
+                } else {
+                    input_line_pointer++;
+                }
+
+                /* ok so far, can only be one mode */
+                opcode_local.format = M68XG_OP_R_R_OFFS5;
+                operands[0].mode = M68XG_OP_R_R_OFFS5;
+                // same opcodes have multiple modes, so find right one
+                opcode = find (opc, operands, 1);
+                if (opcode) {
+                    opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8) | (operands[1].reg1 << 5);
+                    if (operands[0].exp.X_op != O_constant) {
+                        as_bad("Only constants supported at for indexed OFFS5 mode\n");
+                    } else {
+                        if (check_range(operands[0].exp.X_add_number,M68XG_OP_R_R_OFFS5)) {
+                            opcode_local.opcode |= (operands[0].exp.X_add_number);
+                            opcode_local.format = M68XG_OP_NONE;
+                            build_insn (&opcode_local, operands, 1);
+                        } else {
+                            as_bad("Number out of range for OFFS5\n");
+                        }
+                    }
+                }
+            } else {
+                operands[0].mode = M68XG_OP_RD_RB_RI;
+
+                if (*input_line_pointer == '-') {
+                    operands[0].mode = M68XG_OP_RD_RB_mRI;
+                    input_line_pointer++;
+                }
+                operands[2].reg1 = register_name ();
+                if (operands[2].reg1 == REG_NONE) {
+                    as_bad("Invalid register\n");
+                    return;
+                }
+
+                if (*input_line_pointer == '+') {
+                    if (opcode_local.format == M68XG_OP_RD_RB_mRI) {
+                        as_bad (_("Illegal operand."));
+                        return;
+                    }
+                    operands[0].mode = M68XG_OP_RD_RB_RIp;
+                    input_line_pointer++;
+                }
+
+                input_line_pointer = skip_whites (input_line_pointer);
+                if (*input_line_pointer != ')') {
+    		        as_bad ("Missing `)' to close register indirect operand.");
+                    return;
+                } else {
+                    input_line_pointer++;
+                }
+
+                opcode = find (opc, operands, 1);
+                if (opcode) {
+                    opcode_local.opcode = opcode->opcode | (operands[0].reg1 << 8) | (operands[1].reg1 << 5) | (operands[2].reg1 << 2);
+                    opcode_local.format = M68XG_OP_NONE;
+                    build_insn (&opcode_local, operands, 1);
+                } else {
+                    as_bad("Failed to find opcode for %s %s\n", opc->opcode->name, (char *)op_end);
+                }
+            }
+        }
+    }
+
+// needed?
+  if (opc->opcode && !flag_mri)
+    {
+      char *p = input_line_pointer;
+
+      while (*p == ' ' || *p == '\t' || *p == '\n' || *p == '\r')
+	p++;
+
+      if (*p != '\n' && *p)
+	as_bad (_("Garbage at end of instruction: `%s'."), p);
+    }
+
+  input_line_pointer = save;
+
+  /* Opcode is known but does not have valid operands.  Print out the
+     syntax for this opcode.  */
+  if (opc->opcode == 0)
+    {
+      if (flag_print_insn_syntax)
+	print_insn_format (name);
+
+      as_bad (_("Invalid operand for `%s'"), name);
+      return;
+    }
+
+  } else { /* *********** non XGATE *********** */
+
+  /* Find the opcode definition given its name.  */
+  opc = (struct m68hc11_opcode_def *) hash_find (m68hc11_hash, name);
+
+  /* If it's not recognized, look for 'jbsr' and 'jbxx'.  These are
+     pseudo insns for relative branch.  For these branches, we always
+     optimize them (turned into absolute branches) even if --short-branches
+     is given.  */
+  if (opc == NULL && name[0] == 'j' && name[1] == 'b')
+    {
+      opc = (struct m68hc11_opcode_def *) hash_find (m68hc11_hash, &name[1]);
+      if (opc
+	  && (!(opc->format & M6811_OP_JUMP_REL)
+	      || (opc->format & M6811_OP_BITMASK)))
+	opc = 0;
+      if (opc)
+	branch_optimize = 1;
+    }
+
+  /* The following test should probably be removed.  This does not conform
+     to Motorola assembler specs.  */
+  if (opc == NULL && flag_mri)
+    {
+      if (*op_end == ' ' || *op_end == '\t')
+	{
+	  while (*op_end == ' ' || *op_end == '\t')
+	    op_end++;
+
+	  if (nlen < 19
+	      && (*op_end &&
+		  (is_end_of_line[op_end[1]]
+		   || op_end[1] == ' ' || op_end[1] == '\t'
+		   || !ISALNUM (op_end[1])))
+	      && (*op_end == 'a' || *op_end == 'b'
+		  || *op_end == 'A' || *op_end == 'B'
+		  || *op_end == 'd' || *op_end == 'D'
+		  || *op_end == 'x' || *op_end == 'X'
+		  || *op_end == 'y' || *op_end == 'Y'))
+	    {
+	      name[nlen++] = TOLOWER (*op_end++);
+	      name[nlen] = 0;
+	      opc = (struct m68hc11_opcode_def *) hash_find (m68hc11_hash,
+							     name);
+	    }
+	}
+    }
+
+  /* Identify a possible instruction alias.  There are some on the
+     68HC12 to emulate a few 68HC11 instructions.  */
+  if (opc == NULL && (current_architecture & cpu6812))
+    {
+      int i;
+
+      for (i = 0; i < m68hc12_num_alias; i++)
+	if (strcmp (m68hc12_alias[i].name, name) == 0)
+	  {
+	    alias_id = i;
+	    break;
+	  }
+    }
+  if (opc == NULL && alias_id < 0)
+    {
+      as_bad (_("Opcode `%s' is not recognized."), name);
+      return;
+    }
+  save = input_line_pointer;
+  input_line_pointer = (char *) op_end;
+
+  if (opc)
+    {
+      opc->used++;
+      opcode = find_opcode (opc, operands, &nb_operands);
+    }
+  else {
+    opcode = 0;
+  }
+
+  if ((opcode || alias_id >= 0) && !flag_mri)
+    {
+      char *p = input_line_pointer;
+
+      while (*p == ' ' || *p == '\t' || *p == '\n' || *p == '\r')
+	p++;
+
+      if (*p != '\n' && *p)
+	as_bad (_("Garbage at end of instruction: `%s'."), p);
+    }
+
+  input_line_pointer = save;
+
+  if (alias_id >= 0)
+    {
+      char *f = m68hc11_new_insn (m68hc12_alias[alias_id].size);
+
+      number_to_chars_bigendian (f, m68hc12_alias[alias_id].code1, 1);
+      if (m68hc12_alias[alias_id].size > 1)
+	number_to_chars_bigendian (f + 1, m68hc12_alias[alias_id].code2, 1);
+
+      return;
+    }
+
+  /* Opcode is known but does not have valid operands.  Print out the
+     syntax for this opcode.  */
+  if (opcode == 0)
+    {
+      if (flag_print_insn_syntax)
+	print_insn_format (name);
+
+      as_bad (_("Invalid operand for `%s'"), name);
+      return;
+    }
+
+  /* Treat dbeq/ibeq/tbeq instructions in a special way.  The branch is
+     relative and must be in the range -256..255 (9-bits).  */
+
+  if ((opcode->format & M6812_XBCC_MARKER)
+      && (opcode->format & M6811_OP_JUMP_REL)) {
+    build_dbranch_insn (opcode, operands, nb_operands, branch_optimize);
+
+  /* Relative jumps instructions are taken care of separately.  We have to make
+     sure that the relative branch is within the range -128..127.  If it's out
+     of range, the instructions are changed into absolute instructions.
+     This is not supported for the brset and brclr instructions.  */
+  } else if ((opcode->format & (M6811_OP_JUMP_REL | M6812_OP_JUMP_REL16))
+	   && !(opcode->format & M6811_OP_BITMASK)) {
+    build_jump_insn (opcode, operands, nb_operands, branch_optimize);
+  } else {
+    build_insn (opcode, operands, nb_operands);
+  }
+}
+}
+
+
+/* Pseudo op to control the ELF flags.  */
+static void
+s_m68hc11_mode (int x ATTRIBUTE_UNUSED)
+{
+  char *name = input_line_pointer, ch;
+
+  while (!is_end_of_line[(unsigned char) *input_line_pointer])
+    input_line_pointer++;
+  ch = *input_line_pointer;
+  *input_line_pointer = '\0';
+
+  if (strcmp (name, "mshort") == 0)
+    {
+      elf_flags &= ~E_M68HC11_I32;
+    }
+  else if (strcmp (name, "mlong") == 0)
+    {
+      elf_flags |= E_M68HC11_I32;
+    }
+  else if (strcmp (name, "mshort-double") == 0)
+    {
+      elf_flags &= ~E_M68HC11_F64;
+    }
+  else if (strcmp (name, "mlong-double") == 0)
+    {
+      elf_flags |= E_M68HC11_F64;
+    }
+  else
+    {
+      as_warn (_("Invalid mode: %s\n"), name);
+    }
+  *input_line_pointer = ch;
+  demand_empty_rest_of_line ();
+}
+
+/* Mark the symbols with STO_M68HC12_FAR to indicate the functions
+   are using 'rtc' for returning.  It is necessary to use 'call'
+   to invoke them.  This is also used by the debugger to correctly
+   find the stack frame.  */
+static void
+s_m68hc11_mark_symbol (int mark)
+{
+  char *name;
+  int c;
+  symbolS *symbolP;
+  asymbol *bfdsym;
+  elf_symbol_type *elfsym;
+
+  do
+    {
+      name = input_line_pointer;
+      c = get_symbol_end ();
+      symbolP = symbol_find_or_make (name);
+      *input_line_pointer = c;
+
+      SKIP_WHITESPACE ();
+
+      bfdsym = symbol_get_bfdsym (symbolP);
+      elfsym = elf_symbol_from (bfd_asymbol_bfd (bfdsym), bfdsym);
+
+      assert (elfsym);
+
+      /* Mark the symbol far (using rtc for function return).  */
+      elfsym->internal_elf_sym.st_other |= mark;
+
+      if (c == ',')
+	{
+	  input_line_pointer ++;
+
+	  SKIP_WHITESPACE ();
+
+	  if (*input_line_pointer == '\n')
+	    c = '\n';
+	}
+    }
+  while (c == ',');
+
+  demand_empty_rest_of_line ();
+}
+
+static void
+s_m68hc11_relax (int ignore ATTRIBUTE_UNUSED)
+{
+  expressionS ex;
+
+  expression (&ex);
+
+  if (ex.X_op != O_symbol || ex.X_add_number != 0)
+    {
+      as_bad (_("bad .relax format"));
+      ignore_rest_of_line ();
+      return;
+    }
+
+  fix_new_exp (frag_now, frag_now_fix (), 0, &ex, 1,
+               BFD_RELOC_M68HC11_RL_GROUP);
+
+  demand_empty_rest_of_line ();
+}
+
+
+/* Relocation, relaxation and frag conversions.  */
+
+/* PC-relative offsets are relative to the start of the
+   next instruction.  That is, the address of the offset, plus its
+   size, since the offset is always the last part of the insn.  */
+long
+md_pcrel_from (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_M68HC11_RL_JUMP)
+    return 0;
+
+  return fixP->fx_size + fixP->fx_where + fixP->fx_frag->fr_address;
+}
+
+/* If while processing a fixup, a reloc really needs to be created
+   then it is done here.  */
+arelent *
+tc_gen_reloc (asection *section ATTRIBUTE_UNUSED, fixS *fixp)
+{
+  arelent *reloc;
+
+  reloc = (arelent *) xmalloc (sizeof (arelent));
+  reloc->sym_ptr_ptr = (asymbol **) xmalloc (sizeof (asymbol *));
+  *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);
+  reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;
+  if (fixp->fx_r_type == 0)
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, BFD_RELOC_16);
+  else
+    reloc->howto = bfd_reloc_type_lookup (stdoutput, fixp->fx_r_type);
+  if (reloc->howto == (reloc_howto_type *) NULL)
+    {
+      as_bad_where (fixp->fx_file, fixp->fx_line,
+		    _("Relocation %d is not supported by object file format."),
+		    (int) fixp->fx_r_type);
+      return NULL;
+    }
+
+  /* Since we use Rel instead of Rela, encode the vtable entry to be
+     used in the relocation's section offset.  */
+  if (fixp->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
+    reloc->address = fixp->fx_offset;
+
+  reloc->addend = 0;
+  return reloc;
+}
+
+/* We need a port-specific relaxation function to cope with sym2 - sym1
+   relative expressions with both symbols in the same segment (but not
+   necessarily in the same frag as this insn), for example:
+     ldab sym2-(sym1-2),pc
+    sym1:
+   The offset can be 5, 9 or 16 bits long.  */
+
+long
+m68hc11_relax_frag (segT seg ATTRIBUTE_UNUSED, fragS *fragP,
+                    long stretch ATTRIBUTE_UNUSED)
+{
+  long growth;
+  offsetT aim = 0;
+  symbolS *symbolP;
+  const relax_typeS *this_type;
+  const relax_typeS *start_type;
+  relax_substateT next_state;
+  relax_substateT this_state;
+  const relax_typeS *table = TC_GENERIC_RELAX_TABLE;
+
+  /* We only have to cope with frags as prepared by
+     md_estimate_size_before_relax.  The STATE_BITS16 case may geet here
+     because of the different reasons that it's not relaxable.  */
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      /* When we get to this state, the frag won't grow any more.  */
+      return 0;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      if (fragP->fr_symbol == NULL
+	  || S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	as_fatal (_("internal inconsistency problem in %s: fr_symbol %lx"),
+		  __FUNCTION__, (long) fragP->fr_symbol);
+      symbolP = fragP->fr_symbol;
+      if (symbol_resolved_p (symbolP))
+	as_fatal (_("internal inconsistency problem in %s: resolved symbol"),
+		  __FUNCTION__);
+      aim = S_GET_VALUE (symbolP);
+      break;
+
+    default:
+      as_fatal (_("internal inconsistency problem in %s: fr_subtype %d"),
+		  __FUNCTION__, fragP->fr_subtype);
+    }
+
+  /* The rest is stolen from relax_frag.  There's no obvious way to
+     share the code, but fortunately no requirement to keep in sync as
+     long as fragP->fr_symbol does not have its segment changed.  */
+
+  this_state = fragP->fr_subtype;
+  start_type = this_type = table + this_state;
+
+  if (aim < 0)
+    {
+      /* Look backwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim >= this_type->rlx_backward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+  else
+    {
+      /* Look forwards.  */
+      for (next_state = this_type->rlx_more; next_state;)
+	if (aim <= this_type->rlx_forward)
+	  next_state = 0;
+	else
+	  {
+	    /* Grow to next state.  */
+	    this_state = next_state;
+	    this_type = table + this_state;
+	    next_state = this_type->rlx_more;
+	  }
+    }
+
+  growth = this_type->rlx_length - start_type->rlx_length;
+  if (growth != 0)
+    fragP->fr_subtype = this_state;
+  return growth;
+}
+
+void
+md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, asection *sec ATTRIBUTE_UNUSED,
+                 fragS *fragP)
+{
+  fixS *fixp;
+  long value;
+  long disp;
+  char *buffer_address = fragP->fr_literal;
+
+  /* Address in object code of the displacement.  */
+  register int object_address = fragP->fr_fix + fragP->fr_address;
+
+  buffer_address += fragP->fr_fix;
+
+  /* The displacement of the address, from current location.  */
+  value = S_GET_VALUE (fragP->fr_symbol);
+  disp = (value + fragP->fr_offset) - object_address;
+
+  switch (fragP->fr_subtype)
+    {
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_PC_RELATIVE, STATE_WORD):
+      /* This relax is only for bsr and bra.  */
+      assert (IS_OPCODE (fragP->fr_opcode[0], M6811_BSR)
+	      || IS_OPCODE (fragP->fr_opcode[0], M6811_BRA)
+	      || IS_OPCODE (fragP->fr_opcode[0], M6812_BSR));
+
+      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+      fix_new (fragP, fragP->fr_fix - 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_BYTE):
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_BYTE):
+      fragP->fr_opcode[1] = disp;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 1;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = M6811_JMP;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    case ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812, STATE_WORD):
+      /* Translate branch into a long branch.  */
+      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+      fragP->fr_opcode[0] = M6811_OPCODE_PAGE2;
+
+      fixp = fix_new (fragP, fragP->fr_fix, 2,
+		      fragP->fr_symbol, fragP->fr_offset, 1,
+		      BFD_RELOC_16_PCREL);
+      fixp->fx_pcrel_adjust = 2;
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS5):
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS5):
+      fragP->fr_opcode[0] = fragP->fr_opcode[0] << 6;
+      fragP->fr_opcode[0] |= value & 0x1f;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS9):
+      /* For a PC-relative offset, use the displacement with a -1 correction
+         to take into account the additional byte of the insn.  */
+      if (fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+        value = disp - 1;
+      /* fall through  */
+
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS9):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xE0;
+      fragP->fr_opcode[0] |= (value >> 8) & 1;
+      fragP->fr_opcode[1] = value;
+      fragP->fr_fix += 1;
+      break;
+
+    case ENCODE_RELAX (STATE_INDEXED_PCREL, STATE_BITS16):
+    case ENCODE_RELAX (STATE_INDEXED_OFFSET, STATE_BITS16):
+      fragP->fr_opcode[0] = (fragP->fr_opcode[0] << 3);
+      fragP->fr_opcode[0] |= 0xe2;
+      if ((fragP->fr_opcode[0] & 0x0ff) == 0x0fa
+          && fragP->fr_symbol != 0
+          && S_GET_SEGMENT (fragP->fr_symbol) != absolute_section)
+	{
+	  fixp = fix_new (fragP, fragP->fr_fix, 2,
+			  fragP->fr_symbol, fragP->fr_offset,
+			  1, BFD_RELOC_16_PCREL);
+	}
+      else
+	{
+	  fix_new (fragP, fragP->fr_fix, 2,
+		   fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+	}
+      fragP->fr_fix += 2;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE):
+      if (disp < 0)
+	fragP->fr_opcode[0] |= 0x10;
+
+      fragP->fr_opcode[1] = disp & 0x0FF;
+      break;
+
+    case ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_WORD):
+      /* Invert branch.  */
+      fragP->fr_opcode[0] ^= 0x20;
+      fragP->fr_opcode[1] = 3;	/* Branch offset.  */
+      buffer_address[0] = M6812_JMP;
+      fix_new (fragP, fragP->fr_fix + 1, 2,
+	       fragP->fr_symbol, fragP->fr_offset, 0, BFD_RELOC_16);
+      fragP->fr_fix += 3;
+      break;
+
+    default:
+      break;
+    }
+}
+
+/* On an ELF system, we can't relax a weak symbol.  The weak symbol
+   can be overridden at final link time by a non weak symbol.  We can
+   relax externally visible symbol because there is no shared library
+   and such symbol can't be overridden (unless they are weak).  */
+static int
+relaxable_symbol (symbolS *symbol)
+{
+  return ! S_IS_WEAK (symbol);
+}
+
+/* Force truly undefined symbols to their maximum size, and generally set up
+   the frag list to be relaxed.  */
+int
+md_estimate_size_before_relax (fragS *fragP, asection *segment)
+{
+
+  if (RELAX_LENGTH (fragP->fr_subtype) == STATE_UNDF)
+    {
+      if (S_GET_SEGMENT (fragP->fr_symbol) != segment
+	  || !relaxable_symbol (fragP->fr_symbol)
+          || (segment != absolute_section
+              && RELAX_STATE (fragP->fr_subtype) == STATE_INDEXED_OFFSET))
+	{
+	  /* Non-relaxable cases.  */
+	  int old_fr_fix;
+	  char *buffer_address;
+
+	  old_fr_fix = fragP->fr_fix;
+	  buffer_address = fragP->fr_fix + fragP->fr_literal;
+
+	  switch (RELAX_STATE (fragP->fr_subtype))
+	    {
+	    case STATE_PC_RELATIVE:
+
+	      /* This relax is only for bsr and bra.  */
+	      assert (IS_OPCODE (fragP->fr_opcode[0], M6811_BSR)
+		      || IS_OPCODE (fragP->fr_opcode[0], M6811_BRA)
+		      || IS_OPCODE (fragP->fr_opcode[0], M6812_BSR));
+
+	      if (flag_fixed_branches)
+		as_bad_where (fragP->fr_file, fragP->fr_line,
+			      _("bra or bsr with undefined symbol."));
+
+	      /* The symbol is undefined or in a separate section.
+		 Turn bra into a jmp and bsr into a jsr.  The insn
+		 becomes 3 bytes long (instead of 2).  A fixup is
+		 necessary for the unresolved symbol address.  */
+	      fragP->fr_opcode[0] = convert_branch (fragP->fr_opcode[0]);
+
+	      fix_new (fragP, fragP->fr_fix - 1, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix++;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH:
+	      assert (current_architecture & cpu6811);
+
+	      fragP->fr_opcode[0] ^= 1;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = M6811_JMP;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_INDEXED_OFFSET:
+	      assert (current_architecture & cpu6812);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   /* Switch the indexed operation to 16-bit mode.  */
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                            fragP->fr_offset, 0, BFD_RELOC_16);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_INDEXED_PCREL:
+	      assert (current_architecture & cpu6812);
+
+              if (fragP->fr_symbol
+                  && S_GET_SEGMENT (fragP->fr_symbol) == absolute_section)
+                {
+                   fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+                                                     STATE_BITS5);
+                   /* Return the size of the variable part of the frag. */
+                   return md_relax_table[fragP->fr_subtype].rlx_length;
+                }
+              else
+                {
+                   fixS* fixp;
+
+                   fragP->fr_opcode[0] = fragP->fr_opcode[0] << 3;
+                   fragP->fr_opcode[0] |= 0xe2;
+                   fixp = fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                                   fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+                   fragP->fr_fix += 2;
+                }
+	      break;
+
+	    case STATE_XBCC_BRANCH:
+	      assert (current_architecture & cpu6812);
+
+	      fragP->fr_opcode[0] ^= 0x20;	/* Reverse sense of branch.  */
+	      fragP->fr_opcode[1] = 3;	/* Skip next jmp insn (3 bytes).  */
+
+	      /* Don't use fr_opcode[2] because this may be
+		 in a different frag.  */
+	      buffer_address[0] = M6812_JMP;
+
+	      fragP->fr_fix++;
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+		       fragP->fr_offset, 0, BFD_RELOC_16);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    case STATE_CONDITIONAL_BRANCH_6812:
+	      assert (current_architecture & cpu6812);
+
+	      /* Translate into a lbcc branch.  */
+	      fragP->fr_opcode[1] = fragP->fr_opcode[0];
+	      fragP->fr_opcode[0] = M6811_OPCODE_PAGE2;
+
+	      fix_new (fragP, fragP->fr_fix, 2, fragP->fr_symbol,
+                       fragP->fr_offset, 1, BFD_RELOC_16_PCREL);
+	      fragP->fr_fix += 2;
+	      break;
+
+	    default:
+	      as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+	    }
+	  frag_wane (fragP);
+
+	  /* Return the growth in the fixed part of the frag.  */
+	  return fragP->fr_fix - old_fr_fix;
+	}
+
+      /* Relaxable cases.  */
+      switch (RELAX_STATE (fragP->fr_subtype))
+	{
+	case STATE_PC_RELATIVE:
+	  /* This relax is only for bsr and bra.  */
+	  assert (IS_OPCODE (fragP->fr_opcode[0], M6811_BSR)
+		  || IS_OPCODE (fragP->fr_opcode[0], M6811_BRA)
+		  || IS_OPCODE (fragP->fr_opcode[0], M6812_BSR));
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_PC_RELATIVE, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH:
+	  assert (current_architecture & cpu6811);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH,
+					    STATE_BYTE);
+	  break;
+
+	case STATE_INDEXED_OFFSET:
+	  assert (current_architecture & cpu6812);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_OFFSET,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_INDEXED_PCREL:
+	  assert (current_architecture & cpu6812);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_INDEXED_PCREL,
+					    STATE_BITS5);
+	  break;
+
+	case STATE_XBCC_BRANCH:
+	  assert (current_architecture & cpu6812);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_XBCC_BRANCH, STATE_BYTE);
+	  break;
+
+	case STATE_CONDITIONAL_BRANCH_6812:
+	  assert (current_architecture & cpu6812);
+
+	  fragP->fr_subtype = ENCODE_RELAX (STATE_CONDITIONAL_BRANCH_6812,
+					    STATE_BYTE);
+	  break;
+	}
+    }
+
+  if (fragP->fr_subtype >= sizeof (md_relax_table) / sizeof (md_relax_table[0]))
+    as_fatal (_("Subtype %d is not recognized."), fragP->fr_subtype);
+
+  /* Return the size of the variable part of the frag.  */
+  return md_relax_table[fragP->fr_subtype].rlx_length;
+}
+
+/* See whether we need to force a relocation into the output file.  */
+int
+tc_m68hc11_force_relocation (fixS *fixP)
+{
+  if (fixP->fx_r_type == BFD_RELOC_M68HC11_RL_GROUP)
+    return 1;
+
+  return generic_force_reloc (fixP);
+}
+
+/* Here we decide which fixups can be adjusted to make them relative
+   to the beginning of the section instead of the symbol.  Basically
+   we need to make sure that the linker relaxation is done
+   correctly, so in some cases we force the original symbol to be
+   used.  */
+int
+tc_m68hc11_fix_adjustable (fixS *fixP)
+{
+  switch (fixP->fx_r_type)
+    {
+      /* For the linker relaxation to work correctly, these relocs
+         need to be on the symbol itself.  */
+    case BFD_RELOC_16:
+    case BFD_RELOC_M68HC11_RL_JUMP:
+    case BFD_RELOC_M68HC11_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+    case BFD_RELOC_32:
+
+      /* The memory bank addressing translation also needs the original
+         symbol.  */
+    case BFD_RELOC_M68HC11_LO16:
+    case BFD_RELOC_M68HC11_PAGE:
+    case BFD_RELOC_M68HC11_24:
+      return 0;
+
+    default:
+      return 1;
+    }
+}
+
+void
+md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
+{
+  char *where;
+  long value = * valP;
+  int op_type;
+
+  if (fixP->fx_addsy == (symbolS *) NULL)
+    fixP->fx_done = 1;
+
+  /* We don't actually support subtracting a symbol.  */
+  if (fixP->fx_subsy != (symbolS *) NULL)
+    as_bad_where (fixP->fx_file, fixP->fx_line, _("Expression too complex."));
+
+  op_type = fixP->fx_r_type;
+
+  /* Patch the instruction with the resolved operand.  Elf relocation
+     info will also be generated to take care of linker/loader fixups.
+     The 68HC11 addresses only 64Kb, we are only concerned by 8 and 16-bit
+     relocs.  BFD_RELOC_8 is basically used for .page0 access (the linker
+     will warn for overflows).  BFD_RELOC_8_PCREL should not be generated
+     because it's either resolved or turned out into non-relative insns (see
+     relax table, bcc, bra, bsr transformations)
+
+     The BFD_RELOC_32 is necessary for the support of --gstabs.  */
+  where = fixP->fx_frag->fr_literal + fixP->fx_where;
+
+  switch (fixP->fx_r_type)
+    {
+    case BFD_RELOC_32:
+      bfd_putb32 ((bfd_vma) value, (unsigned char *) where);
+      break;
+
+    case BFD_RELOC_24:
+    case BFD_RELOC_M68HC11_24:
+      bfd_putb16 ((bfd_vma) (value & 0x0ffff), (unsigned char *) where);
+      ((bfd_byte*) where)[2] = ((value >> 16) & 0x0ff);
+      break;
+
+    case BFD_RELOC_M68HC11_HI8_16:
+    case BFD_RELOC_16:
+    case BFD_RELOC_16_PCREL:
+    case BFD_RELOC_M68HC11_LO16:
+      bfd_putb16 ((bfd_vma) value, (unsigned char *) where);
+      if (value < -65537 || value > 65535)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value out of 16-bit range."));
+      break;
+
+    case BFD_RELOC_M68HC11_HI8:
+        value = value >>8;
+    case BFD_RELOC_M68HC11_LO8:
+    case BFD_RELOC_8:
+    case BFD_RELOC_M68HC11_PAGE:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+      break;
+
+    case BFD_RELOC_8_PCREL:
+      ((bfd_byte *) where)[0] = (bfd_byte) value;
+
+      if (value < -128 || value > 127)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value %ld too large for 8-bit PC-relative branch."),
+		      value);
+      break;
+
+/* these next two are dubious */
+    case BFD_RELOC_9_PCREL:
+     ((bfd_byte *) where)[0] |= (bfd_byte) ((value >>9) & 0x01);
+     ((bfd_byte *) where)[1] = (bfd_byte) ((value>>1) & 0xff);
+      if (value < -512 || value > 511)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value %ld too large for 8-bit PC-relative branch."),
+		      value);
+      break;
+
+    case BFD_RELOC_10_PCREL:
+     ((bfd_byte *) where)[0] |= (bfd_byte) ((value >>9) & 0x03);
+     ((bfd_byte *) where)[1] = (bfd_byte) ((value>>1) & 0xff);
+      if (value < -1024 || value > 1023)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Value %ld too large for 8-bit PC-relative branch."),
+		      value);
+      break;
+
+    case BFD_RELOC_M68HC11_3B:
+      if (value <= 0 || value > 8)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Auto increment/decrement offset '%ld' is out of range."),
+		      value);
+      if (where[0] & 0x8)
+	value = 8 - value;
+      else
+	value--;
+
+      where[0] = where[0] | (value & 0x07);
+      break;
+
+    case BFD_RELOC_M68HC12_5B:
+      if (value < -16 || value > 15)
+	as_bad_where (fixP->fx_file, fixP->fx_line,
+		      _("Offset out of 5-bit range for movw/movb insn: %ld"),
+		      value);
+      if (value >= 0)
+	where[0] |= value;
+      else
+	where[0] |= (0x10 | (16 + value));
+      break;
+
+    case BFD_RELOC_M68HC11_RL_JUMP:
+    case BFD_RELOC_M68HC11_RL_GROUP:
+    case BFD_RELOC_VTABLE_INHERIT:
+    case BFD_RELOC_VTABLE_ENTRY:
+      fixP->fx_done = 0;
+      return;
+
+    default:
+      as_fatal (_("Line %d: unknown relocation type: 0x%x."),
+		fixP->fx_line, fixP->fx_r_type);
+    }
+}
+
+/* Set the ELF specific flags.  */
+void
+m68hc11_elf_final_processing (void)
+{
+  if (current_architecture & cpu6812s)
+    elf_flags |= EF_M68HCS12_MACH;
+  elf_elfheader (stdoutput)->e_flags &= ~EF_M68HC11_ABI;
+  elf_elfheader (stdoutput)->e_flags |= elf_flags;
+}
