#########################################################################################
IF AT ANY TIME YOU FIND ANY INACCURACIES WITH DOCUMENTATION(INCLUDING THIS README) OR CODE
THAT WASN'T PART OF THE OFFICIAL BINUTILS RE LASE PLEASE LET ME KNOW(support@computer-ss.com)

The intent of this work is to create a set of binutils for the Freescale S12X and XGATE 
cores.  Since we are dealing with two different cores we will build two different sets of
binary utilities. Below is an example bash script that will build the s12x binutils
followed by an example of how to build for the xgate core.

#!/bin/bash
mkdir mc9s12x-build
cd mc9s12x-build
make distclean
make clean
 sh ../binutils-2.20/configure --target=m68hc11 \
			--enable-targets=m68hc11,m68hc12,mc9xgate \
			--program-prefix=m68hc11-
make
make install


#!/bin/bash
mkdir mc9xgate-build
cd mc9xgate-build
make distclean
make clean
 sh ../binutils-2.20/configure --target=mc9xgate \
			--enable-targets=mc9xgate \
			--program-prefix=mc9xgate-
make
make install
  
TODO
1.Give an example of how to link the two object files together to make a single s19 file
2.Create a table of support and unsupported instructions


#########################################################################################

		   README for GNU development tools

This directory contains various GNU compilers, assemblers, linkers, 
debuggers, etc., plus their support routines, definitions, and documentation.

If you are receiving this as part of a GDB release, see the file gdb/README.
If with a binutils release, see binutils/README;  if with a libg++ release,
see libg++/README, etc.  That'll give you info about this
package -- supported targets, how to use it, how to report bugs, etc.

It is now possible to automatically configure and build a variety of
tools with one command.  To build all of the tools contained herein,
run the ``configure'' script here, e.g.:

	./configure 
	make

To install them (by default in /usr/local/bin, /usr/local/lib, etc),
then do:
	make install

(If the configure script can't determine your type of computer, give it
the name as an argument, for instance ``./configure sun4''.  You can
use the script ``config.sub'' to test whether a name is recognized; if
it is, config.sub translates it to a triplet specifying CPU, vendor,
and OS.)

If you have more than one compiler on your system, it is often best to
explicitly set CC in the environment before running configure, and to
also set CC when running make.  For example (assuming sh/bash/ksh):

	CC=gcc ./configure
	make

A similar example using csh:

	setenv CC gcc
	./configure
	make

Much of the code and documentation enclosed is copyright by
the Free Software Foundation, Inc.  See the file COPYING or
COPYING.LIB in the various directories, for a description of the
GNU General Public License terms under which you can copy the files.

REPORTING BUGS: Again, see gdb/README, binutils/README, etc., for info
on where and how to report problems.
